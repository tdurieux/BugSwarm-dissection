diff --git a/source_en/ArchitectureInDetail/Utilities/StringProcessing.rst b/source_en/ArchitectureInDetail/Utilities/StringProcessing.rst
index ccc3cd7c65..909453b022 100755
--- a/source_en/ArchitectureInDetail/Utilities/StringProcessing.rst
+++ b/source_en/ArchitectureInDetail/Utilities/StringProcessing.rst
@@ -68,6 +68,7 @@ Padding, Suppress
 Processing of a string considered as a surrogate pair
 """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
 
+.. _StringProcessingHowToGetSurrogatePairStringLength:
 
 Fetching string length
 ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
@@ -125,7 +126,7 @@ Fetch string in the specified range
    
    String subStr = str.substring(startIndex, endIndex);
 
-   System.out.println(subStr); // => "吉"
+   System.out.println(subStr); // => "吉田"
 
 | In the example above, when you try to fetch "吉田" by taking out 2 characters from 0th character (beginning), only "吉" could be fetched since the surrogate pair is represented by 32 bits (char type 2).
 | In such a case, ``String#substring`` method must be used by searching start and end positions considering the surrogate pair, by using ``String#offsetByCodePoints``.
diff --git a/source_en/ArchitectureInDetail/Validation.rst b/source_en/ArchitectureInDetail/Validation.rst
index 9661f8505b..5b5317125e 100755
--- a/source_en/ArchitectureInDetail/Validation.rst
+++ b/source_en/ArchitectureInDetail/Validation.rst
@@ -2226,9 +2226,6 @@ This guideline classifies the definition as follows.
 
 When ValidationMessages.properties is not provided, \ :ref:`Default messages provided by Hibernate Validator<Validation_default_message_in_hibernate_validator>`\  is used.
 
-Japanese message can be handled directly without conversion from Native to Ascii by linking with \ ``MessageSource``\ .
-For details, refer \ :ref:`Validation_without_native2ascii`\ .
-
 
 .. _Validation_message_in_validationmessages:
 
@@ -3844,6 +3841,14 @@ Refer to Chapter 7 \ `Bean Validation specification <http://download.oracle.com/
      By specifying \ ``true``\  (to allow same value of specified threshold) to the default value of \ ``inclusive``\  attribute,
      compatibility with Bean Validation 1.0 is maintained.
 
+.. warning::
+
+     In \ ``@Size``\  annotation, characters represented by char type 2 (32 bits) called as surrogate pair are not considered.
+
+     When a string consisiting of a surrogate pair is excluded from the check, adequate care must be taken since number of characters that are counted are likely to be more than the actual number of characters.
+
+     For length of the string including surrogate pair, refer :ref:`StringProcessingHowToGetSurrogatePairStringLength`.
+
 
 .. _Validation_validator_list:
 
@@ -3983,7 +3988,7 @@ Here, how to specify input check rules which use annotation provided by common l
 terasoluna-gfw-common check rules
 """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
 
-Annotation provided by \ `terasoluna-gfw-common <https://github.com/terasolunaorg/terasoluna-gfw/tree/5.1.1.RELEASE/terasoluna-gfw-common>`_\  (\ ``org.terasoluna.gfw.common.codelist.*``\ ) is shown below.
+Annotation provided by \ `terasoluna-gfw-common <https://github.com/terasolunaorg/terasoluna-gfw/tree/master/terasoluna-gfw-common>`_\  (\ ``org.terasoluna.gfw.common.codelist.*``\ ) is shown below.
 
 .. tabularcolumns:: |p{0.15\linewidth}|p{0.30\linewidth}|p{0.30\linewidth}|p{0.25\linewidth}|
 .. list-table::
@@ -4005,7 +4010,7 @@ Annotation provided by \ `terasoluna-gfw-common <https://github.com/terasolunaor
 terasoluna-gfw-codepoints check rules
 """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
 
-Annotation (\ ``org.terasoluna.gfw.common.codepoints.*``\ ) offered by \ `terasoluna-gfw-codepoints <https://github.com/terasolunaorg/terasoluna-gfw/tree/5.1.1.RELEASE/terasoluna-gfw-codepoints>`_\  is shown below. Further, \ ``terasoluna-gfw-codepoints``\  can be used in 5.1.0.RELEASE and subsequent versions.
+Annotation (\ ``org.terasoluna.gfw.common.codepoints.*``\ ) offered by \ `terasoluna-gfw-codepoints <https://github.com/terasolunaorg/terasoluna-gfw/tree/master/terasoluna-gfw-codepoints>`_\  is shown below. Further, \ ``terasoluna-gfw-codepoints``\  can be used in 5.1.0.RELEASE and subsequent versions.
 
 .. tabularcolumns:: |p{0.15\linewidth}|p{0.30\linewidth}|p{0.30\linewidth}|p{0.25\linewidth}|
 .. list-table::
@@ -4026,7 +4031,7 @@ Annotation (\ ``org.terasoluna.gfw.common.codepoints.*``\ ) offered by \ `teraso
 terasoluna-gfw-validator check rules
 """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
 
-Annotation (\ ``org.terasoluna.gfw.common.validator.constraints.*``\ ) offered by \ `terasoluna-gfw-validator <https://github.com/terasolunaorg/terasoluna-gfw/tree/5.1.1.RELEASE/terasoluna-gfw-validator>`_\  is shown below. Further, \ ``terasoluna-gfw-validator``\ can be used in 5.1.0.RELEASE and subsequent versions.
+Annotation (\ ``org.terasoluna.gfw.common.validator.constraints.*``\ ) offered by \ `terasoluna-gfw-validator <https://github.com/terasolunaorg/terasoluna-gfw/tree/master/terasoluna-gfw-validator>`_\  is shown below. Further, \ ``terasoluna-gfw-validator``\ can be used in 5.1.0.RELEASE and subsequent versions.
 
 .. tabularcolumns:: |p{0.15\linewidth}|p{0.30\linewidth}|p{0.30\linewidth}|p{0.25\linewidth}|
 .. list-table::
@@ -4550,108 +4555,6 @@ If it is defined as below,, message read by \ ``MessageSource``\  function can b
      By using \ ``MessageSource``\ function,
      property file is not necessarily restricted to be placed just under class path. Further, multiple property files can also be specified.
      
-.. _Validation_os_command_injection:
-
-OS Command Injection Countermeasures
-^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
-OS command injection, a type of security vulnerability and its countermeasures are explained here.
-
-What is OS command injection -
-""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
-OS command injection is an issue which occurs when malicious commands are supplied to the user input string resulting in illegal manipulation of the computer,
-when command execution strings are assembled from user input strings in the application.
-
-.. tip::
-
-    For details, refer \ `Description page <https://www.owasp.org/index.php/OS_Command_Injection>`_\  of OWASP.
-
-In Java, OS command injection can occur when following are used as the commands to be executed when commands are executed
-using ``exec``\  method of \ ``ProcessBuilder``\ class  and \ ``Runtime``\  class.
-
-* \ ``/bin/sh``\  (in case of Unix system) or \ ``cmd.exe``\  (In case of Windows)
-* String input by user
-
-An example wherein OS command injection occurs when \ ``/bin/sh``\  is used, is shown below.
-
-.. code-block:: java
-
-  ProcessBuilder pb = new ProcessBuilder("/bin/sh", "-c", script); // (1)
-  Process p = pb.start();
-
-
-.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
-.. list-table::
-    :header-rows: 1
-    :widths: 10 90
-
-    * - Sr. No.
-      - Description
-    * - | (1)
-      - | For example, when "exec.sh ; cat /etc/passwd" is input in the \ ``script``\ , semicolon in the string is interpreted as a delimiter by \ ``/bin/sh``\  and "cat /etc/passwd" is executed.
-        | Hence, \ ``/etc/passwd``\  is likely to be output depending on how the standard output is handled.
-
-.. warning:: **How to use ScriptEngine and ScriptTemplateViewResolver**
-
-    Another language  (\ ``Ruby``\ or \ ``Python``\ etc) can be used on JVM , in \ ``ScriptEngine``\  added from  Java SE 6
-    or \ ``ScriptTemplateViewResolver``\  added from  Spring Framework 4.2.
-
-    When code of another language is to be executed using this function, care must be taken while using the function
-    since OS command injection is likely to occur during writing the code.
-
-Countermeasures
-""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
-Running external processes should be avoided as much as possible in order to prevent occurrence of OS command injection. However, if it is necessary to execute the external process due to certain circumstances,
-it must be executed after implementing the countermeasures below.
-
-* Commands which use \ ``/bin/sh``\  (in case of Unix system) and \ ``cmd.exe``\  (in case of Windows) should not be executed as far as possible.
-* Check whether the characters entered by user are allowed by the application using the whitelist system
-
-The rules to check whether commands and arguments entered by the user are configured  by the specified string are shown below.
-
-.. code-block:: java
-
-    @Pattern(regexp = "batch0\\d\\.sh") // (1)
-    private String cmdStr;
-
-    @Pattern(regexp = "[\\w=_]+")  // (2)
-    private String arg;
-
-
-.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
-.. list-table::
-    :header-rows: 1
-    :widths: 10 90
-
-    * - Sr. No.
-      - Description
-    * - | (1)
-      - | Specify rule to allow only \ ``batch0X.sh``\ (X is a single byte numeral from 0 to 9).
-    * - | (2)
-      - | Specify rule to allow only the strings configured from  innocuous alphanumeric characters (\\w）、\ ``=``\ 、\ ``_``\) as arguments.
-
-.. note::
-
-    In this example, directory traversal is prevented by establishing a rule wherein the path is not included in the commands or arguments.
-      
-When \ ``@Pattern``\  is used, regular expressions specified in \ ``@Pattern``\  are output as error messages and
-are considered invalid as messages due to following points.
-
-* Significance of error is not clear, not user-friendly
-* logic for the countermeasures to the vulnerability is exposed to the user
-
-.. figure:: ./images_Validation/validations-os-command-injection.png
-  :width: 60%
-
-A valid message is defined in application-messages.properties to conceal the logic by clarifying the significance of error.
-For how to define a message, refer \ :ref:`Validation_message_in_application_messages`\.
-
-.. code-block:: properties
-
-  Pattern.cmdForm.cmdStr = permit command name: batch00.sh - batch09.sh
-  Pattern.cmdForm.arg = permit parameter characters and symbols: alphanumeric, =, _
-
-.. figure:: ./images_Validation/validations-os-command-injection2.png
-  :width: 60%
 
 .. raw:: latex
 
