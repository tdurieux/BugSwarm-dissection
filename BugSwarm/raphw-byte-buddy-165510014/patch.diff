diff --git a/byte-buddy-dep/src/main/java/net/bytebuddy/asm/Advice.java b/byte-buddy-dep/src/main/java/net/bytebuddy/asm/Advice.java
index 32ef902cbe..9f7d31582a 100755
--- a/byte-buddy-dep/src/main/java/net/bytebuddy/asm/Advice.java
+++ b/byte-buddy-dep/src/main/java/net/bytebuddy/asm/Advice.java
@@ -187,8 +187,17 @@
      */
     private final Dispatcher.Resolved.ForMethodExit methodExit;
 
+    /**
+     * {@code true} if this advice should replace a super method invocation if used as an {@link Implementation}.
+     */
     private final boolean replace;
 
+    /**
+     * Creates a new advice.
+     *
+     * @param methodEnter The dispatcher for instrumenting the instrumented method upon entering.
+     * @param methodExit  The dispatcher for instrumenting the instrumented method upon exiting.
+     */
     protected Advice(Dispatcher.Resolved.ForMethodEnter methodEnter, Dispatcher.Resolved.ForMethodExit methodExit) {
         this(methodEnter, methodExit, false);
     }
@@ -198,6 +207,7 @@ protected Advice(Dispatcher.Resolved.ForMethodEnter methodEnter, Dispatcher.Reso
      *
      * @param methodEnter The dispatcher for instrumenting the instrumented method upon entering.
      * @param methodExit  The dispatcher for instrumenting the instrumented method upon exiting.
+     * @param replace     {@code true} if this advice should replace a super method invocation if used as an {@link Implementation}.
      */
     private Advice(Dispatcher.Resolved.ForMethodEnter methodEnter, Dispatcher.Resolved.ForMethodExit methodExit, boolean replace) {
         this.methodEnter = methodEnter;
