diff --git a/source/ArchitectureInDetail/MessagingDetail/JMS.rst b/source/ArchitectureInDetail/MessagingDetail/JMS.rst
index 8d2f7e9c5b..2b319de518 100755
--- a/source/ArchitectureInDetail/MessagingDetail/JMS.rst
+++ b/source/ArchitectureInDetail/MessagingDetail/JMS.rst
@@ -1575,9 +1575,11 @@ DBのトランザクション管理を行う必要があるアプリケーショ
 
     非同期受信と同期送信・受信を併用し、かつ、単一のトランザクションで管理したい場合、\ ``jms:listener-container``\ の\ ``factory-id``\ 属性と\ ``jmsTemplate``\ の\ ``connectionFactory``\ プロパティで指定する\ ``ConnectionFactory``\ のインスタンスを同一にすること。これによって、Springは非同期受信と同期送受信で利用するsessionを同期するため、単一のトランザクションとなる。
     このとき、\ ``jms:listener-container``\ および \ ``jmsTemplate``\ の両方でキャッシュを有効にするには、以下のような手段が候補となる。
-      * JMS関連リソースをキャッシュをAPサーバ製品に任せ、JNDIルックアップ経由で取得したオブジェクトを非同期受信と同期送信・受信の両方でそのまま使用する。
-      * MOM製品が\ ``connectionfactory``\ のcache機能を持っている場合、それを非同期受信と同期送信・受信の両方でそのまま使用する。
-      * \ ``org.springframework.jms.connection.CachingConnectionFactory``\ を非同期受信と同期送信・受信の両方でそのまま使用する。
+
+    * JMS関連リソースをキャッシュをAPサーバ製品に任せ、JNDIルックアップ経由で取得したオブジェクトを非同期受信と同期送信・受信の両方でそのまま使用する。
+    * MOM製品が\ ``connectionfactory``\ のcache機能を持っている場合、それを非同期受信と同期送信・受信の両方でそのまま使用する。
+    * \ ``org.springframework.jms.connection.CachingConnectionFactory``\ を非同期受信と同期送信・受信の両方でそのまま使用する。
+
     いずれの場合も\ ``listener-container``\ の\ ``cache``\ には\ ``none``\ を指定すること。
 
 |
