diff --git a/.travis.yml b/.travis.yml
index 72da56be6b..fb9f281bb8 100755
--- a/.travis.yml
+++ b/.travis.yml
@@ -17,10 +17,8 @@ env:
 
   matrix:
   - LINT_CHECK="1"
-  - TESTS="1" ODOO_REPO="odoo/odoo" EXCLUDE="asynchronous_batch_mailings"
-  - TESTS="1" ODOO_REPO="OCA/OCB"   EXCLUDE="asynchronous_batch_mailings"
-  - TESTS="1" ODOO_REPO="odoo/odoo" INCLUDE="asynchronous_batch_mailings"
-  - TESTS="1" ODOO_REPO="OCA/OCB"   INCLUDE="asynchronous_batch_mailings"
+  - TESTS="1" ODOO_REPO="odoo/odoo"
+  - TESTS="1" ODOO_REPO="OCA/OCB"
 
 virtualenv:
   system_site_packages: true
diff --git a/oca_dependencies.txt b/oca_dependencies.txt
index 8e5c6df8e8..3ae3471ce5 100755
--- a/oca_dependencies.txt
+++ b/oca_dependencies.txt
@@ -1,3 +1,4 @@
 account-financial-reporting
 connector
 hr-timesheet
+server-tools
diff --git a/setup/workflow_activity_action/odoo_addons/workflow_activity_action b/setup/workflow_activity_action/odoo_addons/workflow_activity_action
deleted file mode 100755
index 9563f372cf..0000000000
--- a/setup/workflow_activity_action/odoo_addons/workflow_activity_action
+++ /dev/null
@@ -1 +0,0 @@
-../../../workflow_activity_action
\ No newline at end of file
diff --git a/setup/workflow_activity_action/odoo_addons/workflow_activity_action b/setup/workflow_activity_action/odoo_addons/workflow_activity_action
new file mode 120000
index 0000000000..9563f372cf
--- /dev/null
+++ b/setup/workflow_activity_action/odoo_addons/workflow_activity_action
@@ -0,0 +1 @@
+../../../workflow_activity_action
\ No newline at end of file
diff --git a/setup/workflow_task/odoo_addons/workflow_task b/setup/workflow_task/odoo_addons/workflow_task
deleted file mode 100755
index cb37983568..0000000000
--- a/setup/workflow_task/odoo_addons/workflow_task
+++ /dev/null
@@ -1 +0,0 @@
-../../../workflow_task
\ No newline at end of file
diff --git a/setup/workflow_task/odoo_addons/workflow_task b/setup/workflow_task/odoo_addons/workflow_task
new file mode 120000
index 0000000000..cb37983568
--- /dev/null
+++ b/setup/workflow_task/odoo_addons/workflow_task
@@ -0,0 +1 @@
+../../../workflow_task
\ No newline at end of file
diff --git a/workflow_activity_action/README.rst b/workflow_activity_action/README.rst
index 3f4fa7c9a6..54c103078a 100755
--- a/workflow_activity_action/README.rst
+++ b/workflow_activity_action/README.rst
@@ -6,7 +6,68 @@
 Workflow activity action
 ========================
 
-This module was written to allow to Manage object action from its activities
+This module adds the concept of actions directly on the activities of an object.
+
+It is now possible to define a list of actions on workflow activities.
+Currently, these actions are configured as Odoo server action.
+
+Once defined actions on activities, it is possible to use these ones directly on the object associated with the activity.
+technically, it is necessary to make an inheritance of an abstract model and to add a field in the view of the object concerned.
+
+You can define two types of security rules for the actions of management.
+
+1) It is possible to define a security group list on the activity. For a user to perform an action on that activity, it must be defined in at least one group.
+2) In addition to the first level, it is possible to define a list of activity record rule. The evaluation process of these security rules is similar to the ir.rule model.
+
+Once the rules are evaluated, the actions are performed by super user (with base_suspend_security module)
+
+Usage
+=====
+
+Here is an example implementation on account.invoice model.
+
+* A python class ::
+
+	from openerp import fields, models
+
+
+	class AccountInvoice(models.Model)
+	    _name = 'account.invoice'
+	    _inherit = ['accont.invoice', 'workflow.action.model']
+
+* An XML view ::
+
+	<record model="ir.ui.view" id="invoice_form">
+	    <field name="name">account.invoice.form</field>
+	    <field name="model">account.invoice</field>
+	    <field name="inherit_id" ref="account.invoice_form" />
+	     <field name="arch" type="xml">
+		<xpath expr="//header" position="attributes">
+		    <attribute name="invisible">1</attribute>
+		</xpath>
+		<xpath expr="//header" position="after">
+		    <header>
+		        <field name="activity_action_ids" widget="many2many_action_buttons" />
+		        <field name="state" widget="statusbar"/>
+		    </header>
+		</xpath>
+	    </field>
+	</record>
+
+* Configuration of activities:
+
+	.. figure:: static/description/workflow_activity_action_1.png
+	   :alt: Configuration of activities
+
+* Add a server action on activity
+
+	.. figure:: static/description/workflow_activity_action_2.png
+	   :alt: Add a server action on activity
+
+* Using actions directly on the object:
+
+	.. figure:: static/description/workflow_activity_action_3.png
+	   :alt: Using actions directly on the object
 
 Credits
 =======
diff --git a/workflow_activity_action/models/activity_record_rule.py b/workflow_activity_action/models/activity_record_rule.py
index 7ecf35965c..673235fd8b 100755
--- a/workflow_activity_action/models/activity_record_rule.py
+++ b/workflow_activity_action/models/activity_record_rule.py
@@ -2,6 +2,8 @@
 # Copyright 2015 ACSONE SA/NV (<http://acsone.eu>)
 # License AGPL-3.0 or later (http://www.gnu.org/licenses/agpl.html).
 
+import time
+
 from openerp import api, fields, models
 from openerp.tools import SUPERUSER_ID
 from openerp.addons.base_suspend_security.base_suspend_security import\
@@ -13,10 +15,28 @@ class ActivityRecordRule(models.Model):
     _inherit = 'ir.rule'
     _name = 'activity.record.rule'
 
+    @api.model
+    def _eval_context(self):
+        """Returns a dictionary to use as evaluation context for
+           ir.rule domains."""
+        return {'user': self.env.user,
+                'time': time}
+
+    @api.multi
+    def _domain_force_get(self):
+        eval_context = self._eval_context()
+        for rule in self:
+            if rule.domain_force:
+                rule.domain = expression.normalize_domain(
+                    eval(rule.domain_force, eval_context))
+            else:
+                rule.domain = []
+
     activity_id = fields.Many2one(comodel_name='workflow.activity',
                                   string='Activity',
                                   required=True)
     model_id = fields.Many2one(required=False, readonly=True)
+    domain = fields.Binary(compute='_domain_force_get', string='Domain')
 
     @api.model
     def domain_get(self, model_name, activity_id):
@@ -53,7 +73,8 @@ def _compute_activity_rule_domain(self, activity_id):
             for rule in self.sudo().browse(rule_ids):
                 # read 'domain' as UID to have the correct eval context for
                 # the rule.
-                rule_domain = rule.domain
+                rule_domain = rule.sudo(user=user.id)\
+                    .read(['domain'])[0]['domain']
                 dom = expression.normalize_domain(rule_domain)
                 for group in rule.groups:
                     if group in user.groups_id:
diff --git a/workflow_activity_action/models/wkf_activity.py b/workflow_activity_action/models/wkf_activity.py
index 7c68371198..5118a5fd1c 100755
--- a/workflow_activity_action/models/wkf_activity.py
+++ b/workflow_activity_action/models/wkf_activity.py
@@ -34,7 +34,7 @@ class WorkflowActivityAction(models.Model):
 
     activity_id = fields.Many2one(comodel_name='workflow.activity',
                                   string='Activity',
-                                  required=True)
+                                  required=True, ondelete='cascade')
     name = fields.Char(required=True, translate=True)
     action = fields.Many2one(comodel_name='ir.actions.server', required=True)
 
diff --git a/workflow_activity_action/static/description/workflow_activity_action_1.png b/workflow_activity_action/static/description/workflow_activity_action_1.png
new file mode 100755
index 0000000000..162cefcfe8
Binary files /dev/null and b/workflow_activity_action/static/description/workflow_activity_action_1.png differ
diff --git a/workflow_activity_action/static/description/workflow_activity_action_2.png b/workflow_activity_action/static/description/workflow_activity_action_2.png
new file mode 100755
index 0000000000..3264ed0301
Binary files /dev/null and b/workflow_activity_action/static/description/workflow_activity_action_2.png differ
diff --git a/workflow_activity_action/static/description/workflow_activity_action_3.png b/workflow_activity_action/static/description/workflow_activity_action_3.png
new file mode 100755
index 0000000000..594c9d46a5
Binary files /dev/null and b/workflow_activity_action/static/description/workflow_activity_action_3.png differ
diff --git a/workflow_activity_action/static/src/js/view_form.js b/workflow_activity_action/static/src/js/view_form.js
index 8f911cb553..9f36ed9742 100755
--- a/workflow_activity_action/static/src/js/view_form.js
+++ b/workflow_activity_action/static/src/js/view_form.js
@@ -39,12 +39,16 @@ var FieldMany2ManyActionButtons = form_relational.AbstractManyField.extend(commo
                 $.when().then(function () {
                     if (parent_form) {
                         parent_form.save();
-                        var context = self.view.dataset.context;
+                        var context = self.view.dataset.get_context().eval();
                         context['res_type'] = self.view.model;
                         context['res_id'] = self.view.datarecord.id;
                         var model = new Model(self.field.relation);
-                        model.call("do_action", [parseInt(button.dataset.id)], {"context": context}).then(function() {
-                            self.view.reload();
+                        model.call("do_action", [parseInt(button.dataset.id)], {"context": context}).then(function(result) {
+                            if (result) {
+                                self.view.do_action(result);
+                            }
+                            self.view.recursive_save();
+                            self.view.recursive_reload();
                         });
                     } else {
                         return $.when();
diff --git a/workflow_task/README.rst b/workflow_task/README.rst
index 7540b58118..f06d88bb22 100755
--- a/workflow_task/README.rst
+++ b/workflow_task/README.rst
@@ -8,6 +8,15 @@ Workflow tasks
 
 This module automatically creates tasks when entering workflow activities.
 
+In addition to workflow_activity_acion module, this one allow you to create tasks when an object enters on an activity.
+
+Tasks must be configured on the activity concerned. It is possible to define a Deathline based on a date field and a critical delay during which the task is displayed in red.
+
+To access a task, a user must:
+
+1) be in a security group define in the Security page of the activity.
+2) Have access to the object
+
 Installation
 ============
 
@@ -16,19 +25,25 @@ To install this module, you need to:
  * apply this patch on your Odoo 8.0 sources
    https://github.com/acsone/odoo/tree/8.0-imp-workflow-ape
 
-Configuration
-=============
+Usage
+=====
 
-To configure this module, you need to:
+* You need to configure task parameters on activities:
 
- * enable "Create task" on selected workflow activities.
+	.. figure:: static/description/workflow_task_1.png
+	   :alt: Task configuration
 
-Usage
-=====
+* Tasks list view
+
+	.. figure:: static/description/workflow_task_2.png
+	   :alt: Task list view
+
+* Tasks form view
+
+	.. figure:: static/description/workflow_task_3.png
+	   :alt: Task form view
 
-To use this module, you need to:
 
- * go to ...
 
 Known issues / Roadmap
 ======================
@@ -44,6 +59,7 @@ Contributors
 ------------
 
 * Stéphane Bidoul <stephane.bidoul@acsone.eu>
+* Adrien Peiffer <adrien.peiffer@acsone.eu>
 
 Maintainer
 ----------
diff --git a/workflow_task/i18n/fr.po b/workflow_task/i18n/fr.po
new file mode 100755
index 0000000000..0182e01fb3
--- /dev/null
+++ b/workflow_task/i18n/fr.po
@@ -0,0 +1,292 @@
+# Translation of Odoo Server.
+# This file contains the translation of the following modules:
+#	* workflow_task
+#
+msgid ""
+msgstr ""
+"Project-Id-Version: Odoo Server 9.0e\n"
+"Report-Msgid-Bugs-To: \n"
+"POT-Creation-Date: 2016-07-25 15:56+0000\n"
+"PO-Revision-Date: 2016-07-25 15:56+0000\n"
+"Last-Translator: <>\n"
+"Language-Team: \n"
+"MIME-Version: 1.0\n"
+"Content-Type: text/plain; charset=UTF-8\n"
+"Content-Transfer-Encoding: \n"
+"Plural-Forms: \n"
+
+
+#. module: workflow_task
+#: model:ir.model.fields,help:workflow_task.field_wkf_activity_task_description
+#: help:workflow.activity,task_description:0
+msgid "A text to explain the user what he needs to do to accomplish the task."
+msgstr "A text to explain the user what he needs to do to accomplish the task."
+
+#. module: workflow_task
+#: model:ir.model.fields,field_description:workflow_task.field_workflow_task_activity_id
+#: field:workflow.task,activity_id:0
+msgid "Activity"
+msgstr "Activité"
+
+#. module: workflow_task
+#: model:ir.model.fields,field_description:workflow_task.field_workflow_task_user_id
+#: field:workflow.task,user_id:0
+msgid "Assigned User"
+msgstr "Utilisateur assigné"
+
+#. module: workflow_task
+#: selection:workflow.task,state:0
+msgid "Closed"
+msgstr "Clôturée"
+
+#. module: workflow_task
+#: model:ir.model.fields,field_description:workflow_task.field_workflow_task_date_closed
+#: field:workflow.task,date_closed:0
+msgid "Closed on"
+msgstr "Clôturée le"
+
+#. module: workflow_task
+#: model:ir.model.fields,field_description:workflow_task.field_wkf_activity_deadline_start_date
+#: field:workflow.activity,deadline_start_date:0
+msgid "Compute deadline from"
+msgstr "Calculer la date limite à partir de"
+
+#. module: workflow_task
+#: model:ir.model.fields,field_description:workflow_task.field_wkf_activity_task_create
+#: field:workflow.activity,task_create:0
+msgid "Create Task"
+msgstr "Créer une tâche"
+
+#. module: workflow_task
+#: model:ir.model.fields,field_description:workflow_task.field_workflow_task_create_uid
+#: field:workflow.task,create_uid:0
+msgid "Created by"
+msgstr "Créé par"
+
+#. module: workflow_task
+#: model:ir.model.fields,field_description:workflow_task.field_workflow_task_create_date
+#: field:workflow.task,create_date:0
+msgid "Created on"
+msgstr "Créé le"
+
+#. module: workflow_task
+#: model:ir.model.fields,field_description:workflow_task.field_wkf_activity_critical_delay
+#: field:workflow.activity,critical_delay:0
+msgid "Critical delay (days)"
+msgstr "Délais critique (jours)"
+
+#. module: workflow_task
+#: model:ir.model.fields,field_description:workflow_task.field_workflow_task_date_critical
+#: field:workflow.task,date_critical:0
+msgid "Date critical"
+msgstr "Date crritique"
+
+#. module: workflow_task
+#: model:ir.model.fields,help:workflow_task.field_workflow_task_message_last_post
+#: help:workflow.task,message_last_post:0
+msgid "Date of the last message posted on the record."
+msgstr "Date du dernier message publié sur cet enregistrement"
+
+#. module: workflow_task
+#: model:ir.model.fields,field_description:workflow_task.field_workflow_task_date_deadline
+#: field:workflow.task,date_deadline:0
+msgid "Deadline"
+msgstr "Date limite"
+
+#. module: workflow_task
+#: model:ir.model.fields,field_description:workflow_task.field_wkf_activity_task_deadline_days
+#: field:workflow.activity,task_deadline_days:0
+msgid "Deadline days"
+msgstr "Deadline days"
+
+#. module: workflow_task
+#: model:ir.model.fields,field_description:workflow_task.field_workflow_task_description
+#: field:workflow.task,description:0
+msgid "Description"
+msgstr "Description"
+
+#. module: workflow_task
+#: model:ir.model.fields,field_description:workflow_task.field_workflow_task_message_follower_ids
+#: field:workflow.task,message_follower_ids:0
+msgid "Followers"
+msgstr "Abonnés"
+
+#. module: workflow_task
+#: model:ir.model.fields,field_description:workflow_task.field_workflow_task_id
+#: model:ir.model.fields,field_description:workflow_task.field_workflow_task_res_id
+#: field:workflow.task,id:0
+#: field:workflow.task,res_id:0
+msgid "ID"
+msgstr "ID"
+
+#. module: workflow_task
+#: model:ir.model.fields,help:workflow_task.field_wkf_activity_task_create
+#: help:workflow.activity,task_create:0
+msgid "If checked, the workflow engine will create a task when entering this activity and close the task when exiting the activity."
+msgstr "If checked, the workflow engine will create a task when entering this activity and close the task when exiting the activity."
+
+#. module: workflow_task
+#: model:ir.model.fields,help:workflow_task.field_wkf_activity_deadline_start_date
+#: help:workflow.activity,deadline_start_date:0
+msgid "If empty, deadline will be computed\n"
+"                from the task creation date"
+msgstr "If empty, deadline will be computed\n"
+"                from the task creation date"
+
+#. module: workflow_task
+#: selection:workflow.task,state:0
+msgid "In progress"
+msgstr "En cours"
+
+#. module: workflow_task
+#: model:ir.model.fields,field_description:workflow_task.field_workflow_task_message_last_post
+#: field:workflow.task,message_last_post:0
+msgid "Last Message Date"
+msgstr "Date du dernier message"
+
+#. module: workflow_task
+#: model:ir.model.fields,field_description:workflow_task.field_workflow_task_write_uid
+#: field:workflow.task,write_uid:0
+msgid "Last Updated by"
+msgstr "Mis à jour par"
+
+#. module: workflow_task
+#: model:ir.model.fields,field_description:workflow_task.field_workflow_task_write_date
+#: field:workflow.task,write_date:0
+msgid "Last Updated on"
+msgstr "Mis à jour le"
+
+#. module: workflow_task
+#: model:ir.model.fields,field_description:workflow_task.field_workflow_task_message_ids
+#: field:workflow.task,message_ids:0
+msgid "Messages"
+msgstr "Messages"
+
+#. module: workflow_task
+#: model:ir.model.fields,field_description:workflow_task.field_workflow_task_ref_object
+#: field:workflow.task,ref_object:0
+msgid "Objet"
+msgstr "Objet"
+
+#. module: workflow_task
+#: model:ir.model.fields,field_description:workflow_task.field_wkf_activity_res_type
+#: field:workflow.activity,res_type:0
+msgid "Resource Object"
+msgstr "Objet ressource"
+
+#. module: workflow_task
+#: model:ir.model.fields,field_description:workflow_task.field_workflow_task_ref_object_name
+#: field:workflow.task,ref_object_name:0
+msgid "Related object"
+msgstr "Objet lié"
+
+#. module: workflow_task
+#: model:ir.model.fields,field_description:workflow_task.field_workflow_task_pretty_res_type
+#: field:workflow.task,pretty_res_type:0
+msgid "Pretty Res Type"
+msgstr "Objet ressource"
+
+#. module: workflow_task
+#: model:ir.model.fields,field_description:workflow_task.field_wkf_activity_use_action_task
+#: field:workflow.activity,use_action_task:0
+msgid "Show actions on task"
+msgstr "Show actions on task"
+
+#. module: workflow_task
+#: code:addons/workflow_task/models/task.py:195
+#, python-format
+msgid "Sorry, you are not allowed to access this document."
+msgstr "Désolé, vous n'êtes pas autorisé à accéder à cet objet."
+
+#. module: workflow_task
+#: model:ir.model.fields,field_description:workflow_task.field_workflow_task_date_started
+#: field:workflow.task,date_started:0
+msgid "Started on"
+msgstr "Commencé le"
+
+#. module: workflow_task
+#: model:ir.model.fields,field_description:workflow_task.field_workflow_task_state
+#: field:workflow.task,state:0
+msgid "State"
+msgstr "État"
+
+#. module: workflow_task
+#: model:ir.model.fields,field_description:workflow_task.field_wkf_activity_task_description
+#: field:workflow.activity,task_description:0
+msgid "Task description"
+msgstr "Description de la tâche"
+
+#. module: workflow_task
+#: model:ir.model.fields,field_description:workflow_task.field_wkf_workitem_task_ids
+#: model:ir.ui.menu,name:workflow_task.menu_main_workflow_task
+#: field:workflow.workitem,task_ids:0
+msgid "Tasks"
+msgstr "Tâches"
+
+#. module: workflow_task
+#: model:ir.model.fields,help:workflow_task.field_workflow_task_date_critical
+#: help:workflow.task,date_critical:0
+msgid "The created task will appear in red in the task tree view\n"
+"            after this date"
+msgstr "The created task will appear in red in the task tree view\n"
+"            after this date"
+
+#. module: workflow_task
+#: model:ir.model.fields,help:workflow_task.field_wkf_activity_critical_delay
+#: help:workflow.activity,critical_delay:0
+msgid "The created task will appear in red in the task tree view\n"
+"            in the number of days before the deadline."
+msgstr "The created task will appear in red in the task tree view\n"
+"            in the number of days before the deadline."
+
+#. module: workflow_task
+#: selection:workflow.task,state:0
+msgid "Todo"
+msgstr "Todo"
+
+#. module: workflow_task
+#: model:ir.model.fields,field_description:workflow_task.field_workflow_task_res_type
+#: field:workflow.task,res_type:0
+msgid "Type"
+msgstr "Type"
+
+#. module: workflow_task
+#: model:ir.model.fields,field_description:workflow_task.field_workflow_task_website_message_ids
+#: field:workflow.task,website_message_ids:0
+msgid "Website Messages"
+msgstr "Messages du site web"
+
+#. module: workflow_task
+#: model:ir.model.fields,help:workflow_task.field_workflow_task_website_message_ids
+#: help:workflow.task,website_message_ids:0
+msgid "Website communication history"
+msgstr "Historique de communication du site web"
+
+#. module: workflow_task
+#: model:ir.model,name:workflow_task.model_workflow_task
+msgid "Workflow Task"
+msgstr "Workflow Task"
+
+#. module: workflow_task
+#: model:ir.actions.act_window,name:workflow_task.open_workflow_task
+#: model:ir.ui.menu,name:workflow_task.menu_workflow_task
+msgid "Workflow Tasks"
+msgstr "Workflow Tasks"
+
+#. module: workflow_task
+#: model:ir.model.fields,field_description:workflow_task.field_workflow_task_workitem
+#: field:workflow.task,workitem:0
+msgid "Workitem"
+msgstr "Élément de travail "
+
+
+#. module: workflow_task
+#: model:ir.ui.view,arch_db:workflow_task.workflow_task_search
+msgid "Assigned to me"
+msgstr "Qui me sont assignées"
+
+#. module: workflow_task
+#: model:ir.ui.view,arch_db:workflow_task.workflow_task_search
+msgid "Not closed"
+msgstr "Non Clôturées"
+
diff --git a/workflow_task/models/task.py b/workflow_task/models/task.py
index c167c6ab41..df7376077d 100755
--- a/workflow_task/models/task.py
+++ b/workflow_task/models/task.py
@@ -44,7 +44,8 @@ def _select_objects(self):
     activity_id = fields.Many2one(comodel_name='workflow.activity',
                                   string='Activity', required=True)
     description = fields.Text()
-    user_id = fields.Many2one(comodel_name='res.users', string='Assigned User',
+    user_id = fields.Many2one(comodel_name='res.users',
+                              string='Assigned User',
                               track_visibility='onchange')
     state = fields.Selection([('new', 'Todo'),
                               ('started', 'In progress'),
@@ -65,8 +66,53 @@ def _select_objects(self):
     ref_object = fields.Reference(string='Objet',
                                   selection=_select_objects,
                                   store=True, compute='_get_ref_object')
+    ref_object_name = fields.Char(search='_search_ref_object',
+                                  compute='_dummy_compute',
+                                  string="Related object")
     action_ids = fields.One2many(comodel_name='workflow.activity.action',
                                  compute='_get_action_ids')
+    pretty_res_type = fields.Char(compute='_get_pretty_res_type')
+
+    def fields_get(self, cr, user, allfields=None, context=None,
+                   write_access=True, attributes=None):
+        res = super(Task, self).fields_get(
+            cr, user, allfields, context, write_access, attributes)
+        # remove ref_object from searchable field into the advanced search
+        # since the field to use is ref_object_name
+        if 'ref_object' in res:
+            res['ref_object']['searchable'] = False
+        return res
+
+    @api.multi
+    @api.depends('res_type')
+    def _get_pretty_res_type(self):
+        for record in self:
+            model = self.env['ir.model']\
+                .search([('model', '=', record.res_type)])
+            record.pretty_res_type = model.name
+
+    def _search_ref_object(self, operator, value):
+        self._cr.execute("""SELECT distinct res_type FROM workflow_task""")
+        models = self._cr.fetchall()
+        all_task_ids = []
+        for model in models:
+            model = model[0]
+            self._cr.execute("""SELECT distinct res_id FROM workflow_task
+                WHERE res_type=%s""", (model,))
+            mids = [r[0] for r in self._cr.fetchall()]
+            ns_result = self.env[model].name_search(
+                name=value, operator=operator, args=[('id', 'in', mids)])
+            obj_ids = [r[0] for r in ns_result]
+            tids = self.search([('res_type', '=', model),
+                                ('res_id', 'in', obj_ids)])
+            all_task_ids.extend(tids._ids)
+        return [('id', 'in', all_task_ids)]
+
+    @api.depends('ref_object')
+    @api.multi
+    def _dummy_compute(self):
+        for record in self:
+            record.ref_object_name = record.ref_object
 
     @api.multi
     def _get_action_ids(self):
@@ -124,7 +170,8 @@ def _check_activity_security(self):
 
     @api.multi
     def check(self, mode, values=None):
-        """Restricts the access to a workflow task, according to referred model.
+        """Restricts the access to a workflow task, according to
+           referred model.
         """
         res_ids = {}
         if self._ids:
@@ -148,15 +195,10 @@ def check(self, mode, values=None):
 
     def _search(self, cr, uid, args, offset=0, limit=None, order=None,
                 context=None, count=False, access_rights_uid=None):
-        ids = super(Task, self)._search(cr, uid, args, offset=offset,
-                                        limit=limit, order=order,
+        ids = super(Task, self)._search(cr, uid, args, offset=0,
+                                        limit=None, order=order,
                                         context=context, count=False,
                                         access_rights_uid=access_rights_uid)
-        context = context or {}
-        # keep a copy of the context since it will be modified to disallow
-        # the test on active when searching for res_type
-        no_active_test_context = context.copy()
-        no_active_test_context['active_test'] = False
         if not ids:
             if count:
                 return 0
@@ -186,12 +228,12 @@ def _search(self, cr, uid, args, offset=0, limit=None, order=None,
                 # remove all corresponding task ids
                 for attach_id in itertools.chain(*targets.values()):
                     ids.remove(attach_id)
-                continue  # skip ir.rule processing, these ones are out already
+                continue  # skip ir.rule processing,these ones are out already
 
             # filter ids according to what access rules permit
             target_ids = targets.keys()
             allowed_ids = [0] + self.pool[model].search(
-                cr, uid, [('id', 'in', target_ids)], context=no_active_test_context)
+                cr, uid, [('id', 'in', target_ids)], context=context)
             disallowed_ids = set(target_ids).difference(allowed_ids)
             for res_id in disallowed_ids:
                 for attach_id in targets[res_id]:
@@ -203,7 +245,12 @@ def _search(self, cr, uid, args, offset=0, limit=None, order=None,
 #                 ids.remove(task_id)
         # sort result according to the original sort ordering
         result = [id for id in orig_ids if id in ids]
-        return len(result) if count else list(result)
+        ids = super(Task, self)._search(cr, uid, [('id', 'in', result)],
+                                        offset=offset, limit=limit,
+                                        order=order, context=context,
+                                        count=False,
+                                        access_rights_uid=access_rights_uid)
+        return len(ids) if count else list(ids)
 
     @api.multi
     def read(self, fields=None, load='_classic_read'):
diff --git a/workflow_task/models/wkf_workitem.py b/workflow_task/models/wkf_workitem.py
index 6c8e754a3c..20e1ae4e57 100755
--- a/workflow_task/models/wkf_workitem.py
+++ b/workflow_task/models/wkf_workitem.py
@@ -33,7 +33,8 @@ class WorkflowWorkitem(models.Model):
                                inverse_name='workitem', string='Tasks')
 
     @api.multi
-    def unlink(self):
+    def execute_delete(self):
         for record in self:
             record.task_ids.close_task()
-        return super(WorkflowWorkitem, self).unlink()
+            record.task_ids.write({'workitem': False})
+        return super(WorkflowWorkitem, self).execute_delete()
diff --git a/workflow_task/static/description/workflow_task_1.png b/workflow_task/static/description/workflow_task_1.png
new file mode 100755
index 0000000000..ea5a491576
Binary files /dev/null and b/workflow_task/static/description/workflow_task_1.png differ
diff --git a/workflow_task/static/description/workflow_task_2.png b/workflow_task/static/description/workflow_task_2.png
new file mode 100755
index 0000000000..47d52a3e91
Binary files /dev/null and b/workflow_task/static/description/workflow_task_2.png differ
diff --git a/workflow_task/static/description/workflow_task_3.png b/workflow_task/static/description/workflow_task_3.png
new file mode 100755
index 0000000000..00c048df05
Binary files /dev/null and b/workflow_task/static/description/workflow_task_3.png differ
diff --git a/workflow_task/static/src/js/kanban.js b/workflow_task/static/src/js/kanban.js
index 388d75fe03..b23a0a5dbb 100755
--- a/workflow_task/static/src/js/kanban.js
+++ b/workflow_task/static/src/js/kanban.js
@@ -14,7 +14,7 @@ KanbanView.include({
     reload_record: function (event) {
         this._super(event);
         var self = this;
-        if (self.x2m != 'undefined' && self.x2m.dataset.ids.length > 0 && self.x2m.options.reload_on_button) {
+        if (self.x2m && self.x2m.dataset && self.x2m.dataset.ids.length > 0 && self.x2m.options.reload_on_button) {
             var parent_form = self.x2m.view;
             $.when().then(function () {
                 if (parent_form)
diff --git a/workflow_task/views/wkf_task_view.xml b/workflow_task/views/wkf_task_view.xml
index 63d926996e..032dd80b42 100755
--- a/workflow_task/views/wkf_task_view.xml
+++ b/workflow_task/views/wkf_task_view.xml
@@ -59,6 +59,7 @@
             <field name="arch" type="xml">
                 <tree create="0" colors="grey:state == 'closed';red:date_critical and date_critical &lt;= current_date;black:state == 'started';blue:state == 'new'">
                     <field name="ref_object" />
+                    <field name="pretty_res_type" />
                     <field name="name" />
                     <field name="state" />
                     <field name="date_deadline" />
@@ -75,6 +76,7 @@
             <field name="model">workflow.task</field>
             <field name="arch" type="xml">
                 <search>
+                    <field name="ref_object_name" />
                     <filter string="Assigned to me" domain="[('user_id','=',uid)]" name="assigned_to_me"/>
                     <separator orientation="vertical"/>
                     <filter string="Not closed" domain="[('state','!=','closed')]" name="not_closed"/>
