diff --git a/pychron/stage/maps/base_stage_map.py b/pychron/stage/maps/base_stage_map.py
index c74d343932..6f9efb42c5 100755
--- a/pychron/stage/maps/base_stage_map.py
+++ b/pychron/stage/maps/base_stage_map.py
@@ -97,24 +97,10 @@ def load(self):
                     # # line 2 list of calibration holes
                     # # should always be N,E,S,W,center
                     self.calibration_holes = line.split(',')
+                    break
 
                 cnt += 1
 
-            # # line 0 shape, dimension
-            # shape, dimension = line.split(',')
-            # self.g_shape = shape
-            # self.g_dimension = dimension = float(dimension)
-            #
-            # # line 1 list of holes to default draw
-            # line = rfile.readline()
-            # valid_holes = line.split(',')
-            #
-            # # line 2 list of calibration holes
-            # # should always be N,E,S,W,center
-            # line = rfile.readline()
-            # self.calibration_holes = line.split(',')
-
-            # for hi, line in enumerate(lines[3:]):
             hi = 0
             sms = []
             for line in rfile:
diff --git a/pychron/stage/tests/stage_map.py b/pychron/stage/tests/stage_map.py
index 695dd55a03..002c224c92 100755
--- a/pychron/stage/tests/stage_map.py
+++ b/pychron/stage/tests/stage_map.py
@@ -10,7 +10,8 @@ class StageMapTestCase(unittest.TestCase):
     def setUp(self):
         p = 'pychron/stage/tests/data/221-hole.txt'
         if not os.path.isfile(p):
-            p = './data/221-hole.txt'
+            base = os.path.dirname(os.path.abspath(__file__))
+            p = os.path.join(base, 'data', '221-hole.txt')
 
         self.sm = LaserStageMap(file_path=p)
 
@@ -142,6 +143,7 @@ def test_mid_holes(self):
         hs = [hi.id for hi in holes[:6]]
         self.assertListEqual(['3', '10', '20', '32', '46', '61'], hs)
 
+
 class TransformTestCase(unittest.TestCase):
     def test_itransform_point_ntran_nrot(self):
         cpos = 0, 0
