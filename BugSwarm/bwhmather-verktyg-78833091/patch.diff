diff --git a/verktyg/exception_dispatch.py b/verktyg/exception_dispatch.py
index c20f597636..0dc2e7b0b4 100755
--- a/verktyg/exception_dispatch.py
+++ b/verktyg/exception_dispatch.py
@@ -52,7 +52,6 @@ def __repr__(self):
         return output
 
 
-
 class ExceptionDispatcher(ExceptionHandlerFactory):
     def __init__(self, handlers=[]):
         self._handlers = {}
diff --git a/verktyg/testsuite/test_accept.py b/verktyg/testsuite/test_accept.py
index 454b3b379b..b2245587de 100755
--- a/verktyg/testsuite/test_accept.py
+++ b/verktyg/testsuite/test_accept.py
@@ -73,8 +73,16 @@ def test_select_representation(self):
             )
         )
 
+    def test_not_acceptable(self):
+        pdf_repr = Representation(content_type='text/pdf')
 
-def suite():
-    suite = unittest.TestSuite()
-    suite.addTest(unittest.makeSuite(RepresentationTestCase))
-    return suite
+        self.assertRaises(
+            NotAcceptable,
+            pdf_repr.acceptability,
+            accept=http.parse_accept_header('text/html')
+        )
+
+        self.assertRaises(
+            NotAcceptable,
+            select_representation, [pdf_repr], accept='text/html'
+        )
diff --git a/verktyg/testsuite/test_application.py b/verktyg/testsuite/test_application.py
index 5c6ddf0be4..7577b6cd0f 100755
--- a/verktyg/testsuite/test_application.py
+++ b/verktyg/testsuite/test_application.py
@@ -165,7 +165,6 @@ def raise_404(app, req):
         self.assertEqual(resp.status_code, 404)
         self.assertEqual(resp.get_data(), b'{"type": "json"}')
 
-
     def test_close_request(self):
         closed = 0
 
@@ -199,9 +198,3 @@ def index(app, request):
         except NotFound:
             pass
         self.assertEqual(closed, 2)
-
-
-def suite():
-    suite = unittest.TestSuite()
-    suite.addTest(unittest.makeSuite(ApplicationTestCase))
-    return suite
diff --git a/verktyg/testsuite/test_dispatch.py b/verktyg/testsuite/test_dispatch.py
index 2a4246c911..23ff9ba564 100755
--- a/verktyg/testsuite/test_dispatch.py
+++ b/verktyg/testsuite/test_dispatch.py
@@ -146,9 +146,3 @@ def test_nested(self):
         self.assertEqual(
             'Nested',
             parent.lookup('nested')(None, None))
-
-
-def suite():
-    suite = unittest.TestSuite()
-    suite.addTest(unittest.makeSuite(DispatchTestCase))
-    return suite
diff --git a/verktyg/testsuite/test_requests.py b/verktyg/testsuite/test_requests.py
index d7ef03d3f4..14410dc238 100755
--- a/verktyg/testsuite/test_requests.py
+++ b/verktyg/testsuite/test_requests.py
@@ -523,9 +523,3 @@ class ModifiedRequest(Request):
     def test_request_method_case_sensitivity(self):
         req = Request({'REQUEST_METHOD': 'get'})
         self.assertEqual(req.method, 'GET')
-
-
-def suite():
-    suite = unittest.TestSuite()
-    suite.addTest(unittest.makeSuite(RequestsTestCase))
-    return suite
diff --git a/verktyg/testsuite/test_responses.py b/verktyg/testsuite/test_responses.py
index 8f6ec92b3d..2eb2cf49bf 100755
--- a/verktyg/testsuite/test_responses.py
+++ b/verktyg/testsuite/test_responses.py
@@ -474,9 +474,3 @@ class MyResponse(Response):
         self.assertEqual(
             resp.get_wsgi_headers(env)['Location'], 'http://localhost/test'
         )
-
-
-def suite():
-    suite = unittest.TestSuite()
-    suite.addTest(unittest.makeSuite(ResponsesTestCase))
-    return suite
diff --git a/verktyg/testsuite/test_routing.py b/verktyg/testsuite/test_routing.py
index 99617bfaa4..02837b53a4 100755
--- a/verktyg/testsuite/test_routing.py
+++ b/verktyg/testsuite/test_routing.py
@@ -917,9 +917,3 @@ def test_map_repr(self):
             rv,
             "URLMap([<Route '/woop' -> foobar>, <Route '/wat' -> enter>])"
         )
-
-
-def suite():
-    suite = unittest.TestSuite()
-    suite.addTest(unittest.makeSuite(RoutingTestCase))
-    return suite
diff --git a/verktyg/testsuite/test_views.py b/verktyg/testsuite/test_views.py
index c5cfd3e05c..baf0aa7d5c 100755
--- a/verktyg/testsuite/test_views.py
+++ b/verktyg/testsuite/test_views.py
@@ -48,9 +48,3 @@ def POST(self, env, req):
             MethodNotAllowed,
             dispatcher.lookup, 'foo', method='PUT'
         )
-
-
-def suite():
-    suite = unittest.TestSuite()
-    suite.addTest(unittest.makeSuite(ViewsTestCase))
-    return suite
