diff --git a/stagemonitor-alerting/src/main/java/org/stagemonitor/alerting/check/MetricValueType.java b/stagemonitor-alerting/src/main/java/org/stagemonitor/alerting/check/MetricValueType.java
index 3e52713c42..6c981082be 100755
--- a/stagemonitor-alerting/src/main/java/org/stagemonitor/alerting/check/MetricValueType.java
+++ b/stagemonitor-alerting/src/main/java/org/stagemonitor/alerting/check/MetricValueType.java
@@ -7,7 +7,7 @@
 	MIN("min"),
 	MAX("max"),
 	STDDEV("stddev"),
-	P50("p50"),
+	MEDIAN("median"),
 	P75("p75"),
 	P95("p95"),
 	P98("p98"),
diff --git a/stagemonitor-core/src/main/java/org/stagemonitor/core/metrics/metrics2/Metric2RegistryModule.java b/stagemonitor-core/src/main/java/org/stagemonitor/core/metrics/metrics2/Metric2RegistryModule.java
index ac7353aae9..413ba64a71 100755
--- a/stagemonitor-core/src/main/java/org/stagemonitor/core/metrics/metrics2/Metric2RegistryModule.java
+++ b/stagemonitor-core/src/main/java/org/stagemonitor/core/metrics/metrics2/Metric2RegistryModule.java
@@ -1,5 +1,10 @@
 package org.stagemonitor.core.metrics.metrics2;
 
+import java.io.IOException;
+import java.util.Collections;
+import java.util.Map;
+import java.util.concurrent.TimeUnit;
+
 import com.codahale.metrics.Counter;
 import com.codahale.metrics.Gauge;
 import com.codahale.metrics.Histogram;
@@ -17,11 +22,6 @@
 import com.fasterxml.jackson.databind.ser.std.StdSerializer;
 import com.fasterxml.jackson.databind.type.TypeFactory;
 
-import java.io.IOException;
-import java.util.Collections;
-import java.util.Map;
-import java.util.concurrent.TimeUnit;
-
 public class Metric2RegistryModule extends Module {
 
 	private final double rateFactor;
@@ -164,9 +164,9 @@ private void writeSnapshot(Snapshot snapshot, JsonGenerator jg) throws IOExcepti
 		writeDoubleUnlessNaN(jg, "min", convertDuration(snapshot.getMin()));
 		writeDoubleUnlessNaN(jg, "max", convertDuration(snapshot.getMax()));
 		writeDoubleUnlessNaN(jg, "mean", convertDuration(snapshot.getMean()));
+		writeDoubleUnlessNaN(jg, "median", convertDuration(snapshot.getMedian()));
 		writeDoubleUnlessNaN(jg, "std", convertDuration(snapshot.getStdDev()));
 		writeDoubleUnlessNaN(jg, "p25", convertDuration(snapshot.getValue(0.25)));
-		writeDoubleUnlessNaN(jg, "p50", convertDuration(snapshot.getMedian()));
 		writeDoubleUnlessNaN(jg, "p75", convertDuration(snapshot.get75thPercentile()));
 		writeDoubleUnlessNaN(jg, "p95", convertDuration(snapshot.get95thPercentile()));
 		writeDoubleUnlessNaN(jg, "p98", convertDuration(snapshot.get98thPercentile()));
