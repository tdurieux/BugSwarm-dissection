diff --git a/sklearn/decomposition/kernel_pca.py b/sklearn/decomposition/kernel_pca.py
index 5d824c9598..3316ddb24d 100755
--- a/sklearn/decomposition/kernel_pca.py
+++ b/sklearn/decomposition/kernel_pca.py
@@ -151,10 +151,6 @@ def __init__(self, n_components=None, kernel="linear",
         self.n_jobs = n_jobs
         self.copy_X = copy_X
 
-    @classmethod
-    def _get_test_instances(cls):
-        yield cls(max_iter=5)
-
     @property
     def _pairwise(self):
         return self.kernel == "precomputed"
diff --git a/sklearn/linear_model/omp.py b/sklearn/linear_model/omp.py
index 99ce93b476..298a1fa425 100755
--- a/sklearn/linear_model/omp.py
+++ b/sklearn/linear_model/omp.py
@@ -828,10 +828,6 @@ def __init__(self, copy=True, fit_intercept=True, normalize=True,
         self.n_jobs = n_jobs
         self.verbose = verbose
 
-    @classmethod
-    def _get_test_instances(cls):
-        yield cls(max_iter=5)
-
     def fit(self, X, y):
         """Fit the model using X, y as training data.
 
diff --git a/sklearn/linear_model/ridge.py b/sklearn/linear_model/ridge.py
index 025202edaf..80778132bb 100755
--- a/sklearn/linear_model/ridge.py
+++ b/sklearn/linear_model/ridge.py
@@ -647,10 +647,6 @@ def __init__(self, alpha=1.0, fit_intercept=True, normalize=False,
                                     max_iter=max_iter, tol=tol, solver=solver,
                                     random_state=random_state)
 
-    @classmethod
-    def _get_test_instances(cls):
-        yield cls(max_iter=5)
-
     def fit(self, X, y, sample_weight=None):
         """Fit Ridge regression model
 
@@ -792,10 +788,6 @@ def __init__(self, alpha=1.0, fit_intercept=True, normalize=False,
             random_state=random_state)
         self.class_weight = class_weight
 
-    @classmethod
-    def _get_test_instances(cls):
-        yield cls(max_iter=5)
-
     def fit(self, X, y, sample_weight=None):
         """Fit Ridge regression model.
 
diff --git a/sklearn/manifold/isomap.py b/sklearn/manifold/isomap.py
index 54e633a078..f649237448 100755
--- a/sklearn/manifold/isomap.py
+++ b/sklearn/manifold/isomap.py
@@ -99,10 +99,6 @@ def __init__(self, n_neighbors=5, n_components=2, eigen_solver='auto',
         self.neighbors_algorithm = neighbors_algorithm
         self.n_jobs = n_jobs
 
-    @classmethod
-    def _get_test_instances(cls):
-        yield cls(max_iter=5)
-
     def _fit_transform(self, X):
         X = check_array(X)
         self.nbrs_ = NearestNeighbors(n_neighbors=self.n_neighbors,
diff --git a/sklearn/svm/classes.py b/sklearn/svm/classes.py
index 4ad6c8a52d..b1746ae767 100755
--- a/sklearn/svm/classes.py
+++ b/sklearn/svm/classes.py
@@ -604,7 +604,7 @@ def __init__(self, C=1.0, kernel='rbf', degree=3, gamma='auto_deprecated',
 
     @classmethod
     def _get_test_instances(cls):
-        yield cls(max_iter=5, decision_function_shape='ovo')
+        yield cls(decision_function_shape='ovo')
 
 
 class NuSVC(BaseSVC):
@@ -769,7 +769,7 @@ def __init__(self, nu=0.5, kernel='rbf', degree=3, gamma='auto_deprecated',
 
     @classmethod
     def _get_test_instances(cls):
-        yield cls(max_iter=5, decision_function_shape='ovo')
+        yield cls(decision_function_shape='ovo')
 
 
 class SVR(BaseLibSVM, RegressorMixin):
@@ -894,10 +894,6 @@ def __init__(self, kernel='rbf', degree=3, gamma='auto_deprecated',
             shrinking=shrinking, probability=False, cache_size=cache_size,
             class_weight=None, max_iter=max_iter, random_state=None)
 
-    @classmethod
-    def _get_test_instances(cls):
-        yield cls(max_iter=5)
-
 
 class NuSVR(BaseLibSVM, RegressorMixin):
     """Nu Support Vector Regression.
@@ -1019,10 +1015,6 @@ def __init__(self, nu=0.5, C=1.0, kernel='rbf', degree=3,
             probability=False, cache_size=cache_size, class_weight=None,
             verbose=verbose, max_iter=max_iter, random_state=None)
 
-    @classmethod
-    def _get_test_instances(cls):
-        yield cls(max_iter=5)
-
 
 class OneClassSVM(BaseLibSVM, OutlierMixin):
     """Unsupervised Outlier Detection.
@@ -1130,10 +1122,6 @@ def __init__(self, kernel='rbf', degree=3, gamma='auto_deprecated',
             shrinking, False, cache_size, None, verbose, max_iter,
             random_state)
 
-    @classmethod
-    def _get_test_instances(cls):
-        yield cls(max_iter=5)
-
     def fit(self, X, y=None, sample_weight=None, **params):
         """
         Detects the soft boundary of the set of samples X.
