diff --git a/modules/swagger-core/src/main/java/io/swagger/jackson/mixin/OperationResponseMixin.java b/modules/swagger-core/src/main/java/io/swagger/jackson/mixin/OperationResponseMixin.java
new file mode 100755
index 0000000000..3eac448e81
--- /dev/null
+++ b/modules/swagger-core/src/main/java/io/swagger/jackson/mixin/OperationResponseMixin.java
@@ -0,0 +1,28 @@
+package io.swagger.jackson.mixin;
+
+import com.fasterxml.jackson.annotation.JsonGetter;
+import com.fasterxml.jackson.annotation.JsonIgnore;
+import com.fasterxml.jackson.annotation.JsonSetter;
+import io.swagger.models.Response;
+import io.swagger.models.Responses;
+
+
+import java.util.Map;
+
+public abstract class OperationResponseMixin {
+
+    @JsonIgnore
+    public abstract Map<String,Response> getResponses();
+
+    @JsonIgnore
+    public abstract void setResponses(Map<String,Response> responses);
+
+    @JsonGetter("responses")
+    public abstract Responses getResponsesObject();
+
+    @JsonSetter("responses")
+    public abstract void getResponsesObject(Responses responsesObject);
+
+
+
+}
diff --git a/modules/swagger-core/src/main/java/io/swagger/util/ObjectMapperFactory.java b/modules/swagger-core/src/main/java/io/swagger/util/ObjectMapperFactory.java
index 1cc301ee04..280852b11a 100755
--- a/modules/swagger-core/src/main/java/io/swagger/util/ObjectMapperFactory.java
+++ b/modules/swagger-core/src/main/java/io/swagger/util/ObjectMapperFactory.java
@@ -7,7 +7,9 @@
 import com.fasterxml.jackson.databind.ObjectMapper;
 import com.fasterxml.jackson.databind.SerializationFeature;
 import com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
+import io.swagger.jackson.mixin.OperationResponseMixin;
 import io.swagger.jackson.mixin.ResponseSchemaMixin;
+import io.swagger.models.Operation;
 import io.swagger.models.Response;
 
 
@@ -42,6 +44,7 @@ private static ObjectMapper create(JsonFactory jsonFactory, boolean includePathD
         mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);
 
         mapper.addMixIn(Response.class, ResponseSchemaMixin.class);
+        mapper.addMixIn(Operation.class, OperationResponseMixin.class);
 
         return mapper;
     }
diff --git a/modules/swagger-models/src/main/java/io/swagger/models/Operation.java b/modules/swagger-models/src/main/java/io/swagger/models/Operation.java
index 614219975d..596218ba9a 100755
--- a/modules/swagger-models/src/main/java/io/swagger/models/Operation.java
+++ b/modules/swagger-models/src/main/java/io/swagger/models/Operation.java
@@ -81,12 +81,14 @@ public Operation parameter(Parameter parameter) {
         return this;
     }
     public Operation response(int key, Response response) {
+        this.addResponse(String.valueOf(key),response);
         this.addResponseObject(String.valueOf(key),response);
         return this;
     }
 
 
     public Operation defaultResponse(Response response) {
+        this.addResponse("default",response);
         this.addResponseObject("default",response);
         return this;
     }
@@ -221,18 +223,36 @@ public void addParameter(Parameter parameter) {
     @Deprecated
     public void setResponses(Map<String, Response> responses) {
         this.responses = responses;
+        if (this.responsesObject == null && responses != null) {
+            this.responsesObject = new Responses();
+
+            for (String key : responses.keySet()) {
+                this.responsesObject.put(key, responses.get(key));
+            }
+        }
     }
 
     public void setResponsesObject(Responses responsesObject) {
         this.responsesObject = responsesObject;
+        if (responses == null && responsesObject != null) {
+            responses = new LinkedHashMap<String, Response>();
+
+            for (String key : this.responsesObject.keySet()) {
+                responses.put(key, responsesObject.get(key));
+            }
+        }
     }
 
     @Deprecated
     public void addResponse(String key, Response response) {
-        if (this.responses == null) {
-            this.responses = new LinkedHashMap<String, Response>();
+        if (responses == null) {
+            responses = new LinkedHashMap<String, Response>();
         }
-        this.responses.put(key, response);
+        responses.put(key, response);
+        if (responsesObject == null) {
+            responsesObject = new Responses();
+        }
+        responsesObject.put(key, response);
     }
 
     public void addResponseObject(String key, Response response) {
@@ -240,6 +260,10 @@ public void addResponseObject(String key, Response response) {
             this.responsesObject = new Responses();
         }
         this.responsesObject.put(key, response);
+        if (this.responses == null) {
+            this.responses = new LinkedHashMap<String, Response>();
+        }
+        this.responses.put(key, response);
     }
 
     public List<Map<String, List<String>>> getSecurity() {
diff --git a/modules/swagger-models/src/test/java/io/swagger/models/OperationTest.java b/modules/swagger-models/src/test/java/io/swagger/models/OperationTest.java
index efb27d1992..6d2383b599 100755
--- a/modules/swagger-models/src/test/java/io/swagger/models/OperationTest.java
+++ b/modules/swagger-models/src/test/java/io/swagger/models/OperationTest.java
@@ -118,6 +118,10 @@ public void testResponse() {
         // then
         assertEquals(operation.getResponsesObject().get("44"), response,
                 "The newly added response must be contained in the responses map");
+
+        // then
+        assertEquals(operation.getResponses().get("44"), response,
+                "The newly added response must be contained in the responses map");
     }
 
     @Test
