diff --git a/byte-buddy-dep/src/main/java/net/bytebuddy/TypeCache.java b/byte-buddy-dep/src/main/java/net/bytebuddy/TypeCache.java
index 613633b4ed..b03641adfc 100755
--- a/byte-buddy-dep/src/main/java/net/bytebuddy/TypeCache.java
+++ b/byte-buddy-dep/src/main/java/net/bytebuddy/TypeCache.java
@@ -71,6 +71,7 @@ public TypeCache(Sort sort) {
      * @param key         The key for the type in question.
      * @return The stored type or {@code null} if no type was stored.
      */
+    @SuppressFBWarnings(value = "GC_UNRELATED_TYPES", justification = "Cross-comparison is intended")
     public Class<?> find(ClassLoader classLoader, T key) {
         ConcurrentMap<T, Reference<Class<?>>> storage = cache.get(new LookupKey(classLoader));
         if (storage == null) {
@@ -93,6 +94,7 @@ public TypeCache(Sort sort) {
      * @param type        The type to insert of no previous type was stored in the cache.
      * @return The supplied type or a previously submitted type for the same class loader and key combination.
      */
+    @SuppressFBWarnings(value = "GC_UNRELATED_TYPES", justification = "Cross-comparison is intended")
     public Class<?> insert(ClassLoader classLoader, T key, Class<?> type) {
         ConcurrentMap<T, Reference<Class<?>>> storage = cache.get(new LookupKey(classLoader));
         if (storage == null) {
diff --git a/byte-buddy-dep/src/main/java/net/bytebuddy/agent/builder/AgentBuilder.java b/byte-buddy-dep/src/main/java/net/bytebuddy/agent/builder/AgentBuilder.java
index 47620390a3..a2049847a6 100755
--- a/byte-buddy-dep/src/main/java/net/bytebuddy/agent/builder/AgentBuilder.java
+++ b/byte-buddy-dep/src/main/java/net/bytebuddy/agent/builder/AgentBuilder.java
@@ -1447,6 +1447,7 @@ protected Resubmitting(Instrumentation instrumentation,
             }
 
             @Override
+            @SuppressFBWarnings(value = "GC_UNRELATED_TYPES", justification = "Cross-comparison is intended")
             public void onError(String typeName, ClassLoader classLoader, JavaModule module, boolean loaded, Throwable throwable) {
                 if (!loaded) {
                     Set<String> types = this.types.get(new LookupKey(classLoader));
@@ -1524,6 +1525,7 @@ protected LookupKey(ClassLoader classLoader) {
                 }
 
                 @Override
+                @SuppressFBWarnings(value = "EQ_CHECK_FOR_OPERAND_NOT_COMPATIBLE_WITH_THIS", justification = "Cross-comparison is intended")
                 public boolean equals(Object object) {
                     if (this == object) {
                         return true;
@@ -1573,6 +1575,7 @@ protected boolean isBootstrapLoader() {
                 }
 
                 @Override
+                @SuppressFBWarnings(value = "EQ_CHECK_FOR_OPERAND_NOT_COMPATIBLE_WITH_THIS", justification = "Cross-comparison is intended")
                 public boolean equals(Object object) {
                     if (this == object) {
                         return true;
