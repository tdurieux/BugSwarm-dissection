diff --git a/bundle/src/main/java/com/adobe/acs/commons/mcp/impl/processes/asset/AssetIngestor.java b/bundle/src/main/java/com/adobe/acs/commons/mcp/impl/processes/asset/AssetIngestor.java
index 54c45cb1ff..816e43d231 100755
--- a/bundle/src/main/java/com/adobe/acs/commons/mcp/impl/processes/asset/AssetIngestor.java
+++ b/bundle/src/main/java/com/adobe/acs/commons/mcp/impl/processes/asset/AssetIngestor.java
@@ -177,12 +177,21 @@ public AssetIngestor(MimeTypeService mimeTypeService) {
         }
     }    
 
-    protected void incrementCount(EnumMap<ReportColumns, Object> row, long amt) {
+    private void increment(EnumMap<ReportColumns, Object> row, ReportColumns col, long amt) {
         synchronized (row) {
-            row.put(ReportColumns.count, (Long) row.getOrDefault(ReportColumns.count, 0) + amt);
+            row.put(col, (Long) row.getOrDefault(col, 0) + amt);
         }
     }
     
+    protected void incrementCount(EnumMap<ReportColumns, Object> row, long amt) {
+        increment(row, ReportColumns.count, amt);
+    }
+    
+    protected void incrementBytes(EnumMap<ReportColumns, Object> row, long amt) {
+        increment(row, ReportColumns.bytes, amt);
+    }    
+    
+    
     protected long getCount(EnumMap<ReportColumns, Object> row) {
         return (long) row.getOrDefault(ReportColumns.count, 0);
     }
@@ -229,7 +238,7 @@ private void createAsset(Source source, String assetPath, ResourceResolver r, bo
         } else {
             trackDetailedActivity(assetPath, "Create", "Imported asset", source.getLength());
         }
-        incrementCount(importedData, source.getLength());
+        incrementBytes(importedData, source.getLength());
         incrementCount(importedAssets, 1L);
     }
 
diff --git a/bundle/src/test/java/com/adobe/acs/commons/mcp/impl/processes/asset/FileAssetIngestorTest.java b/bundle/src/test/java/com/adobe/acs/commons/mcp/impl/processes/asset/FileAssetIngestorTest.java
index e14eadafa3..ddd3701e5b 100755
--- a/bundle/src/test/java/com/adobe/acs/commons/mcp/impl/processes/asset/FileAssetIngestorTest.java
+++ b/bundle/src/test/java/com/adobe/acs/commons/mcp/impl/processes/asset/FileAssetIngestorTest.java
@@ -205,7 +205,7 @@ public void testImportAssets() throws Exception {
         assertFalse(context.resourceResolver().hasChanges());
         assertEquals(3, ingestor.getCount(ingestor.importedAssets));
         assertEquals(3, ingestor.getCount(ingestor.createdFolders));
-        assertEquals(FILE_SIZE * 3, ingestor.importedData.get(AssetIngestor.ReportColumns.bytes));
+        assertEquals(FILE_SIZE * 3, (long) ingestor.importedData.get(AssetIngestor.ReportColumns.bytes));
         verify(assetManager, times(3)).createAsset(assetPathCaptor.capture(), any(), any(), eq(false));
         assertThat(assetPathCaptor.getAllValues(),
                 containsInAnyOrder("/content/dam/folder1/image.png", "/content/dam/folder2/folder3/image.png", "/content/dam/image.png"));
@@ -229,7 +229,7 @@ public void testImportAssetsToNewRootFolder() throws Exception {
         assertNull(context.resourceResolver().getResource("/content/dam/test").getValueMap().get("jcr:title"));
         assertEquals(1, ingestor.getCount(ingestor.importedAssets));
         assertEquals(0, ingestor.getCount(ingestor.createdFolders));
-        assertEquals(FILE_SIZE, ingestor.importedData.get(AssetIngestor.ReportColumns.bytes));
+        assertEquals(FILE_SIZE, (long) ingestor.importedData.get(AssetIngestor.ReportColumns.bytes));
         verify(assetManager, times(1)).createAsset(assetPathCaptor.capture(), any(), any(), eq(false));
         assertEquals("/content/dam/test/image.png", assetPathCaptor.getValue());
 
@@ -253,7 +253,7 @@ public void testImportAssetsToExistingRootFolder() throws Exception {
         assertEquals("testTitle", context.resourceResolver().getResource("/content/dam/test").getValueMap().get("jcr:title"));
         assertEquals(1, ingestor.getCount(ingestor.importedAssets));
         assertEquals(0, ingestor.getCount(ingestor.createdFolders));
-        assertEquals(FILE_SIZE, ingestor.importedData.get(AssetIngestor.ReportColumns.bytes));
+        assertEquals(FILE_SIZE, (long) ingestor.importedData.get(AssetIngestor.ReportColumns.bytes));
         verify(assetManager, times(1)).createAsset(assetPathCaptor.capture(), any(), any(), eq(false));
         assertEquals("/content/dam/test/image.png", assetPathCaptor.getValue());
 
diff --git a/bundle/src/test/java/com/adobe/acs/commons/mcp/impl/processes/asset/S3AssetIngestorTest.java b/bundle/src/test/java/com/adobe/acs/commons/mcp/impl/processes/asset/S3AssetIngestorTest.java
index 622f62a6ed..8184d1058b 100755
--- a/bundle/src/test/java/com/adobe/acs/commons/mcp/impl/processes/asset/S3AssetIngestorTest.java
+++ b/bundle/src/test/java/com/adobe/acs/commons/mcp/impl/processes/asset/S3AssetIngestorTest.java
@@ -194,7 +194,7 @@ public void testImportAssets() throws Exception {
         assertFalse(context.resourceResolver().hasChanges());
         assertEquals(3, ingestor.getCount(ingestor.importedAssets));
         assertEquals(3, ingestor.getCount(ingestor.createdFolders));
-        assertEquals(FILE_SIZE * 3, ingestor.importedData.get(ReportColumns.bytes));
+        assertEquals(FILE_SIZE * 3, (long) ingestor.importedData.get(ReportColumns.bytes));
         verify(assetManager, times(3)).createAsset(assetPathCaptor.capture(), any(), any(), eq(false));
         assertEquals(Arrays.asList("/content/dam/folder1/image.png", "/content/dam/folder2/folder3/image.png", "/content/dam/image.png"), assetPathCaptor.getAllValues());
 
@@ -215,7 +215,7 @@ public void testImportAssetsToNewRootFolder() throws Exception {
         assertNull(context.resourceResolver().getResource("/content/dam/test").getValueMap().get("jcr:title"));
         assertEquals(1, ingestor.getCount(ingestor.importedAssets));
         assertEquals(0, ingestor.getCount(ingestor.createdFolders));
-        assertEquals(FILE_SIZE, ingestor.importedData.get(ReportColumns.bytes));
+        assertEquals(FILE_SIZE, (long)  ingestor.importedData.get(ReportColumns.bytes));
         verify(assetManager, times(1)).createAsset(assetPathCaptor.capture(), any(), any(), eq(false));
         assertEquals("/content/dam/test/image.png", assetPathCaptor.getValue());
 
@@ -238,7 +238,7 @@ public void testImportAssetsToExistingRootFolder() throws Exception {
         assertEquals("testTitle", context.resourceResolver().getResource("/content/dam/test").getValueMap().get("jcr:title"));
         assertEquals(1, ingestor.getCount(ingestor.importedAssets));
         assertEquals(0, ingestor.getCount(ingestor.createdFolders));
-        assertEquals(FILE_SIZE, ingestor.importedData.get(ReportColumns.bytes));
+        assertEquals(FILE_SIZE, (long) ingestor.importedData.get(ReportColumns.bytes));
         verify(assetManager, times(1)).createAsset(assetPathCaptor.capture(), any(), any(), eq(false));
         assertEquals("/content/dam/test/image.png", assetPathCaptor.getValue());
 
@@ -263,7 +263,7 @@ public void testImportAssetsWithBasePath() throws Exception {
         assertFalse(context.resourceResolver().hasChanges());
         assertEquals(1, ingestor.getCount(ingestor.importedAssets));
         assertEquals(1, ingestor.getCount(ingestor.createdFolders));
-        assertEquals(FILE_SIZE, ingestor.importedData.get(ReportColumns.bytes));
+        assertEquals(FILE_SIZE, (long) ingestor.importedData.get(ReportColumns.bytes));
         verify(assetManager, times(1)).createAsset(assetPathCaptor.capture(), any(), any(), eq(false));
         assertEquals("/content/dam/folder3/image.png", assetPathCaptor.getValue());
 
