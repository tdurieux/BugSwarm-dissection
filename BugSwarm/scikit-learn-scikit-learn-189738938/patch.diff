diff --git a/sklearn/linear_model/ridge.py b/sklearn/linear_model/ridge.py
index d570d56ecc..84ec97056a 100755
--- a/sklearn/linear_model/ridge.py
+++ b/sklearn/linear_model/ridge.py
@@ -885,7 +885,7 @@ def _errors_and_values_helper(self, alpha, y, v, Q, QT_y):
         constant_column = np.var(Q, 0) < 1.e-12
         # detect constant columns
         w[constant_column] = 0  # cancel the regularization for the intercept
-        w[v == 0] = 0
+
         c = np.dot(Q, self._diag_dot(w, QT_y))
         G_diag = self._decomp_diag(w, Q)
         # handle case where y is 2-d
diff --git a/sklearn/neighbors/classification.py b/sklearn/neighbors/classification.py
index d9ea8275ea..5573c96d0c 100755
--- a/sklearn/neighbors/classification.py
+++ b/sklearn/neighbors/classification.py
@@ -143,7 +143,6 @@ def predict(self, X):
         X = check_array(X, accept_sparse='csr')
 
         neigh_dist, neigh_ind = self.kneighbors(X)
-        print(neigh_ind.dtype)
         classes_ = self.classes_
         _y = self._y
         if not self.outputs_2d_:
diff --git a/sklearn/neighbors/tests/test_neighbors.py b/sklearn/neighbors/tests/test_neighbors.py
index 0e827d9bb8..a53b2760fc 100755
--- a/sklearn/neighbors/tests/test_neighbors.py
+++ b/sklearn/neighbors/tests/test_neighbors.py
@@ -149,7 +149,6 @@ def test_precomputed(random_state=42):
                 neighbors.RadiusNeighborsClassifier,
                 neighbors.KNeighborsRegressor,
                 neighbors.RadiusNeighborsRegressor):
-        print(Est)
         est = Est(metric='euclidean')
         est.radius = est.n_neighbors = 1
         pred_X = est.fit(X, target).predict(Y)
