diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ArrayTrailingCommaCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ArrayTrailingCommaCheck.java
index 226f65955c..e4033a26ad 100755
--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ArrayTrailingCommaCheck.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ArrayTrailingCommaCheck.java
@@ -27,11 +27,12 @@
  * <p>
  * Checks if array initialization contains optional trailing comma.
  * </p>
+ *
  * <p>
  * Rationale: Putting this comma in make is easier to change the
  * order of the elements or add new elements on the end.
  * </p>
- * <p>
+ *
  * <pre>
  * Properties:
  * </pre>
@@ -43,8 +44,7 @@
  * </td><td>Boolean</td><td>true</td>
  * </tr>
  * </table>
- * <p>
- * <p>
+ *
  * <p>
  * An example of how to configure the check is:
  * </p>
@@ -92,9 +92,9 @@ public void visitToken(DetailAST arrayInit) {
 
         // if curlies are on the same line
         // or array is empty then check nothing
-        if ((!ignoreInlineArrays ||
-            arrayInit.getLineNo() != rcurly.getLineNo()) &&
-            arrayInit.getChildCount() != 1) {
+        if ((!ignoreInlineArrays
+            || arrayInit.getLineNo() != rcurly.getLineNo())
+            && arrayInit.getChildCount() != 1) {
             final DetailAST prev = rcurly.getPreviousSibling();
             if (prev.getType() != TokenTypes.COMMA) {
                 log(rcurly.getLineNo(), MSG_KEY);
@@ -108,7 +108,7 @@ public void visitToken(DetailAST arrayInit) {
      * @param ignoreInlineArraysStringValue string to decode ignoreInlineArrays from
      * @throws IllegalArgumentException if unable to decode
      */
-    public void setIgnoreInlineArrays(Boolean ignoreInlineArraysStringValue) {
+    public void setIgnoreInlineArrays(boolean ignoreInlineArraysStringValue) {
         ignoreInlineArrays = ignoreInlineArraysStringValue;
     }
 }
diff --git a/src/xdocs/config_coding.xml b/src/xdocs/config_coding.xml
index 80fde48074..5e7f14d0a3 100755
--- a/src/xdocs/config_coding.xml
+++ b/src/xdocs/config_coding.xml
@@ -27,12 +27,12 @@
           Checks that array initialization contains a trailing comma.
         </p>
         <source>
-          int[] a = new int[]
-          {
-            1,
-            2,
-            3,
-          };
+int[] a = new int[]
+{
+    1,
+    2,
+    3,
+};
         </source>
 
         <p>
@@ -63,8 +63,8 @@ return new int[] { 0 };
                 If set to true, then you can ignore the lack of a trailing comma,
                 otherwise an error should be raised.
             </td>
-            <td>Boolean</td>
-            <td>true</td>
+              <td><a href="property_types.html#boolean">Boolean</a></td>
+              <td><code>true</code></td>
           </tr>
         </table>
       </subsection>
@@ -97,7 +97,7 @@ return new int[] { 0 };
           </source>
 
           <p>
-              With <b>ignoreInlineArrays</b> property set to <b>false</b>
+              With <code>ignoreInlineArrays</code> property set to <code>false</code>
           </p>
           <p>
               Which results in the following violations:
