diff --git a/src/edu/washington/escience/myria/coordinator/catalog/MasterCatalog.java b/src/edu/washington/escience/myria/coordinator/catalog/MasterCatalog.java
index a3830f6c02..13062851d0 100755
--- a/src/edu/washington/escience/myria/coordinator/catalog/MasterCatalog.java
+++ b/src/edu/washington/escience/myria/coordinator/catalog/MasterCatalog.java
@@ -1790,6 +1790,9 @@ protected Long job(final SQLiteConnection sqliteConnection) throws CatalogExcept
         }
       }).get();
     } catch (InterruptedException | ExecutionException e) {
+      if (e instanceof InterruptedException) {
+        Thread.currentThread().interrupt();
+      }
       throw new CatalogException(e);
     }
   }
@@ -1848,9 +1851,6 @@ protected Void job(final SQLiteConnection sqliteConnection) throws CatalogExcept
         }
       }).get();
     } catch (InterruptedException | ExecutionException e) {
-      if (e instanceof InterruptedException) {
-        Thread.currentThread().interrupt();
-      }
       throw new CatalogException(e);
     }
   }
diff --git a/systemtest/edu/washington/escience/myria/systemtest/DbDeleteTest.java b/systemtest/edu/washington/escience/myria/systemtest/DbDeleteTest.java
index 64bde9c6aa..00c83a6ef8 100755
--- a/systemtest/edu/washington/escience/myria/systemtest/DbDeleteTest.java
+++ b/systemtest/edu/washington/escience/myria/systemtest/DbDeleteTest.java
@@ -19,6 +19,7 @@
 import edu.washington.escience.myria.io.DataSource;
 import edu.washington.escience.myria.io.FileSource;
 import edu.washington.escience.myria.operator.TupleSource;
+import edu.washington.escience.myria.operator.network.partition.RoundRobinPartitionFunction;
 import edu.washington.escience.myria.util.JsonAPIUtils;
 
 /**
@@ -98,6 +99,7 @@ public void ingestTestDataset() throws Exception {
     DataSource relationSource = new FileSource(Paths.get("testdata", "filescan", "simple_two_col_int.txt").toString());
     relationKey = RelationKey.of("public", "adhoc", "testIngest");
     relationSchema = Schema.of(ImmutableList.of(Type.INT_TYPE, Type.INT_TYPE), ImmutableList.of("x", "y"));
-    JsonAPIUtils.ingestData("localhost", masterDaemonPort, ingest(relationKey, relationSchema, relationSource, ' '));
+    JsonAPIUtils.ingestData("localhost", masterDaemonPort, ingest(relationKey, relationSchema, relationSource, ' ',
+        new RoundRobinPartitionFunction(workerIDs.length)));
   }
 }
