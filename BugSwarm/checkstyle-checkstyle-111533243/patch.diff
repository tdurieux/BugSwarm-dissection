diff --git a/src/main/resources/com/puppycrawl/tools/checkstyle/grammars/java.g b/src/main/resources/com/puppycrawl/tools/checkstyle/grammars/java.g
index a1fff888c5..f44972caef 100755
--- a/src/main/resources/com/puppycrawl/tools/checkstyle/grammars/java.g
+++ b/src/main/resources/com/puppycrawl/tools/checkstyle/grammars/java.g
@@ -100,7 +100,7 @@ tokens {
     // we need to put it to the end to maintain binary compatibility
     // with previous versions
     DO_WHILE;
-    
+
     //Tokens for Java 1.7 language enhancements
     RESOURCE_SPECIFICATION; RESOURCES; RESOURCE;
 
@@ -440,8 +440,7 @@ modifiers
             //Semantic check that we aren't matching @interface as this is not an annotation
             //A nicer way to do this would be, um, nice
             {LA(1)==AT && !LT(2).getText().equals("interface")}? annotation
-            
-            
+
         )*
 
         {#modifiers = #([MODIFIERS, "MODIFIERS"], #modifiers);}
@@ -1212,7 +1211,7 @@ resource
     : modifiers typeSpec[true] IDENT resource_assign
       {#resource = #([RESOURCE, "RESOURCE"], #resource);}
 ;
- 
+
 resource_assign
     : ASSIGN^ expression
     ;
@@ -1882,11 +1881,11 @@ VOCAB
     ;
 
 protected ID_START:
-        '_' | '$' | 
-        (            
+        '_' | '$' |
+        (
             {Character.isJavaIdentifierStart(LA(1))}?
             ~(
-                '_' | '$' | '/' | '*' | '0'..'9' | 
+                '_' | '$' | '/' | '*' | '0'..'9' |
                 '.' | '\'' | '\\' | '"' | '\t' | '\n' |
                 '\r' | ' ' | '\f' | '(' | ')' |
                 '{' | '}' | '[' | ']'| ';' | ',' | '=' |
@@ -1906,7 +1905,7 @@ protected ID_START:
     }
 
 protected ID_PART :
-        '_' | '$' | 
+        '_' | '$' |
         (
             {Character.isJavaIdentifierPart(LA(1))}?
             ~(
diff --git a/src/main/resources/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocLexer.g4 b/src/main/resources/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocLexer.g4
index 763394e230..303b9d3fe0 100755
--- a/src/main/resources/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocLexer.g4
+++ b/src/main/resources/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocLexer.g4
@@ -65,7 +65,7 @@ AUTHOR_LITERAL : '@author' {isJavadocTagAvailable}?;
 DEPRECATED_LITERAL : '@deprecated' {isJavadocTagAvailable}?;
 EXCEPTION_LITERAL : '@exception' {isJavadocTagAvailable}? -> pushMode(exception);
 PARAM_LITERAL : '@param' {isJavadocTagAvailable}? -> pushMode(param);
-RETURN_LITERAL : '@return' {isJavadocTagAvailable}?; 
+RETURN_LITERAL : '@return' {isJavadocTagAvailable}?;
 SEE_LITERAL : '@see' {isJavadocTagAvailable}? -> pushMode(seeLink);
 SERIAL_LITERAL : '@serial' {isJavadocTagAvailable}?;
 SERIAL_FIELD_LITERAL : '@serialField' {isJavadocTagAvailable}? -> pushMode(serialField);
@@ -93,7 +93,7 @@ CHAR        :   . ;
 mode param;
 Space0: WS -> type(WS);
 PARAMETER_NAME: [a-zA-Z0-9<>_$]+ -> mode(DEFAULT_MODE);
-Char1: . 
+Char1: .
       {
             skipCurrentTokenConsuming();
       } -> skip, mode(DEFAULT_MODE);
@@ -131,7 +131,7 @@ End20: JAVADOC_INLINE_TAG_END
       -> type(JAVADOC_INLINE_TAG_END), mode(DEFAULT_MODE)
       ;
 // exit from 'seeLink' mode without consuming current character
-Char2: . 
+Char2: .
       {
             skipCurrentTokenConsuming();
             referenceCatched = false;
@@ -177,7 +177,7 @@ End2: JAVADOC_INLINE_TAG_END
       }
       -> type(JAVADOC_INLINE_TAG_END), mode(DEFAULT_MODE)
       ;
-Char20: . 
+Char20: .
       {
             skipCurrentTokenConsuming();
             referenceCatched = false;
@@ -187,7 +187,7 @@ Char20: .
 mode serialField;
 Space2: WS -> type(WS);
 FIELD_NAME: [a-zA-Z0-9_$]+ -> mode(serialFieldFieldType);
-Char3: . 
+Char3: .
       {
             skipCurrentTokenConsuming();
             referenceCatched = false;
@@ -328,7 +328,7 @@ DIGIT       :   [0-9] ;
 
 fragment
 NAME_CHAR    :   NAME_START_CHAR
-            |   '-' | '_' | '.' | DIGIT 
+            |   '-' | '_' | '.' | DIGIT
             |   '\u00B7'
             |   '\u0300'..'\u036F'
             |   '\u203F'..'\u2040'
@@ -337,10 +337,10 @@ NAME_CHAR    :   NAME_START_CHAR
 fragment
 NAME_START_CHAR
             :   [:a-zA-Z]
-            |   '\u2070'..'\u218F' 
-            |   '\u2C00'..'\u2FEF' 
-            |   '\u3001'..'\uD7FF' 
-            |   '\uF900'..'\uFDCF' 
+            |   '\u2070'..'\u218F'
+            |   '\u2C00'..'\u2FEF'
+            |   '\u3001'..'\uD7FF'
+            |   '\uF900'..'\uFDCF'
             |   '\uFDF0'..'\uFFFD'
             ;
 
diff --git a/src/main/resources/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocParser.g4 b/src/main/resources/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocParser.g4
index dacf17dde4..1f024f1495 100755
--- a/src/main/resources/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocParser.g4
+++ b/src/main/resources/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocParser.g4
@@ -784,12 +784,12 @@ singletonTag: OPEN
                   | P_HTML_TAG_NAME
                   | LI_HTML_TAG_NAME
                   | TR_HTML_TAG_NAME
-                  | TD_HTML_TAG_NAME 
-                  | TH_HTML_TAG_NAME 
+                  | TD_HTML_TAG_NAME
+                  | TH_HTML_TAG_NAME
                   | BODY_HTML_TAG_NAME
                   | COLGROUP_HTML_TAG_NAME
                   | DD_HTML_TAG_NAME
-                  | DT_HTML_TAG_NAME 
+                  | DT_HTML_TAG_NAME
                   | HEAD_HTML_TAG_NAME
                   | HTML_HTML_TAG_NAME
                   | OPTION_HTML_TAG_NAME
