diff --git a/.travis.yml b/.travis.yml
index 11e51ac108..51c7d058ae 100755
--- a/.travis.yml
+++ b/.travis.yml
@@ -75,10 +75,10 @@ matrix:
     - jdk: oraclejdk8
       env:
         - DESC="NoErrorTest - Orekit"
-        - CMD1="git clone https://github.com/CS-SI/Orekit.git && cd Orekit && git checkout bc527a1 "
+        - CMD1="git clone https://github.com/checkstyle/Orekit.git && cd Orekit "
         - CMD2=" && sed -i 's/<orekit\.checkstyle\.version>6\.6</<orekit.checkstyle.version>6.9-SNAPSHOT</' pom.xml "
         - CMD3=" && cd .. && mvn clean install -Passembly -DskipTests -DskipITs -Dcobertura.skip=true "
-        - CMD4="    -Dpmd.skip=true -Dfindbugs.skip=true -Dcheckstyle.ant.skip=true "
+        - CMD4="              -Dpmd.skip=true -Dfindbugs.skip=true -Dcheckstyle.ant.skip=true "
         - CMD5=" && cd Orekit && mvn compile checkstyle:check"
         - CMD=$CMD1$CMD2$CMD3$CMD4$CMD5
         - COVERAGE_CMD=""
@@ -93,7 +93,7 @@ matrix:
         - CMD4=" && sed -i 's/#sevntu-checkstyle/sevntu-checkstyle/' projects-for-travis.properties "
         - CMD5=" && sed -i 's/projects-to-test-on.properties/projects-for-travis.properties/' launch.sh "
         - CMD6=" && cd ../../ && mvn clean install -DskipTests -DskipITs -Dcobertura.skip=true "
-        - CMD7="    -Dpmd.skip=true -Dfindbugs.skip=true -Dcheckstyle.ant.skip=true "
+        - CMD7="                  -Dpmd.skip=true -Dfindbugs.skip=true -Dcheckstyle.ant.skip=true "
         - CMD8=" && cd contribution/checkstyle-tester "
         - CMD9=" && ./launch.sh -Dcheckstyle.config.location=checks-nonjavadoc-error.xml"
         - CMD=$CMD1$CMD2$CMD3$CMD4$CMD5$CMD6$CMD7$CMD8$CMD9
@@ -107,7 +107,7 @@ matrix:
         - CMD3=" && sed -i 's/#guava/guava/' projects-for-travis.properties"
         - CMD4=" && sed -i 's/projects-to-test-on.properties/projects-for-travis.properties/' launch.sh"
         - CMD5=" && cd ../../ && mvn clean install -DskipTests -DskipITs -Dcobertura.skip=true"
-        - CMD6="    -Dpmd.skip=true -Dfindbugs.skip=true -Dcheckstyle.ant.skip=true "
+        - CMD6="                   -Dpmd.skip=true -Dfindbugs.skip=true -Dcheckstyle.ant.skip=true "
         - CMD7=" && cd contribution/checkstyle-tester "
         - CMD8=" && ./launch.sh -Dcheckstyle.config.location=checks-nonjavadoc-error.xml"
         - CMD=$CMD1$CMD2$CMD3$CMD4$CMD5$CMD6$CMD7$CMD8
@@ -116,25 +116,64 @@ matrix:
     - jdk: oraclejdk8
       env:
         - DESC="NoExceptionTest - Hibernate ORM"
-        - CMD="git clone https://github.com/checkstyle/contribution && cd contribution/checkstyle-tester && sed -i 's/^guava/#guava/' projects-for-travis.properties && sed -i 's/#hibernate-orm/hibernate-orm/' projects-for-travis.properties && sed -i 's/projects-to-test-on.properties/projects-for-travis.properties/' launch.sh && cd ../../ && mvn clean install -DskipTests -DskipITs -Dpmd.skip=true -Dfindbugs.skip=true -Dcobertura.skip=true -Dcheckstyle.ant.skip=true && cd contribution/checkstyle-tester && ./launch.sh -Dcheckstyle.config.location=checks-nonjavadoc-error.xml"
+        - CMD1="git clone https://github.com/checkstyle/contribution && cd contribution/checkstyle-tester "
+        - CMD2="&& sed -i 's/^guava/#guava/' projects-for-travis.properties "
+        - CMD3="&& sed -i 's/#hibernate-orm/hibernate-orm/' projects-for-travis.properties "
+        - CMD4="&& sed -i 's/projects-to-test-on.properties/projects-for-travis.properties/' launch.sh "
+        - CMD5="&& cd ../../ && mvn clean install -DskipTests -DskipITs -Dcobertura.skip=true "
+        - CMD6="                  -Dpmd.skip=true -Dfindbugs.skip=true -Dcheckstyle.ant.skip=true "
+        - CMD7="&& cd contribution/checkstyle-tester "
+        - CMD8="&& ./launch.sh -Dcheckstyle.config.location=checks-nonjavadoc-error.xml"
+        - CMD=$CMD1$CMD2$CMD3$CMD4$CMD5$CMD6$CMD7$CMD8
         - COVERAGE_CMD=""
     # NoExceptionTest - FindBugs (oraclejdk8)
     - jdk: oraclejdk8
       env:
         - DESC="NoExceptionTest - FindBugs"
-        - CMD="git clone https://github.com/checkstyle/contribution && cd contribution/checkstyle-tester && sed -i 's/^guava/#guava/' projects-for-travis.properties && sed -i 's/#findbugs/findbugs/' projects-for-travis.properties && sed -i 's/projects-to-test-on.properties/projects-for-travis.properties/' launch.sh && cd ../../ && mvn clean install -DskipTests -DskipITs -Dpmd.skip=true -Dfindbugs.skip=true -Dcobertura.skip=true -Dcheckstyle.ant.skip=true && cd contribution/checkstyle-tester && ./launch.sh -Dcheckstyle.config.location=checks-nonjavadoc-error.xml"
+        - CMD1="git clone https://github.com/checkstyle/contribution && cd contribution/checkstyle-tester "
+        - CMD2="&& sed -i 's/^guava/#guava/' projects-for-travis.properties "
+        - CMD3="&& sed -i 's/#findbugs/findbugs/' projects-for-travis.properties "
+        - CMD4="&& sed -i 's/projects-to-test-on.properties/projects-for-travis.properties/' launch.sh "
+        - CMD5="&& cd ../../ && mvn clean install -DskipTests -DskipITs -Dcobertura.skip=true "
+        - CMD6="                  -Dpmd.skip=true -Dfindbugs.skip=true -Dcheckstyle.ant.skip=true "
+        - CMD7="&& cd contribution/checkstyle-tester "
+        - CMD8="&& ./launch.sh -Dcheckstyle.config.location=checks-nonjavadoc-error.xml"
+        - CMD=$CMD1$CMD2$CMD3$CMD4$CMD5$CMD6$CMD7$CMD8
         - COVERAGE_CMD=""
     # NoExceptionTest - Pmd,elasticsearch,lombok-ast (oraclejdk8)
     - jdk: oraclejdk8
       env:
         - DESC="NoExceptionTest - Pmd,elasticsearch,lombok-ast"
-        - CMD="git clone https://github.com/checkstyle/contribution && cd contribution/checkstyle-tester && sed -i 's/^guava/#guava/' projects-for-travis.properties && sed -i 's/#pmd/pmd/' projects-for-travis.properties && sed -i 's/#elasticsearch/elasticsearch/' projects-for-travis.properties && sed -i 's/#lombok-ast/lombok-ast/' projects-for-travis.properties && sed -i 's/projects-to-test-on.properties/projects-for-travis.properties/' launch.sh && cd ../../ && mvn clean install -DskipTests -DskipITs -Dpmd.skip=true -Dfindbugs.skip=true -Dcobertura.skip=true -Dcheckstyle.ant.skip=true && cd contribution/checkstyle-tester && ./launch.sh -Dcheckstyle.config.location=checks-nonjavadoc-error.xml"
+        - CMD1="git clone https://github.com/checkstyle/contribution && cd contribution/checkstyle-tester "
+        - CMD2="&& sed -i 's/^guava/#guava/' projects-for-travis.properties "
+        - CMD3="&& sed -i 's/#pmd/pmd/' projects-for-travis.properties "
+        - CMD4="&& sed -i 's/#elasticsearch/elasticsearch/' projects-for-travis.properties "
+        - CMD5="&& sed -i 's/#lombok-ast/lombok-ast/' projects-for-travis.properties "
+        - CMD6="&& sed -i 's/projects-to-test-on.properties/projects-for-travis.properties/' launch.sh "
+        - CMD7="&& cd ../../ && mvn clean install -DskipTests -DskipITs -Dcobertura.skip=true "
+        - CMD8="                  -Dpmd.skip=true -Dfindbugs.skip=true -Dcheckstyle.ant.skip=true "
+        - CMD9="&& cd contribution/checkstyle-tester "
+        - CMD10="&& ./launch.sh -Dcheckstyle.config.location=checks-nonjavadoc-error.xml"
+        - CMD=$CMD1$CMD2$CMD3$CMD4$CMD5$CMD6$CMD7$CMD8$CMD9$CMD10
         - COVERAGE_CMD=""
     # NoExceptionTest - RxJava,java-design-patterns,MaterialDesignLibrary,apache-ant,apache-jsecurity,android-launcher (oraclejdk8)
     - jdk: oraclejdk8
       env:
         - DESC="NoExceptionTest - RxJava,java-design-patterns,MaterialDesignLibrary,apache-ant,apache-jsecurity,android-launcher"
-        - CMD="git clone https://github.com/checkstyle/contribution && cd contribution/checkstyle-tester && sed -i 's/^guava/#guava/' projects-for-travis.properties && sed -i 's/#RxJava/RxJava/' projects-for-travis.properties && sed -i 's/#java-design-patterns/java-design-patterns/' projects-for-travis.properties && sed -i 's/#MaterialDesignLibrary/MaterialDesignLibrary/' projects-for-travis.properties && sed -i 's/#apache-ant/apache-ant/' projects-for-travis.properties && sed -i 's/#apache-jsecurity/apache-jsecurity/' projects-for-travis.properties && sed -i 's/#android-launcher/android-launcher/' projects-for-travis.properties && sed -i 's/projects-to-test-on.properties/projects-for-travis.properties/' launch.sh && cd ../../ && mvn clean install -DskipTests -DskipITs -Dpmd.skip=true -Dfindbugs.skip=true -Dcobertura.skip=true -Dcheckstyle.ant.skip=true && cd contribution/checkstyle-tester && ./launch.sh -Dcheckstyle.config.location=checks-nonjavadoc-error.xml"
+        - CMD01="git clone https://github.com/checkstyle/contribution && cd contribution/checkstyle-tester "
+        - CMD02="&& sed -i 's/^guava/#guava/' projects-for-travis.properties "
+        - CMD03="&& sed -i 's/#RxJava/RxJava/' projects-for-travis.properties "
+        - CMD04="&& sed -i 's/#java-design-patterns/java-design-patterns/' projects-for-travis.properties "
+        - CMD05="&& sed -i 's/#MaterialDesignLibrary/MaterialDesignLibrary/' projects-for-travis.properties "
+        - CMD06="&& sed -i 's/#apache-ant/apache-ant/' projects-for-travis.properties "
+        - CMD07="&& sed -i 's/#apache-jsecurity/apache-jsecurity/' projects-for-travis.properties "
+        - CMD08="&& sed -i 's/#android-launcher/android-launcher/' projects-for-travis.properties "
+        - CMD09="&& sed -i 's/projects-to-test-on.properties/projects-for-travis.properties/' launch.sh "
+        - CMD10="&& cd ../../ && mvn clean install -DskipTests -DskipITs -Dcobertura.skip=true "
+        - CMD11="                  -Dpmd.skip=true -Dfindbugs.skip=true -Dcheckstyle.ant.skip=true "
+        - CMD12="&& cd contribution/checkstyle-tester "
+        - CMD13="&& ./launch.sh -Dcheckstyle.config.location=checks-nonjavadoc-error.xml"
+        - CMD=$CMD01$CMD02$CMD03$CMD04$CMD05$CMD06$CMD07$CMD08$CMD09$CMD10$CMD11$CMD12$CMD13
         - COVERAGE_CMD=""
     # NoExceptionTest - Spring (oraclejdk8)
     - jdk: oraclejdk8
@@ -145,7 +184,7 @@ matrix:
         - CMD3=" && sed -i 's/#spring-framework/spring-framework/' projects-for-travis.properties "
         - CMD4=" && sed -i 's/projects-to-test-on.properties/projects-for-travis.properties/' launch.sh "
         - CMD5=" && cd ../../ && mvn clean install -DskipTests -DskipITs -Dcobertura.skip=true "
-        - CMD6=" -Dpmd.skip=true -Dfindbugs.skip=true -Dcheckstyle.ant.skip=true "
+        - CMD6="                   -Dpmd.skip=true -Dfindbugs.skip=true -Dcheckstyle.ant.skip=true "
         - CMD7=" && cd contribution/checkstyle-tester "
         - CMD8=" && travis_wait ./launch.sh -Dcheckstyle.config.location=checks-nonjavadoc-error.xml"
         - CMD=$CMD1$CMD2$CMD3$CMD4$CMD5$CMD6$CMD7$CMD8
@@ -154,7 +193,15 @@ matrix:
     - jdk: oraclejdk8
       env:
         - DESC="NoExceptionTest - Hbase"
-        - CMD="git clone https://github.com/checkstyle/contribution && cd contribution/checkstyle-tester && sed -i 's/^guava/#guava/' projects-for-travis.properties && sed -i 's/#Hbase/Hbase/' projects-for-travis.properties && sed -i 's/projects-to-test-on.properties/projects-for-travis.properties/' launch.sh && cd ../../ && mvn clean install -DskipTests -DskipITs -Dpmd.skip=true -Dfindbugs.skip=true -Dcobertura.skip=true -Dcheckstyle.ant.skip=true && cd contribution/checkstyle-tester && travis_wait ./launch.sh -Dcheckstyle.config.location=checks-nonjavadoc-error.xml"
+        - CMD1="git clone https://github.com/checkstyle/contribution && cd contribution/checkstyle-tester "
+        - CMD2="&& sed -i 's/^guava/#guava/' projects-for-travis.properties "
+        - CMD3="&& sed -i 's/#Hbase/Hbase/' projects-for-travis.properties "
+        - CMD4="&& sed -i 's/projects-to-test-on.properties/projects-for-travis.properties/' launch.sh "
+        - CMD5="&& cd ../../ && mvn clean install -DskipTests -DskipITs -Dcobertura.skip=true "
+        - CMD6="                 -Dpmd.skip=true -Dfindbugs.skip=true -Dcheckstyle.ant.skip=true "
+        - CMD7="&& cd contribution/checkstyle-tester "
+        - CMD8="&& travis_wait ./launch.sh -Dcheckstyle.config.location=checks-nonjavadoc-error.xml"
+        - CMD=$CMD1$CMD2$CMD3$CMD4$CMD5$CMD6$CMD7$CMD8
         - COVERAGE_CMD=""
 
 
diff --git a/appveyor.yml b/appveyor.yml
index c24af6e4dd..7b23942dbc 100755
--- a/appveyor.yml
+++ b/appveyor.yml
@@ -27,14 +27,16 @@ cache:
   - C:\maven\
   - C:\Users\appveyor\.m2
 
+matrix:
+  fast_finish: false
+
 environment:
   matrix:
     #- JAVA_HOME: C:\Program Files\Java\jdk1.7.0
     - JAVA_HOME: C:\Program Files\Java\jdk1.8.0
-build_script: >
-  rem mvn clean site 
-  -Dlinkcheck.skip=true -Dmaven.javadoc.skip=true 
-  -DskipTests -DskipITs -Dcobertura.skip=true 
-  -Dpmd.skip=true -Dfindbugs.skip=true -Dcheckstyle.ant.skip=true
-test_script:
-  - mvn clean verify
+      CMD_ARGS: verify
+    - JAVA_HOME: C:\Program Files\Java\jdk1.8.0
+      CMD_ARGS: site -Dlinkcheck.skip=true -Dmaven.javadoc.skip=true -DskipTests -DskipITs -Dcobertura.skip=true -Dpmd.skip=true -Dfindbugs.skip=true -Dcheckstyle.ant.skip=true
+
+build_script:
+  - mvn clean %CMD_ARGS%
diff --git a/config/checkstyle_checks.xml b/config/checkstyle_checks.xml
index 275da3063f..10ae193e2b 100755
--- a/config/checkstyle_checks.xml
+++ b/config/checkstyle_checks.xml
@@ -83,6 +83,12 @@
       <property name="option" value="top"/>
       <property name="sortStaticImportsAlphabetically" value="true"/>
     </module>
+    <module name="CustomImportOrder">
+      <property name="customImportOrderRules" value="STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS"/>
+      <property name="specialImportsRegExp" value="org"/>
+      <property name="sortImportsInGroupAlphabetically" value="true"/>
+      <property name="separateLineBetweenGroups" value="true"/>
+    </module>
 
     <module name="IllegalImport"/>
     <module name="IllegalInstantiation"/>
@@ -282,7 +288,6 @@
     <module name="BooleanExpressionComplexity"/>
     <module name="ClassDataAbstractionCoupling"/>
     <module name="ClassFanOutComplexity"/>
-    <module name="CustomImportOrder"/>
     <module name="DesignForExtension"/>
     <module name="ExecutableStatementCount"/>
     <module name="FinalParameters"/>
diff --git a/pom.xml b/pom.xml
index fb6ede9d4c..0cda048100 100755
--- a/pom.xml
+++ b/pom.xml
@@ -1085,11 +1085,8 @@
             <regex><pattern>.*.PropertyCacheFile</pattern><branchRate>22</branchRate><lineRate>19</lineRate></regex>
             <regex><pattern>.*.TreeWalker</pattern><branchRate>94</branchRate><lineRate>92</lineRate></regex>
 
-            <regex><pattern>.*.api.AuditEvent</pattern><branchRate>100</branchRate><lineRate>93</lineRate></regex>
-            <regex><pattern>.*.api.AutomaticBean</pattern><branchRate>90</branchRate><lineRate>82</lineRate></regex>
-            <regex><pattern>.*.api.AutomaticBean\$.*</pattern><branchRate>75</branchRate><lineRate>90</lineRate></regex>
-            <regex><pattern>.*.api.FileText</pattern><branchRate>50</branchRate><lineRate>59</lineRate></regex>
-            <regex><pattern>.*.api.LocalizedMessage\$.*</pattern><branchRate>41</branchRate><lineRate>66</lineRate></regex>
+            <regex><pattern>.*.api.AutomaticBean</pattern><branchRate>100</branchRate><lineRate>82</lineRate></regex>
+            <regex><pattern>.*.api.LocalizedMessage\$UTF8Control</pattern><branchRate>41</branchRate><lineRate>66</lineRate></regex>
 
             <regex><pattern>.*.checks.AbstractOptionCheck</pattern><branchRate>100</branchRate><lineRate>80</lineRate></regex>
             <regex><pattern>.*.checks.AbstractTypeAwareCheck</pattern><branchRate>87</branchRate><lineRate>84</lineRate></regex>
@@ -1143,7 +1140,6 @@
             <regex><pattern>.*.checks.javadoc.JavadocMethodCheck</pattern><branchRate>91</branchRate><lineRate>98</lineRate></regex>
             <regex><pattern>.*.checks.javadoc.JavadocParagraphCheck</pattern><branchRate>92</branchRate><lineRate>100</lineRate></regex>
             <regex><pattern>.*.checks.javadoc.JavadocStyleCheck</pattern><branchRate>89</branchRate><lineRate>98</lineRate></regex>
-            <regex><pattern>.*.checks.javadoc.JavadocTypeCheck</pattern><branchRate>95</branchRate><lineRate>93</lineRate></regex>
             <regex><pattern>.*.checks.javadoc.JavadocUtils</pattern><branchRate>94</branchRate><lineRate>100</lineRate></regex>
             <regex><pattern>.*.checks.javadoc.TagParser</pattern><branchRate>92</branchRate><lineRate>98</lineRate></regex>
             <regex><pattern>.*.checks.javadoc.WriteTagCheck</pattern><branchRate>100</branchRate><lineRate>91</lineRate></regex>
diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java b/src/main/java/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java
index 92260dd734..2d13e8c78a 100755
--- a/src/main/java/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java
@@ -138,7 +138,7 @@ public final void configure(Configuration configuration)
                 // figure out if the bean property really exists.
                 final PropertyDescriptor pd =
                     PropertyUtils.getPropertyDescriptor(this, key);
-                if (pd == null || pd.getWriteMethod() == null) {
+                if (pd == null) {
                     throw new CheckstyleException(
                         "Property '" + key + "' in module "
                         + configuration.getName()
@@ -253,12 +253,7 @@ protected void setupChild(Configuration childConf)
     private static class RelaxedStringArrayConverter implements Converter {
         /** {@inheritDoc} */
         @Override
-        public Object convert(@SuppressWarnings("rawtypes") Class type,
-            Object value) {
-            if (null == type) {
-                throw new ConversionException("Cannot convert from null.");
-            }
-
+        public Object convert(@SuppressWarnings("rawtypes") Class type, Object value) {
             // Convert to a String and trim it for the tokenizer.
             final StringTokenizer st = new StringTokenizer(
                 value.toString().trim(), ",");
diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/api/Configurable.java b/src/main/java/com/puppycrawl/tools/checkstyle/api/Configurable.java
index 239bdb7599..63cfc3dfb2 100755
--- a/src/main/java/com/puppycrawl/tools/checkstyle/api/Configurable.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/api/Configurable.java
@@ -20,7 +20,11 @@
 package com.puppycrawl.tools.checkstyle.api;
 
 /**
- * A component that can be configured.  The general idea of
+ * A component that can be configured.
+ * Note: Configuring of object mean copy user defined properties to object.
+ * Contextualizing is inheriting some properties from parent that are provided by user
+ * to parent object or created by parent object.
+ * The general idea of
  * Configuration/Configurable was taken from <a target="_top"
  * href="http://jakarta.apache.org/avalon/">Jakarta's Avalon framework</a>.
  * @author lkuehne
diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/api/Contextualizable.java b/src/main/java/com/puppycrawl/tools/checkstyle/api/Contextualizable.java
index 587814760c..d53a26efd6 100755
--- a/src/main/java/com/puppycrawl/tools/checkstyle/api/Contextualizable.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/api/Contextualizable.java
@@ -21,10 +21,13 @@
 
 
 /**
- * A Component that needs context information from it's container to work.
+ * A Component that needs context information from it's container(parent object) to work.
  * The container will create a Context object and pass it to this
- * Contextualizable. Contextualization will occur before configuration. The
- * general idea of Context/Contextualizable was taken from <a target="_top"
+ * Contextualizable. Contextualization will occur before configuration.
+ * Note: Configuring of object mean copy user defined properties to object.
+ * Contextualizing is inheriting some properties from parent that are provided by user
+ * to parent object or created by parent object.
+ * The general idea of Context/Contextualizable was taken from <a target="_top"
  * href="http://jakarta.apache.org/avalon/">Jakarta's Avalon framework</a>.
  * @author lkuehne
  */
diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/api/FileText.java b/src/main/java/com/puppycrawl/tools/checkstyle/api/FileText.java
index 92c0d7d931..2d4b2c92d4 100755
--- a/src/main/java/com/puppycrawl/tools/checkstyle/api/FileText.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/api/FileText.java
@@ -27,7 +27,6 @@
 import java.io.Reader;
 import java.io.StringReader;
 import java.io.UnsupportedEncodingException;
-import java.nio.ByteBuffer;
 import java.nio.charset.Charset;
 import java.nio.charset.CharsetDecoder;
 import java.nio.charset.CodingErrorAction;
@@ -35,7 +34,6 @@
 import java.util.AbstractList;
 import java.util.ArrayList;
 import java.util.Arrays;
-import java.util.ConcurrentModificationException;
 import java.util.List;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
@@ -225,45 +223,6 @@ public Charset getCharset() {
         return charset;
     }
 
-    /**
-     * Get the binary contents of the file.
-     * The returned object must not be modified.
-     * @return a buffer containing the bytes making up the file
-     * @throws IOException if the bytes could not be read from the file
-     */
-    public ByteBuffer getBytes() throws IOException {
-        // We might decide to cache file bytes in the future.
-        if (file == null) {
-            return null;
-        }
-        if (file.length() > Integer.MAX_VALUE) {
-            throw new IOException("File too large.");
-        }
-        byte[] bytes = new byte[(int) file.length() + 1];
-        final FileInputStream stream = new FileInputStream(file);
-        try {
-            int fill = 0;
-            while (true) {
-                if (fill >= bytes.length) {
-                    // shouldn't happen, but it might nevertheless
-                    final byte[] newBytes = new byte[bytes.length * 2 + 1];
-                    System.arraycopy(bytes, 0, newBytes, 0, fill);
-                    bytes = newBytes;
-                }
-                final int len = stream.read(bytes, fill,
-                                            bytes.length - fill);
-                if (len == -1) {
-                    break;
-                }
-                fill += len;
-            }
-            return ByteBuffer.wrap(bytes, 0, fill).asReadOnlyBuffer();
-        }
-        finally {
-            Closeables.closeQuietly(stream);
-        }
-    }
-
     /**
      * Retrieve the full text of the file.
      * @return the full text of the file
@@ -296,10 +255,7 @@ public CharSequence getFullText() {
                 lineBreaks[lineNo++] = matcher.end();
             }
             if (lineNo < lineBreaks.length) {
-                lineBreaks[lineNo++] = fullText.length();
-            }
-            if (lineNo != lineBreaks.length) {
-                throw new ConcurrentModificationException("Text changed.");
+                lineBreaks[lineNo] = fullText.length();
             }
             this.lineBreaks = lineBreaks;
         }
diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java
index f69f0ed181..5df77a00dd 100755
--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java
@@ -295,7 +295,6 @@ private void checkTypeParamTag(final int lineNo,
         for (int i = tags.size() - 1; i >= 0; i--) {
             final JavadocTag tag = tags.get(i);
             if (tag.isParamTag()
-                && tag.getArg1() != null
                 && tag.getArg1().indexOf("<" + typeParamName + ">") == 0) {
                 found = true;
             }
@@ -319,28 +318,14 @@ private void checkUnusedTypeParamTags(
             final JavadocTag tag = tags.get(i);
             if (tag.isParamTag()) {
 
-                if (tag.getArg1() != null) {
-
-                    final Matcher matcher = pattern.matcher(tag.getArg1());
-                    String typeParamName = null;
-
-                    if (matcher.matches()) {
-                        typeParamName = matcher.group(1).trim();
-                        if (!typeParamNames.contains(typeParamName)) {
-                            log(tag.getLineNo(), tag.getColumnNo(),
-                                UNUSED_TAG,
-                                JavadocTagInfo.PARAM.getText(),
-                                "<" + typeParamName + ">");
-                        }
-                    }
-                    else {
-                        log(tag.getLineNo(), tag.getColumnNo(),
-                            UNUSED_TAG_GENERAL);
-                    }
-                }
-                else {
+                final Matcher matcher = pattern.matcher(tag.getArg1());
+                matcher.find();
+                final String typeParamName = matcher.group(1).trim();
+                if (!typeParamNames.contains(typeParamName)) {
                     log(tag.getLineNo(), tag.getColumnNo(),
-                        UNUSED_TAG_GENERAL);
+                        UNUSED_TAG,
+                        JavadocTagInfo.PARAM.getText(),
+                        "<" + typeParamName + ">");
                 }
             }
         }
diff --git a/src/site/resources/images/gui_screenshot_organize_imports_eclipse.jpg b/src/site/resources/images/gui_screenshot_organize_imports_eclipse.jpg
new file mode 100755
index 0000000000..7586fc106b
Binary files /dev/null and b/src/site/resources/images/gui_screenshot_organize_imports_eclipse.jpg differ
diff --git a/src/site/resources/images/gui_screenshot_organize_imports_idea.jpg b/src/site/resources/images/gui_screenshot_organize_imports_idea.jpg
new file mode 100755
index 0000000000..a191a857f1
Binary files /dev/null and b/src/site/resources/images/gui_screenshot_organize_imports_idea.jpg differ
diff --git a/src/site/resources/images/gui_screenshot_organize_imports_netbeans.jpg b/src/site/resources/images/gui_screenshot_organize_imports_netbeans.jpg
new file mode 100755
index 0000000000..20a5af8835
Binary files /dev/null and b/src/site/resources/images/gui_screenshot_organize_imports_netbeans.jpg differ
diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/api/AutomaticBeanTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/api/AutomaticBeanTest.java
index bd98c2f958..62b3939ca5 100755
--- a/src/test/java/com/puppycrawl/tools/checkstyle/api/AutomaticBeanTest.java
+++ b/src/test/java/com/puppycrawl/tools/checkstyle/api/AutomaticBeanTest.java
@@ -22,21 +22,66 @@
 import org.junit.Test;
 
 import com.puppycrawl.tools.checkstyle.DefaultConfiguration;
+import com.puppycrawl.tools.checkstyle.DefaultContext;
 
 public class AutomaticBeanTest {
-    private static class TestBean extends AutomaticBean {
+
+    public class TestBean extends AutomaticBean {
+
+        private String wrong;
+
+        private int val;
+
+        public void setWrong(String wrong) {
+            this.wrong = wrong;
+        }
+
+        public void setIntVal(int val) {
+            this.val = val;
+        }
+
         public void setName(String name) {
         }
+
+        /**
+         * just fore code coverage
+         * @param childConf a child of this component's Configuration
+         * @throws CheckstyleException
+         */
+        @Override
+        protected void setupChild(Configuration childConf) throws CheckstyleException {
+            super.setupChild(childConf);
+        }
     }
 
     private final DefaultConfiguration conf = new DefaultConfiguration(
             "testConf");
 
-    private final TestBean testBean = new TestBean();
-
     @Test(expected = CheckstyleException.class)
     public void testNoSuchAttribute() throws CheckstyleException {
+        final TestBean testBean = new TestBean();
         conf.addAttribute("NonExisting", "doesn't matter");
         testBean.configure(conf);
     }
+
+    @Test
+    public void testNoWrongSetterImplementation() throws CheckstyleException {
+        final TestBean testBean = new TestBean();
+        conf.addAttribute("wrong", "123");
+        testBean.configure(conf);
+    }
+
+    @Test
+    public void testSetupChild() throws CheckstyleException {
+        final TestBean testBean = new TestBean();
+        testBean.setupChild(null);
+    }
+
+    @Test
+    public void testContextualize1() throws CheckstyleException {
+        final TestBean testBean = new TestBean();
+        DefaultContext context = new DefaultContext();
+        context.add("val", 123f);
+        testBean.contextualize(context);
+    }
 }
diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/api/FileTextTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/api/FileTextTest.java
new file mode 100755
index 0000000000..a7e7072750
--- /dev/null
+++ b/src/test/java/com/puppycrawl/tools/checkstyle/api/FileTextTest.java
@@ -0,0 +1,61 @@
+////////////////////////////////////////////////////////////////////////////////
+// checkstyle: Checks Java source code for adherence to a set of rules.
+// Copyright (C) 2001-2015 the original author or authors.
+//
+// This library is free software; you can redistribute it and/or
+// modify it under the terms of the GNU Lesser General Public
+// License as published by the Free Software Foundation; either
+// version 2.1 of the License, or (at your option) any later version.
+//
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+// Lesser General Public License for more details.
+//
+// You should have received a copy of the GNU Lesser General Public
+// License along with this library; if not, write to the Free Software
+// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+////////////////////////////////////////////////////////////////////////////////
+
+package com.puppycrawl.tools.checkstyle.api;
+
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.fail;
+
+import java.io.File;
+import java.io.IOException;
+import java.io.UnsupportedEncodingException;
+
+import org.junit.Test;
+
+public class FileTextTest {
+
+    @Test
+    public void testUnsupportedCharset() throws IOException {
+        // just to make UT coverage 100%
+        String charsetName = "STRANGE_CHARSET";
+        try {
+            FileText o = new FileText(new File("any name"), charsetName);
+            fail();
+        }
+        catch (UnsupportedEncodingException e) {
+            assertEquals(e.getMessage(), "Unsupported charset: " + charsetName);
+        }
+
+    }
+
+    @Test
+    public void testSupportedCharset() throws IOException {
+        // just to make UT coverage 100%
+        String charsetName = "ISO-8859-1";
+        try {
+            FileText o = new FileText(new File("src/test/resources/com/puppycrawl/tools/"
+                     + "checkstyle/imports/import-control_complete.xml"), charsetName);
+            assertEquals(o.getCharset().name(), charsetName);
+        }
+        catch (UnsupportedEncodingException e) {
+            fail();
+        }
+
+    }
+}
diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleTest.java
index 5b311809ec..9f790fba53 100755
--- a/src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleTest.java
+++ b/src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleTest.java
@@ -19,12 +19,6 @@
 
 package com.puppycrawl.tools.checkstyle.checks.annotation;
 
-
-import org.apache.commons.beanutils.ConversionException;
-import org.junit.Assert;
-
-import com.puppycrawl.tools.checkstyle.api.TokenTypes;
-
 import static com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck.MSG_KEY_ANNOTATION_INCORRECT_STYLE;
 import static com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck.MSG_KEY_ANNOTATION_PARENS_MISSING;
 import static com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck.MSG_KEY_ANNOTATION_PARENS_PRESENT;
@@ -33,10 +27,14 @@
 
 import java.io.File;
 
+import org.apache.commons.beanutils.ConversionException;
+import org.junit.Assert;
 import org.junit.Test;
 
 import com.puppycrawl.tools.checkstyle.BaseCheckTestSupport;
 import com.puppycrawl.tools.checkstyle.DefaultConfiguration;
+import com.puppycrawl.tools.checkstyle.api.TokenTypes;
+
 
 public class AnnotationUseStyleTest extends BaseCheckTestSupport {
     /**
diff --git a/src/test/resources/com/puppycrawl/tools/checkstyle/imports/InputCustomImportOrderThirdPartyPackage.java b/src/test/resources/com/puppycrawl/tools/checkstyle/imports/InputCustomImportOrderThirdPartyPackage.java
index 78276506e1..3ac9b2f173 100755
--- a/src/test/resources/com/puppycrawl/tools/checkstyle/imports/InputCustomImportOrderThirdPartyPackage.java
+++ b/src/test/resources/com/puppycrawl/tools/checkstyle/imports/InputCustomImportOrderThirdPartyPackage.java
@@ -1,6 +1,5 @@
 package com.puppycrawl.tools.checkstyle.imports;
 
-import org.antlr.v4.*;
 
 import org.junit.*;
 
diff --git a/src/xdocs/eclipse.xml b/src/xdocs/eclipse.xml
index 417846b664..bebab3eb3b 100755
--- a/src/xdocs/eclipse.xml
+++ b/src/xdocs/eclipse.xml
@@ -19,6 +19,13 @@
   </head>
 
   <body>
+    <section name="Content">
+      <macro name="toc">
+        <param name="fromDepth" value="1"/>
+        <param name="toDepth" value="1"/>
+      </macro>
+    </section>
+
     <section name="Import Checkstyle Project">
       <p>
         Select File > Import > Maven > Existing Maven Projects<br/><br/>
@@ -43,5 +50,19 @@
         and F8 (Resume)
       </p>
     </section>
+
+    <section name="Organize Imports">
+      <p>
+        One of the Checkstyle checks we run on our own code require sertain order of import
+        statements. Few changes in IDE settings are required to help your IDE do it automatically.<br/>
+        To change settings of "Organize Imports" feature (Kepler, Luna &amp; Mars, other versions
+        are likely to work the same way), please go to Window -> Preferences in menu.<br/>
+        In Preferences window select Java->Code Style->Organize Imports (follow numbers on a picture).<br/>
+        Default configuration should look as following (you can also try Restore Defaults button):<br/><br/>
+        <img alt="Organize Imports settings in Eclipse" src="images/gui_screenshot_organize_imports_eclipse.jpg"/>
+        <br/>
+      </p>
+    </section>
+
   </body>
 </document>
diff --git a/src/xdocs/idea.xml b/src/xdocs/idea.xml
index a1854cfbd4..22b04b4364 100755
--- a/src/xdocs/idea.xml
+++ b/src/xdocs/idea.xml
@@ -19,6 +19,13 @@
   </head>
 
   <body>
+    <section name="Content">
+      <macro name="toc">
+        <param name="fromDepth" value="1"/>
+        <param name="toDepth" value="1"/>
+      </macro>
+    </section>
+
     <section name="Import Checkstyle Project">
       <p>
         If no project is currently open in IntelliJ IDEA, click Import Project on the
@@ -48,5 +55,18 @@
         F7 (Step Into), Alt+F9 (Run to Cursor)
       </p>
     </section>
+
+    <section name="Organize Imports">
+      <p>
+        One of the Checkstyle checks we run on our own code require sertain order of import
+        statements. Few changes in IDE settings are required to help your IDE do it automatically.<br/>
+        To change formatter settings please go to File->Settings in menu.<br/>
+        Then in the tree go to: Editor->Code Style->Java, open Import tab (follow numbers on a
+        picture) and apply settings highlighted:<br/><br/>
+        <img alt="Organize Imports settings in IDEA" src="images/gui_screenshot_organize_imports_idea.jpg"/>
+        <br/>
+      </p>
+    </section>
+
   </body>
 </document>
diff --git a/src/xdocs/netbeans.xml b/src/xdocs/netbeans.xml
index 2cb7b688ea..96e6fb10eb 100755
--- a/src/xdocs/netbeans.xml
+++ b/src/xdocs/netbeans.xml
@@ -19,6 +19,13 @@
   </head>
 
   <body>
+    <section name="Content">
+      <macro name="toc">
+        <param name="fromDepth" value="1"/>
+        <param name="toDepth" value="1"/>
+      </macro>
+    </section>
+
     <section name="Import Checkstyle Project">
       <p>
         Select File > New Project > Maven > Project with existing POM<br/><br/>
@@ -45,5 +52,18 @@
         Shift+F8 (Step Over Expression), Step Over (F8)
       </p>
     </section>
+
+    <section name="Organize Imports">
+      <p>
+        One of the Checkstyle checks we run on our own code require sertain order of import
+        statements. Few changes in IDE settings are required to help your IDE do it automatically.<br/>
+        To change formatter settings please go to Tools->Options in menu.<br/>
+        On Options page go to Editor->Formatting->Java->Imports (follow numbers on a
+        picture) and apply settings highlighted:<br/><br/>
+        <img alt="Organize Imports settings in NetBeans" src="images/gui_screenshot_organize_imports_netbeans.jpg"/>
+        <br/>
+      </p>
+    </section>
+
   </body>
 </document>
