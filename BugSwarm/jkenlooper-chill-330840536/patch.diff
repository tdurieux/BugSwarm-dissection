diff --git a/src/chill/api.py b/src/chill/api.py
index 90b62311b3..479b102356 100755
--- a/src/chill/api.py
+++ b/src/chill/api.py
@@ -66,33 +66,28 @@ def _query(_node_id, value=None, **kw):
             if query_name:
                 result = []
                 try:
-                    result = db.query(fetch_query_string(query_name), **kw)
-                    if len(result) == 0:
+                    #current_app.logger.debug("query_name: %s", query_name)
+                    #current_app.logger.debug("kw: %s", kw)
+                    # Query string can be insert or select here
+                    result = db.db.execute(fetch_query_string(query_name), kw)
+                    if not result.returns_rows:
                         values.append(([], []))
                     else:
-                        # There may be more results, but only interested in the
-                        # first one
-                        values.append((result.as_dict(), result[0].keys()))
+                        result = result.fetchall()
+                        if len(result) == 0:
+                            values.append(([], []))
+                        else:
+                            current_app.logger.debug("result: %s", result)
+                            # There may be more results, but only interested in the
+                            # first one. Use the older rowify method for now.
+                            values.append(rowify(result, [(x, None) for x in result[0].keys()]))
+                            #current_app.logger.debug("fetchone: %s", values)
                 except (DatabaseError, StatementError) as err:
                     current_app.logger.error("DatabaseError (%s) %s: %s", query_name, kw, err)
         value = values
     #current_app.logger.debug("value: %s", value)
     return value
 
-def _link(node_id):
-    "Add the value for a linked node"
-    c = db.cursor()
-    linked_value = c.execute(fetch_query_string('select_link_node_from_node.sql'), {'node_id': node_id}).fetchall()
-    if linked_value:
-        if len(linked_value) > 1:
-            list = []
-            for v in linked_value:
-                list.append({v[1]: render_node(v[2], None, v[1])})
-            linked_value = list
-        else:
-            linked_value = render_node(linked_value[0][0]) #TODO
-    return linked_value
-
 def _template(node_id, value=None):
     "Check if a template is assigned to it and render that with the value"
     result = []
@@ -118,6 +113,7 @@ def render_node(_node_id, value=None, noderequest={}, **kw):
     if value == None:
         kw.update( noderequest )
         results = _query(_node_id, **kw)
+        current_app.logger.debug("results: %s", results)
         if results and results[0]:
             values = []
             for (result, cols) in results:
@@ -125,7 +121,7 @@ def render_node(_node_id, value=None, noderequest={}, **kw):
                     for subresult in result:
                         #if subresult.get('name') == kw.get('name'):
                             # This is a link node
-                        #current_app.logger.debug("sub: %s", subresult)
+                        current_app.logger.debug("sub: %s", subresult)
                         name = subresult.get('name')
                         if noderequest.get('_no_template'):
                             # For debugging or just simply viewing with the
diff --git a/src/chill/database.py b/src/chill/database.py
index fa2c7e2a19..bf394a32a2 100755
--- a/src/chill/database.py
+++ b/src/chill/database.py
@@ -29,6 +29,7 @@ def init_db():
         trans.commit()
 
 def rowify(l, description):
+    # TODO: this is still needed in api _query
     # replace with
     # if len(result) == 0:
     #     values.append(([], []))
diff --git a/src/chill/public.py b/src/chill/public.py
index f6e6dac1ec..99a85d32bd 100755
--- a/src/chill/public.py
+++ b/src/chill/public.py
@@ -75,7 +75,7 @@ def node_from_uri(uri, method="GET"):
     except DatabaseError as err:
         current_app.logger.error("DatabaseError: %s", err)
 
-    #current_app.logger.debug('result: "%s"' % result)
+    #current_app.logger.debug('result: "{}", {}'.format(result, len(result)))
     if not result or len(result) == 0:
         # See if the uri matches any dynamic rules
         (rule, rule_kw) = check_map(uri, request.url_root)
@@ -169,7 +169,6 @@ def post(self, uri=''):
 
         # Execute the sql query with the data
         _query(node.get('id'), **values)
-        db.commit()
 
         response = make_response('ok', 201)
         return response
@@ -191,7 +190,6 @@ def put(self, uri=''):
 
         # Execute the sql query with the data
         _query(node.get('id'), **values)
-        db.commit()
 
         response = make_response('ok', 201)
         return response
@@ -213,7 +211,6 @@ def patch(self, uri=''):
 
         # Execute the sql query with the data
         _query(node.get('id'), **values)
-        db.commit()
 
         response = make_response('ok', 201)
         return response
@@ -235,7 +232,6 @@ def delete(self, uri=''):
 
         # Execute the sql query with the data
         _query(node.get('id'), **values)
-        db.commit()
 
         response = make_response('ok', 204)
         return response
diff --git a/src/chill/tests.py b/src/chill/tests.py
index 4da981b77e..1c06e2c76e 100755
--- a/src/chill/tests.py
+++ b/src/chill/tests.py
@@ -30,6 +30,7 @@ def setUp(self):
                 CACHE_NO_NULL_WARNING=True,
                 DEBUG=True)
         self.app.logger.setLevel(logging.CRITICAL)
+        #self.app.logger.setLevel(logging.DEBUG)
 
     def tearDown(self):
         """Get rid of the database and templates after each test."""
@@ -596,11 +597,9 @@ def test_rules(self):
 
 
                 page_id = insert_node(name='page1', value=None)
-                print page_id
                 insert_route(path='/page1/', node_id=page_id)
 
                 pageattr_id = insert_node(name='pageattr', value=None)
-                print pageattr_id
                 insert_node_node(node_id=page_id, target_node_id=pageattr_id)
                 insert_query(name='select_pageattr.sql', node_id=pageattr_id)
 
@@ -625,7 +624,6 @@ def test_rules(self):
                     insert_query(name='select_promoattr.sql', node_id=a_id)
 
                 rv = c.get('/page1', follow_redirects=True)
-                print rv
                 assert 200 == rv.status_code
                 rv_json = json.loads(rv.data)
                 assert set(expected.keys()) == set(rv_json.keys())
@@ -1026,15 +1024,13 @@ def test_a(self):
         with self.app.app_context():
             with self.app.test_client() as c:
                 init_db()
-                cursor = db.cursor()
-                cursor.execute("""
+                db.db.execute("""
                 create table Llama (
                   llama_name varchar(255),
                   location varchar(255),
                   description text
                   );
                 """)
-                db.commit()
 
                 llamas_id = insert_node(name='llamas', value=None)
                 insert_route(path='/api/llamas/', node_id=llamas_id, weight=1, method="POST")
@@ -1089,15 +1085,13 @@ def test_a(self):
         with self.app.app_context():
             with self.app.test_client() as c:
                 init_db()
-                cursor = db.cursor()
-                cursor.execute("""
+                db.db.execute("""
                 create table Llama (
                   llama_name varchar(255),
                   location varchar(255),
                   description text
                   );
                 """)
-                db.commit()
 
                 llamas_id = insert_node(name='llamas', value=None)
                 insert_route(path='/api/llamas/name/<llama_name>/', node_id=llamas_id, weight=1, method="PUT")
@@ -1139,20 +1133,17 @@ def test_a(self):
         with self.app.app_context():
             with self.app.test_client() as c:
                 init_db()
-                cursor = db.cursor()
-                cursor.execute("""
+                db.db.execute("""
                 create table Llama (
                   llama_name varchar(255),
                   location varchar(255),
                   description text
                   );
                 """)
-                db.commit()
 
-                cursor.execute("""
+                db.db.execute("""
                   insert into Llama (llama_name) values ('Pocky');
                 """)
-                db.commit()
 
                 llamas_id = insert_node(name='llamas', value=None)
                 insert_route(path='/api/llamas/name/<llama_name>/', node_id=llamas_id, weight=1, method="PATCH")
@@ -1194,20 +1185,17 @@ def test_a(self):
         with self.app.app_context():
             with self.app.test_client() as c:
                 init_db()
-                cursor = db.cursor()
-                cursor.execute("""
+                db.db.execute("""
                 create table Llama (
                   llama_name varchar(255),
                   location varchar(255),
                   description text
                   );
                 """)
-                db.commit()
 
-                cursor.execute("""
+                db.db.execute("""
                   insert into Llama (llama_name, location, description) values ('Docky', 'somewhere', 'damaged');
                 """)
-                db.commit()
 
                 select_llama = insert_node(name='llamas', value=None)
                 insert_route(path='/api/llamas/name/<llama_name>/', node_id=select_llama, weight=1)
