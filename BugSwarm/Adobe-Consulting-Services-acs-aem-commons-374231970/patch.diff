diff --git a/bundle/src/main/java/com/adobe/acs/commons/mcp/impl/processes/asset/UrlAssetImport.java b/bundle/src/main/java/com/adobe/acs/commons/mcp/impl/processes/asset/UrlAssetImport.java
index 25e1b9f613..64be604c21 100755
--- a/bundle/src/main/java/com/adobe/acs/commons/mcp/impl/processes/asset/UrlAssetImport.java
+++ b/bundle/src/main/java/com/adobe/acs/commons/mcp/impl/processes/asset/UrlAssetImport.java
@@ -299,15 +299,15 @@ private FileOrRendition extractFile(Map<String, CompositeVariant> assetData) {
         FileOrRendition file = new FileOrRendition(this::getHttpClient, name, source, folder, assetData);
 
         file.setAsRenditionOfImage(
-                assetData.get(RENDITION_NAME).toString(),
-                assetData.get(ORIGINAL_FILE_NAME).toString()
+                assetData.get(RENDITION_NAME) == null ? null : assetData.get(RENDITION_NAME).toString(),
+                assetData.get(ORIGINAL_FILE_NAME) == null ? null : assetData.get(ORIGINAL_FILE_NAME).toString()
         );
 
         return file;
     }
 
     private String getTargetFolder(Map<String, CompositeVariant> assetData) {
-        String target = assetData.get(TARGET_FOLDER).toString();
+        String target = assetData.get(TARGET_FOLDER) == null ? null : assetData.get(TARGET_FOLDER).toString();
         if (target == null || target.isEmpty()) {
             return UNKNOWN_TARGET_FOLDER;
         } else if (!target.startsWith(CONTENT_BASE)) {
diff --git a/bundle/src/main/java/com/adobe/acs/commons/mcp/util/Spreadsheet.java b/bundle/src/main/java/com/adobe/acs/commons/mcp/util/Spreadsheet.java
index 0abe59fa0a..3d27a0ee44 100755
--- a/bundle/src/main/java/com/adobe/acs/commons/mcp/util/Spreadsheet.java
+++ b/bundle/src/main/java/com/adobe/acs/commons/mcp/util/Spreadsheet.java
@@ -68,7 +68,7 @@
     public Spreadsheet(boolean convertHeaderNames, String... headerArray) {
         this.enableHeaderNameConversion = convertHeaderNames;
         headerTypes = Arrays.stream(headerArray).collect(Collectors.toMap(this::convertHeaderName, this::detectTypeFromName));
-        headerRow = new ArrayList(headerTypes.keySet());
+        headerRow = Arrays.asList(headerArray);
         requiredColumns = Collections.EMPTY_LIST;
         dataRows = new ArrayList<>();
         delimiters = new HashMap<>();
