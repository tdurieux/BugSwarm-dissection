diff --git a/src/org/traccar/BasePipelineFactory.java b/src/org/traccar/BasePipelineFactory.java
index d949c9c9c9..a0b42feeb3 100755
--- a/src/org/traccar/BasePipelineFactory.java
+++ b/src/org/traccar/BasePipelineFactory.java
@@ -127,12 +127,14 @@ public BasePipelineFactory(TrackerServer server, String protocol) {
 
         if (Context.getGeocoder() != null) {
             geocoderHandler = new GeocoderHandler(
-                    Context.getGeocoder(), Context.getConfig().getBoolean("geocoder.processInvalidPositions"));
+                    Context.getGeocoder(),
+                    Context.getConfig().getBoolean("geocoder.processInvalidPositions"));
         }
 
         if (Context.getGeolocationProvider() != null) {
             geolocationHandler = new GeolocationHandler(
-                    Context.getGeolocationProvider(), Context.getConfig().getBoolean("location.processInvalidPositions"));
+                    Context.getGeolocationProvider(),
+                    Context.getConfig().getBoolean("location.processInvalidPositions"));
         }
 
         distanceHandler = new DistanceHandler();
diff --git a/src/org/traccar/GeolocationHandler.java b/src/org/traccar/GeolocationHandler.java
index 1e9bd67725..669c31654f 100755
--- a/src/org/traccar/GeolocationHandler.java
+++ b/src/org/traccar/GeolocationHandler.java
@@ -47,7 +47,8 @@ public void handleUpstream(final ChannelHandlerContext ctx, ChannelEvent evt) th
             final Position position = (Position) message;
             if ((position.getOutdated() || processInvalidPositions && !position.getValid())
                     && position.getNetwork() != null) {
-                geolocationProvider.getLocation(position.getNetwork(), new GeolocationProvider.LocationProviderCallback() {
+                geolocationProvider.getLocation(position.getNetwork(),
+                        new GeolocationProvider.LocationProviderCallback() {
                     @Override
                     public void onSuccess(double latitude, double longitude, double accuracy) {
                         position.set(Position.KEY_APPROXIMATE, true);
