diff --git a/api/src/main/java/org/semanticweb/owlapi/io/OWLOntologyDocumentTargetBase.java b/api/src/main/java/org/semanticweb/owlapi/io/OWLOntologyDocumentTargetBase.java
index aa1f23374f..f532400eb4 100755
--- a/api/src/main/java/org/semanticweb/owlapi/io/OWLOntologyDocumentTargetBase.java
+++ b/api/src/main/java/org/semanticweb/owlapi/io/OWLOntologyDocumentTargetBase.java
@@ -22,6 +22,7 @@
 import java.io.OutputStream;
 import java.io.OutputStreamWriter;
 import java.io.PrintWriter;
+import java.net.URLConnection;
 import java.nio.charset.Charset;
 import java.nio.charset.StandardCharsets;
 
@@ -105,7 +106,11 @@ public void store(OWLStorer storer, OWLOntology ontology, OWLDocumentFormat form
                 file.getParentFile().mkdirs();
                 baseStream = () -> new FileOutputStream(file);
             } else {
-                baseStream = () -> documentIRI.toURI().toURL().openConnection().getOutputStream();
+                baseStream = () -> {
+                    URLConnection openConnection = documentIRI.toURI().toURL().openConnection();
+                    openConnection.setDoOutput(true);
+                    return openConnection.getOutputStream();
+                };
             }
             stream = () -> stream(baseStream);
             writer = () -> writer(baseStream);
diff --git a/impl/src/test/java/uk/ac/manchester/cs/owl/owlapi/concurrent/OWLOntologyManager_Concurrent_TestCase.java b/impl/src/test/java/uk/ac/manchester/cs/owl/owlapi/concurrent/OWLOntologyManager_Concurrent_TestCase.java
index a48b73b97d..8461131075 100755
--- a/impl/src/test/java/uk/ac/manchester/cs/owl/owlapi/concurrent/OWLOntologyManager_Concurrent_TestCase.java
+++ b/impl/src/test/java/uk/ac/manchester/cs/owl/owlapi/concurrent/OWLOntologyManager_Concurrent_TestCase.java
@@ -377,11 +377,15 @@ public void shouldCall_saveOntology_with_readLock_4() throws OWLOntologyStorageE
     }
 
     @Test
-    public void shouldCall_saveOntology_with_readLock_5() throws OWLOntologyStorageException {
+    public void shouldCall_saveOntology_with_readLock_5() {
         manager.setOntologyFormat(ontology, new RDFXMLDocumentFormat());
         verify(writeLock, atLeastOnce()).lock();
         verify(writeLock, atLeastOnce()).unlock();
-        manager.saveOntology(ontology);
+        try {
+            manager.saveOntology(ontology);
+        } catch (@SuppressWarnings("unused") OWLOntologyStorageException e) {
+            // no need to worry
+        }
         InOrder inOrder = Mockito.inOrder(readLock, readLock);
         inOrder.verify(readLock, atLeastOnce()).lock();
         inOrder.verify(readLock, atLeastOnce()).unlock();
@@ -412,9 +416,13 @@ public void shouldCall_saveOntology_with_readLock_7() throws OWLOntologyStorageE
     }
 
     @Test
-    public void shouldCall_saveOntology_with_readLock_8() throws OWLOntologyStorageException {
+    public void shouldCall_saveOntology_with_readLock_8() {
         OWLDocumentFormat arg1 = mock(OWLDocumentFormat.class);
-        manager.saveOntology(ontology, arg1);
+        try {
+            manager.saveOntology(ontology, arg1);
+        } catch (@SuppressWarnings("unused") OWLOntologyStorageException e) {
+            // no need to worry
+        }
         verifyReadLock_LockUnlock();
     }
 
