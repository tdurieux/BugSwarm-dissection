diff --git a/doc/modules/preprocessing.rst b/doc/modules/preprocessing.rst
index 9e925b6a56..809179f3f9 100755
--- a/doc/modules/preprocessing.rst
+++ b/doc/modules/preprocessing.rst
@@ -569,9 +569,9 @@ Continuing the example above::
 
   >>> enc = preprocessing.UnaryEncoder()
   >>> enc.fit([[0, 0, 3], [1, 1, 0], [0, 2, 1], [1, 0, 2]]) # doctest: +ELLIPSIS
-  UnaryEncoder(dtype=<... 'numpy.float64'>, handle_unknown='error',
-         n_values='auto', ordinal_features='all', sparse=True)
-  >>> enc.transform([[0, 1, 1]]).toarray()
+  UnaryEncoder(dtype=<... 'numpy.float64'>, handle_greater='error',
+         n_values='auto', ordinal_features='all', sparse=False)
+  >>> enc.transform([[0, 1, 1]])
   array([[ 0.,  1.,  0.,  1.,  0.,  0.]])
 
 By default, how many values each feature can take is inferred automatically
@@ -590,9 +590,9 @@ categorical features, one has to explicitly set ``n_values``. For example,::
   >>> # Note that there are missing categorical values for the 2nd and 3rd
   >>> # features
   >>> enc.fit([[1, 2, 3], [0, 2, 0]])  # doctest: +ELLIPSIS
-  UnaryEncoder(dtype=<... 'numpy.float64'>, handle_unknown='error',
-         n_values=[2, 3, 4], ordinal_features='all', sparse=True)
-  >>> enc.transform([[1, 1, 2]]).toarray()
+  UnaryEncoder(dtype=<... 'numpy.float64'>, handle_greater='error',
+         n_values=[2, 3, 4], ordinal_features='all', sparse=False)
+  >>> enc.transform([[1, 1, 2]])
   array([[ 1.,  1.,  0.,  1.,  1.,  0.]])
 
 .. _imputation:
