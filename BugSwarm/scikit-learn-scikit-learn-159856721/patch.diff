diff --git a/doc/modules/model_persistence.rst b/doc/modules/model_persistence.rst
index 29080ed65fc6..b6b93886e98d 100644
--- a/doc/modules/model_persistence.rst
+++ b/doc/modules/model_persistence.rst
@@ -56,6 +56,7 @@ with::
    filesystem. All files are required in the same folder when reloading the
    model with joblib.load.
 
+.. _persistence_limitations:
 
 Security & maintainability limitations
 --------------------------------------
diff --git a/doc/whats_new.rst b/doc/whats_new.rst
index c3452e5c0866..7eaedfbdc6eb 100644
--- a/doc/whats_new.rst
+++ b/doc/whats_new.rst
@@ -323,6 +323,13 @@ Enhancements
      (`#5540 <https://github.com/scikit-learn/scikit-learn/pull/5540>_`)
      By `Andreas Müller`_.
 
+   - When unpickling a scikit-learn estimator in a different version than the one
+     the estimator was trained with, a ``UserWarning`` is raised, see :ref:`the documentation
+     on model persistence <persistence_limitations>`
+     for more details.
+     (`#7248 <https://github.com/scikit-learn/scikit-learn/pull/7248>_`)
+     By `Andreas Müller`_.
+
 Bug fixes
 .........
 
diff --git a/sklearn/__init__.py b/sklearn/__init__.py
index 8adf598c3ad5..3d1f4fc93ade 100644
--- a/sklearn/__init__.py
+++ b/sklearn/__init__.py
@@ -37,7 +37,7 @@
 # Dev branch marker is: 'X.Y.dev' or 'X.Y.devN' where N is an integer.
 # 'X.Y.dev0' is the canonical version of 'X.Y.dev'
 #
-__version__ = '0.18.dev0'
+__version__ = '0.19.dev0'
 
 
 try:
diff --git a/sklearn/model_selection/_validation.py b/sklearn/model_selection/_validation.py
index ae68fad493ad..f2329540c052 100644
--- a/sklearn/model_selection/_validation.py
+++ b/sklearn/model_selection/_validation.py
@@ -607,7 +607,8 @@ def permutation_test_score(estimator, X, y, groups=None, cv=None,
             for y_i in y_shuffled)
     out = Parallel(n_jobs=n_jobs, pre_dispatch=pre_dispatch,
                    verbose=verbose)(chain.from_iterable(jobs))
-    permutation_scores = np.array(zip(*out)[0]).reshape(-1, n_permutations)
+    permutation_scores = np.array(list(zip(*out))[0]).reshape(-1,
+                                                              n_permutations)
     permutation_scores = permutation_scores.mean(axis=0)
     pvalue = (np.sum(permutation_scores >= score) + 1.0) / (n_permutations + 1)
     return score, permutation_scores, pvalue
diff --git a/sklearn/tests/test_base.py b/sklearn/tests/test_base.py
index 1c5c9bb7447a..d0df21c78046 100644
--- a/sklearn/tests/test_base.py
+++ b/sklearn/tests/test_base.py
@@ -324,6 +324,11 @@ def __getstate__(self):
         return self.__dict__
 
 
+class TreeBadVersion(DecisionTreeClassifier):
+    def __getstate__(self):
+        return dict(self.__dict__.items(), _sklearn_version="something")
+
+
 def test_pickle_version_warning():
     # check that warnings are raised when unpickling in a different version
 
@@ -335,9 +340,9 @@ def test_pickle_version_warning():
     assert_no_warnings(pickle.loads, tree_pickle)
 
     # check that warning is raised on different version
-    tree_pickle_other = tree_pickle.replace(sklearn.__version__.encode(),
-                                            b"something")
-    message = ("Trying to unpickle estimator DecisionTreeClassifier from "
+    tree = TreeBadVersion().fit(iris.data, iris.target)
+    tree_pickle_other = pickle.dumps(tree)
+    message = ("Trying to unpickle estimator TreeBadVersion from "
                "version {0} when using version {1}. This might lead to "
                "breaking code or invalid results. "
                "Use at your own risk.".format("something",
@@ -351,7 +356,7 @@ def test_pickle_version_warning():
     tree_pickle_noversion = pickle.dumps(tree)
     assert_false(b"version" in tree_pickle_noversion)
     message = message.replace("something", "pre-0.18")
-    message = message.replace("DecisionTreeClassifier", "TreeNoVersion")
+    message = message.replace("TreeBadVersion", "TreeNoVersion")
     # check we got the warning about using pre-0.18 pickle
     assert_warns_message(UserWarning, message, pickle.loads,
                          tree_pickle_noversion)
