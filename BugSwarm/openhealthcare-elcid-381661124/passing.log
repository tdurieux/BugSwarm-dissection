travis_fold:start:worker_info[0K[33;1mWorker information[0m
hostname: 2caa047a-352a-470f-867e-56dfd2820184@1.i-04343d2-production-2-worker-org-ec2.travisci.net
version: v3.6.0 https://github.com/travis-ci/worker/tree/170b2a0bb43234479fd1911ba9e4dbcc36dadfad
instance: 73c905d travisci/ci-garnet:packer-1512502276-986baf0 (via amqp)
startup: 606.19345ms
travis_fold:end:worker_info[0Ktravis_fold:start:system_info[0K[33;1mBuild system information[0m
Build language: python
Build group: stable
Build dist: trusty
Build id: 381698297
Job id: 381698298
Runtime kernel version: 4.14.12-041412-generic
travis-build version: 4957953b8
[34m[1mBuild image provisioning date and time[0m
Tue Dec  5 20:11:19 UTC 2017
[34m[1mOperating System Details[0m
Distributor ID:	Ubuntu
Description:	Ubuntu 14.04.5 LTS
Release:	14.04
Codename:	trusty
[34m[1mCookbooks Version[0m
7c2c6a6 https://github.com/travis-ci/travis-cookbooks/tree/7c2c6a6
[34m[1mgit version[0m
git version 2.15.1
[34m[1mbash version[0m
GNU bash, version 4.3.11(1)-release (x86_64-pc-linux-gnu)
[34m[1mgcc version[0m
gcc (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

[34m[1mdocker version[0m
Client:
 Version:      17.09.0-ce
 API version:  1.32
 Go version:   go1.8.3
 Git commit:   afdb6d4
 Built:        Tue Sep 26 22:39:28 2017
 OS/Arch:      linux/amd64
[34m[1mclang version[0m
clang version 5.0.0 (tags/RELEASE_500/final)
Target: x86_64-unknown-linux-gnu
Thread model: posix
InstalledDir: /usr/local/clang-5.0.0/bin
[34m[1mjq version[0m
jq-1.5
[34m[1mbats version[0m
Bats 0.4.0
[34m[1mshellcheck version[0m
0.4.6
[34m[1mshfmt version[0m
v2.0.0
[34m[1mccache version[0m
ccache version 3.1.9

Copyright (C) 2002-2007 Andrew Tridgell
Copyright (C) 2009-2011 Joel Rosdahl

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 3 of the License, or (at your option) any later
version.
[34m[1mcmake version[0m
cmake version 3.9.2

CMake suite maintained and supported by Kitware (kitware.com/cmake).
[34m[1mheroku version[0m
heroku-cli/6.14.39-addc925 (linux-x64) node-v9.2.0
[34m[1mimagemagick version[0m
Version: ImageMagick 6.7.7-10 2017-07-31 Q16 http://www.imagemagick.org
[34m[1mmd5deep version[0m
4.2
[34m[1mmercurial version[0m
Mercurial Distributed SCM (version 4.2.2)
(see https://mercurial-scm.org for more information)

Copyright (C) 2005-2017 Matt Mackall and others
This is free software; see the source for copying conditions. There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
[34m[1mmysql version[0m
mysql  Ver 14.14 Distrib 5.6.33, for debian-linux-gnu (x86_64) using  EditLine wrapper
[34m[1mopenssl version[0m
OpenSSL 1.0.1f 6 Jan 2014
[34m[1mpacker version[0m
Packer v1.0.2

Your version of Packer is out of date! The latest version
is 1.1.2. You can update by downloading from www.packer.io
[34m[1mpostgresql client version[0m
psql (PostgreSQL) 9.6.6
[34m[1mragel version[0m
Ragel State Machine Compiler version 6.8 Feb 2013
Copyright (c) 2001-2009 by Adrian Thurston
[34m[1msubversion version[0m
svn, version 1.8.8 (r1568071)
   compiled Aug 10 2017, 17:20:39 on x86_64-pc-linux-gnu

Copyright (C) 2013 The Apache Software Foundation.
This software consists of contributions made by many people;
see the NOTICE file for more information.
Subversion is open source software, see http://subversion.apache.org/

The following repository access (RA) modules are available:

* ra_svn : Module for accessing a repository using the svn network protocol.
  - with Cyrus SASL authentication
  - handles 'svn' scheme
* ra_local : Module for accessing a repository on local disk.
  - handles 'file' scheme
* ra_serf : Module for accessing a repository via WebDAV protocol using serf.
  - using serf 1.3.3
  - handles 'http' scheme
  - handles 'https' scheme

[34m[1msudo version[0m
Sudo version 1.8.9p5
Configure options: --prefix=/usr -v --with-all-insults --with-pam --with-fqdn --with-logging=syslog --with-logfac=authpriv --with-env-editor --with-editor=/usr/bin/editor --with-timeout=15 --with-password-timeout=0 --with-passprompt=[sudo] password for %p:  --without-lecture --with-tty-tickets --disable-root-mailer --enable-admin-flag --with-sendmail=/usr/sbin/sendmail --with-timedir=/var/lib/sudo --mandir=/usr/share/man --libexecdir=/usr/lib/sudo --with-sssd --with-sssd-lib=/usr/lib/x86_64-linux-gnu --with-selinux
Sudoers policy plugin version 1.8.9p5
Sudoers file grammar version 43

Sudoers path: /etc/sudoers
Authentication methods: 'pam'
Syslog facility if syslog is being used for logging: authpriv
Syslog priority to use when user authenticates successfully: notice
Syslog priority to use when user authenticates unsuccessfully: alert
Send mail if the user is not in sudoers
Use a separate timestamp for each user/tty combo
Lecture user the first time they run sudo
Root may run sudo
Allow some information gathering to give useful error messages
Require fully-qualified hostnames in the sudoers file
Visudo will honor the EDITOR environment variable
Set the LOGNAME and USER environment variables
Length at which to wrap log file lines (0 for no wrap): 80
Authentication timestamp timeout: 15.0 minutes
Password prompt timeout: 0.0 minutes
Number of tries to enter a password: 3
Umask to use or 0777 to use user's: 022
Path to mail program: /usr/sbin/sendmail
Flags for mail program: -t
Address to send mail to: root
Subject line for mail messages: *** SECURITY information for %h ***
Incorrect password message: Sorry, try again.
Path to authentication timestamp dir: /var/lib/sudo
Default password prompt: [sudo] password for %p: 
Default user to run commands as: root
Value to override user's $PATH with: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin
Path to the editor for use by visudo: /usr/bin/editor
When to require a password for 'list' pseudocommand: any
When to require a password for 'verify' pseudocommand: all
File descriptors >= 3 will be closed before executing a command
Environment variables to check for sanity:
	TZ
	TERM
	LINGUAS
	LC_*
	LANGUAGE
	LANG
	COLORTERM
Environment variables to remove:
	RUBYOPT
	RUBYLIB
	PYTHONUSERBASE
	PYTHONINSPECT
	PYTHONPATH
	PYTHONHOME
	TMPPREFIX
	ZDOTDIR
	READNULLCMD
	NULLCMD
	FPATH
	PERL5DB
	PERL5OPT
	PERL5LIB
	PERLLIB
	PERLIO_DEBUG 
	JAVA_TOOL_OPTIONS
	SHELLOPTS
	GLOBIGNORE
	PS4
	BASH_ENV
	ENV
	TERMCAP
	TERMPATH
	TERMINFO_DIRS
	TERMINFO
	_RLD*
	LD_*
	PATH_LOCALE
	NLSPATH
	HOSTALIASES
	RES_OPTIONS
	LOCALDOMAIN
	CDPATH
	IFS
Environment variables to preserve:
	JAVA_HOME
	TRAVIS
	CI
	DEBIAN_FRONTEND
	XAUTHORIZATION
	XAUTHORITY
	PS2
	PS1
	PATH
	LS_COLORS
	KRB5CCNAME
	HOSTNAME
	HOME
	DISPLAY
	COLORS
Locale to use while parsing sudoers: C
Directory in which to store input/output logs: /var/log/sudo-io
File in which to store the input/output log: %{seq}
Add an entry to the utmp/utmpx file when allocating a pty
PAM service name to use
PAM service name to use for login shells
Create a new PAM session for the command to run in
Maximum I/O log sequence number: 0

Local IP address and netmask pairs:
	172.17.0.2/255.255.0.0

Sudoers I/O plugin version 1.8.9p5
[34m[1mgzip version[0m
gzip 1.6
Copyright (C) 2007, 2010, 2011 Free Software Foundation, Inc.
Copyright (C) 1993 Jean-loup Gailly.
This is free software.  You may redistribute copies of it under the terms of
the GNU General Public License <http://www.gnu.org/licenses/gpl.html>.
There is NO WARRANTY, to the extent permitted by law.

Written by Jean-loup Gailly.
[34m[1mzip version[0m
Copyright (c) 1990-2008 Info-ZIP - Type 'zip "-L"' for software license.
This is Zip 3.0 (July 5th 2008), by Info-ZIP.
Currently maintained by E. Gordon.  Please send bug reports to
the authors using the web page at www.info-zip.org; see README for details.

Latest sources and executables are at ftp://ftp.info-zip.org/pub/infozip,
as of above date; see http://www.info-zip.org/ for other sites.

Compiled with gcc 4.8.2 for Unix (Linux ELF) on Oct 21 2013.

Zip special compilation options:
	USE_EF_UT_TIME       (store Universal Time)
	BZIP2_SUPPORT        (bzip2 library version 1.0.6, 6-Sept-2010)
	    bzip2 code and library copyright (c) Julian R Seward
	    (See the bzip2 license for terms of use)
	SYMLINK_SUPPORT      (symbolic links supported)
	LARGE_FILE_SUPPORT   (can read and write large files on file system)
	ZIP64_SUPPORT        (use Zip64 to store large files in archives)
	UNICODE_SUPPORT      (store and read UTF-8 Unicode paths)
	STORE_UNIX_UIDs_GIDs (store UID/GID sizes/values using new extra field)
	UIDGID_NOT_16BIT     (old Unix 16-bit UID/GID extra field not used)
	[encryption, version 2.91 of 05 Jan 2007] (modified for Zip 3)

Encryption notice:
	The encryption code of this program is not copyrighted and is
	put in the public domain.  It was originally written in Europe
	and, to the best of our knowledge, can be freely distributed
	in both source and object forms from any country, including
	the USA under License Exception TSU of the U.S. Export
	Administration Regulations (section 740.13(e)) of 6 June 2002.

Zip environment options:
             ZIP:  [none]
          ZIPOPT:  [none]
[34m[1mvim version[0m
VIM - Vi IMproved 7.4 (2013 Aug 10, compiled Nov 24 2016 16:43:18)
Included patches: 1-52
Extra patches: 8.0.0056
Modified by pkg-vim-maintainers@lists.alioth.debian.org
Compiled by buildd@
Huge version without GUI.  Features included (+) or not (-):
+acl             +farsi           +mouse_netterm   +syntax
+arabic          +file_in_path    +mouse_sgr       +tag_binary
+autocmd         +find_in_path    -mouse_sysmouse  +tag_old_static
-balloon_eval    +float           +mouse_urxvt     -tag_any_white
-browse          +folding         +mouse_xterm     -tcl
++builtin_terms  -footer          +multi_byte      +terminfo
+byte_offset     +fork()          +multi_lang      +termresponse
+cindent         +gettext         -mzscheme        +textobjects
-clientserver    -hangul_input    +netbeans_intg   +title
-clipboard       +iconv           +path_extra      -toolbar
+cmdline_compl   +insert_expand   -perl            +user_commands
+cmdline_hist    +jumplist        +persistent_undo +vertsplit
+cmdline_info    +keymap          +postscript      +virtualedit
+comments        +langmap         +printer         +visual
+conceal         +libcall         +profile         +visualextra
+cryptv          +linebreak       +python          +viminfo
+cscope          +lispindent      -python3         +vreplace
+cursorbind      +listcmds        +quickfix        +wildignore
+cursorshape     +localmap        +reltime         +wildmenu
+dialog_con      -lua             +rightleft       +windows
+diff            +menu            -ruby            +writebackup
+digraphs        +mksession       +scrollbind      -X11
-dnd             +modify_fname    +signs           -xfontset
-ebcdic          +mouse           +smartindent     -xim
+emacs_tags      -mouseshape      -sniff           -xsmp
+eval            +mouse_dec       +startuptime     -xterm_clipboard
+ex_extra        +mouse_gpm       +statusline      -xterm_save
+extra_search    -mouse_jsbterm   -sun_workshop    -xpm
   system vimrc file: "$VIM/vimrc"
     user vimrc file: "$HOME/.vimrc"
 2nd user vimrc file: "~/.vim/vimrc"
      user exrc file: "$HOME/.exrc"
  fall-back for $VIM: "/usr/share/vim"
Compilation: gcc -c -I. -Iproto -DHAVE_CONFIG_H     -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=1      
Linking: gcc   -Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,--as-needed -o vim        -lm -ltinfo -lnsl  -lselinux  -lacl -lattr -lgpm -ldl    -L/usr/lib/python2.7/config-x86_64-linux-gnu -lpython2.7 -lpthread -ldl -lutil -lm -Xlinker -export-dynamic -Wl,-O1 -Wl,-Bsymbolic-functions      
[34m[1miptables version[0m
iptables v1.4.21
[34m[1mcurl version[0m
curl 7.35.0 (x86_64-pc-linux-gnu) libcurl/7.35.0 OpenSSL/1.0.1f zlib/1.2.8 libidn/1.28 librtmp/2.3
[34m[1mwget version[0m
GNU Wget 1.15 built on linux-gnu.
[34m[1mrsync version[0m
rsync  version 3.1.0  protocol version 31
[34m[1mgimme version[0m
v1.2.0
[34m[1mnvm version[0m
0.33.6
[34m[1mperlbrew version[0m
/home/travis/perl5/perlbrew/bin/perlbrew  - App::perlbrew/0.80
[34m[1mphpenv version[0m
rbenv 1.1.1-25-g6aa70b6
[34m[1mrvm version[0m
rvm 1.29.3 (latest) by Michal Papis, Piotr Kuczynski, Wayne E. Seguin [https://rvm.io]
[34m[1mdefault ruby version[0m
ruby 2.4.1p111 (2017-03-22 revision 58053) [x86_64-linux]
[34m[1mCouchDB version[0m
couchdb 1.6.1
[34m[1mElasticSearch version[0m
5.5.0
[34m[1mInstalled Firefox version[0m
firefox 56.0.2
[34m[1mMongoDB version[0m
MongoDB 3.4.10
[34m[1mPhantomJS version[0m
2.1.1
[34m[1mPre-installed PostgreSQL versions[0m
9.2.24
9.3.20
9.4.15
9.5.10
9.6.6
[34m[1mRabbitMQ Version[0m
3.6.14
[34m[1mRedis version[0m
redis-server 4.0.6
[34m[1mriak version[0m
2.2.3
[34m[1mPre-installed Go versions[0m
1.7.4
[34m[1mant version[0m
Apache Ant(TM) version 1.9.3 compiled on April 8 2014
[34m[1mmvn version[0m
Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z)
Maven home: /usr/local/maven-3.5.2
Java version: 1.8.0_151, vendor: Oracle Corporation
Java home: /usr/lib/jvm/java-8-oracle/jre
Default locale: en_US, platform encoding: UTF-8
OS name: "linux", version: "4.4.0-101-generic", arch: "amd64", family: "unix"
[34m[1mgradle version[0m

------------------------------------------------------------
Gradle 4.0.1
------------------------------------------------------------

Build time:   2017-07-07 14:02:41 UTC
Revision:     38e5dc0f772daecca1d2681885d3d85414eb6826

Groovy:       2.4.11
Ant:          Apache Ant(TM) version 1.9.6 compiled on June 29 2015
JVM:          1.8.0_151 (Oracle Corporation 25.151-b12)
OS:           Linux 4.4.0-101-generic amd64

[34m[1mlein version[0m
Leiningen 2.8.1 on Java 1.8.0_151 Java HotSpot(TM) 64-Bit Server VM
[34m[1mPre-installed Node.js versions[0m
v4.8.6
v6.12.0
v6.12.1
v8.9
v8.9.1
[34m[1mphpenv versions[0m
  system
  5.6
* 5.6.32 (set by /home/travis/.phpenv/version)
  7.0
  7.0.25
  7.1
  7.1.11
  hhvm
  hhvm-stable
[34m[1mcomposer --version[0m
Composer version 1.5.2 2017-09-11 16:59:25
[34m[1mPre-installed Ruby versions[0m
ruby-2.2.7
ruby-2.3.4
ruby-2.4.1
travis_fold:end:system_info[0K
[32;1mNetwork availability confirmed.[0m

[33;1mRunning apt-get update by default has been disabled.[0m
You can opt into running apt-get update by setting this in your .travis.yml file:

  addons:
    apt:
      update: true

travis_fold:start:git.checkout[0Ktravis_time:start:007a569d[0K$ git clone --depth=50 --branch=1595-merge-walkin.models.Symptoms-into-elcid.models.PresentingComplaint https://github.com/openhealthcare/elcid.git openhealthcare/elcid
Cloning into 'openhealthcare/elcid'...
remote: Counting objects: 1471, done.[K
remote: Compressing objects:   0% (1/857)   [Kremote: Compressing objects:   1% (9/857)   [Kremote: Compressing objects:   2% (18/857)   [Kremote: Compressing objects:   3% (26/857)   [Kremote: Compressing objects:   4% (35/857)   [Kremote: Compressing objects:   5% (43/857)   [Kremote: Compressing objects:   6% (52/857)   [Kremote: Compressing objects:   7% (60/857)   [Kremote: Compressing objects:   8% (69/857)   [Kremote: Compressing objects:   9% (78/857)   [Kremote: Compressing objects:  10% (86/857)   [Kremote: Compressing objects:  11% (95/857)   [Kremote: Compressing objects:  12% (103/857)   [Kremote: Compressing objects:  13% (112/857)   [Kremote: Compressing objects:  14% (120/857)   [Kremote: Compressing objects:  15% (129/857)   [Kremote: Compressing objects:  16% (138/857)   [Kremote: Compressing objects:  17% (146/857)   [Kremote: Compressing objects:  18% (155/857)   [Kremote: Compressing objects:  19% (163/857)   [Kremote: Compressing objects:  20% (172/857)   [Kremote: Compressing objects:  21% (180/857)   [Kremote: Compressing objects:  22% (189/857)   [Kremote: Compressing objects:  23% (198/857)   [Kremote: Compressing objects:  24% (206/857)   [Kremote: Compressing objects:  25% (215/857)   [Kremote: Compressing objects:  26% (223/857)   [Kremote: Compressing objects:  27% (232/857)   [Kremote: Compressing objects:  28% (240/857)   [Kremote: Compressing objects:  29% (249/857)   [Kremote: Compressing objects:  30% (258/857)   [Kremote: Compressing objects:  31% (266/857)   [Kremote: Compressing objects:  32% (275/857)   [Kremote: Compressing objects:  33% (283/857)   [Kremote: Compressing objects:  34% (292/857)   [Kremote: Compressing objects:  35% (300/857)   [Kremote: Compressing objects:  36% (309/857)   [Kremote: Compressing objects:  37% (318/857)   [Kremote: Compressing objects:  38% (326/857)   [Kremote: Compressing objects:  39% (335/857)   [Kremote: Compressing objects:  40% (343/857)   [Kremote: Compressing objects:  41% (352/857)   [Kremote: Compressing objects:  42% (360/857)   [Kremote: Compressing objects:  43% (369/857)   [Kremote: Compressing objects:  44% (378/857)   [Kremote: Compressing objects:  45% (386/857)   [Kremote: Compressing objects:  46% (395/857)   [Kremote: Compressing objects:  47% (403/857)   [Kremote: Compressing objects:  48% (412/857)   [Kremote: Compressing objects:  49% (420/857)   [Kremote: Compressing objects:  50% (429/857)   [Kremote: Compressing objects:  51% (438/857)   [Kremote: Compressing objects:  52% (446/857)   [Kremote: Compressing objects:  53% (455/857)   [Kremote: Compressing objects:  54% (463/857)   [Kremote: Compressing objects:  55% (472/857)   [Kremote: Compressing objects:  56% (480/857)   [Kremote: Compressing objects:  57% (489/857)   [Kremote: Compressing objects:  58% (498/857)   [Kremote: Compressing objects:  59% (506/857)   [Kremote: Compressing objects:  60% (515/857)   [Kremote: Compressing objects:  61% (523/857)   [Kremote: Compressing objects:  62% (532/857)   [Kremote: Compressing objects:  63% (540/857)   [Kremote: Compressing objects:  64% (549/857)   [Kremote: Compressing objects:  65% (558/857)   [Kremote: Compressing objects:  66% (566/857)   [Kremote: Compressing objects:  67% (575/857)   [Kremote: Compressing objects:  68% (583/857)   [Kremote: Compressing objects:  69% (592/857)   [Kremote: Compressing objects:  70% (600/857)   [Kremote: Compressing objects:  71% (609/857)   [Kremote: Compressing objects:  72% (618/857)   [Kremote: Compressing objects:  73% (626/857)   [Kremote: Compressing objects:  74% (635/857)   [Kremote: Compressing objects:  75% (643/857)   [Kremote: Compressing objects:  76% (652/857)   [Kremote: Compressing objects:  77% (660/857)   [Kremote: Compressing objects:  78% (669/857)   [Kremote: Compressing objects:  79% (678/857)   [Kremote: Compressing objects:  80% (686/857)   [Kremote: Compressing objects:  81% (695/857)   [Kremote: Compressing objects:  82% (703/857)   [Kremote: Compressing objects:  83% (712/857)   [Kremote: Compressing objects:  84% (720/857)   [Kremote: Compressing objects:  85% (729/857)   [Kremote: Compressing objects:  86% (738/857)   [Kremote: Compressing objects:  87% (746/857)   [Kremote: Compressing objects:  88% (755/857)   [Kremote: Compressing objects:  89% (763/857)   [Kremote: Compressing objects:  90% (772/857)   [Kremote: Compressing objects:  91% (780/857)   [Kremote: Compressing objects:  92% (789/857)   [Kremote: Compressing objects:  93% (798/857)   [Kremote: Compressing objects:  94% (806/857)   [Kremote: Compressing objects:  95% (815/857)   [Kremote: Compressing objects:  96% (823/857)   [Kremote: Compressing objects:  97% (832/857)   [Kremote: Compressing objects:  98% (840/857)   [Kremote: Compressing objects:  99% (849/857)   [Kremote: Compressing objects: 100% (857/857)   [Kremote: Compressing objects: 100% (857/857), done.[K
Receiving objects:   0% (1/1471)   Receiving objects:   1% (15/1471)   Receiving objects:   2% (30/1471)   Receiving objects:   3% (45/1471)   Receiving objects:   4% (59/1471)   Receiving objects:   5% (74/1471)   Receiving objects:   6% (89/1471)   Receiving objects:   7% (103/1471)   Receiving objects:   8% (118/1471)   Receiving objects:   9% (133/1471)   Receiving objects:  10% (148/1471)   Receiving objects:  11% (162/1471)   Receiving objects:  12% (177/1471)   Receiving objects:  13% (192/1471)   Receiving objects:  14% (206/1471)   Receiving objects:  15% (221/1471)   Receiving objects:  16% (236/1471)   Receiving objects:  17% (251/1471)   Receiving objects:  18% (265/1471)   Receiving objects:  19% (280/1471)   Receiving objects:  20% (295/1471)   Receiving objects:  21% (309/1471)   Receiving objects:  22% (324/1471)   Receiving objects:  23% (339/1471)   Receiving objects:  24% (354/1471)   Receiving objects:  25% (368/1471)   Receiving objects:  26% (383/1471)   Receiving objects:  27% (398/1471)   Receiving objects:  28% (412/1471)   Receiving objects:  29% (427/1471)   Receiving objects:  30% (442/1471)   Receiving objects:  31% (457/1471)   Receiving objects:  32% (471/1471)   Receiving objects:  33% (486/1471)   Receiving objects:  34% (501/1471)   Receiving objects:  35% (515/1471)   Receiving objects:  36% (530/1471)   Receiving objects:  37% (545/1471)   Receiving objects:  38% (559/1471)   Receiving objects:  39% (574/1471)   Receiving objects:  40% (589/1471)   Receiving objects:  41% (604/1471)   Receiving objects:  42% (618/1471)   Receiving objects:  43% (633/1471)   Receiving objects:  44% (648/1471)   Receiving objects:  45% (662/1471)   Receiving objects:  46% (677/1471)   Receiving objects:  47% (692/1471)   Receiving objects:  48% (707/1471)   Receiving objects:  49% (721/1471)   Receiving objects:  50% (736/1471)   Receiving objects:  51% (751/1471)   Receiving objects:  52% (765/1471)   Receiving objects:  53% (780/1471)   Receiving objects:  54% (795/1471)   Receiving objects:  55% (810/1471)   Receiving objects:  56% (824/1471)   Receiving objects:  57% (839/1471)   Receiving objects:  58% (854/1471)   Receiving objects:  59% (868/1471)   Receiving objects:  60% (883/1471)   Receiving objects:  61% (898/1471)   Receiving objects:  62% (913/1471)   Receiving objects:  63% (927/1471)   Receiving objects:  64% (942/1471)   Receiving objects:  65% (957/1471)   Receiving objects:  66% (971/1471)   Receiving objects:  67% (986/1471)   Receiving objects:  68% (1001/1471)   Receiving objects:  69% (1015/1471)   Receiving objects:  70% (1030/1471)   Receiving objects:  71% (1045/1471)   Receiving objects:  72% (1060/1471)   Receiving objects:  73% (1074/1471)   Receiving objects:  74% (1089/1471)   Receiving objects:  75% (1104/1471)   Receiving objects:  76% (1118/1471)   Receiving objects:  77% (1133/1471)   Receiving objects:  78% (1148/1471)   Receiving objects:  79% (1163/1471)   Receiving objects:  80% (1177/1471)   Receiving objects:  81% (1192/1471)   Receiving objects:  82% (1207/1471)   Receiving objects:  83% (1221/1471)   Receiving objects:  84% (1236/1471)   Receiving objects:  85% (1251/1471)   Receiving objects:  86% (1266/1471)   Receiving objects:  87% (1280/1471)   Receiving objects:  88% (1295/1471)   Receiving objects:  89% (1310/1471)   Receiving objects:  90% (1324/1471)   Receiving objects:  91% (1339/1471)   Receiving objects:  92% (1354/1471)   Receiving objects:  93% (1369/1471)   remote: Total 1471 (delta 688), reused 1069 (delta 548), pack-reused 0[K
Receiving objects:  94% (1383/1471)   Receiving objects:  95% (1398/1471)   Receiving objects:  96% (1413/1471)   Receiving objects:  97% (1427/1471)   Receiving objects:  98% (1442/1471)   Receiving objects:  99% (1457/1471)   Receiving objects: 100% (1471/1471)   Receiving objects: 100% (1471/1471), 417.17 KiB | 11.27 MiB/s, done.
Resolving deltas:   0% (0/688)   Resolving deltas:  20% (143/688)   Resolving deltas:  21% (145/688)   Resolving deltas:  29% (203/688)   Resolving deltas:  30% (213/688)   Resolving deltas:  31% (220/688)   Resolving deltas:  32% (221/688)   Resolving deltas:  33% (228/688)   Resolving deltas:  34% (239/688)   Resolving deltas:  37% (255/688)   Resolving deltas:  39% (269/688)   Resolving deltas:  40% (277/688)   Resolving deltas:  41% (285/688)   Resolving deltas:  42% (293/688)   Resolving deltas:  43% (302/688)   Resolving deltas:  45% (313/688)   Resolving deltas:  46% (317/688)   Resolving deltas:  47% (326/688)   Resolving deltas:  48% (331/688)   Resolving deltas:  49% (340/688)   Resolving deltas:  50% (344/688)   Resolving deltas:  51% (351/688)   Resolving deltas:  52% (361/688)   Resolving deltas:  53% (368/688)   Resolving deltas:  56% (388/688)   Resolving deltas:  57% (395/688)   Resolving deltas:  58% (405/688)   Resolving deltas:  59% (407/688)   Resolving deltas:  60% (414/688)   Resolving deltas:  61% (420/688)   Resolving deltas:  63% (440/688)   Resolving deltas:  64% (443/688)   Resolving deltas:  65% (451/688)   Resolving deltas:  66% (460/688)   Resolving deltas:  67% (462/688)   Resolving deltas:  68% (469/688)   Resolving deltas:  69% (477/688)   Resolving deltas:  70% (482/688)   Resolving deltas:  71% (490/688)   Resolving deltas:  72% (498/688)   Resolving deltas:  73% (503/688)   Resolving deltas:  75% (517/688)   Resolving deltas:  76% (524/688)   Resolving deltas:  77% (534/688)   Resolving deltas:  78% (537/688)   Resolving deltas:  79% (546/688)   Resolving deltas:  80% (551/688)   Resolving deltas:  81% (560/688)   Resolving deltas:  82% (571/688)   Resolving deltas:  83% (573/688)   Resolving deltas:  84% (579/688)   Resolving deltas:  85% (586/688)   Resolving deltas:  86% (594/688)   Resolving deltas:  87% (600/688)   Resolving deltas:  88% (611/688)   Resolving deltas:  89% (614/688)   Resolving deltas:  90% (625/688)   Resolving deltas:  91% (627/688)   Resolving deltas:  93% (644/688)   Resolving deltas:  95% (656/688)   Resolving deltas:  96% (665/688)   Resolving deltas:  99% (686/688)   Resolving deltas: 100% (688/688)   Resolving deltas: 100% (688/688), done.

travis_time:end:007a569d:start=1526913115767454031,finish=1526913116275151451,duration=507697420[0K$ cd openhealthcare/elcid
$ git checkout -qf 4c78cffd1582b5c4037f92a620b701442cb4d213
travis_fold:end:git.checkout[0Ktravis_time:start:135d64d0[0K$ source ~/virtualenv/python2.7/bin/activate

travis_time:end:135d64d0:start=1526913121252226495,finish=1526913121261028240,duration=8801745[0K$ python --version
Python 2.7.14
$ pip --version
pip 9.0.1 from /home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages (python 2.7)
travis_fold:start:install.1[0Ktravis_time:start:01bbd7f8[0K$ pip install -r requirements.txt
Collecting Fabric==1.14.0 (from -r requirements.txt (line 2))
  Downloading https://files.pythonhosted.org/packages/ec/a1/98709aeabe5b1ad7fe74665539f0d11222b1a85207364b9c34b57c6dd5c8/Fabric-1.14.0-py2-none-any.whl (92kB)
[?25l[K    11% |███▌                            | 10kB 34.1MB/s eta 0:00:01[K    22% |███████                         | 20kB 19.5MB/s eta 0:00:01[K    33% |██████████▋                     | 30kB 15.5MB/s eta 0:00:01[K    44% |██████████████▏                 | 40kB 7.7MB/s eta 0:00:01[K    55% |█████████████████▋              | 51kB 7.3MB/s eta 0:00:01[K    66% |█████████████████████▏          | 61kB 8.5MB/s eta 0:00:01[K    77% |████████████████████████▊       | 71kB 8.3MB/s eta 0:00:01[K    88% |████████████████████████████▎   | 81kB 8.7MB/s eta 0:00:01[K    99% |███████████████████████████████▉| 92kB 9.6MB/s eta 0:00:01[K    100% |████████████████████████████████| 102kB 5.8MB/s 
[?25hCollecting django==1.10.8 (from -r requirements.txt (line 3))
  Downloading https://files.pythonhosted.org/packages/bb/9f/2c20639ac635a83123ddffd91ba15001cb0d04e74fbb08f31fb57e490dab/Django-1.10.8-py2.py3-none-any.whl (6.8MB)
[?25l[K    0% |                                | 10kB 46.5MB/s eta 0:00:01[K    0% |                                | 20kB 21.5MB/s eta 0:00:01[K    0% |▏                               | 30kB 26.1MB/s eta 0:00:01[K    0% |▏                               | 40kB 23.9MB/s eta 0:00:01[K    0% |▎                               | 51kB 14.3MB/s eta 0:00:01[K    0% |▎                               | 61kB 15.9MB/s eta 0:00:01[K    1% |▍                               | 71kB 15.3MB/s eta 0:00:01[K    1% |▍                               | 81kB 13.4MB/s eta 0:00:01[K    1% |▍                               | 92kB 14.5MB/s eta 0:00:01[K    1% |▌                               | 102kB 15.5MB/s eta 0:00:01[K    1% |▌                               | 112kB 15.6MB/s eta 0:00:01[K    1% |▋                               | 122kB 16.8MB/s eta 0:00:01[K    1% |▋                               | 133kB 15.2MB/s eta 0:00:01[K    2% |▊                               | 143kB 16.0MB/s eta 0:00:01[K    2% |▊                               | 153kB 19.2MB/s eta 0:00:01[K    2% |▊                               | 163kB 17.7MB/s eta 0:00:01[K    2% |▉                               | 174kB 19.9MB/s eta 0:00:01[K    2% |▉                               | 184kB 22.8MB/s eta 0:00:01[K    2% |█                               | 194kB 23.2MB/s eta 0:00:01[K    2% |█                               | 204kB 21.5MB/s eta 0:00:01[K    3% |█                               | 215kB 18.6MB/s eta 0:00:01[K    3% |█                               | 225kB 18.6MB/s eta 0:00:01[K    3% |█                               | 235kB 19.7MB/s eta 0:00:01[K    3% |█▏                              | 245kB 18.4MB/s eta 0:00:01[K    3% |█▏                              | 256kB 20.7MB/s eta 0:00:01[K    3% |█▎                              | 266kB 22.2MB/s eta 0:00:01[K    4% |█▎                              | 276kB 22.0MB/s eta 0:00:01[K    4% |█▍                              | 286kB 24.4MB/s eta 0:00:01[K    4% |█▍                              | 296kB 21.4MB/s eta 0:00:01[K    4% |█▍                              | 307kB 22.5MB/s eta 0:00:01[K    4% |█▌                              | 317kB 25.2MB/s eta 0:00:01[K    4% |█▌                              | 327kB 24.4MB/s eta 0:00:01[K    4% |█▋                              | 337kB 26.3MB/s eta 0:00:01[K    5% |█▋                              | 348kB 27.3MB/s eta 0:00:01[K    5% |█▊                              | 358kB 27.3MB/s eta 0:00:01[K    5% |█▊                              | 368kB 28.3MB/s eta 0:00:01[K    5% |█▊                              | 378kB 25.6MB/s eta 0:00:01[K    5% |█▉                              | 389kB 26.1MB/s eta 0:00:01[K    5% |█▉                              | 399kB 30.0MB/s eta 0:00:01[K    5% |██                              | 409kB 30.4MB/s eta 0:00:01[K    6% |██                              | 419kB 32.5MB/s eta 0:00:01[K    6% |██                              | 430kB 31.1MB/s eta 0:00:01[K    6% |██                              | 440kB 31.4MB/s eta 0:00:01[K    6% |██                              | 450kB 32.8MB/s eta 0:00:01[K    6% |██▏                             | 460kB 32.4MB/s eta 0:00:01[K    6% |██▏                             | 471kB 33.0MB/s eta 0:00:01[K    7% |█���▎                             | 481kB 37.3MB/s eta 0:00:01[K    7% |██▎                             | 491kB 34.0MB/s eta 0:00:01[K    7% |██▍                             | 501kB 34.6MB/s eta 0:00:01[K    7% |██▍                             | 512kB 34.8MB/s eta 0:00:01[K    7% |██▌                             | 522kB 34.8MB/s eta 0:00:01[K    7% |██▌                             | 532kB 38.8MB/s eta 0:00:01[K    7% |██▌                             | 542kB 37.9MB/s eta 0:00:01[K    8% |██▋                             | 552kB 38.8MB/s eta 0:00:01[K    8% |██▋                             | 563kB 38.8MB/s eta 0:00:01[K    8% |██▊                             | 573kB 37.8MB/s eta 0:00:01[K    8% |██▊                             | 583kB 34.1MB/s eta 0:00:01[K    8% |██▉                             | 593kB 36.2MB/s eta 0:00:01[K    8% |██▉                             | 604kB 36.1MB/s eta 0:00:01[K    8% |██▉                             | 614kB 36.5MB/s eta 0:00:01[K    9% |███                             | 624kB 35.6MB/s eta 0:00:01[K    9% |███                             | 634kB 36.0MB/s eta 0:00:01[K    9% |███                             | 645kB 36.3MB/s eta 0:00:01[K    9% |███                             | 655kB 36.0MB/s eta 0:00:01[K    9% |███▏                            | 665kB 36.3MB/s eta 0:00:01[K    9% |███▏                            | 675kB 36.8MB/s eta 0:00:01[K    10% |███▏                            | 686kB 42.0MB/s eta 0:00:01[K    10% |███���                            | 696kB 42.9MB/s eta 0:00:01[K    10% |███▎                            | 706kB 42.2MB/s eta 0:00:01[K    10% |███▍                            | 716kB 43.2MB/s eta 0:00:01[K    10% |███▍                            | 727kB 42.6MB/s eta 0:00:01[K    10% |███▌                            | 737kB 40.6MB/s eta 0:00:01[K    10% |███▌                            | 747kB 40.5MB/s eta 0:00:01[K    11% |███▌                            | 757kB 39.4MB/s eta 0:00:01[K    11% |███▋                            | 768kB 39.3MB/s eta 0:00:01[K    11% |███▋                            | 778kB 37.2MB/s eta 0:00:01[K    11% |███▊                            | 788kB 35.0MB/s eta 0:00:01[K    11% |███▊                            | 798kB 34.7MB/s eta 0:00:01[K    11% |███▉                            | 808kB 34.2MB/s eta 0:00:01[K    11% |███▉                            | 819kB 34.0MB/s eta 0:00:01[K    12% |███▉                            | 829kB 35.6MB/s eta 0:00:01[K    12% |████                            | 839kB 36.8MB/s eta 0:00:01[K    12% |████                            | 849kB 37.8MB/s eta 0:00:01[K    12% |████                            | 860kB 39.0MB/s eta 0:00:01[K    12% |████                            | 870kB 39.3MB/s eta 0:00:01[K    12% |████▏                           | 880kB 42.7MB/s eta 0:00:01[K    13% |████▏                           | 890kB 45.8MB/s eta 0:00:01[K    13% |████▏                           | 901kB 47.4MB/s eta 0:00:01[K    13% |████▎                           | 911kB 50.0MB/s eta 0:00:01[K    13% |████▎                           | 921kB 48.5MB/s eta 0:00:01[K    13% |████▍                           | 931kB 48.5MB/s eta 0:00:01[K    13% |████▍                           | 942kB 48.6MB/s eta 0:00:01[K    13% |████▌                           | 952kB 47.7MB/s eta 0:00:01[K    14% |████▌                           | 962kB 48.6MB/s eta 0:00:01[K    14% |████▌                           | 972kB 48.3MB/s eta 0:00:01[K    14% |████▋                           | 983kB 47.2MB/s eta 0:00:01[K    14% |████▋                           | 993kB 47.9MB/s eta 0:00:01[K    14% |████▊                           | 1.0MB 47.5MB/s eta 0:00:01[K    14% |████▊                           | 1.0MB 47.5MB/s eta 0:00:01[K    14% |████▉                           | 1.0MB 49.0MB/s eta 0:00:01[K    15% |████▉                           | 1.0MB 47.7MB/s eta 0:00:01[K    15% |█████                           | 1.0MB 49.0MB/s eta 0:00:01[K    15% |█████                           | 1.1MB 48.6MB/s eta 0:00:01[K    15% |█████                           | 1.1MB 47.7MB/s eta 0:00:01[K    15% |█████                           | 1.1MB 49.0MB/s eta 0:00:01[K    15% |█████                           | 1.1MB 48.8MB/s eta 0:00:01[K    16% |█████▏                          | 1.1MB 48.8MB/s eta 0:00:01[K    16% |█████▏                          | 1.1MB 49.3MB/s eta 0:00:01[K    16% |█████▎                          | 1.1MB 47.3MB/s eta 0:00:01[K    16% |█████▎                          | 1.1MB 48.3MB/s eta 0:00:01[K    16% |█████▎                          | 1.1MB 47.5MB/s eta 0:00:01[K    16% |█████▍                          | 1.1MB 45.6MB/s eta 0:00:01[K    16% |█████▍                          | 1.2MB 45.3MB/s eta 0:00:01[K    17% |█████▌                          | 1.2MB 45.1MB/s eta 0:00:01[K    17% |█████▌                          | 1.2MB 45.1MB/s eta 0:00:01[K    17% |█████▋                          | 1.2MB 45.1MB/s eta 0:00:01[K    17% |█████▋                          | 1.2MB 43.7MB/s eta 0:00:01[K    17% |█████▋                          | 1.2MB 44.4MB/s eta 0:00:01[K    17% |█████▊                          | 1.2MB 45.3MB/s eta 0:00:01[K    17% |█████▊                          | 1.2MB 44.5MB/s eta 0:00:01[K    18% |█████▉                          | 1.2MB 45.8MB/s eta 0:00:01[K    18% |█████▉                          | 1.2MB 45.5MB/s eta 0:00:01[K    18% |██████                          | 1.3MB 46.3MB/s eta 0:00:01[K    18% |██████                          | 1.3MB 45.5MB/s eta 0:00:01[K    18% |██████                          | 1.3MB 43.8MB/s eta 0:00:01[K    18% |██████                          | 1.3MB 43.5MB/s eta 0:00:01[K    19% |██████                          | 1.3MB 42.7MB/s eta 0:00:01[K    19% |██████▏                         | 1.3MB 41.3MB/s eta 0:00:01[K    19% |██████▏                         | 1.3MB 41.6MB/s eta 0:00:01[K    19% |██████▎                         | 1.3MB 40.5MB/s eta 0:00:01[K    19% |██████▎                         | 1.3MB 40.4MB/s eta 0:00:01[K    19% |██████▎                         | 1.4MB 41.0MB/s eta 0:00:01[K    19% |██████▍                         | 1.4MB 40.6MB/s eta 0:00:01[K    20% |██████▍                         | 1.4MB 41.7MB/s eta 0:00:01[K    20% |██████▌                         | 1.4MB 41.5MB/s eta 0:00:01[K    20% |██████▌                         | 1.4MB 41.0MB/s eta 0:00:01[K    20% |██████▋                         | 1.4MB 42.1MB/s eta 0:00:01[K    20% |██████▋                         | 1.4MB 42.1MB/s eta 0:00:01[K    20% |██████▋                         | 1.4MB 41.9MB/s eta 0:00:01[K    20% |██████▊                         | 1.4MB 42.6MB/s eta 0:00:01[K    21% |██████▊                         | 1.4MB 41.7MB/s eta 0:00:01[K    21% |██████▉                         | 1.5MB 41.8MB/s eta 0:00:01[K    21% |██████▉                         | 1.5MB 41.0MB/s eta 0:00:01[K    21% |███████                         | 1.5MB 39.7MB/s eta 0:00:01[K    21% |███████                         | 1.5MB 40.9MB/s eta 0:00:01[K    21% |███████                         | 1.5MB 41.2MB/s eta 0:00:01[K    22% |███████                         | 1.5MB 41.7MB/s eta 0:00:01[K    22% |███████                         | 1.5MB 41.9MB/s eta 0:00:01[K    22% |███████▏                        | 1.5MB 41.1MB/s eta 0:00:01[K    22% |███████▏                        | 1.5MB 41.7MB/s eta 0:00:01[K    22% |███████▎                        | 1.5MB 41.7MB/s eta 0:00:01[K    22% |███████▎                        | 1.6MB 40.3MB/s eta 0:00:01[K    22% |███████▍                        | 1.6MB 40.4MB/s eta 0:00:01[K    23% |███████▍                        | 1.6MB 39.5MB/s eta 0:00:01[K    23% |███████▍                        | 1.6MB 38.3MB/s eta 0:00:01[K    23% |███████▌                        | 1.6MB 38.1MB/s eta 0:00:01[K    23% |███████▌                        | 1.6MB 36.3MB/s eta 0:00:01[K    23% |███████▋                        | 1.6MB 37.0MB/s eta 0:00:01[K    23% |███████▋                        | 1.6MB 37.0MB/s eta 0:00:01[K    23% |███████▊                        | 1.6MB 36.5MB/s eta 0:00:01[K    24% |███████▊                        | 1.6MB 37.2MB/s eta 0:00:01[K    24% |███████▊                        | 1.7MB 38.5MB/s eta 0:00:01[K    24% |███████▉                        | 1.7MB 39.9MB/s eta 0:00:01[K    24% |███████▉                        | 1.7MB 41.4MB/s eta 0:00:01[K    24% |████████                        | 1.7MB 41.9MB/s eta 0:00:01[K    24% |████████                        | 1.7MB 43.3MB/s eta 0:00:01[K    25% |████████                        | 1.7MB 45.0MB/s eta 0:00:01[K    25% |████████                        | 1.7MB 43.9MB/s eta 0:00:01[K    25% |████████                        | 1.7MB 45.5MB/s eta 0:00:01[K    25% |████████▏                       | 1.7MB 45.1MB/s eta 0:00:01[K    25% |████████▏                       | 1.8MB 45.6MB/s eta 0:00:01[K    25% |████████▎                       | 1.8MB 45.7MB/s eta 0:00:01[K    25% |████████▎                       | 1.8MB 44.9MB/s eta 0:00:01[K    26% |████████▍                       | 1.8MB 46.0MB/s eta 0:00:01[K    26% |████████▍                       | 1.8MB 45.5MB/s eta 0:00:01[K    26% |████████▍                       | 1.8MB 44.4MB/s eta 0:00:01[K    26% |████████▌                       | 1.8MB 45.2MB/s eta 0:00:01[K    26% |████████▌                       | 1.8MB 45.6MB/s eta 0:00:01[K    26% |████████▋                       | 1.8MB 45.7MB/s eta 0:00:01[K    26% |████████▋                       | 1.8MB 46.3MB/s eta 0:00:01[K    27% |████████▊                       | 1.9MB 44.9MB/s eta 0:00:01[K    27% |████████▊                       | 1.9MB 45.6MB/s eta 0:00:01[K    27% |████████▊                       | 1.9MB 44.9MB/s eta 0:00:01[K    27% |████████▉                       | 1.9MB 44.5MB/s eta 0:00:01[K    27% |████████▉                       | 1.9MB 46.0MB/s eta 0:00:01[K    27% |█████████                       | 1.9MB 46.4MB/s eta 0:00:01[K    28% |█████████                       | 1.9MB 46.3MB/s eta 0:00:01[K    28% |█████████                       | 1.9MB 46.3MB/s eta 0:00:01[K    28% |█████████                       | 1.9MB 45.0MB/s eta 0:00:01[K    28% |█████████                       | 1.9MB 46.1MB/s eta 0:00:01[K    28% |█████████▏                      | 2.0MB 46.0MB/s eta 0:00:01[K    28% |█████████▏                      | 2.0MB 45.6MB/s eta 0:00:01[K    28% |█████████▎                      | 2.0MB 46.1MB/s eta 0:00:01[K    29% |█████████▎                      | 2.0MB 45.3MB/s eta 0:00:01[K    29% |█████████▍                      | 2.0MB 45.6MB/s eta 0:00:01[K    29% |█████████▍                      | 2.0MB 45.4MB/s eta 0:00:01[K    29% |█████████▌                      | 2.0MB 44.6MB/s eta 0:00:01[K    29% |█████████▌                      | 2.0MB 45.3MB/s eta 0:00:01[K    29% |█████████▌                      | 2.0MB 45.6MB/s eta 0:00:01[K    29% |█████████▋                      | 2.0MB 44.4MB/s eta 0:00:01[K    30% |█████████▋                      | 2.1MB 45.5MB/s eta 0:00:01[K    30% |█████████▊                      | 2.1MB 44.3MB/s eta 0:00:01[K    30% |█████████▊                      | 2.1MB 45.3MB/s eta 0:00:01[K    30% |█████████▉                      | 2.1MB 45.9MB/s eta 0:00:01[K    30% |█████████▉                      | 2.1MB 45.0MB/s eta 0:00:01[K    30% |█████████▉                      | 2.1MB 46.0MB/s eta 0:00:01[K    31% |██████████                      | 2.1MB 46.0MB/s eta 0:00:01[K    31% |██████████                      | 2.1MB 45.3MB/s eta 0:00:01[K    31% |██████████                      | 2.1MB 46.3MB/s eta 0:00:01[K    31% |██████████                      | 2.2MB 45.4MB/s eta 0:00:01[K    31% |██████████▏                     | 2.2MB 45.8MB/s eta 0:00:01[K    31% |██████████▏                     | 2.2MB 46.3MB/s eta 0:00:01[K    31% |██████████▏                     | 2.2MB 45.4MB/s eta 0:00:01[K    32% |██████████▎                     | 2.2MB 46.2MB/s eta 0:00:01[K    32% |██████████▎                     | 2.2MB 45.8MB/s eta 0:00:01[K    32% |██████████▍                     | 2.2MB 44.6MB/s eta 0:00:01[K    32% |██████████▍                     | 2.2MB 45.6MB/s eta 0:00:01[K    32% |██████████▌                     | 2.2MB 43.2MB/s eta 0:00:01[K    32% |███████���██▌                     | 2.2MB 41.5MB/s eta 0:00:01[K    32% |██████████▌                     | 2.3MB 40.1MB/s eta 0:00:01[K    33% |██████████▋                     | 2.3MB 38.0MB/s eta 0:00:01[K    33% |██████████▋                     | 2.3MB 38.5MB/s eta 0:00:01[K    33% |██████████▊                     | 2.3MB 38.2MB/s eta 0:00:01[K    33% |██████████▊                     | 2.3MB 37.4MB/s eta 0:00:01[K    33% |██████████▉                     | 2.3MB 38.0MB/s eta 0:00:01[K    33% |██████████▉                     | 2.3MB 37.8MB/s eta 0:00:01[K    34% |██████████▉                     | 2.3MB 37.4MB/s eta 0:00:01[K    34% |███████████                     | 2.3MB 39.5MB/s eta 0:00:01[K    34% |███████████                     | 2.3MB 40.1MB/s eta 0:00:01[K    34% |███████████                     | 2.4MB 43.1MB/s eta 0:00:01[K    34% |███████████                     | 2.4MB 44.3MB/s eta 0:00:01[K    34% |███████████▏                    | 2.4MB 44.3MB/s eta 0:00:01[K    34% |███████████▏                    | 2.4MB 45.2MB/s eta 0:00:01[K    35% |███████████▏                    | 2.4MB 45.3MB/s eta 0:00:01[K    35% |███████████▎                    | 2.4MB 45.4MB/s eta 0:00:01[K    35% |███████████▎                    | 2.4MB 45.3MB/s eta 0:00:01[K    35% |███████████▍                    | 2.4MB 44.4MB/s eta 0:00:01[K    35% |███████████▍                    | 2.4MB 44.6MB/s eta 0:00:01[K    35% |███████████▌                    | 2.4MB 44.6MB/s eta 0:00:01[K    35% |███████████▌                    | 2.5MB 43.5MB/s eta 0:00:01[K    36% |███████████▌                    | 2.5MB 44.9MB/s eta 0:00:01[K    36% |███████████▋                    | 2.5MB 44.7MB/s eta 0:00:01[K    36% |███████████▋                    | 2.5MB 44.9MB/s eta 0:00:01[K    36% |███████████▊                    | 2.5MB 43.9MB/s eta 0:00:01[K    36% |███████████▊                    | 2.5MB 43.1MB/s eta 0:00:01[K    36% |███████████▉                    | 2.5MB 44.6MB/s eta 0:00:01[K    37% |███████████▉                    | 2.5MB 45.3MB/s eta 0:00:01[K    37% |████████████                    | 2.5MB 44.9MB/s eta 0:00:01[K    37% |████████████                    | 2.5MB 46.0MB/s eta 0:00:01[K    37% |████████████                    | 2.6MB 45.6MB/s eta 0:00:01[K    37% |████████████                    | 2.6MB 45.6MB/s eta 0:00:01[K    37% |████████████                    | 2.6MB 45.5MB/s eta 0:00:01[K    37% |████████████▏                   | 2.6MB 44.7MB/s eta 0:00:01[K    38% |████████████▏                   | 2.6MB 46.8MB/s eta 0:00:01[K    38% |████████████▎                   | 2.6MB 47.2MB/s eta 0:00:01[K    38% |████████████▎                   | 2.6MB 46.3MB/s eta 0:00:01[K    38% |████████████▎                   | 2.6MB 47.2MB/s eta 0:00:01[K    38% |████████████▍                   | 2.6MB 46.9MB/s eta 0:00:01[K    38% |████████████▍                   | 2.7MB 46.9MB/s eta 0:00:01[K    38% |████████████▌                   | 2.7MB 47.0MB/s eta 0:00:01[K    39% |████████████▌                   | 2.7MB 46.2MB/s eta 0:00:01[K    39% |████████████▋                   | 2.7MB 46.3MB/s eta 0:00:01[K    39% |████████████▋                   | 2.7MB 46.4MB/s eta 0:00:01[K    39% |████████████▋                   | 2.7MB 45.6MB/s eta 0:00:01[K    39% |████████████▊                   | 2.7MB 46.2MB/s eta 0:00:01[K    39% |████████████▊                   | 2.7MB 43.6MB/s eta 0:00:01[K    40% |████████████▉                   | 2.7MB 41.9MB/s eta 0:00:01[K    40% |████████████▉                   | 2.7MB 40.2MB/s eta 0:00:01[K    40% |█████████████                   | 2.8MB 38.0MB/s eta 0:00:01[K    40% |████████���████                   | 2.8MB 38.7MB/s eta 0:00:01[K    40% |█████████████                   | 2.8MB 37.9MB/s eta 0:00:01[K    40% |█████████████                   | 2.8MB 37.3MB/s eta 0:00:01[K    40% |█████████████                   | 2.8MB 36.9MB/s eta 0:00:01[K    41% |█████████████▏                  | 2.8MB 36.3MB/s eta 0:00:01[K    41% |█████████████▏                  | 2.8MB 36.1MB/s eta 0:00:01[K    41% |█████████████▎                  | 2.8MB 37.7MB/s eta 0:00:01[K    41% |█████████████▎                  | 2.8MB 37.8MB/s eta 0:00:01[K    41% |█████████████▎                  | 2.8MB 40.2MB/s eta 0:00:01[K    41% |█████████████▍                  | 2.9MB 41.4MB/s eta 0:00:01[K    41% |█████████████▍                  | 2.9MB 40.5MB/s eta 0:00:01[K    42% |█████████████▌                  | 2.9MB 41.6MB/s eta 0:00:01[K    42% |█████████████▌                  | 2.9MB 41.5MB/s eta 0:00:01[K    42% |█████████████▋                  | 2.9MB 42.6MB/s eta 0:00:01[K    42% |█████████████▋                  | 2.9MB 42.9MB/s eta 0:00:01[K    42% |█████████████▋                  | 2.9MB 42.3MB/s eta 0:00:01[K    42% |█████████████▊                  | 2.9MB 43.4MB/s eta 0:00:01[K    43% |█████████████▊                  | 2.9MB 44.1MB/s eta 0:00:01[K    43% |█████████████▉                  | 2.9MB 43.3MB/s eta 0:00:01[K    43% |█████████████▉                  | 3.0MB 44.7MB/s eta 0:00:01[K    43% |██████████████                  | 3.0MB 44.9MB/s eta 0:00:01[K    43% |██████████████                  | 3.0MB 45.6MB/s eta 0:00:01[K    43% |██████████████                  | 3.0MB 46.5MB/s eta 0:00:01[K    43% |██████████████                  | 3.0MB 45.3MB/s eta 0:00:01[K    44% |██████████████                  | 3.0MB 45.7MB/s eta 0:00:01[K    44% |██████████████▏                 | 3.0MB 45.6MB/s eta 0:00:01[K    44% |██████████████▏                 | 3.0MB 44.5MB/s eta 0:00:01[K    44% |██████████████▎                 | 3.0MB 45.3MB/s eta 0:00:01[K    44% |██████████████▎                 | 3.1MB 45.0MB/s eta 0:00:01[K    44% |██████████████▍                 | 3.1MB 44.9MB/s eta 0:00:01[K    44% |██████████████▍                 | 3.1MB 45.2MB/s eta 0:00:01[K    45% |██████████████▍                 | 3.1MB 43.9MB/s eta 0:00:01[K    45% |██████████████▌                 | 3.1MB 44.6MB/s eta 0:00:01[K    45% |██████████████▌                 | 3.1MB 44.6MB/s eta 0:00:01[K    45% |██████████████▋                 | 3.1MB 44.4MB/s eta 0:00:01[K    45% |██████████████▋                 | 3.1MB 45.6MB/s eta 0:00:01[K    45% |██████████████▊                 | 3.1MB 45.3MB/s eta 0:00:01[K    45% |██████████████▊                 | 3.1MB 45.2MB/s eta 0:00:01[K    46% |██████████████▊                 | 3.2MB 45.7MB/s eta 0:00:01[K    46% |██████████████▉                 | 3.2MB 44.4MB/s eta 0:00:01[K    46% |██████████████▉                 | 3.2MB 45.2MB/s eta 0:00:01[K    46% |███████████████                 | 3.2MB 44.8MB/s eta 0:00:01[K    46% |███████████████                 | 3.2MB 43.7MB/s eta 0:00:01[K    46% |███████████████                 | 3.2MB 44.1MB/s eta 0:00:01[K    47% |███████████████                 | 3.2MB 44.0MB/s eta 0:00:01[K    47% |███████████████                 | 3.2MB 44.0MB/s eta 0:00:01[K    47% |███████████████▏                | 3.2MB 44.8MB/s eta 0:00:01[K    47% |███████████████▏                | 3.2MB 44.0MB/s eta 0:00:01[K    47% |███████████████▎                | 3.3MB 44.6MB/s eta 0:00:01[K    47% |███████████████▎                | 3.3MB 45.0MB/s eta 0:00:01[K    47% |███████████████▍                | 3.3MB 44.2MB/s eta 0:00:01[K    48% |███████████████▍                | 3.3MB 46.1MB/s eta 0:00:01[K    48% |███████████████▍                | 3.3MB 46.5MB/s eta 0:00:01[K    48% |███████████████▌                | 3.3MB 47.3MB/s eta 0:00:01[K    48% |███████████████▌                | 3.3MB 47.3MB/s eta 0:00:01[K    48% |███████████████▋                | 3.3MB 46.1MB/s eta 0:00:01[K    48% |███████████████▋                | 3.3MB 46.8MB/s eta 0:00:01[K    48% |███████████████▊                | 3.3MB 46.5MB/s eta 0:00:01[K    49% |███████████████▊                | 3.4MB 46.2MB/s eta 0:00:01[K    49% |███████████████▊                | 3.4MB 46.2MB/s eta 0:00:01[K    49% |███████████████▉                | 3.4MB 46.2MB/s eta 0:00:01[K    49% |███████████████▉                | 3.4MB 45.8MB/s eta 0:00:01[K    49% |████████████████                | 3.4MB 46.0MB/s eta 0:00:01[K    49% |████████████████                | 3.4MB 44.6MB/s eta 0:00:01[K    50% |████████████████                | 3.4MB 46.0MB/s eta 0:00:01[K    50% |████████████████                | 3.4MB 45.6MB/s eta 0:00:01[K    50% |████████████████                | 3.4MB 45.1MB/s eta 0:00:01[K    50% |████████████████▏               | 3.5MB 45.9MB/s eta 0:00:01[K    50% |████████████████▏               | 3.5MB 45.5MB/s eta 0:00:01[K    50% |████████████████▎               | 3.5MB 46.1MB/s eta 0:00:01[K    50% |████████████████▎               | 3.5MB 46.1MB/s eta 0:00:01[K    51% |████████████████▍               | 3.5MB 45.1MB/s eta 0:00:01[K    51% |████████████████▍               | 3.5MB 45.5MB/s eta 0:00:01[K    51% |████████████████▌               | 3.5MB 45.4MB/s eta 0:00:01[K    51% |████████████████▌               | 3.5MB 42.5MB/s eta 0:00:01[K    51% |████████████████▌               | 3.5MB 42.1MB/s eta 0:00:01[K    51% |████████████████▋               | 3.5MB 39.1MB/s eta 0:00:01[K    51% |████████████████▋               | 3.6MB 38.3MB/s eta 0:00:01[K    52% |████████████████▊               | 3.6MB 37.8MB/s eta 0:00:01[K    52% |████████████████▊               | 3.6MB 36.9MB/s eta 0:00:01[K    52% |████████████████▉               | 3.6MB 37.2MB/s eta 0:00:01[K    52% |████████████████▉               | 3.6MB 37.0MB/s eta 0:00:01[K    52% |████████████████▉               | 3.6MB 36.6MB/s eta 0:00:01[K    52% |█████████████████               | 3.6MB 37.7MB/s eta 0:00:01[K    53% |█████████████████               | 3.6MB 39.1MB/s eta 0:00:01[K    53% |█████████████████               | 3.6MB 40.7MB/s eta 0:00:01[K    53% |█████████████████               | 3.6MB 43.6MB/s eta 0:00:01[K    53% |█████████████████▏              | 3.7MB 44.4MB/s eta 0:00:01[K    53% |█████████████████▏              | 3.7MB 46.1MB/s eta 0:00:01[K    53% |█████████████████▏              | 3.7MB 46.5MB/s eta 0:00:01[K    53% |█████████████████▎              | 3.7MB 46.4MB/s eta 0:00:01[K    54% |█████████████████▎              | 3.7MB 48.1MB/s eta 0:00:01[K    54% |█████████████████▍              | 3.7MB 48.6MB/s eta 0:00:01[K    54% |█████████████████▍              | 3.7MB 47.7MB/s eta 0:00:01[K    54% |█████████████████▌              | 3.7MB 48.2MB/s eta 0:00:01[K    54% |███████████████���█▌              | 3.7MB 46.9MB/s eta 0:00:01[K    54% |█████████████████▌              | 3.7MB 48.1MB/s eta 0:00:01[K    54% |█████████████████▋              | 3.8MB 47.7MB/s eta 0:00:01[K    55% |█████████████████▋              | 3.8MB 46.9MB/s eta 0:00:01[K    55% |█████████████████▊              | 3.8MB 48.5MB/s eta 0:00:01[K    55% |█████████████████▊              | 3.8MB 48.4MB/s eta 0:00:01[K    55% |█████████████████▉              | 3.8MB 48.4MB/s eta 0:00:01[K    55% |█████████████████▉              | 3.8MB 48.5MB/s eta 0:00:01[K    55% |█████████████████▉              | 3.8MB 48.5MB/s eta 0:00:01[K    56% |██████████████████              | 3.8MB 49.4MB/s eta 0:00:01[K    56% |██████████████████              | 3.8MB 49.0MB/s eta 0:00:01[K    56% |██████████████████              | 3.9MB 47.7MB/s eta 0:00:01[K    56% |██████████████████              | 3.9MB 49.1MB/s eta 0:00:01[K    56% |██████████████████▏             | 3.9MB 48.7MB/s eta 0:00:01[K    56% |██████████████████▏             | 3.9MB 48.6MB/s eta 0:00:01[K    56% |██████████████████▏             | 3.9MB 48.4MB/s eta 0:00:01[K    57% |██████████████████▎             | 3.9MB 47.5MB/s eta 0:00:01[K    57% |██████████████████▎             | 3.9MB 47.8MB/s eta 0:00:01[K    57% |██████████████████▍             | 3.9MB 47.5MB/s eta 0:00:01[K    57% |██████████████████▍             | 3.9MB 46.5MB/s eta 0:00:01[K    57% |██████████████████▌             | 3.9MB 48.2MB/s eta 0:00:01[K    57% |██████████████████▌             | 4.0MB 48.1MB/s eta 0:00:01[K    57% |██████████████████▌             | 4.0MB 47.2MB/s eta 0:00:01[K    58% |██████████████████▋             | 4.0MB 47.5MB/s eta 0:00:01[K    58% |██████████████████▋             | 4.0MB 46.1MB/s eta 0:00:01[K    58% |██████████████████▊             | 4.0MB 47.4MB/s eta 0:00:01[K    58% |██████████████████▊             | 4.0MB 47.0MB/s eta 0:00:01[K    58% |██████████████████▉             | 4.0MB 46.0MB/s eta 0:00:01[K    58% |██████████████████▉             | 4.0MB 46.3MB/s eta 0:00:01[K    59% |███████████████████             | 4.0MB 45.9MB/s eta 0:00:01[K    59% |████████████████���██             | 4.0MB 45.4MB/s eta 0:00:01[K    59% |███████████████████             | 4.1MB 45.3MB/s eta 0:00:01[K    59% |███████████████████             | 4.1MB 44.4MB/s eta 0:00:01[K    59% |███████████████████             | 4.1MB 44.7MB/s eta 0:00:01[K    59% |███████████████████▏            | 4.1MB 44.7MB/s eta 0:00:01[K    59% |███████████████████▏            | 4.1MB 42.3MB/s eta 0:00:01[K    60% |███████████████████▎            | 4.1MB 42.9MB/s eta 0:00:01[K    60% |███████████████████▎            | 4.1MB 42.7MB/s eta 0:00:01[K    60% |███████████████████▎            | 4.1MB 42.9MB/s eta 0:00:01[K    60% |███████████████████▍            | 4.1MB 42.8MB/s eta 0:00:01[K    60% |███████████████████▍            | 4.1MB 41.7MB/s eta 0:00:01[K    60% |███████████████████▌            | 4.2MB 42.4MB/s eta 0:00:01[K    60% |███████████████████▌            | 4.2MB 42.5MB/s eta 0:00:01[K    61% |███████████████████▋            | 4.2MB 41.9MB/s eta 0:00:01[K    61% |███████████████████▋            | 4.2MB 42.5MB/s eta 0:00:01[K    61% |███████████████████▋            | 4.2MB 43.8MB/s eta 0:00:01[K    61% |███████████████████▊            | 4.2MB 43.8MB/s eta 0:00:01[K    61% |███████████████████▊            | 4.2MB 43.7MB/s eta 0:00:01[K    61% |███████████████████▉            | 4.2MB 42.7MB/s eta 0:00:01[K    62% |███████████████████▉            | 4.2MB 43.4MB/s eta 0:00:01[K    62% |████████████████████            | 4.2MB 43.5MB/s eta 0:00:01[K    62% |████████████████████            | 4.3MB 42.0MB/s eta 0:00:01[K    62% |████████████████████            | 4.3MB 42.8MB/s eta 0:00:01[K    62% |████████████████████            | 4.3MB 42.5MB/s eta 0:00:01[K    62% |████████████████████            | 4.3MB 42.5MB/s eta 0:00:01[K    62% |████████████████████▏           | 4.3MB 42.2MB/s eta 0:00:01[K    63% |████████████████████▏           | 4.3MB 41.4MB/s eta 0:00:01[K    63% |████████████████████▎           | 4.3MB 42.5MB/s eta 0:00:01[K    63% |████████████████████▎           | 4.3MB 42.9MB/s eta 0:00:01[K    63% |████████████████████▎           | 4.3MB 41.9MB/s eta 0:00:01[K    63% |████████████████████▍           | 4.4MB 41.5MB/s eta 0:00:01[K    63% |████████████████████▍           | 4.4MB 40.4MB/s eta 0:00:01[K    63% |████████████████████▌           | 4.4MB 39.6MB/s eta 0:00:01[K    64% |████████████████████▌           | 4.4MB 38.7MB/s eta 0:00:01[K    64% |████████████████████▋           | 4.4MB 37.8MB/s eta 0:00:01[K    64% |████████████████████▋           | 4.4MB 38.3MB/s eta 0:00:01[K    64% |████████████████████▋           | 4.4MB 38.6MB/s eta 0:00:01[K    64% |████████████████████▊           | 4.4MB 37.8MB/s eta 0:00:01[K    64% |████████████████████▊           | 4.4MB 38.7MB/s eta 0:00:01[K    65% |████████████████████▉           | 4.4MB 38.7MB/s eta 0:00:01[K    65% |████████████████████▉           | 4.5MB 39.8MB/s eta 0:00:01[K    65% |█████████████████████           | 4.5MB 41.7MB/s eta 0:00:01[K    65% |█████████████████████           | 4.5MB 42.6MB/s eta 0:00:01[K    65% |█████████████████████           | 4.5MB 45.2MB/s eta 0:00:01[K    65% |█████████████████████           | 4.5MB 45.9MB/s eta 0:00:01[K    65% |█████████████████████           | 4.5MB 46.0MB/s eta 0:00:01[K    66% |█████████████████████▏          | 4.5MB 47.0MB/s eta 0:00:01[K    66% |█████████████████████▏          | 4.5MB 47.9MB/s eta 0:00:01[K    66% |█████████████████████▎          | 4.5MB 47.9MB/s eta 0:00:01[K    66% |█████████████████████▎          | 4.5MB 48.3MB/s eta 0:00:01[K    66% |█████████████████████▍          | 4.6MB 48.0MB/s eta 0:00:01[K    66% |█████████████████████▍          | 4.6MB 49.4MB/s eta 0:00:01[K    66% |█████████████████████▍          | 4.6MB 48.9MB/s eta 0:00:01[K    67% |█████████████████████▌          | 4.6MB 47.5MB/s eta 0:00:01[K    67% |█████████████████████▌          | 4.6MB 48.8MB/s eta 0:00:01[K    67% |█████████████████████▋          | 4.6MB 47.7MB/s eta 0:00:01[K    67% |█████████████████████▋          | 4.6MB 47.7MB/s eta 0:00:01[K    67% |█████████████████████▊          | 4.6MB 47.8MB/s eta 0:00:01[K    67% |████████���████████████▊          | 4.6MB 46.6MB/s eta 0:00:01[K    68% |█████████████████████▊          | 4.6MB 47.9MB/s eta 0:00:01[K    68% |█████████████████████▉          | 4.7MB 45.8MB/s eta 0:00:01[K    68% |█████████████████████▉          | 4.7MB 44.2MB/s eta 0:00:01[K    68% |██████████████████████          | 4.7MB 45.3MB/s eta 0:00:01[K    68% |██████████████████████          | 4.7MB 45.4MB/s eta 0:00:01[K    68% |██████████████████████          | 4.7MB 45.5MB/s eta 0:00:01[K    68% |██████████████████████          | 4.7MB 46.4MB/s eta 0:00:01[K    69% |██████████████████████          | 4.7MB 45.6MB/s eta 0:00:01[K    69% |██████████████████████▏         | 4.7MB 46.4MB/s eta 0:00:01[K    69% |██████████████████████▏         | 4.7MB 46.4MB/s eta 0:00:01[K    69% |██████████████████████▎         | 4.8MB 45.7MB/s eta 0:00:01[K    69% |██████████████████████▎         | 4.8MB 48.8MB/s eta 0:00:01[K    69% |██████████████████████▍         | 4.8MB 49.8MB/s eta 0:00:01[K    69% |██████████████████████▍         | 4.8MB 49.9MB/s eta 0:00:01[K    70% |██████████████████████▍         | 4.8MB 50.3MB/s eta 0:00:01[K    70% |██████████████████████▌         | 4.8MB 48.0MB/s eta 0:00:01[K    70% |██████████████████████▌         | 4.8MB 49.0MB/s eta 0:00:01[K    70% |██████████████████████▋         | 4.8MB 49.0MB/s eta 0:00:01[K    70% |██████████████████████▋         | 4.8MB 48.1MB/s eta 0:00:01[K    70% |██████████████████████▊         | 4.8MB 49.5MB/s eta 0:00:01[K    71% |██████████████████████▊         | 4.9MB 49.1MB/s eta 0:00:01[K    71% |██████████████████████▊         | 4.9MB 48.9MB/s eta 0:00:01[K    71% |██████████████████████▉         | 4.9MB 49.0MB/s eta 0:00:01[K    71% |██████████████████████▉         | 4.9MB 47.0MB/s eta 0:00:01[K    71% |███████████████████████         | 4.9MB 47.8MB/s eta 0:00:01[K    71% |███████████████████████         | 4.9MB 48.6MB/s eta 0:00:01[K    71% |███████████████████████         | 4.9MB 47.6MB/s eta 0:00:01[K    72% |█████���█████████████████         | 4.9MB 48.4MB/s eta 0:00:01[K    72% |███████████████████████         | 4.9MB 48.2MB/s eta 0:00:01[K    72% |███████████████████████▏        | 4.9MB 48.1MB/s eta 0:00:01[K    72% |███████████████████████▏        | 5.0MB 48.1MB/s eta 0:00:01[K    72% |███████████████████████▎        | 5.0MB 47.3MB/s eta 0:00:01[K    72% |███████████████████████▎        | 5.0MB 48.1MB/s eta 0:00:01[K    72% |███████████████████████▍        | 5.0MB 48.2MB/s eta 0:00:01[K    73% |███████████████████████▍        | 5.0MB 47.3MB/s eta 0:00:01[K    73% |███████████████████████▌        | 5.0MB 48.8MB/s eta 0:00:01[K    73% |███████████████████████▌        | 5.0MB 48.9MB/s eta 0:00:01[K    73% |███████████████████████▌        | 5.0MB 48.8MB/s eta 0:00:01[K    73% |███████████████████████▋        | 5.0MB 48.8MB/s eta 0:00:01[K    73% |███████████████████████▋        | 5.0MB 47.9MB/s eta 0:00:01[K    74% |███████████████████████▊        | 5.1MB 49.1MB/s eta 0:00:01[K    74% |███████████████████████▊        | 5.1MB 49.2MB/s eta 0:00:01[K    74% |███████████████████████▉        | 5.1MB 48.4MB/s eta 0:00:01[K    74% |███████████████████████▉        | 5.1MB 50.2MB/s eta 0:00:01[K    74% |███████████████████████▉        | 5.1MB 50.4MB/s eta 0:00:01[K    74% |████████████████████████        | 5.1MB 50.4MB/s eta 0:00:01[K    74% |████████████████████████        | 5.1MB 50.4MB/s eta 0:00:01[K    75% |████████████████████████        | 5.1MB 48.6MB/s eta 0:00:01[K    75% |████████████████████████        | 5.1MB 49.7MB/s eta 0:00:01[K    75% |████████████████████████▏       | 5.2MB 49.3MB/s eta 0:00:01[K    75% |████████████████████████▏       | 5.2MB 45.6MB/s eta 0:00:01[K    75% |████████████████████████▏       | 5.2MB 44.1MB/s eta 0:00:01[K    75% |████████████████████████▎       | 5.2MB 40.2MB/s eta 0:00:01[K    75% |████████████████████████▎       | 5.2MB 39.2MB/s eta 0:00:01[K    76% |████████████████���███████▍       | 5.2MB 37.8MB/s eta 0:00:01[K    76% |████████████████████████▍       | 5.2MB 36.5MB/s eta 0:00:01[K    76% |████████████████████████▌       | 5.2MB 36.4MB/s eta 0:00:01[K    76% |████████████████████████▌       | 5.2MB 36.3MB/s eta 0:00:01[K    76% |████████████████████████▌       | 5.2MB 35.6MB/s eta 0:00:01[K    76% |████████████████████████▋       | 5.3MB 36.3MB/s eta 0:00:01[K    77% |████████████████████████▋       | 5.3MB 37.8MB/s eta 0:00:01[K    77% |████████████████████████▊       | 5.3MB 39.4MB/s eta 0:00:01[K    77% |████████████████████████▊       | 5.3MB 42.8MB/s eta 0:00:01[K    77% |████████████████████████▉       | 5.3MB 42.9MB/s eta 0:00:01[K    77% |████████████████████████▉       | 5.3MB 45.4MB/s eta 0:00:01[K    77% |████████████████████████▉       | 5.3MB 46.5MB/s eta 0:00:01[K    77% |█████████████████████████       | 5.3MB 46.3MB/s eta 0:00:01[K    78% |█████████████████████████       | 5.3MB 48.1MB/s eta 0:00:01[K    78% |█████████████████████████       | 5.3MB 47.0MB/s eta 0:00:01[K    78% |█████████████████████████       | 5.4MB 47.1MB/s eta 0:00:01[K    78% |█████████████████████████▏      | 5.4MB 47.5MB/s eta 0:00:01[K    78% |█████████████████████████▏      | 5.4MB 46.2MB/s eta 0:00:01[K    78% |█████████████████████████▏      | 5.4MB 47.5MB/s eta 0:00:01[K    78% |█████████████████████████▎      | 5.4MB 48.0MB/s eta 0:00:01[K    79% |█████████████████████████▎      | 5.4MB 47.1MB/s eta 0:00:01[K    79% |█████████████████████████▍      | 5.4MB 48.0MB/s eta 0:00:01[K    79% |█████████████████████████▍      | 5.4MB 48.0MB/s eta 0:00:01[K    79% |█████████████████████████▌      | 5.4MB 48.1MB/s eta 0:00:01[K    79% |█████████████████████████▌      | 5.4MB 49.4MB/s eta 0:00:01[K    79% |█████████████████████████▌      | 5.5MB 48.5MB/s eta 0:00:01[K    80% |█████████████████████████▋      | 5.5MB 49.4MB/s eta 0:00:01[K    80% |████���████████████████████▋      | 5.5MB 49.5MB/s eta 0:00:01[K    80% |█████████████████████████▊      | 5.5MB 48.1MB/s eta 0:00:01[K    80% |█████████████████████████▊      | 5.5MB 48.8MB/s eta 0:00:01[K    80% |█████████████████████████▉      | 5.5MB 48.8MB/s eta 0:00:01[K    80% |█████████████████████████▉      | 5.5MB 48.7MB/s eta 0:00:01[K    80% |██████████████████████████      | 5.5MB 48.9MB/s eta 0:00:01[K    81% |██████████████████████████      | 5.5MB 46.6MB/s eta 0:00:01[K    81% |██████████████████████████      | 5.6MB 47.7MB/s eta 0:00:01[K    81% |██████████████████████████      | 5.6MB 47.2MB/s eta 0:00:01[K    81% |██████████████████████████      | 5.6MB 45.7MB/s eta 0:00:01[K    81% |██████████████████████████▏     | 5.6MB 46.3MB/s eta 0:00:01[K    81% |██████████████████████████▏     | 5.6MB 46.3MB/s eta 0:00:01[K    81% |██████████████████████████▎     | 5.6MB 46.3MB/s eta 0:00:01[K    82% |███████████���██████████████▎     | 5.6MB 46.0MB/s eta 0:00:01[K    82% |██████████████████████████▎     | 5.6MB 44.8MB/s eta 0:00:01[K    82% |██████████████████████████▍     | 5.6MB 44.9MB/s eta 0:00:01[K    82% |██████████████████████████▍     | 5.6MB 45.7MB/s eta 0:00:01[K    82% |██████████████████████████▌     | 5.7MB 44.6MB/s eta 0:00:01[K    82% |██████████████████████████▌     | 5.7MB 45.7MB/s eta 0:00:01[K    83% |██████████████████████████▋     | 5.7MB 45.2MB/s eta 0:00:01[K    83% |██████████████████████████▋     | 5.7MB 45.7MB/s eta 0:00:01[K    83% |██████████████████████████▋     | 5.7MB 45.3MB/s eta 0:00:01[K    83% |██████████████████████████▊     | 5.7MB 44.5MB/s eta 0:00:01[K    83% |██████████████████████████▊     | 5.7MB 44.4MB/s eta 0:00:01[K    83% |██████████████████████████▉     | 5.7MB 44.3MB/s eta 0:00:01[K    83% |██████████████████████████▉     | 5.7MB 43.9MB/s eta 0:00:01[K    84% |████████████���██████████████     | 5.7MB 45.1MB/s eta 0:00:01[K    84% |███████████████████████████     | 5.8MB 44.6MB/s eta 0:00:01[K    84% |███████████████████████████     | 5.8MB 44.8MB/s eta 0:00:01[K    84% |███████████████████████████     | 5.8MB 44.9MB/s eta 0:00:01[K    84% |███████████████████████████     | 5.8MB 42.2MB/s eta 0:00:01[K    84% |███████████████████████████▏    | 5.8MB 41.8MB/s eta 0:00:01[K    84% |███████████████████████████▏    | 5.8MB 39.7MB/s eta 0:00:01[K    85% |███████████████████████████▎    | 5.8MB 38.6MB/s eta 0:00:01[K    85% |███████████████████████████▎    | 5.8MB 38.2MB/s eta 0:00:01[K    85% |███████████████████████████▎    | 5.8MB 37.3MB/s eta 0:00:01[K    85% |███████████████████████████▍    | 5.8MB 36.8MB/s eta 0:00:01[K    85% |███████████████████████████▍    | 5.9MB 36.6MB/s eta 0:00:01[K    85% |███████████████████████████▌    | 5.9MB 35.2MB/s eta 0:00:01[K    86% |███████���███████████████████▌    | 5.9MB 35.9MB/s eta 0:00:01[K    86% |███████████████████████████▋    | 5.9MB 36.1MB/s eta 0:00:01[K    86% |███████████████████████████▋    | 5.9MB 36.4MB/s eta 0:00:01[K    86% |███████████████████████████▋    | 5.9MB 38.4MB/s eta 0:00:01[K    86% |███████████████████████████▊    | 5.9MB 39.0MB/s eta 0:00:01[K    86% |███████████████████████████▊    | 5.9MB 40.0MB/s eta 0:00:01[K    86% |███████████████████████████▉    | 5.9MB 40.7MB/s eta 0:00:01[K    87% |███████████████████████████▉    | 5.9MB 40.1MB/s eta 0:00:01[K    87% |████████████████████████████    | 6.0MB 41.4MB/s eta 0:00:01[K    87% |████████████████████████████    | 6.0MB 41.9MB/s eta 0:00:01[K    87% |████████████████████████████    | 6.0MB 40.8MB/s eta 0:00:01[K    87% |████████████████████████████    | 6.0MB 42.6MB/s eta 0:00:01[K    87% |████████████████████████████    | 6.0MB 42.4MB/s eta 0:00:01[K    87% |████████████████████████████▏   | 6.0MB 42.5MB/s eta 0:00:01[K    88% |████████████████████████████▏   | 6.0MB 43.0MB/s eta 0:00:01[K    88% |████████████████████████████▎   | 6.0MB 42.0MB/s eta 0:00:01[K    88% |████████████████████████████▎   | 6.0MB 41.9MB/s eta 0:00:01[K    88% |████████████████████████████▍   | 6.1MB 41.5MB/s eta 0:00:01[K    88% |████████████████████████████▍   | 6.1MB 40.9MB/s eta 0:00:01[K    88% |████████████████████████████▍   | 6.1MB 42.0MB/s eta 0:00:01[K    88% |████████████████████████████▌   | 6.1MB 42.2MB/s eta 0:00:01[K    89% |████████████████████████████▌   | 6.1MB 42.2MB/s eta 0:00:01[K    89% |████████████████████████████▋   | 6.1MB 42.5MB/s eta 0:00:01[K    89% |████████████████████████████▋   | 6.1MB 41.5MB/s eta 0:00:01[K    89% |████████████████████████████▊   | 6.1MB 42.1MB/s eta 0:00:01[K    89% |██████████████████████████���█▊   | 6.1MB 42.3MB/s eta 0:00:01[K    89% |████████████████████████████▊   | 6.1MB 42.5MB/s eta 0:00:01[K    90% |████████████████████████████▉   | 6.2MB 43.9MB/s eta 0:00:01[K    90% |████████████████████████████▉   | 6.2MB 43.8MB/s eta 0:00:01[K    90% |█████████████████████████████   | 6.2MB 44.1MB/s eta 0:00:01[K    90% |█████████████████████████████   | 6.2MB 45.1MB/s eta 0:00:01[K    90% |█████████████████████████████   | 6.2MB 44.3MB/s eta 0:00:01[K    90% |█████████████████████████████   | 6.2MB 46.0MB/s eta 0:00:01[K    90% |█████████████████████████████   | 6.2MB 45.9MB/s eta 0:00:01[K    91% |█████████████████████████████▏  | 6.2MB 45.6MB/s eta 0:00:01[K    91% |█████████████████████████████▏  | 6.2MB 47.1MB/s eta 0:00:01[K    91% |█████████████████████████████▎  | 6.2MB 47.6MB/s eta 0:00:01[K    91% |█████████████████████████████▎  | 6.3MB 48.2MB/s eta 0:00:01[K    91% |███████���█████████████████████▍  | 6.3MB 48.3MB/s eta 0:00:01[K    91% |█████████████████████████████▍  | 6.3MB 46.9MB/s eta 0:00:01[K    91% |█████████████████████████████▍  | 6.3MB 45.3MB/s eta 0:00:01[K    92% |█████████████████████████████▌  | 6.3MB 42.7MB/s eta 0:00:01[K    92% |█████████████████████████████▌  | 6.3MB 40.2MB/s eta 0:00:01[K    92% |█████████████████████████████▋  | 6.3MB 41.0MB/s eta 0:00:01[K    92% |█████████████████████████████▋  | 6.3MB 39.2MB/s eta 0:00:01[K    92% |█████████████████████████████▊  | 6.3MB 39.0MB/s eta 0:00:01[K    92% |█████████████████████████████▊  | 6.3MB 38.3MB/s eta 0:00:01[K    93% |█████████████████████████████▊  | 6.4MB 37.1MB/s eta 0:00:01[K    93% |█████████████████████████████▉  | 6.4MB 36.8MB/s eta 0:00:01[K    93% |█████████████████████████████▉  | 6.4MB 35.8MB/s eta 0:00:01[K    93% |██████████████████████████���███  | 6.4MB 36.3MB/s eta 0:00:01[K    93% |██████████████████████████████  | 6.4MB 38.7MB/s eta 0:00:01[K    93% |██████████████████████████████  | 6.4MB 39.7MB/s eta 0:00:01[K    93% |██████████████████████████████  | 6.4MB 40.0MB/s eta 0:00:01[K    94% |██████████████████████████████  | 6.4MB 41.0MB/s eta 0:00:01[K    94% |██████████████████████████████▏ | 6.4MB 40.2MB/s eta 0:00:01[K    94% |██████████████████████████████▏ | 6.5MB 41.5MB/s eta 0:00:01[K    94% |██████████████████████████████▎ | 6.5MB 41.8MB/s eta 0:00:01[K    94% |██████████████████████████████▎ | 6.5MB 41.9MB/s eta 0:00:01[K    94% |██████████████████████████████▍ | 6.5MB 44.0MB/s eta 0:00:01[K    94% |██████████████████████████████▍ | 6.5MB 44.1MB/s eta 0:00:01[K    95% |██████████████████████████████▌ | 6.5MB 44.1MB/s eta 0:00:01[K    95% |██████████████████████████████▌ | 6.5MB 44.5MB/s eta 0:00:01[K    95% |██████████████████████████████▌ | 6.5MB 43.4MB/s eta 0:00:01[K    95% |██████████████████████████████▋ | 6.5MB 44.6MB/s eta 0:00:01[K    95% |██████████████████████████████▋ | 6.5MB 43.9MB/s eta 0:00:01[K    95% |██████████████████████████████▊ | 6.6MB 43.1MB/s eta 0:00:01[K    96% |██████████████████████████████▊ | 6.6MB 43.9MB/s eta 0:00:01[K    96% |██████████████████████████████▉ | 6.6MB 44.0MB/s eta 0:00:01[K    96% |██████████████████████████████▉ | 6.6MB 44.0MB/s eta 0:00:01[K    96% |██████████████████████████████▉ | 6.6MB 44.0MB/s eta 0:00:01[K    96% |███████████████████████████████ | 6.6MB 42.9MB/s eta 0:00:01[K    96% |███████████████████████████████ | 6.6MB 43.5MB/s eta 0:00:01[K    96% |███████████████████████████████ | 6.6MB 43.7MB/s eta 0:00:01[K    97% |███████████████████████████████ | 6.6MB 42.9MB/s eta 0:00:01[K    97% |██████���████████████████████████▏| 6.6MB 44.4MB/s eta 0:00:01[K    97% |███████████████████████████████▏| 6.7MB 44.5MB/s eta 0:00:01[K    97% |███████████████████████████████▏| 6.7MB 44.6MB/s eta 0:00:01[K    97% |███████████████████████████████▎| 6.7MB 44.7MB/s eta 0:00:01[K    97% |███████████████████████████████▎| 6.7MB 43.8MB/s eta 0:00:01[K    97% |███████████████████████████████▍| 6.7MB 44.7MB/s eta 0:00:01[K    98% |███████████████████████████████▍| 6.7MB 45.1MB/s eta 0:00:01[K    98% |███████████████████████████████▌| 6.7MB 44.4MB/s eta 0:00:01[K    98% |███████████████████████████████▌| 6.7MB 44.9MB/s eta 0:00:01[K    98% |███████████████████████████████▌| 6.7MB 44.9MB/s eta 0:00:01[K    98% |███████████████████████████████▋| 6.7MB 44.9MB/s eta 0:00:01[K    98% |███████████████████████████████▋| 6.8MB 44.9MB/s eta 0:00:01[K    99% |█████████���█████████████████████▊| 6.8MB 43.6MB/s eta 0:00:01[K    99% |███████████████████████████████▊| 6.8MB 44.1MB/s eta 0:00:01[K    99% |███████████████████████████████▉| 6.8MB 42.6MB/s eta 0:00:01[K    99% |███████████████████████████████▉| 6.8MB 40.3MB/s eta 0:00:01[K    99% |███████████████████████████████▉| 6.8MB 40.5MB/s eta 0:00:01[K    99% |████████████████████████████████| 6.8MB 40.2MB/s eta 0:00:01[K    99% |████████████████████████████████| 6.8MB 40.4MB/s eta 0:00:01[K    100% |████████████████████████████████| 6.8MB 210kB/s 
[?25hCollecting coverage==3.6 (from -r requirements.txt (line 4))
  Downloading https://files.pythonhosted.org/packages/d2/2d/e15d38b0a34a3e88e3c164a7ec04ed43f45869c20304db13875b24002506/coverage-3.6.tar.gz (232kB)
[?25l[K    4% |█▍                              | 10kB 40.9MB/s eta 0:00:01[K    8% |██▉                             | 20kB 37.7MB/s eta 0:00:01[K    13% |████▎                           | 30kB 38.9MB/s eta 0:00:01[K    17% |█████▋                          | 40kB 40.1MB/s eta 0:00:01[K    22% |███████                         | 51kB 41.1MB/s eta 0:00:01[K    26% |████████▌                       | 61kB 43.1MB/s eta 0:00:01[K    30% |█████████▉                      | 71kB 43.5MB/s eta 0:00:01[K    35% |███████████▎                    | 81kB 43.9MB/s eta 0:00:01[K    39% |████████████▊                   | 92kB 44.0MB/s eta 0:00:01[K    44% |██████████████▏                 | 102kB 44.2MB/s eta 0:00:01[K    48% |███████████████▌                | 112kB 45.6MB/s eta 0:00:01[K    52% |█████████████████               | 122kB 47.2MB/s eta 0:00:01[K    57% |██████████████████▍             | 133kB 47.9MB/s eta 0:00:01[K    61% |███████████████████▊            | 143kB 49.2MB/s eta 0:00:01[K    66% |█████████████████████▏          | 153kB 49.4MB/s eta 0:00:01[K    70% |██████████████████████▋         | 163kB 48.7MB/s eta 0:00:01[K    75% |████████████████████████        | 174kB 49.8MB/s eta 0:00:01[K    79% |█████████████████████████▍      | 184kB 48.9MB/s eta 0:00:01[K    83% |██████████████████████████▉     | 194kB 49.3MB/s eta 0:00:01[K    88% |████████████████████████████▎   | 204kB 48.2MB/s eta 0:00:01[K    92% |█████████████████████████████▋  | 215kB 47.1MB/s eta 0:00:01[K    97% |███████████████████████████████ | 225kB 46.7MB/s eta 0:00:01[K    100% |████████████████████████████████| 235kB 5.6MB/s 
[?25hCollecting dj-database-url==0.2.1 (from -r requirements.txt (line 5))
  Downloading https://files.pythonhosted.org/packages/a6/94/72572715f45dd132ddc1e26aa4e8c2b13395759386a541e7f00124ceda11/dj-database-url-0.2.1.tar.gz
Collecting gunicorn==0.17.4 (from -r requirements.txt (line 6))
  Downloading https://files.pythonhosted.org/packages/94/a0/6af15d3f7e8d259e30dfb7077405b8a16f2f1c5e45e842e9e808a30c1f7f/gunicorn-0.17.4.tar.gz (372kB)
[?25l[K    2% |▉                               | 10kB 31.3MB/s eta 0:00:01[K    5% |█▊                              | 20kB 27.9MB/s eta 0:00:01[K    8% |██▋                             | 30kB 29.8MB/s eta 0:00:01[K    10% |███▌                            | 40kB 30.5MB/s eta 0:00:01[K    13% |████▍                           | 51kB 31.5MB/s eta 0:00:01[K    16% |█████▎                          | 61kB 33.9MB/s eta 0:00:01[K    19% |██████▏                         | 71kB 34.5MB/s eta 0:00:01[K    21% |███████                         | 81kB 34.8MB/s eta 0:00:01[K    24% |████████                        | 92kB 36.3MB/s eta 0:00:01[K    27% |████████▉                       | 102kB 36.9MB/s eta 0:00:01[K    30% |█████████▊                      | 112kB 38.6MB/s eta 0:00:01[K    32% |██████████▌                     | 122kB 41.5MB/s eta 0:00:01[K    35% |███████████▍                    | 133kB 42.9MB/s eta 0:00:01[K    38% |████████████▎                   | 143kB 45.5MB/s eta 0:00:01[K    41% |█████████████▏                  | 153kB 46.8MB/s eta 0:00:01[K    43% |██████████████                  | 163kB 46.2MB/s eta 0:00:01[K    46% |██���████████████                 | 174kB 47.7MB/s eta 0:00:01[K    49% |███████████████▉                | 184kB 48.4MB/s eta 0:00:01[K    52% |████████████████▊               | 194kB 48.1MB/s eta 0:00:01[K    54% |█████████████████▋              | 204kB 47.4MB/s eta 0:00:01[K    57% |██████████████████▌             | 215kB 46.5MB/s eta 0:00:01[K    60% |███████████████████▍            | 225kB 46.9MB/s eta 0:00:01[K    63% |████████████████████▏           | 235kB 46.5MB/s eta 0:00:01[K    65% |█████████████████████           | 245kB 45.1MB/s eta 0:00:01[K    68% |██████████████████████          | 256kB 44.7MB/s eta 0:00:01[K    71% |██████████████████████▉         | 266kB 44.2MB/s eta 0:00:01[K    74% |███████████████████████▊        | 276kB 44.2MB/s eta 0:00:01[K    76% |████████████████████████▋       | 286kB 44.5MB/s eta 0:00:01[K    79% |█████████████████████████▌      | 296kB 44.2MB/s eta 0:00:01[K    82% |██████████████████████████▍     | 307kB 46.0MB/s eta 0:00:01[K    85% |███████████████████████████▎    | 317kB 46.6MB/s eta 0:00:01[K    87% |████████████████████████████▏   | 327kB 46.4MB/s eta 0:00:01[K    90% |█████████████████████████████   | 337kB 47.2MB/s eta 0:00:01[K    93% |██████████████████████████████  | 348kB 47.4MB/s eta 0:00:01[K    96% |██████████████████████████████▊ | 358kB 47.8MB/s eta 0:00:01[K    98% |███████████████████████████████▋| 368kB 48.0MB/s eta 0:00:01[K    100% |████████████████████████████████| 378kB 3.8MB/s 
[?25hCollecting psycopg2==2.7 (from -r requirements.txt (line 7))
  Downloading https://files.pythonhosted.org/packages/a2/23/078baaa57deea8a79185d718fe46a09ad7347735793d5f783fbf81a8a0b8/psycopg2-2.7-cp27-cp27mu-manylinux1_x86_64.whl (2.1MB)
[?25l[K    0% |▏                               | 10kB 42.8MB/s eta 0:00:01[K    0% |▎                               | 20kB 36.0MB/s eta 0:00:01[K    1% |▌                               | 30kB 39.0MB/s eta 0:00:01[K    1% |▋                               | 40kB 39.2MB/s eta 0:00:01[K    2% |▉                               | 51kB 38.6MB/s eta 0:00:01[K    2% |█                               | 61kB 39.9MB/s eta 0:00:01[K    3% |█▏                              | 71kB 40.0MB/s eta 0:00:01[K    3% |█▎                              | 81kB 40.1MB/s eta 0:00:01[K    4% |█▍                              | 92kB 40.9MB/s eta 0:00:01[K    4% |█▋                              | 102kB 40.7MB/s eta 0:00:01[K    5% |█▊                              | 112kB 41.1MB/s eta 0:00:01[K    5% |██                              | 122kB 42.2MB/s eta 0:00:01[K    6% |██                              | 133kB 40.4MB/s eta 0:00:01[K    6% |██▎                             | 143kB 41.2MB/s eta 0:00:01[K    7% |██▍                             | 153kB 41.5MB/s eta 0:00:01[K    7% |██▌                             | 163kB 40.6MB/s eta 0:00:01[K    8% |██▊                             | 174kB 41.3MB/s eta 0:00:01[K    8% |██▉                             | 184kB 41.4MB/s eta 0:00:01[K    9% |███                             | 194kB 41.5MB/s eta 0:00:01[K    9% |███▏                            | 204kB 41.6MB/s eta 0:00:01[K    10% |███▍                            | 215kB 40.7MB/s eta 0:00:01[K    10% |███▌                            | 225kB 41.6MB/s eta 0:00:01[K    11% |███▋                            | 235kB 42.7MB/s eta 0:00:01[K    11% |███▉                            | 245kB 41.9MB/s eta 0:00:01[K    12% |████                            | 256kB 42.9MB/s eta 0:00:01[K    12% |████▏                           | 266kB 43.1MB/s eta 0:00:01[K    13% |████▎                           | 276kB 43.1MB/s eta 0:00:01[K    13% |████▌                           | 286kB 40.0MB/s eta 0:00:01[K    14% |████▋                           | 296kB 37.6MB/s eta 0:00:01[K    14% |████▊                           | 307kB 37.5MB/s eta 0:00:01[K    15% |█████                           | 317kB 37.0MB/s eta 0:00:01[K    15% |█████                           | 327kB 35.8MB/s eta 0:00:01[K    16% |█████▎                          | 337kB 36.6MB/s eta 0:00:01[K    16% |█████▍                          | 348kB 36.3MB/s eta 0:00:01[K    17% |█████▋                          | 358kB 35.8MB/s eta 0:00:01[K    17% |█████▊                          | 368kB 35.5MB/s eta 0:00:01[K    18% |██████                          | 378kB 35.3MB/s eta 0:00:01[K    18% |██████                          | 389kB 38.6MB/s eta 0:00:01[K    19% |██████▏                         | 399kB 40.1MB/s eta 0:00:01[K    19% |██████▍                         | 409kB 40.4MB/s eta 0:00:01[K    20% |██████▌                         | 419kB 42.0MB/s eta 0:00:01[K    20% |██████▊                         | 430kB 42.6MB/s eta 0:00:01[K    21% |██████▉                         | 440kB 42.7MB/s eta 0:00:01[K    21% |███████                         | 450kB 42.1MB/s eta 0:00:01[K    22% |███████▏                        | 460kB 42.2MB/s eta 0:00:01[K    22% |███████▎                        | 471kB 42.7MB/s eta 0:00:01[K    23% |███████▌                        | 481kB 42.3MB/s eta 0:00:01[K    23% |███████▋                        | 491kB 40.5MB/s eta 0:00:01[K    24% |███████▉                        | 501kB 42.0MB/s eta 0:00:01[K    24% |████████                        | 512kB 41.7MB/s eta 0:00:01[K    25% |████████▏                       | 522kB 42.2MB/s eta 0:00:01[K    25% |████████▎                       | 532kB 42.5MB/s eta 0:00:01[K    26% |████████▍                       | 542kB 41.4MB/s eta 0:00:01[K    26% |████████▋                       | 552kB 43.2MB/s eta 0:00:01[K    27% |████████▊                       | 563kB 43.5MB/s eta 0:00:01[K    27% |█████████                       | 573kB 44.0MB/s eta 0:00:01[K    28% |█████████                       | 583kB 44.9MB/s eta 0:00:01[K    28% |█████████▎                      | 593kB 45.7MB/s eta 0:00:01[K    29% |█████████▍                      | 604kB 45.4MB/s eta 0:00:01[K    29% |█████████▌                      | 614kB 46.2MB/s eta 0:00:01[K    30% |█████████▊                      | 624kB 43.8MB/s eta 0:00:01[K    30% |█████████▉                      | 634kB 44.5MB/s eta 0:00:01[K    31% |██████████                      | 645kB 44.9MB/s eta 0:00:01[K    31% |██████████▏                     | 655kB 44.2MB/s eta 0:00:01[K    32% |██████████▍                     | 665kB 45.0MB/s eta 0:00:01[K    32% |██████████▌                     | 675kB 44.3MB/s eta 0:00:01[K    33% |██████████▊                     | 686kB 44.7MB/s eta 0:00:01[K    33% |██████████▉                     | 696kB 44.7MB/s eta 0:00:01[K    34% |███████████                     | 706kB 44.2MB/s eta 0:00:01[K    34% |███████████▏                    | 716kB 45.1MB/s eta 0:00:01[K    35% |███████████▎                    | 727kB 45.9MB/s eta 0:00:01[K    35% |███████████▌                    | 737kB 45.1MB/s eta 0:00:01[K    36% |███████████▋                    | 747kB 46.4MB/s eta 0:00:01[K    36% |███████████▉                    | 757kB 45.9MB/s eta 0:00:01[K    37% |████████████                    | 768kB 45.9MB/s eta 0:00:01[K    37% |████████████                    | 778kB 46.0MB/s eta 0:00:01[K    38% |████████████▎                   | 788kB 43.7MB/s eta 0:00:01[K    38% |████████████▍                   | 798kB 42.3MB/s eta 0:00:01[K    39% |████████████▋                   | 808kB 40.0MB/s eta 0:00:01[K    39% |████████████▊                   | 819kB 38.0MB/s eta 0:00:01[K    40% |█████████████                   | 829kB 38.3MB/s eta 0:00:01[K    40% |█████████████                   | 839kB 36.9MB/s eta 0:00:01[K    41% |█████████████▏                  | 849kB 35.9MB/s eta 0:00:01[K    41% |█████████████▍                  | 860kB 35.7MB/s eta 0:00:01[K    42% |█████████████▌                  | 870kB 35.1MB/s eta 0:00:01[K    42% |█████████████▊                  | 880kB 35.3MB/s eta 0:00:01[K    43% |█████████████▉                  | 890kB 35.8MB/s eta 0:00:01[K    43% |██████████████                  | 901kB 36.5MB/s eta 0:00:01[K    44% |██████████████▏                 | 911kB 39.1MB/s eta 0:00:01[K    44% |██████████████▎                 | 921kB 40.0MB/s eta 0:00:01[K    45% |██████████████▌                 | 931kB 41.1MB/s eta 0:00:01[K    45% |██████████████▋                 | 942kB 42.5MB/s eta 0:00:01[K    46% |██████████████▉                 | 952kB 42.4MB/s eta 0:00:01[K    46% |███████████████                 | 962kB 43.7MB/s eta 0:00:01[K    47% |███████████████▏                | 972kB 43.1MB/s eta 0:00:01[K    47% |███████████████▎                | 983kB 43.0MB/s eta 0:00:01[K    48% |███████████████▌                | 993kB 43.9MB/s eta 0:00:01[K    48% |███████████████▋                | 1.0MB 44.4MB/s eta 0:00:01[K    49% |███████████████▊                | 1.0MB 44.1MB/s eta 0:00:01[K    49% |████████████████                | 1.0MB 44.4MB/s eta 0:00:01[K    50% |████████████████                | 1.0MB 43.3MB/s eta 0:00:01[K    50% |████████████████▎               | 1.0MB 44.9MB/s eta 0:00:01[K    51% |████████████████▍               | 1.1MB 44.9MB/s eta 0:00:01[K    51% |████████████████▋               | 1.1MB 44.7MB/s eta 0:00:01[K    52% |████████████████▊               | 1.1MB 45.8MB/s eta 0:00:01[K    52% |████████████████▉               | 1.1MB 46.3MB/s eta 0:00:01[K    53% |█████████████████               | 1.1MB 46.4MB/s eta 0:00:01[K    53% |█████████████████▏              | 1.1MB 46.4MB/s eta 0:00:01[K    54% |█████████████████▍              | 1.1MB 45.4MB/s eta 0:00:01[K    54% |█████████████████▌              | 1.1MB 46.3MB/s eta 0:00:01[K    55% |█████████████████▊              | 1.1MB 44.8MB/s eta 0:00:01[K    55% |█████████████████▉              | 1.1MB 44.1MB/s eta 0:00:01[K    56% |██████████████████              | 1.2MB 45.3MB/s eta 0:00:01[K    56% |██████████████████▏             | 1.2MB 45.3MB/s eta 0:00:01[K    57% |██████████████████▎             | 1.2MB 45.3MB/s eta 0:00:01[K    57% |██████████████████▌             | 1.2MB 45.0MB/s eta 0:00:01[K    58% |██████████████████▋             | 1.2MB 43.8MB/s eta 0:00:01[K    58% |██████████████████▉             | 1.2MB 44.5MB/s eta 0:00:01[K    59% |███████████████████             | 1.2MB 44.6MB/s eta 0:00:01[K    59% |███████████████████             | 1.2MB 43.8MB/s eta 0:00:01[K    60% |███████████████████▎            | 1.2MB 46.0MB/s eta 0:00:01[K    60% |███████████████████▍            | 1.2MB 45.6MB/s eta 0:00:01[K    61% |███████████████████▋            | 1.3MB 45.5MB/s eta 0:00:01[K    61% |███████████████████▊            | 1.3MB 45.1MB/s eta 0:00:01[K    62% |████████████████████            | 1.3MB 44.7MB/s eta 0:00:01[K    62% |████████████████████            | 1.3MB 45.4MB/s eta 0:00:01[K    63% |████████████████████▎           | 1.3MB 45.9MB/s eta 0:00:01[K    63% |████████████████████▍           | 1.3MB 44.7MB/s eta 0:00:01[K    64% |████████████████████▌           | 1.3MB 45.4MB/s eta 0:00:01[K    64% |████████████████████▊           | 1.3MB 44.7MB/s eta 0:00:01[K    65% |████████████████████▉           | 1.3MB 45.1MB/s eta 0:00:01[K    65% |█████████████████████           | 1.4MB 44.8MB/s eta 0:00:01[K    66% |█████████████████████▏          | 1.4MB 44.4MB/s eta 0:00:01[K    66% |█████████████████████▍          | 1.4MB 45.3MB/s eta 0:00:01[K    67% |█████████████████████▌          | 1.4MB 44.9MB/s eta 0:00:01[K    67% |█████████████████████▋          | 1.4MB 43.8MB/s eta 0:00:01[K    68% |█████████████████████▉          | 1.4MB 44.9MB/s eta 0:00:01[K    68% |██████████████████████          | 1.4MB 45.3MB/s eta 0:00:01[K    69% |██████████████████████▏         | 1.4MB 45.8MB/s eta 0:00:01[K    69% |██████████████████████▎         | 1.4MB 45.8MB/s eta 0:00:01[K    70% |██████████████████████▌         | 1.4MB 44.5MB/s eta 0:00:01[K    70% |██████████████████████▋         | 1.5MB 45.6MB/s eta 0:00:01[K    71% |██████████████████████▊         | 1.5MB 44.9MB/s eta 0:00:01[K    71% |███████████████████████         | 1.5MB 44.5MB/s eta 0:00:01[K    72% |███████████████████████         | 1.5MB 45.3MB/s eta 0:00:01[K    72% |███████████████████████▎        | 1.5MB 45.2MB/s eta 0:00:01[K    73% |███████████████████████▍        | 1.5MB 44.8MB/s eta 0:00:01[K    73% |███████████████████████▋        | 1.5MB 44.8MB/s eta 0:00:01[K    74% |███████████████████████▊        | 1.5MB 43.2MB/s eta 0:00:01[K    74% |███████████████████████▉        | 1.5MB 44.3MB/s eta 0:00:01[K    75% |████████████████████████        | 1.5MB 44.4MB/s eta 0:00:01[K    75% |████████████████████████▏       | 1.6MB 43.7MB/s eta 0:00:01[K    76% |████████████████████████▍       | 1.6MB 44.9MB/s eta 0:00:01[K    76% |████████████████████████▌       | 1.6MB 44.4MB/s eta 0:00:01[K    77% |████████████████████████▊       | 1.6MB 44.4MB/s eta 0:00:01[K    77% |████████████████████████▉       | 1.6MB 44.5MB/s eta 0:00:01[K    78% |█████████████████████████       | 1.6MB 42.6MB/s eta 0:00:01[K    78% |█████████████████████████▏      | 1.6MB 42.0MB/s eta 0:00:01[K    79% |█████████████████████████▎      | 1.6MB 41.0MB/s eta 0:00:01[K    79% |█████████████████████████▌      | 1.6MB 39.2MB/s eta 0:00:01[K    80% |█████████████████████████▋      | 1.6MB 39.4MB/s eta 0:00:01[K    80% |█████████████████████████▉      | 1.7MB 37.6MB/s eta 0:00:01[K    81% |██████████████████████████      | 1.7MB 37.5MB/s eta 0:00:01[K    81% |██████████████████████████▏     | 1.7MB 37.2MB/s eta 0:00:01[K    82% |██████████████████████████▎     | 1.7MB 36.3MB/s eta 0:00:01[K    82% |██████████████████████████▍     | 1.7MB 37.4MB/s eta 0:00:01[K    83% |██████████████████████████▋     | 1.7MB 37.8MB/s eta 0:00:01[K    83% |██████████████████████████▊     | 1.7MB 38.4MB/s eta 0:00:01[K    84% |███████████████████████████     | 1.7MB 40.2MB/s eta 0:00:01[K    84% |███████████████████████████     | 1.7MB 41.2MB/s eta 0:00:01[K    85% |███████████████████████████▎    | 1.8MB 41.3MB/s eta 0:00:01[K    85% |███████████████████████████▍    | 1.8MB 43.3MB/s eta 0:00:01[K    86% |███████████████████████████▌    | 1.8MB 42.5MB/s eta 0:00:01[K    86% |███████████████████████████▊    | 1.8MB 43.3MB/s eta 0:00:01[K    87% |███████████████████████████▉    | 1.8MB 43.7MB/s eta 0:00:01[K    87% |████████████████████████████    | 1.8MB 42.4MB/s eta 0:00:01[K    88% |██���█████████████████████████▏   | 1.8MB 43.2MB/s eta 0:00:01[K    88% |████████████████████████████▍   | 1.8MB 42.2MB/s eta 0:00:01[K    89% |████████████████████████████▌   | 1.8MB 42.0MB/s eta 0:00:01[K    89% |████████████████████████████▋   | 1.8MB 41.8MB/s eta 0:00:01[K    90% |████████████████████████████▉   | 1.9MB 41.4MB/s eta 0:00:01[K    90% |█████████████████████████████   | 1.9MB 42.1MB/s eta 0:00:01[K    91% |█████████████████████████████▏  | 1.9MB 41.9MB/s eta 0:00:01[K    91% |█████████████████████████████▎  | 1.9MB 41.5MB/s eta 0:00:01[K    92% |█████████████████████████████▌  | 1.9MB 42.2MB/s eta 0:00:01[K    92% |█████████████████████████████▋  | 1.9MB 42.2MB/s eta 0:00:01[K    93% |█████████████████████████████▉  | 1.9MB 42.3MB/s eta 0:00:01[K    93% |██████████████████████████████  | 1.9MB 43.3MB/s eta 0:00:01[K    94% |█████████████████████████���████  | 1.9MB 42.6MB/s eta 0:00:01[K    94% |██████████████████████████████▎ | 1.9MB 43.4MB/s eta 0:00:01[K    95% |██████████████████████████████▍ | 2.0MB 43.3MB/s eta 0:00:01[K    95% |██████████████████████████████▋ | 2.0MB 42.4MB/s eta 0:00:01[K    96% |██████████████████████████████▊ | 2.0MB 43.2MB/s eta 0:00:01[K    96% |███████████████████████████████ | 2.0MB 42.5MB/s eta 0:00:01[K    97% |███████████████████████████████ | 2.0MB 42.5MB/s eta 0:00:01[K    97% |███████████████████████████████▏| 2.0MB 42.4MB/s eta 0:00:01[K    98% |███████████████████████████████▍| 2.0MB 42.0MB/s eta 0:00:01[K    98% |███████████████████████████████▌| 2.0MB 42.6MB/s eta 0:00:01[K    99% |███████████████████████████████▊| 2.0MB 42.7MB/s eta 0:00:01[K    99% |███████████████████████████████▉| 2.0MB 42.1MB/s eta 0:00:01[K    100% |████████████████████████████████| 2.1MB 720kB/s 
[?25hCollecting dj-static==0.0.6 (from -r requirements.txt (line 8))
  Downloading https://files.pythonhosted.org/packages/2b/8f/77a4b8ec50c821193bf9682c7896f12fd0418eb3711a7d66796ede59c23b/dj-static-0.0.6.tar.gz
Collecting django-reversion==1.10.2 (from -r requirements.txt (line 9))
  Downloading https://files.pythonhosted.org/packages/4b/e3/c45834318d4eb1ec86f870474c3e07f085196cd5d281cefb585b681edf23/django-reversion-1.10.2.tar.gz (67kB)
[?25l[K    15% |████▉                           | 10kB 35.4MB/s eta 0:00:01[K    30% |█████████▊                      | 20kB 36.2MB/s eta 0:00:01[K    45% |██████████████▋                 | 30kB 40.6MB/s eta 0:00:01[K    60% |███████████████████▌            | 40kB 41.8MB/s eta 0:00:01[K    76% |████████████████████████▍       | 51kB 42.3MB/s eta 0:00:01[K    91% |█████████████████████████████▏  | 61kB 43.9MB/s eta 0:00:01[K    100% |████████████████████████████████| 71kB 10.3MB/s 
[?25hCollecting django-axes==1.7.0 (from -r requirements.txt (line 10))
  Downloading https://files.pythonhosted.org/packages/84/6a/1c73270ace8108ef7f18a33f607217267fec61a87bb259e96625099d155b/django-axes-1.7.0.tar.gz
Collecting ffs==0.0.8.2 (from -r requirements.txt (line 11))
  Downloading https://files.pythonhosted.org/packages/1b/b4/05911a8e2fee9c27038b06ef8205404486453a60fcd14d778c9df1a46d3d/ffs-0.0.8.2.tar.gz
Collecting letter==0.4.1 (from -r requirements.txt (line 12))
  Downloading https://files.pythonhosted.org/packages/3f/cf/8339e0432ce449ea6f90d020fce97e0d712201afc8be4d4ad5a0dfd3c1a7/letter-0.4.1.tar.gz
Collecting django-debug-toolbar==1.2.1 (from -r requirements.txt (line 13))
  Downloading https://files.pythonhosted.org/packages/2c/9f/257b33444adfa1a2ca19299a26975af46e3b50c6c98803fab80b184f44e6/django_debug_toolbar-1.2.1-py2.py3-none-any.whl (208kB)
[?25l[K    4% |█▋                              | 10kB 48.8MB/s eta 0:00:01[K    9% |███▏                            | 20kB 42.9MB/s eta 0:00:01[K    14% |████▊                           | 30kB 46.3MB/s eta 0:00:01[K    19% |██████▎                         | 40kB 46.1MB/s eta 0:00:01[K    24% |███████▉                        | 51kB 45.3MB/s eta 0:00:01[K    29% |█████████▍                      | 61kB 46.6MB/s eta 0:00:01[K    34% |███████████                     | 71kB 46.5MB/s eta 0:00:01[K    39% |████████████▌                   | 81kB 46.5MB/s eta 0:00:01[K    44% |██████████████▏                 | 92kB 47.6MB/s eta 0:00:01[K    49% |███████████████▊                | 102kB 47.6MB/s eta 0:00:01[K    53% |█████████████████▎              | 112kB 48.3MB/s eta 0:00:01[K    58% |██████████████████▉             | 122kB 47.1MB/s eta 0:00:01[K    63% |█████████████████���██▍           | 133kB 42.7MB/s eta 0:00:01[K    68% |██████████████████████          | 143kB 42.3MB/s eta 0:00:01[K    73% |███████████████████████▌        | 153kB 42.3MB/s eta 0:00:01[K    78% |█████████████████████████       | 163kB 41.4MB/s eta 0:00:01[K    83% |██████████████████████████▊     | 174kB 41.8MB/s eta 0:00:01[K    88% |████████████████████████████▎   | 184kB 41.8MB/s eta 0:00:01[K    93% |█████████████████████████████▉  | 194kB 41.5MB/s eta 0:00:01[K    98% |███████████████████████████████▍| 204kB 41.4MB/s eta 0:00:01[K    100% |████████████████████████████████| 215kB 6.3MB/s 
[?25hCollecting mock==1.0.1 (from -r requirements.txt (line 14))
  Downloading https://files.pythonhosted.org/packages/a2/52/7edcd94f0afb721a2d559a5b9aae8af4f8f2c79bc63fdbe8a8a6c9b23bbe/mock-1.0.1.tar.gz (818kB)
[?25l[K    1% |▍                               | 10kB 33.5MB/s eta 0:00:01[K    2% |▉                               | 20kB 26.5MB/s eta 0:00:01[K    3% |█▏                              | 30kB 28.5MB/s eta 0:00:01[K    5% |█▋                              | 40kB 27.8MB/s eta 0:00:01[K    6% |██                              | 51kB 27.5MB/s eta 0:00:01[K    7% |██▍                             | 61kB 28.4MB/s eta 0:00:01[K    8% |██▉                             | 71kB 27.9MB/s eta 0:00:01[K    10% |███▏                            | 81kB 27.7MB/s eta 0:00:01[K    11% |███▋                            | 92kB 28.3MB/s eta 0:00:01[K    12% |████                            | 102kB 28.4MB/s eta 0:00:01[K    13% |████▍                           | 112kB 28.4MB/s eta 0:00:01[K    15% |████▉                           | 122kB 29.1MB/s eta 0:00:01[K    16% |█████▏                          | 133kB 28.0MB/s eta 0:00:01[K    17% |█████▋                          | 143kB 28.8MB/s eta 0:00:01[K    18% |██████                          | 153kB 29.1MB/s eta 0:00:01[K    20% |██████▍                         | 163kB 28.5MB/s eta 0:00:01[K    21% |█████���▉                         | 174kB 29.3MB/s eta 0:00:01[K    22% |███████▏                        | 184kB 29.6MB/s eta 0:00:01[K    23% |███████▋                        | 194kB 29.6MB/s eta 0:00:01[K    25% |████████                        | 204kB 29.3MB/s eta 0:00:01[K    26% |████████▍                       | 215kB 28.8MB/s eta 0:00:01[K    27% |████████▉                       | 225kB 29.0MB/s eta 0:00:01[K    28% |█████████▏                      | 235kB 29.5MB/s eta 0:00:01[K    30% |█████████▋                      | 245kB 29.2MB/s eta 0:00:01[K    31% |██████████                      | 256kB 29.0MB/s eta 0:00:01[K    32% |██████████▍                     | 266kB 29.3MB/s eta 0:00:01[K    33% |██████████▉                     | 276kB 28.6MB/s eta 0:00:01[K    35% |███████████▏                    | 286kB 28.3MB/s eta 0:00:01[K    36% |███████████▋                    | 296kB 28.3MB/s eta 0:00:01[K    37% |████████████                    | 307kB 28.3MB/s eta 0:00:01[K    38% |████████████▍                   | 317kB 28.2MB/s eta 0:00:01[K    40% |████████████▉                   | 327kB 28.7MB/s eta 0:00:01[K    41% |█████████████▏                  | 337kB 28.9MB/s eta 0:00:01[K    42% |█████████████▋                  | 348kB 29.8MB/s eta 0:00:01[K    43% |██████████████                  | 358kB 31.0MB/s eta 0:00:01[K    45% |██████████████▍                 | 368kB 31.7MB/s eta 0:00:01[K    46% |██████████████▉                 | 378kB 33.7MB/s eta 0:00:01[K    47% |███████████████▏                | 389kB 35.8MB/s eta 0:00:01[K    48% |███████████████▋                | 399kB 36.7MB/s eta 0:00:01[K    50% |████████████████                | 409kB 40.0MB/s eta 0:00:01[K    51% |████████████████▍               | 419kB 42.4MB/s eta 0:00:01[K    52% |████████████████▉               | 430kB 44.6MB/s eta 0:00:01[K    53% |█████████████████▏              | 440kB 46.9MB/s eta 0:00:01[K    55% |█████████████████▋              | 450kB 47.8MB/s eta 0:00:01[K    56% |██████████████████              | 460kB 48.8MB/s eta 0:00:01[K    57% |██████████████████▍             | 471kB 50.1MB/s eta 0:00:01[K    58% |██████████████████▉             | 481kB 50.2MB/s eta 0:00:01[K    60% |███████████████████▏            | 491kB 50.2MB/s eta 0:00:01[K    61% |███████████████████▋            | 501kB 51.6MB/s eta 0:00:01[K    62% |█████���██████████████            | 512kB 50.4MB/s eta 0:00:01[K    63% |████████████████████▍           | 522kB 50.3MB/s eta 0:00:01[K    65% |████████████████████▉           | 532kB 50.4MB/s eta 0:00:01[K    66% |█████████████████████▏          | 542kB 51.3MB/s eta 0:00:01[K    67% |█████████████████████▋          | 552kB 50.4MB/s eta 0:00:01[K    68% |██████████████████████          | 563kB 51.4MB/s eta 0:00:01[K    70% |██████████████████████▍         | 573kB 50.6MB/s eta 0:00:01[K    71% |██████████████████████▉         | 583kB 50.7MB/s eta 0:00:01[K    72% |███████████████████████▏        | 593kB 50.2MB/s eta 0:00:01[K    73% |███████████████████████▋        | 604kB 49.2MB/s eta 0:00:01[K    75% |████████████████████████        | 614kB 50.3MB/s eta 0:00:01[K    76% |████████████████████████▍       | 624kB 50.4MB/s eta 0:00:01[K    77% |████████████████████████▉       | 634kB 49.3MB/s eta 0:00:01[K    78% |█████████████████████████▏      | 645kB 50.2MB/s eta 0:00:01[K    80% |█████████████████████████▋      | 655kB 50.5MB/s eta 0:00:01[K    81% |██████████████████████████      | 665kB 49.4MB/s eta 0:00:01[K    82% |██████████████████████████▍     | 675kB 50.1MB/s eta 0:00:01[K    83% |██████████████████████████▉     | 686kB 50.1MB/s eta 0:00:01[K    85% |███████████████████████████▏    | 696kB 50.6MB/s eta 0:00:01[K    86% |███████████████████████████▋    | 706kB 50.7MB/s eta 0:00:01[K    87% |████████████████████████████    | 716kB 50.6MB/s eta 0:00:01[K    88% |████████████████████████████▍   | 727kB 50.6MB/s eta 0:00:01[K    90% |████████████████████████████▉   | 737kB 51.8MB/s eta 0:00:01[K    91% |█████████████████████████████▏  | 747kB 50.8MB/s eta 0:00:01[K    92% |█████████████████████████████▋  | 757kB 50.5MB/s eta 0:00:01[K    93% |██████████████████████████████  | 768kB 51.1MB/s eta 0:00:01[K    95% |██████████████████████████████▍ | 778kB 51.0MB/s eta 0:00:01[K    96% |██████████████████████████████▉ | 788kB 49.9MB/s eta 0:00:01[K    97% |███████████████████████████████▏| 798kB 50.8MB/s eta 0:00:01[K    98% |███████████████████████████████▋| 808kB 50.9MB/s eta 0:00:01[K    100% |████████████████████████████████| 819kB 1.6MB/s 
[?25hCollecting requests==2.18.4 (from -r requirements.txt (line 15))
  Downloading https://files.pythonhosted.org/packages/49/df/50aa1999ab9bde74656c2919d9c0c085fd2b3775fd3eca826012bef76d8c/requests-2.18.4-py2.py3-none-any.whl (88kB)
[?25l[K    11% |███▊                            | 10kB 38.7MB/s eta 0:00:01[K    23% |███████▍                        | 20kB 36.6MB/s eta 0:00:01[K    34% |███████████                     | 30kB 38.4MB/s eta 0:00:01[K    46% |██████████████▊                 | 40kB 38.9MB/s eta 0:00:01[K    57% |██████████████████▌             | 51kB 39.0MB/s eta 0:00:01[K    69% |██████████████████████▏         | 61kB 39.0MB/s eta 0:00:01[K    80% |█████████████████████████▉      | 71kB 39.2MB/s eta 0:00:01[K    92% |█████████████████████████████▌  | 81kB 39.7MB/s eta 0:00:01[K    100% |████████████████████████████████| 92kB 10.2MB/s 
[?25hCollecting python-dateutil==2.4.2 (from -r requirements.txt (line 16))
  Downloading https://files.pythonhosted.org/packages/22/75/666cd70de6a70cc7c6560429340ee7ef08196c93f552428983a808423755/python_dateutil-2.4.2-py2.py3-none-any.whl (188kB)
[?25l[K    5% |█▊                              | 10kB 57.5MB/s eta 0:00:01[K    10% |███▌                            | 20kB 47.4MB/s eta 0:00:01[K    16% |█████▏                          | 30kB 49.6MB/s eta 0:00:01[K    21% |███████                         | 40kB 48.5MB/s eta 0:00:01[K    27% |████████▊                       | 51kB 47.7MB/s eta 0:00:01[K    32% |██████████▍                     | 61kB 46.0MB/s eta 0:00:01[K    37% |████████████▏                   | 71kB 42.9MB/s eta 0:00:01[K    43% |██████████████                  | 81kB 40.9MB/s eta 0:00:01[K    48% |███████████████▋                | 92kB 41.7MB/s eta 0:00:01[K    54% |█████████████████▍              | 102kB 42.0MB/s eta 0:00:01[K    59% |███████████████████             | 112kB 41.6MB/s eta 0:00:01[K    65% |████████████████████▉           | 122kB 42.1MB/s eta 0:00:01[K    70% |██████████████████████▋         | 133kB 41.0MB/s eta 0:00:01[K    75% |████████████████████████▎       | 143kB 41.8MB/s eta 0:00:01[K    81% |████████████████████████���█      | 153kB 42.0MB/s eta 0:00:01[K    86% |███████████████████████████▉    | 163kB 42.8MB/s eta 0:00:01[K    92% |█████████████████████████████▌  | 174kB 45.4MB/s eta 0:00:01[K    97% |███████████████████████████████▎| 184kB 48.1MB/s eta 0:00:01[K    100% |████████████████████████████████| 194kB 7.1MB/s 
[?25hCollecting djangorestframework==3.4.7 (from -r requirements.txt (line 17))
  Downloading https://files.pythonhosted.org/packages/43/24/fd4b0ef635eecc613f36afc70692bc9422290a108124385d086243ab0257/djangorestframework-3.4.7-py2.py3-none-any.whl (706kB)
[?25l[K    1% |▌                               | 10kB 38.2MB/s eta 0:00:01[K    2% |█                               | 20kB 31.4MB/s eta 0:00:01[K    4% |█▍                              | 30kB 33.3MB/s eta 0:00:01[K    5% |█▉                              | 40kB 31.6MB/s eta 0:00:01[K    7% |██▎                             | 51kB 32.5MB/s eta 0:00:01[K    8% |██▉                             | 61kB 34.0MB/s eta 0:00:01[K    10% |███▎                            | 71kB 35.2MB/s eta 0:00:01[K    11% |███▊                            | 81kB 36.2MB/s eta 0:00:01[K    13% |████▏                           | 92kB 37.8MB/s eta 0:00:01[K    14% |████▋                           | 102kB 38.2MB/s eta 0:00:01[K    15% |█████                           | 112kB 39.1MB/s eta 0:00:01[K    17% |█████▋                          | 122kB 41.7MB/s eta 0:00:01[K    18% |██████                          | 133kB 42.3MB/s eta 0:00:01[K    20% |██████▌                         | 143kB 46.0MB/s eta 0:00:01[K    21% |███████                         | 153kB 46.9MB/s eta 0:00:01[K    23% |███████▍                        | 163kB 47.0MB/s eta 0:00:01[K    24% |███████▉                        | 174kB 48.3MB/s eta 0:00:01[K    26% |████████▍                       | 184kB 48.0MB/s eta 0:00:01[K    27% |████████▉                       | 194kB 48.0MB/s eta 0:00:01[K    28% |█████████▎                      | 204kB 48.1MB/s eta 0:00:01[K    30% |█████████▊                      | 215kB 48.0MB/s eta 0:00:01[K    31% |██████████▏                     | 225kB 48.3MB/s eta 0:00:01[K    33% |██████████▋                     | 235kB 48.3MB/s eta 0:00:01[K    34% |███████████▏                    | 245kB 47.0MB/s eta 0:00:01[K    36% |███████████▋                    | 256kB 48.4MB/s eta 0:00:01[K    37% |████████████                    | 266kB 48.1MB/s eta 0:00:01[K    39% |████████████▌                   | 276kB 48.1MB/s eta 0:00:01[K    40% |█████████████                   | 286kB 48.5MB/s eta 0:00:01[K    42% |███████████���█▌                  | 296kB 47.6MB/s eta 0:00:01[K    43% |██████████████                  | 307kB 47.9MB/s eta 0:00:01[K    44% |██████████████▍                 | 317kB 47.8MB/s eta 0:00:01[K    46% |██████████████▉                 | 327kB 47.6MB/s eta 0:00:01[K    47% |███████████████▎                | 337kB 49.1MB/s eta 0:00:01[K    49% |███████████████▊                | 348kB 49.1MB/s eta 0:00:01[K    50% |████████████████▎               | 358kB 49.1MB/s eta 0:00:01[K    52% |████████████████▊               | 368kB 49.5MB/s eta 0:00:01[K    53% |█████████████████▏              | 378kB 48.6MB/s eta 0:00:01[K    55% |█████████████████▋              | 389kB 49.7MB/s eta 0:00:01[K    56% |██████████████████              | 399kB 49.6MB/s eta 0:00:01[K    57% |██████████████████▌             | 409kB 49.8MB/s eta 0:00:01[K    59% |███████████████████             | 419kB 49.9MB/s eta 0:00:01[K    60% |███████████████████▌            | 430kB 49.9MB/s eta 0:00:01[K    62% |████████████████████            | 440kB 49.8MB/s eta 0:00:01[K    63% |████████████████████▍           | 450kB 50.2MB/s eta 0:00:01[K    65% |████████████████████▉           | 460kB 49.1MB/s eta 0:00:01[K    66% |█████████████████████▎          | 471kB 50.2MB/s eta 0:00:01[K    68% |█████████████████████▉          | 481kB 50.3MB/s eta 0:00:01[K    69% |██████████████████████▎         | 491kB 49.3MB/s eta 0:00:01[K    70% |██████████████████████▊         | 501kB 50.4MB/s eta 0:00:01[K    72% |███████████████████████▏        | 512kB 50.3MB/s eta 0:00:01[K    73% |███████████████████████▋        | 522kB 51.3MB/s eta 0:00:01[K    75% |████████████████████████        | 532kB 50.7MB/s eta 0:00:01[K    76% |████████████████████████▋       | 542kB 49.7MB/s eta 0:00:01[K    78% |█████████████████████████       | 552kB 50.8MB/s eta 0:00:01[K    79% |█████████████████████████▌      | 563kB 51.0MB/s eta 0:00:01[K    81% |██████████████████████████      | 573kB 49.8MB/s eta 0:00:01[K    82% |██████████████████████████▍     | 583kB 50.8MB/s eta 0:00:01[K    84% |███████████████���███████████     | 593kB 50.7MB/s eta 0:00:01[K    85% |███████████████████████████▍    | 604kB 50.6MB/s eta 0:00:01[K    86% |███████████████████████████▉    | 614kB 50.7MB/s eta 0:00:01[K    88% |████████████████████████████▎   | 624kB 49.0MB/s eta 0:00:01[K    89% |████████████████████████████▊   | 634kB 50.5MB/s eta 0:00:01[K    91% |█████████████████████████████▏  | 645kB 50.5MB/s eta 0:00:01[K    92% |█████████████████████████████▊  | 655kB 49.6MB/s eta 0:00:01[K    94% |██████████████████████████████▏ | 665kB 50.6MB/s eta 0:00:01[K    95% |██████████████████████████████▋ | 675kB 50.7MB/s eta 0:00:01[K    97% |███████████████████████████████ | 686kB 50.7MB/s eta 0:00:01[K    98% |███████████████████████████████▌| 696kB 50.6MB/s eta 0:00:01[K    99% |████████████████████████████████| 706kB 50.2MB/s eta 0:00:01[K    100% |████████████████████████████████| 716kB 2.2MB/s 
[?25hCollecting celery==3.1.25 (from -r requirements.txt (line 18))
  Downloading https://files.pythonhosted.org/packages/13/28/b45b7d4c13695f321522566747e0a4a9c8883515f664e0487974e5f79d16/celery-3.1.25-py2.py3-none-any.whl (526kB)
[?25l[K    1% |▋                               | 10kB 41.5MB/s eta 0:00:01[K    3% |█▎                              | 20kB 35.0MB/s eta 0:00:01[K    5% |█▉                              | 30kB 36.8MB/s eta 0:00:01[K    7% |██▌                             | 40kB 36.3MB/s eta 0:00:01[K    9% |███▏                            | 51kB 36.5MB/s eta 0:00:01[K    11% |███▊                            | 61kB 37.4MB/s eta 0:00:01[K    13% |████▍                           | 71kB 37.6MB/s eta 0:00:01[K    15% |█████                           | 81kB 37.5MB/s eta 0:00:01[K    17% |█████▋                          | 92kB 38.0MB/s eta 0:00:01[K    19% |██████▎                         | 102kB 37.9MB/s eta 0:00:01[K    21% |██████▉                         | 112kB 38.6MB/s eta 0:00:01[K    23% |███████▌                        | 122kB 39.8MB/s eta 0:00:01[K    25% |████████                        | 133kB 40.0MB/s eta 0:00:01[K    27% |████████▊                       | 143kB 41.2MB/s eta 0:00:01[K    29% |█████████▍                      | 153kB 41.8MB/s eta 0:00:01[K    31% |██████████                      | 163kB 41.7MB/s eta 0:00:01[K    33% |██████████▋                     | 174kB 42.9MB/s eta 0:00:01[K    35% |███████████▏                    | 184kB 43.0MB/s eta 0:00:01[K    36% |███████████▉                    | 194kB 43.8MB/s eta 0:00:01[K    38% |████████████▌                   | 204kB 44.2MB/s eta 0:00:01[K    40% |█████████████                   | 215kB 43.4MB/s eta 0:00:01[K    42% |█████████████▊                  | 225kB 44.2MB/s eta 0:00:01[K    44% |██████████████▎                 | 235kB 43.8MB/s eta 0:00:01[K    46% |███████████████                 | 245kB 42.8MB/s eta 0:00:01[K    48% |███████████████▋                | 256kB 42.6MB/s eta 0:00:01[K    50% |████████████████▏               | 266kB 42.8MB/s eta 0:00:01[K    52% |████████████████▉               | 276kB 42.5MB/s eta 0:00:01[K    54% |█████████████████▍              | 286kB 43.1MB/s eta 0:00:01[K    56% |██████████████████              | 296kB 42.1MB/s eta 0:00:01[K    58% |██████████████████▊             | 307kB 43.2MB/s eta 0:00:01[K    60% |███████████████████▎            | 317kB 42.9MB/s eta 0:00:01[K    62% |████████████████████            | 327kB 42.5MB/s eta 0:00:01[K    64% |████████████████████▌           | 337kB 43.4MB/s eta 0:00:01[K    66% |█████████████████████▏          | 348kB 44.1MB/s eta 0:00:01[K    68% |█████████████████████▉          | 358kB 44.7MB/s eta 0:00:01[K    70% |██████████████████████▍         | 368kB 44.8MB/s eta 0:00:01[K    72% |███████████████████████         | 378kB 43.9MB/s eta 0:00:01[K    73% |███████████████████████▋        | 389kB 44.8MB/s eta 0:00:01[K    75% |████████████████████████▎       | 399kB 44.4MB/s eta 0:00:01[K    77% |█████████████████████████       | 409kB 43.6MB/s eta 0:00:01[K    79% |█████████████████████████▌      | 419kB 44.4MB/s eta 0:00:01[K    81% |██████████████████████████▏     | 430kB 43.8MB/s eta 0:00:01[K    83% |██████████████████████████▉     | 440kB 42.3MB/s eta 0:00:01[K    85% |███████████████████████████▍    | 450kB 40.7MB/s eta 0:00:01[K    87% |████████████████████████████    | 460kB 38.9MB/s eta 0:00:01[K    89% |████████████████████████████▋   | 471kB 39.0MB/s eta 0:00:01[K    91% |████████████████���████████████▎  | 481kB 38.5MB/s eta 0:00:01[K    93% |██████████████████████████████  | 491kB 38.0MB/s eta 0:00:01[K    95% |██████████████████████████████▌ | 501kB 38.9MB/s eta 0:00:01[K    97% |███████████████████████████████▏| 512kB 38.9MB/s eta 0:00:01[K    99% |███████████████████████████████▊| 522kB 39.4MB/s eta 0:00:01[K    100% |████████████████████████████████| 532kB 2.5MB/s 
[?25hCollecting django-celery==3.2.2 (from -r requirements.txt (line 19))
  Downloading https://files.pythonhosted.org/packages/8c/7b/3f317b7def87328724041c8c6eb18d4b17c392b135ce66d71b1fa69fada0/django_celery-3.2.2-py2-none-any.whl (63kB)
[?25l[K    16% |█████▏                          | 10kB 53.6MB/s eta 0:00:01[K    32% |██████████▍                     | 20kB 45.5MB/s eta 0:00:01[K    48% |███████████████▌                | 30kB 47.9MB/s eta 0:00:01[K    64% |████████████████████▊           | 40kB 47.4MB/s eta 0:00:01[K    80% |█████████████████████████▉      | 51kB 47.2MB/s eta 0:00:01[K    97% |███████████████████████████████ | 61kB 48.1MB/s eta 0:00:01[K    100% |████████████████████████████████| 71kB 12.5MB/s 
[?25hCollecting django-compressor==1.5 (from -r requirements.txt (line 20))
  Downloading https://files.pythonhosted.org/packages/99/17/6ba72e44cbd7411819e0a4aca6c6fc8cf41379552e3bb89fd862e775dfaa/django_compressor-1.5-py2.py3-none-any.whl (129kB)
[?25l[K    7% |██▌                             | 10kB 34.3MB/s eta 0:00:01[K    15% |█████                           | 20kB 29.3MB/s eta 0:00:01[K    23% |███████▋                        | 30kB 29.7MB/s eta 0:00:01[K    31% |██████████▏                     | 40kB 29.1MB/s eta 0:00:01[K    39% |████████████▊                   | 51kB 29.0MB/s eta 0:00:01[K    47% |███████████████▏                | 61kB 29.8MB/s eta 0:00:01[K    55% |█████████████████▊              | 71kB 29.6MB/s eta 0:00:01[K    63% |████████████████████▎           | 81kB 29.5MB/s eta 0:00:01[K    71% |██████████████████████▉         | 92kB 30.0MB/s eta 0:00:01[K    79% |█████████████████████████▍      | 102kB 29.9MB/s eta 0:00:01[K    87% |████████████████████████████    | 112kB 30.1MB/s eta 0:00:01[K    95% |██████████████████████████████▍ | 122kB 30.8MB/s eta 0:00:01[K    100% |████████████████████████████████| 133kB 9.0MB/s 
[?25hCollecting jsonfield==1.0.3 (from -r requirements.txt (line 21))
  Downloading https://files.pythonhosted.org/packages/ad/e2/e1d8a62edb0aa3c9984ed5cb73d9001065520796f1740caf6daf1c5540c4/jsonfield-1.0.3.tar.gz
Collecting pycrypto==2.6.1 (from -r requirements.txt (line 22))
  Downloading https://files.pythonhosted.org/packages/60/db/645aa9af249f059cc3a368b118de33889219e0362141e75d4eaf6f80f163/pycrypto-2.6.1.tar.gz (446kB)
[?25l[K    2% |▊                               | 10kB 43.6MB/s eta 0:00:01[K    4% |█▌                              | 20kB 36.6MB/s eta 0:00:01[K    6% |██▏                             | 30kB 39.5MB/s eta 0:00:01[K    9% |███                             | 40kB 39.6MB/s eta 0:00:01[K    11% |███▊                            | 51kB 39.4MB/s eta 0:00:01[K    13% |████▍                           | 61kB 41.2MB/s eta 0:00:01[K    16% |█████▏                          | 71kB 42.0MB/s eta 0:00:01[K    18% |█████▉                          | 81kB 42.4MB/s eta 0:00:01[K    20% |██████▋                         | 92kB 43.6MB/s eta 0:00:01[K    22% |███████▍                        | 102kB 43.9MB/s eta 0:00:01[K    25% |████████                        | 112kB 44.2MB/s eta 0:00:01[K    27% |████████▉                       | 122kB 46.2MB/s eta 0:00:01[K    29% |█████████▌                      | 133kB 46.1MB/s eta 0:00:01[K    32% |██████████▎                     | 143kB 47.8MB/s eta 0:00:01[K    34% |███████████                     | 153kB 49.0MB/s eta 0:00:01[K    36% |███████████▊                    | 163kB 47.8MB/s eta 0:00:01[K    39% |████████████▌                   | 174kB 47.7MB/s eta 0:00:01[K    41% |█████████████▏                  | 184kB 47.7MB/s eta 0:00:01[K    43% |██████████████                  | 194kB 47.8MB/s eta 0:00:01[K    45% |██████████████▊                 | 204kB 47.9MB/s eta 0:00:01[K    48% |███████████████▍                | 215kB 47.9MB/s eta 0:00:01[K    50% |████████████████▏               | 225kB 48.9MB/s eta 0:00:01[K    52% |█████████████████               | 235kB 49.0MB/s eta 0:00:01[K    55% |█████████████████▋              | 245kB 48.1MB/s eta 0:00:01[K    57% |██████████████████▍             | 256kB 49.0MB/s eta 0:00:01[K    59% |███████████████████             | 266kB 49.6MB/s eta 0:00:01[K    61% |███████████████████▉            | 276kB 50.7MB/s eta 0:00:01[K    64% |████████████████████▋           | 286kB 50.8MB/s eta 0:00:01[K    66% |█████████████████████▎          | 296kB 49.8MB/s eta 0:00:01[K    68% |██████████████████████          | 307kB 50.0MB/s eta 0:00:01[K    71% |██████████████████████▊         | 317kB 50.0MB/s eta 0:00:01[K    73% |███████████████████████▌        | 327kB 49.1MB/s eta 0:00:01[K    75% |████████████████████████▎       | 337kB 50.0MB/s eta 0:00:01[K    78% |█████████████████████████       | 348kB 50.0MB/s eta 0:00:01[K    80% |█████████████████████████▊      | 358kB 50.0MB/s eta 0:00:01[K    82% |██████████████████████████▍     | 368kB 50.0MB/s eta 0:00:01[K    84% |███████████████████████████▏    | 378kB 49.1MB/s eta 0:00:01[K    87% |████████████████████████████    | 389kB 50.1MB/s eta 0:00:01[K    89% |████████████████████████████▋   | 399kB 50.1MB/s eta 0:00:01[K    91% |█████████████████████████████▍  | 409kB 49.0MB/s eta 0:00:01[K    94% |██████████████████████████████  | 419kB 49.9MB/s eta 0:00:01[K    96% |██████████████████████████████▉ | 430kB 49.9MB/s eta 0:00:01[K    98% |███████████████████████████████▋| 440kB 50.0MB/s eta 0:00:01[K    100% |████████████████████████████████| 450kB 3.3MB/s 
[?25hCollecting six==1.10.0 (from -r requirements.txt (line 23))
  Downloading https://files.pythonhosted.org/packages/c8/0a/b6723e1bc4c516cb687841499455a8505b44607ab535be01091c0f24f079/six-1.10.0-py2.py3-none-any.whl
Collecting future==0.16.0 (from -r requirements.txt (line 24))
  Downloading https://files.pythonhosted.org/packages/00/2b/8d082ddfed935f3608cc61140df6dcbf0edea1bc3ab52fb6c29ae3e81e85/future-0.16.0.tar.gz (824kB)
[?25l[K    1% |▍                               | 10kB 50.5MB/s eta 0:00:01[K    2% |▉                               | 20kB 40.0MB/s eta 0:00:01[K    3% |█▏                              | 30kB 43.7MB/s eta 0:00:01[K    4% |█▋                              | 40kB 41.5MB/s eta 0:00:01[K    6% |██                              | 51kB 41.8MB/s eta 0:00:01[K    7% |██▍                             | 61kB 43.2MB/s eta 0:00:01[K    8% |██▉                             | 71kB 43.4MB/s eta 0:00:01[K    9% |███▏                            | 81kB 43.4MB/s eta 0:00:01[K    11% |███▋                            | 92kB 44.6MB/s eta 0:00:01[K    12% |████                            | 102kB 44.5MB/s eta 0:00:01[K    13% |████▍                           | 112kB 45.0MB/s eta 0:00:01[K    14% |████▊                           | 122kB 46.8MB/s eta 0:00:01[K    16% |█████▏                          | 133kB 45.3MB/s eta 0:00:01[K    17% |█████▋                          | 143kB 47.3MB/s eta 0:00:01[K    18% |██████                          | 153kB 47.3MB/s eta 0:00:01[K    19% |██████▍                         | 163kB 46.8MB/s eta 0:00:01[K    21% |██████▊                         | 174kB 47.9MB/s eta 0:00:01[K    22% |███████▏                        | 184kB 48.4MB/s eta 0:00:01[K    23% |███████▌                        | 194kB 48.4MB/s eta 0:00:01[K    24% |████████                        | 204kB 48.8MB/s eta 0:00:01[K    26% |████████▍                       | 215kB 47.8MB/s eta 0:00:01[K    27% |████████▊                       | 225kB 48.0MB/s eta 0:00:01[K    28% |█████████▏                      | 235kB 47.9MB/s eta 0:00:01[K    29% |█████████▌                      | 245kB 46.6MB/s eta 0:00:01[K    31% |██████████                      | 256kB 46.5MB/s eta 0:00:01[K    32% |██████████▍                     | 266kB 45.2MB/s eta 0:00:01[K    33% |██████████▊                     | 276kB 44.8MB/s eta 0:00:01[K    34% |███████████▏                    | 286kB 43.3MB/s eta 0:00:01[K    36% |███████████▌                    | 296kB 42.1MB/s eta 0:00:01[K    37% |████████████                    | 307kB 41.9MB/s eta 0:00:01[K    38% |████████████▎                   | 317kB 40.9MB/s eta 0:00:01[K    39% |████████████▊                   | 327kB 40.1MB/s eta 0:00:01[K    40% |█████████████▏                  | 337kB 40.5MB/s eta 0:00:01[K    42% |█████████████▌                  | 348kB 39.4MB/s eta 0:00:01[K    43% |██████████████                  | 358kB 38.5MB/s eta 0:00:01[K    44% |██████████████▎                 | 368kB 37.1MB/s eta 0:00:01[K    45% |██████████████▊                 | 378kB 34.7MB/s eta 0:00:01[K    47% |███████████████                 | 389kB 34.6MB/s eta 0:00:01[K    48% |███████████████▌                | 399kB 33.4MB/s eta 0:00:01[K    49% |████████████████                | 409kB 32.0MB/s eta 0:00:01[K    50% |████████████████▎               | 419kB 31.9MB/s eta 0:00:01[K    52% |████████████████▊               | 430kB 31.9MB/s eta 0:00:01[K    53% |█████████████████               | 440kB 32.5MB/s eta 0:00:01[K    54% |█████████████████▌              | 450kB 33.6MB/s eta 0:00:01[K    55% |█████████████████▉              | 460kB 34.4MB/s eta 0:00:01[K    57% |██████████████████▎             | 471kB 36.9MB/s eta 0:00:01[K    58% |██████████████████▊             | 481kB 39.5MB/s eta 0:00:01[K    59% |███████████████████             | 491kB 40.7MB/s eta 0:00:01[K    60% |███████████████████▌            | 501kB 43.7MB/s eta 0:00:01[K    62% |███████████████████▉            | 512kB 46.2MB/s eta 0:00:01[K    63% |████████████████████▎           | 522kB 48.4MB/s eta 0:00:01[K    64% |████████████████████▊           | 532kB 49.3MB/s eta 0:00:01[K    65% |█████████████████████           | 542kB 47.8MB/s eta 0:00:01[K    67% |█████████████████████▌          | 552kB 48.6MB/s eta 0:00:01[K    68% |█████████████████████▉          | 563kB 48.8MB/s eta 0:00:01[K    69% |██████████████████████▎         | 573kB 47.9MB/s eta 0:00:01[K    70% |██████████████████████▋         | 583kB 48.8MB/s eta 0:00:01[K    72% |███████████████████████         | 593kB 48.8MB/s eta 0:00:01[K    73% |███████████████████████▌        | 604kB 48.9MB/s eta 0:00:01[K    74% |███████████████████████▉        | 614kB 49.5MB/s eta 0:00:01[K    75% |████████████████████████▎       | 624kB 48.6MB/s eta 0:00:01[K    77% |████████████████████████▋       | 634kB 49.7MB/s eta 0:00:01[K    78% |█████████████████████████       | 645kB 50.2MB/s eta 0:00:01[K    79% |█████████████████████████▍      | 655kB 49.3MB/s eta 0:00:01[K    80% |█████████████████████████▉      | 665kB 50.3MB/s eta 0:00:01[K    81% |██████████████████████████▎     | 675kB 50.3MB/s eta 0:00:01[K    83% |██████████████████████████▋     | 686kB 50.4MB/s eta 0:00:01[K    84% |███████████████████████████     | 696kB 50.5MB/s eta 0:00:01[K    85% |███████████████████████████▍    | 706kB 49.5MB/s eta 0:00:01[K    86% |███████████████████████████▉    | 716kB 50.3MB/s eta 0:00:01[K    88% |████████████████████████████▏   | 727kB 49.9MB/s eta 0:00:01[K    89% |████████████████████████████▋   | 737kB 48.1MB/s eta 0:00:01[K    90% |█████████████████████████████   | 747kB 49.1MB/s eta 0:00:01[K    91% |█████████████████████████████▍  | 757kB 49.2MB/s eta 0:00:01[K    93% |█████████████████████████████▉  | 768kB 49.3MB/s eta 0:00:01[K    94% |██████████████████████████████▏ | 778kB 49.2MB/s eta 0:00:01[K    95% |██████████████████████████████▋ | 788kB 48.2MB/s eta 0:00:01[K    96% |██████████████���████████████████ | 798kB 49.1MB/s eta 0:00:01[K    98% |███████████████████████████████▍| 808kB 49.2MB/s eta 0:00:01[K    99% |███████████████████████████████▉| 819kB 48.6MB/s eta 0:00:01[K    100% |████████████████████████████████| 829kB 1.8MB/s 
[?25hCollecting supervisor==3.0 (from -r requirements.txt (line 25))
  Downloading https://files.pythonhosted.org/packages/c0/a8/78658bf1d4180796e2be69b0b14e814bd735eb785eaf76399d2f1e6d2aef/supervisor-3.0.tar.gz (459kB)
[?25l[K    2% |▊                               | 10kB 40.0MB/s eta 0:00:01[K    4% |█▍                              | 20kB 35.2MB/s eta 0:00:01[K    6% |██▏                             | 30kB 37.2MB/s eta 0:00:01[K    8% |██▉                             | 40kB 36.9MB/s eta 0:00:01[K    11% |███▋                            | 51kB 36.4MB/s eta 0:00:01[K    13% |████▎                           | 61kB 37.9MB/s eta 0:00:01[K    15% |█████                           | 71kB 37.8MB/s eta 0:00:01[K    17% |█████▊                          | 81kB 37.4MB/s eta 0:00:01[K    20% |██████▍                         | 92kB 38.4MB/s eta 0:00:01[K    22% |███████▏                        | 102kB 38.2MB/s eta 0:00:01[K    24% |███████▉                        | 112kB 38.7MB/s eta 0:00:01[K    26% |████████▌                       | 122kB 39.9MB/s eta 0:00:01[K    28% |█████████▎                      | 133kB 40.2MB/s eta 0:00:01[K    31% |██████████                      | 143kB 41.4MB/s eta 0:00:01[K    33% |██████████▊                     | 153kB 41.8MB/s eta 0:00:01[K    35% |███████████▍                    | 163kB 41.2MB/s eta 0:00:01[K    37% |████████████▏                   | 174kB 42.5MB/s eta 0:00:01[K    40% |████████████▉                   | 184kB 43.4MB/s eta 0:00:01[K    42% |█████████████▌                  | 194kB 44.0MB/s eta 0:00:01[K    44% |██████████████▎                 | 204kB 44.7MB/s eta 0:00:01[K    46% |███████████████                 | 215kB 44.7MB/s eta 0:00:01[K    48% |███████████████▊                | 225kB 45.4MB/s eta 0:00:01[K    51% |████████████████▍               | 235kB 45.6MB/s eta 0:00:01[K    53% |█████████████████               | 245kB 44.7MB/s eta 0:00:01[K    55% |█████████████████▉              | 256kB 46.6MB/s eta 0:00:01[K    57% |██████████████████▌             | 266kB 46.1MB/s eta 0:00:01[K    60% |███████████████████▎            | 276kB 46.5MB/s eta 0:00:01[K    62% |████████████████████            | 286kB 46.7MB/s eta 0:00:01[K    64% |████████████████████▋           | 296kB 45.4MB/s eta 0:00:01[K    66% |█████████████████████▍          | 307kB 45.9MB/s eta 0:00:01[K    69% |██████████████████████          | 317kB 43.9MB/s eta 0:00:01[K    71% |██████████████████████▉         | 327kB 42.0MB/s eta 0:00:01[K    73% |███████████████████████▌        | 337kB 41.6MB/s eta 0:00:01[K    75% |████████████████████████▎       | 348kB 41.2MB/s eta 0:00:01[K    77% |█████████████████████████       | 358kB 40.9MB/s eta 0:00:01[K    80% |█████████████████████████▋      | 368kB 41.3MB/s eta 0:00:01[K    82% |██████████████████████████▍     | 378kB 40.6MB/s eta 0:00:01[K    84% |███████████████████████████     | 389kB 41.1MB/s eta 0:00:01[K    86% |███████████████████████████▉    | 399kB 41.4MB/s eta 0:00:01[K    89% |████████████████████████████▌   | 409kB 40.8MB/s eta 0:00:01[K    91% |█████████████████████████████▏  | 419kB 43.3MB/s eta 0:00:01[K    93% |██████████████████████████████  | 430kB 44.1MB/s eta 0:00:01[K    95% |██████████████████████████████▋ | 440kB 45.1MB/s eta 0:00:01[K    97% |███████████████████████████████▍| 450kB 45.9MB/s eta 0:00:01[K    100% |█████████████████████████���██████| 460kB 3.2MB/s 
[?25hCollecting opal==0.10.1 (from -r requirements.txt (line 27))
  Downloading https://files.pythonhosted.org/packages/23/dd/c48f4f6128805f4dccecf4177026bb070b8a6169373142629ca3f3c517c2/opal-0.10.1.tar.gz (2.9MB)
[?25l[K    0% |▏                               | 10kB 27.7MB/s eta 0:00:01[K    0% |▎                               | 20kB 31.4MB/s eta 0:00:01[K    1% |▍                               | 30kB 34.0MB/s eta 0:00:01[K    1% |▌                               | 40kB 35.7MB/s eta 0:00:01[K    1% |▋                               | 51kB 36.8MB/s eta 0:00:01[K    2% |▊                               | 61kB 38.9MB/s eta 0:00:01[K    2% |▉                               | 71kB 39.1MB/s eta 0:00:01[K    2% |█                               | 81kB 39.7MB/s eta 0:00:01[K    3% |█                               | 92kB 41.1MB/s eta 0:00:01[K    3% |█▏                              | 102kB 40.8MB/s eta 0:00:01[K    3% |█▎                              | 112kB 44.1MB/s eta 0:00:01[K    4% |█▍                              | 122kB 45.2MB/s eta 0:00:01[K    4% |█▌                              | 133kB 45.6MB/s eta 0:00:01[K    4% |█▋                              | 143kB 47.0MB/s eta 0:00:01[K    5% |█▊                              | 153kB 46.7MB/s eta 0:00:01[K    5% |█▉                              | 163kB 45.9MB/s eta 0:00:01[K    5% |██                              | 174kB 47.7MB/s eta 0:00:01[K    6% |██                              | 184kB 47.5MB/s eta 0:00:01[K    6% |██▏                             | 194kB 47.6MB/s eta 0:00:01[K    6% |██▎                             | 204kB 48.8MB/s eta 0:00:01[K    7% |██▍                             | 215kB 48.0MB/s eta 0:00:01[K    7% |██▌                             | 225kB 49.1MB/s eta 0:00:01[K    8% |██▋                             | 235kB 49.1MB/s eta 0:00:01[K    8% |██▊                             | 245kB 47.6MB/s eta 0:00:01[K    8% |██▉                             | 256kB 49.7MB/s eta 0:00:01[K    9% |███                             | 266kB 49.3MB/s eta 0:00:01[K    9% |███                             | 276kB 49.3MB/s eta 0:00:01[K    9% |███▏                            | 286kB 49.3MB/s eta 0:00:01[K    10% |███▎                            | 296kB 48.3MB/s eta 0:00:01[K    10% |███▍                            | 307kB 49.2MB/s eta 0:00:01[K    10% |███▌                            | 317kB 49.3MB/s eta 0:00:01[K    11% |███▋                            | 327kB 48.0MB/s eta 0:00:01[K    11% |███▊                            | 337kB 49.4MB/s eta 0:00:01[K    11% |███▉                            | 348kB 48.3MB/s eta 0:00:01[K    12% |████                            | 358kB 46.2MB/s eta 0:00:01[K    12% |████                            | 368kB 43.8MB/s eta 0:00:01[K    12% |████▏                           | 378kB 41.9MB/s eta 0:00:01[K    13% |████▎                           | 389kB 41.8MB/s eta 0:00:01[K    13% |████▍                           | 399kB 40.9MB/s eta 0:00:01[K    13% |████▌                           | 409kB 39.8MB/s eta 0:00:01[K    14% |████▋                           | 419kB 40.3MB/s eta 0:00:01[K    14% |████▊                           | 430kB 40.3MB/s eta 0:00:01[K    15% |████▉                           | 440kB 40.3MB/s eta 0:00:01[K    15% |█████                           | 450kB 41.0MB/s eta 0:00:01[K    15% |█████                           | 460kB 39.8MB/s eta 0:00:01[K    16% |█████▏                          | 471kB 41.4MB/s eta 0:00:01[K    16% |█████▎                          | 481kB 42.0MB/s eta 0:00:01[K    16% |█████▍                          | 491kB 42.4MB/s eta 0:00:01[K    17% |█████▌                          | 501kB 44.1MB/s eta 0:00:01[K    17% |█████▋                          | 512kB 43.6MB/s eta 0:00:01[K    17% |█████▊                          | 522kB 43.6MB/s eta 0:00:01[K    18% |█████▉                          | 532kB 43.6MB/s eta 0:00:01[K    18% |██████                          | 542kB 42.9MB/s eta 0:00:01[K    18% |██████                          | 552kB 44.0MB/s eta 0:00:01[K    19% |██████▏                         | 563kB 46.7MB/s eta 0:00:01[K    19% |██████▎                         | 573kB 47.8MB/s eta 0:00:01[K    19% |██████▍                         | 583kB 49.4MB/s eta 0:00:01[K    20% |██████▌                         | 593kB 49.0MB/s eta 0:00:01[K    20% |██████▋                         | 604kB 49.1MB/s eta 0:00:01[K    20% |██████▊                         | 614kB 50.5MB/s eta 0:00:01[K    21% |██████▉                         | 624kB 49.5MB/s eta 0:00:01[K    21% |███████                         | 634kB 51.0MB/s eta 0:00:01[K    22% |███████                         | 645kB 50.5MB/s eta 0:00:01[K    22% |███████▏                        | 655kB 49.6MB/s eta 0:00:01[K    22% |███████▎                        | 665kB 50.5MB/s eta 0:00:01[K    23% |███████▍                        | 675kB 49.7MB/s eta 0:00:01[K    23% |███████▌                        | 686kB 49.6MB/s eta 0:00:01[K    23% |███████▋                        | 696kB 49.7MB/s eta 0:00:01[K    24% |███████▊                        | 706kB 48.0MB/s eta 0:00:01[K    24% |███████▉                        | 716kB 48.8MB/s eta 0:00:01[K    24% |████████                        | 727kB 47.7MB/s eta 0:00:01[K    25% |████████                        | 737kB 44.4MB/s eta 0:00:01[K    25% |████████▏                       | 747kB 45.0MB/s eta 0:00:01[K    25% |████████▎                       | 757kB 44.0MB/s eta 0:00:01[K    26% |████████▍                       | 768kB 43.4MB/s eta 0:00:01[K    26% |████████▌                       | 778kB 43.4MB/s eta 0:00:01[K    26% |████████▋                       | 788kB 41.3MB/s eta 0:00:01[K    27% |████████▊                       | 798kB 42.1MB/s eta 0:00:01[K    27% |████████▉                       | 808kB 41.5MB/s eta 0:00:01[K    27% |█████████                       | 819kB 38.0MB/s eta 0:00:01[K    28% |█████████                       | 829kB 36.4MB/s eta 0:00:01[K    28% |█████████▏                      | 839kB 14.0MB/s eta 0:00:01[K    29% |█████████▎                      | 849kB 13.9MB/s eta 0:00:01[K    29% |█████████▍                      | 860kB 13.9MB/s eta 0:00:01[K    29% |█████████▌                      | 870kB 13.8MB/s eta 0:00:01[K    30% |█████████▋                      | 880kB 13.9MB/s eta 0:00:01[K    30% |█████████▊                      | 890kB 14.0MB/s eta 0:00:01[K    30% |█████████▉                      | 901kB 14.0MB/s eta 0:00:01[K    31% |██████████                      | 911kB 14.2MB/s eta 0:00:01[K    31% |██████████                      | 921kB 14.5MB/s eta 0:00:01[K    31% |██████████▏                     | 931kB 14.9MB/s eta 0:00:01[K    32% |██████████▎                     | 942kB 45.2MB/s eta 0:00:01[K    32% |██████████▍                     | 952kB 45.8MB/s eta 0:00:01[K    32% |██████████▌                     | 962kB 47.5MB/s eta 0:00:01[K    33% |██████████▋                     | 972kB 47.7MB/s eta 0:00:01[K    33% |██████████▊                     | 983kB 47.1MB/s eta 0:00:01[K    33% |█���████████▉                     | 993kB 48.1MB/s eta 0:00:01[K    34% |███████████                     | 1.0MB 47.8MB/s eta 0:00:01[K    34% |███████████                     | 1.0MB 47.8MB/s eta 0:00:01[K    34% |███████████▏                    | 1.0MB 47.5MB/s eta 0:00:01[K    35% |███████████▎                    | 1.0MB 46.2MB/s eta 0:00:01[K    35% |███████████▍                    | 1.0MB 47.5MB/s eta 0:00:01[K    36% |███████████▌                    | 1.1MB 47.6MB/s eta 0:00:01[K    36% |███████████▋                    | 1.1MB 46.8MB/s eta 0:00:01[K    36% |███████████▊                    | 1.1MB 48.1MB/s eta 0:00:01[K    37% |███████████▉                    | 1.1MB 48.1MB/s eta 0:00:01[K    37% |████████████                    | 1.1MB 47.1MB/s eta 0:00:01[K    37% |████████████                    | 1.1MB 43.4MB/s eta 0:00:01[K    38% |████████████▏                   | 1.1MB 42.2MB/s eta 0:00:01[K    38% |████████████▎                   | 1.1MB 43.7MB/s eta 0:00:01[K    38% |████████████▍                   | 1.1MB 44.1MB/s eta 0:00:01[K    39% |████████████▌                   | 1.1MB 43.1MB/s eta 0:00:01[K    39% |████████████▋                   | 1.2MB 43.7MB/s eta 0:00:01[K    39% |█���██████████▊                   | 1.2MB 43.4MB/s eta 0:00:01[K    40% |████████████▉                   | 1.2MB 43.4MB/s eta 0:00:01[K    40% |█████████████                   | 1.2MB 43.4MB/s eta 0:00:01[K    40% |█████████████                   | 1.2MB 42.7MB/s eta 0:00:01[K    41% |█████████████▏                  | 1.2MB 47.6MB/s eta 0:00:01[K    41% |█████████████▎                  | 1.2MB 48.2MB/s eta 0:00:01[K    41% |█████████████▍                  | 1.2MB 47.3MB/s eta 0:00:01[K    42% |█████████████▌                  | 1.2MB 48.2MB/s eta 0:00:01[K    42% |█████████████▋                  | 1.2MB 47.6MB/s eta 0:00:01[K    43% |█████████████▊                  | 1.3MB 47.4MB/s eta 0:00:01[K    43% |█████████████▉                  | 1.3MB 46.9MB/s eta 0:00:01[K    43% |██████████████                  | 1.3MB 45.4MB/s eta 0:00:01[K    44% |██████████████                  | 1.3MB 46.2MB/s eta 0:00:01[K    44% |██████████████▏                 | 1.3MB 46.9MB/s eta 0:00:01[K    44% |██████████████▎                 | 1.3MB 46.0MB/s eta 0:00:01[K    45% |██████████████▍                 | 1.3MB 46.8MB/s eta 0:00:01[K    45% |██████████████���                 | 1.3MB 46.5MB/s eta 0:00:01[K    45% |██████████████▋                 | 1.3MB 46.6MB/s eta 0:00:01[K    46% |██████████████▊                 | 1.4MB 47.6MB/s eta 0:00:01[K    46% |██████████████▉                 | 1.4MB 21.5MB/s eta 0:00:01[K    46% |███████████████                 | 1.4MB 21.4MB/s eta 0:00:01[K    47% |███████████████                 | 1.4MB 21.4MB/s eta 0:00:01[K    47% |███████████████▏                | 1.4MB 21.2MB/s eta 0:00:01[K    47% |███████████████▎                | 1.4MB 21.4MB/s eta 0:00:01[K    48% |███████████████▌                | 1.4MB 21.5MB/s eta 0:00:01[K    48% |███████████████▋                | 1.4MB 21.5MB/s eta 0:00:01[K    48% |███████████████▊                | 1.4MB 21.5MB/s eta 0:00:01[K    49% |███████████████▉                | 1.4MB 21.3MB/s eta 0:00:01[K    49% |████████████████                | 1.5MB 21.3MB/s eta 0:00:01[K    50% |████████████████                | 1.5MB 46.0MB/s eta 0:00:01[K    50% |████████████████▏               | 1.5MB 47.4MB/s eta 0:00:01[K    50% |████████████████▎               | 1.5MB 49.1MB/s eta 0:00:01[K    51% |████████████████▍               | 1.5MB 48.8MB/s eta 0:00:01[K    51% |████████████████▌               | 1.5MB 48.9MB/s eta 0:00:01[K    51% |████████████████▋               | 1.5MB 48.8MB/s eta 0:00:01[K    52% |████████████████▊               | 1.5MB 47.9MB/s eta 0:00:01[K    52% |████████████████▉               | 1.5MB 49.3MB/s eta 0:00:01[K    52% |█████████████████               | 1.5MB 49.3MB/s eta 0:00:01[K    53% |█████████████████               | 1.6MB 48.6MB/s eta 0:00:01[K    53% |█████████████████▏              | 1.6MB 49.6MB/s eta 0:00:01[K    53% |█████████████████▎              | 1.6MB 49.2MB/s eta 0:00:01[K    54% |█████████████████▍              | 1.6MB 49.1MB/s eta 0:00:01[K    54% |█████████████████▌              | 1.6MB 49.1MB/s eta 0:00:01[K    54% |█████████████████▋              | 1.6MB 48.1MB/s eta 0:00:01[K    55% |█████████████████▊              | 1.6MB 49.1MB/s eta 0:00:01[K    55% |█████████████████▉              | 1.6MB 48.7MB/s eta 0:00:01[K    55% |██████████████████              | 1.6MB 19.5MB/s eta 0:00:01[K    56% |██████████████████              | 1.6MB 19.5MB/s eta 0:00:01[K    56% |██████████████████▏             | 1.7MB 19.3MB/s eta 0:00:01[K    57% |██████████████████▎             | 1.7MB 19.3MB/s eta 0:00:01[K    57% |██████████████████▍             | 1.7MB 19.2MB/s eta 0:00:01[K    57% |██████████████████▌             | 1.7MB 19.0MB/s eta 0:00:01[K    58% |██████████████████▋             | 1.7MB 19.1MB/s eta 0:00:01[K    58% |██████████████████▊             | 1.7MB 18.9MB/s eta 0:00:01[K    58% |██████████████████▉             | 1.7MB 18.7MB/s eta 0:00:01[K    59% |███████████████████             | 1.7MB 18.8MB/s eta 0:00:01[K    59% |███████████████████             | 1.7MB 42.9MB/s eta 0:00:01[K    59% |███████████████████▏            | 1.8MB 43.4MB/s eta 0:00:01[K    60% |███████████████████▎            | 1.8MB 18.7MB/s eta 0:00:01[K    60% |███████████████████▍            | 1.8MB 17.8MB/s eta 0:00:01[K    60% |███████████████████▌            | 1.8MB 18.0MB/s eta 0:00:01[K    61% |███████████████████▋            | 1.8MB 18.0MB/s eta 0:00:01[K    61% |███████████████████▊            | 1.8MB 17.9MB/s eta 0:00:01[K    61% |███████████████████▉            | 1.8MB 18.2MB/s eta 0:00:01[K    62% |████████████████████            | 1.8MB 18.1MB/s eta 0:00:01[K    62% |████████████████████            | 1.8MB 18.1MB/s eta 0:00:01[K    62% |████████████████████▏           | 1.8MB 18.2MB/s eta 0:00:01[K    63% |████████████████████▎           | 1.9MB 18.1MB/s eta 0:00:01[K    63% |████████████████████▍           | 1.9MB 41.4MB/s eta 0:00:01[K    64% |████████████████████▌           | 1.9MB 45.1MB/s eta 0:00:01[K    64% |████████████████████▋           | 1.9MB 44.3MB/s eta 0:00:01[K    64% |████████████████████▊           | 1.9MB 44.9MB/s eta 0:00:01[K    65% |████████████████████▉           | 1.9MB 44.3MB/s eta 0:00:01[K    65% |█████████████████████           | 1.9MB 15.3MB/s eta 0:00:01[K    65% |█████████████████████           | 1.9MB 13.9MB/s eta 0:00:01[K    66% |█████████████████████▏          | 1.9MB 4.7MB/s eta 0:00:01[K    66% |█████████████████████▎          | 1.9MB 4.6MB/s eta 0:00:01[K    66% |█████████████████████▍          | 2.0MB 4.6MB/s eta 0:00:01[K    67% |█████████████████████▌          | 2.0MB 4.6MB/s eta 0:00:01[K    67% |█████████████████████▋          | 2.0MB 4.6MB/s eta 0:00:01[K    67% |█████████████████████▊          | 2.0MB 4.6MB/s eta 0:00:01[K    68% |█████████████████████▉          | 2.0MB 4.6MB/s eta 0:00:01[K    68% |██████████████████████          | 2.0MB 4.6MB/s eta 0:00:01[K    68% |██████████████████████          | 2.0MB 5.8MB/s eta 0:00:01[K    69% |██████████████████████▏         | 2.0MB 6.0MB/s eta 0:00:01[K    69% |██████████████████████▎         | 2.0MB 41.7MB/s eta 0:00:01[K    69% |██████████████████████▍         | 2.0MB 42.7MB/s eta 0:00:01[K    70% |██████████████████████▌         | 2.1MB 43.9MB/s eta 0:00:01[K    70% |██████████████████████▋         | 2.1MB 44.6MB/s eta 0:00:01[K    70% |██████████████████████▊         | 2.1MB 44.0MB/s eta 0:00:01[K    71% |██████████████████████▉         | 2.1MB 44.2MB/s eta 0:00:01[K    71% |███████████████████████         | 2.1MB 40.9MB/s eta 0:00:01[K    72% |███████████████████████         | 2.1MB 40.5MB/s eta 0:00:01[K    72% |███████████████████████▏        | 2.1MB 39.5MB/s eta 0:00:01[K    72% |███████████████████████▎        | 2.1MB 15.0MB/s eta 0:00:01[K    73% |███████████████████████▍        | 2.1MB 15.0MB/s eta 0:00:01[K    73% |███████████████████████▌        | 2.2MB 4.0MB/s eta 0:00:01[K    73% |███████████████████████▋        | 2.2MB 3.9MB/s eta 0:00:01[K    74% |███████████████████████▊        | 2.2MB 3.9MB/s eta 0:00:01[K    74% |███████████████████████▉        | 2.2MB 3.9MB/s eta 0:00:01[K    74% |████████████████████████        | 2.2MB 3.9MB/s eta 0:00:01[K    75% |████████████████████████        | 2.2MB 3.9MB/s eta 0:00:01[K    75% |████████████████████████▏       | 2.2MB 3.8MB/s eta 0:00:01[K    75% |████████████████████████▎       | 2.2MB 3.8MB/s eta 0:00:01[K    76% |██████████████████████���█▍       | 2.2MB 4.5MB/s eta 0:00:01[K    76% |████████████████████████▌       | 2.2MB 4.5MB/s eta 0:00:01[K    76% |████████████████████████▋       | 2.3MB 27.2MB/s eta 0:00:01[K    77% |████████████████████████▊       | 2.3MB 28.0MB/s eta 0:00:01[K    77% |████████████████████████▉       | 2.3MB 29.6MB/s eta 0:00:01[K    77% |█████████████████████████       | 2.3MB 31.1MB/s eta 0:00:01[K    78% |█████████████████████████       | 2.3MB 31.4MB/s eta 0:00:01[K    78% |█████████████████████████▏      | 2.3MB 10.2MB/s eta 0:00:01[K    79% |█████████████████████████▎      | 2.3MB 10.3MB/s eta 0:00:01[K    79% |█████████████████████████▍      | 2.3MB 10.5MB/s eta 0:00:01[K    79% |█████████████████████████▌      | 2.3MB 10.7MB/s eta 0:00:01[K    80% |█████████████████████████▋      | 2.3MB 10.9MB/s eta 0:00:01[K    80% |█████████████████████████▊      | 2.4MB 10.9MB/s eta 0:00:01[K    80% |█████████████████████████▉      | 2.4MB 11.0MB/s eta 0:00:01[K    81% |██████████████████████████      | 2.4MB 10.8MB/s eta 0:00:01[K    81% |██████████████████████████      | 2.4MB 10.9MB/s eta 0:00:01[K    81% |██████████████████████████▏     | 2.4MB 11.1MB/s eta 0:00:01[K    82% |██████████████████████████▎     | 2.4MB 45.5MB/s eta 0:00:01[K    82% |██████████████████████████▍     | 2.4MB 44.3MB/s eta 0:00:01[K    82% |██████████████████████████▌     | 2.4MB 40.3MB/s eta 0:00:01[K    83% |██████████████████████████▋     | 2.4MB 40.8MB/s eta 0:00:01[K    83% |██████████████████████████▊     | 2.4MB 40.5MB/s eta 0:00:01[K    83% |██████████████████████████▉     | 2.5MB 39.9MB/s eta 0:00:01[K    84% |███████████████████████████     | 2.5MB 40.9MB/s eta 0:00:01[K    84% |███████████████████████████     | 2.5MB 41.6MB/s eta 0:00:01[K    84% |███████████████████████████▏    | 2.5MB 41.7MB/s eta 0:00:01[K    85% |███████████████████████████▎    | 2.5MB 41.3MB/s eta 0:00:01[K    85% |███████████████████████████▍    | 2.5MB 40.7MB/s eta 0:00:01[K    86% |███████████████████████████▌    | 2.5MB 14.9MB/s eta 0:00:01[K    86% |███████████████████████████▋    | 2.5MB 15.0MB/s eta 0:00:01[K    86% |███████████████████████████▊    | 2.5MB 14.9MB/s eta 0:00:01[K    87% |███████████████████████████▉    | 2.5MB 15.0MB/s eta 0:00:01[K    87% |████████████████████████████    | 2.6MB 15.0MB/s eta 0:00:01[K    87% |████████████████████████████    | 2.6MB 14.9MB/s eta 0:00:01[K    88% |████████████████████████████▏   | 2.6MB 14.9MB/s eta 0:00:01[K    88% |████████████████████████████▎   | 2.6MB 14.8MB/s eta 0:00:01[K    88% |████████████████████████████▍   | 2.6MB 15.0MB/s eta 0:00:01[K    89% |████████████████████████████▌   | 2.6MB 15.0MB/s eta 0:00:01[K    89% |████████████████████████████▋   | 2.6MB 43.6MB/s eta 0:00:01[K    89% |███████████████████████████���▊   | 2.6MB 47.3MB/s eta 0:00:01[K    90% |████████████████████████████▉   | 2.6MB 48.4MB/s eta 0:00:01[K    90% |█████████████████████████████   | 2.7MB 48.6MB/s eta 0:00:01[K    90% |█████████████████████████████   | 2.7MB 48.2MB/s eta 0:00:01[K    91% |█████████████████████████████▏  | 2.7MB 48.1MB/s eta 0:00:01[K    91% |█████████████████████████████▎  | 2.7MB 49.2MB/s eta 0:00:01[K    91% |█████████████████████████████▍  | 2.7MB 49.3MB/s eta 0:00:01[K    92% |█████████████████████████████▌  | 2.7MB 48.5MB/s eta 0:00:01[K    92% |█████████████████████████████▋  | 2.7MB 49.5MB/s eta 0:00:01[K    93% |█████████████████████████████▊  | 2.7MB 49.5MB/s eta 0:00:01[K    93% |█████████████████████████████▉  | 2.7MB 49.6MB/s eta 0:00:01[K    93% |██████████████████████████████  | 2.7MB 49.7MB/s eta 0:00:01[K    94% |██████████████████████████████  | 2.8MB 48.7MB/s eta 0:00:01[K    94% |██████████████████████████████▏ | 2.8MB 49.5MB/s eta 0:00:01[K    94% |██████████████████████████████▎ | 2.8MB 49.6MB/s eta 0:00:01[K    95% |██████████████████████████████▍ | 2.8MB 48.6MB/s eta 0:00:01[K    95% |██████████████████████████████▌ | 2.8MB 49.6MB/s eta 0:00:01[K    95% |██████████████████████████████▋ | 2.8MB 49.6MB/s eta 0:00:01[K    96% |██████████████████████████████▊ | 2.8MB 49.6MB/s eta 0:00:01[K    96% |███████████████████████████████ | 2.8MB 48.7MB/s eta 0:00:01[K    96% |███████████████████████████████ | 2.8MB 47.6MB/s eta 0:00:01[K    97% |███████████████████████████████▏| 2.8MB 48.5MB/s eta 0:00:01[K    97% |███████████████████████████████▎| 2.9MB 48.6MB/s eta 0:00:01[K    97% |███████████████████████████████▍| 2.9MB 48.4MB/s eta 0:00:01[K    98% |███████████████████████████████▌| 2.9MB 49.4MB/s eta 0:00:01[K    98% |█████████████���█████████████████▋| 2.9MB 49.5MB/s eta 0:00:01[K    98% |███████████████████████████████▊| 2.9MB 49.5MB/s eta 0:00:01[K    99% |███████████████████████████████▉| 2.9MB 49.5MB/s eta 0:00:01[K    99% |████████████████████████████████| 2.9MB 48.6MB/s eta 0:00:01[K    100% |████████████████████████████████| 2.9MB 436kB/s 
[?25hObtaining opal_reporting from git+https://github.com/openhealthcare/opal-reporting.git@v0.2#egg=opal_reporting (from -r requirements.txt (line 29))
  Cloning https://github.com/openhealthcare/opal-reporting.git (to v0.2) to /home/travis/virtualenv/python2.7.14/src/opal-reporting
Obtaining opal_observations from git+https://github.com/openhealthcare/opal-observations.git@v0.5.0#egg=opal_observations (from -r requirements.txt (line 30))
  Cloning https://github.com/openhealthcare/opal-observations.git (to v0.5.0) to /home/travis/virtualenv/python2.7.14/src/opal-observations
Obtaining opal_wardround from git+https://github.com/openhealthcare/opal-wardround.git@v0.10.0#egg=opal_wardround (from -r requirements.txt (line 32))
  Cloning https://github.com/openhealthcare/opal-wardround.git (to v0.10.0) to /home/travis/virtualenv/python2.7.14/src/opal-wardround
Obtaining opal_dashboard from git+https://github.com/openhealthcare/opal-dashboard.git@v0.5.0#egg=opal_dashboard (from -r requirements.txt (line 33))
  Cloning https://github.com/openhealthcare/opal-dashboard.git (to v0.5.0) to /home/travis/virtualenv/python2.7.14/src/opal-dashboard
Obtaining opal_dischargesummary from git+https://github.com/openhealthcare/opal-dischargesummary.git@v0.5.0#egg=opal_dischargesummary (from -r requirements.txt (line 35))
  Cloning https://github.com/openhealthcare/opal-dischargesummary.git (to v0.5.0) to /home/travis/virtualenv/python2.7.14/src/opal-dischargesummary
Obtaining opal_guidelines from git+https://github.com/openhealthcare/opal-guidelines.git@v0.4.0#egg=opal_guidelines (from -r requirements.txt (line 36))
  Cloning https://github.com/openhealthcare/opal-guidelines.git (to v0.4.0) to /home/travis/virtualenv/python2.7.14/src/opal-guidelines
Obtaining django-test-coverage from git+https://github.com/srosro/django-test-coverage#egg=django-test-coverage (from -r requirements.txt (line 38))
  Cloning https://github.com/srosro/django-test-coverage to /home/travis/virtualenv/python2.7.14/src/django-test-coverage
Collecting paramiko<3.0,>=1.10 (from Fabric==1.14.0->-r requirements.txt (line 2))
  Downloading https://files.pythonhosted.org/packages/3e/db/cb7b6656e0e7387637ce850689084dc0b94b44df31cc52e5fc5c2c4fd2c1/paramiko-2.4.1-py2.py3-none-any.whl (194kB)
[?25l[K    5% |█▊                              | 10kB 25.1MB/s eta 0:00:01[K    10% |███▍                            | 20kB 24.0MB/s eta 0:00:01[K    15% |█████                           | 30kB 24.3MB/s eta 0:00:01[K    21% |██████▊                         | 40kB 25.0MB/s eta 0:00:01[K    26% |████████▍                       | 51kB 25.4MB/s eta 0:00:01[K    31% |██████████                      | 61kB 26.5MB/s eta 0:00:01[K    36% |███████████▉                    | 71kB 26.4MB/s eta 0:00:01[K    42% |█████████████▌                  | 81kB 26.6MB/s eta 0:00:01[K    47% |███████████████▏                | 92kB 27.4MB/s eta 0:00:01[K    52% |████████████████▉               | 102kB 27.5MB/s eta 0:00:01[K    57% |██████████████████▌             | 112kB 28.3MB/s eta 0:00:01[K    63% |████████████████████▏           | 122kB 29.1MB/s eta 0:00:01[K    68% |██████████████████████          | 133kB 29.5MB/s eta 0:00:01[K    73% |███████████████████████▋        | 143kB 30.3MB/s eta 0:00:01[K    78% |██���██████████████████████▎      | 153kB 30.4MB/s eta 0:00:01[K    84% |███████████████████████████     | 163kB 29.9MB/s eta 0:00:01[K    89% |████████████████████████████▋   | 174kB 30.8MB/s eta 0:00:01[K    94% |██████████████████████████████▎ | 184kB 30.8MB/s eta 0:00:01[K    100% |████████████████████████████████| 194kB 5.9MB/s 
[?25hCollecting static3 (from dj-static==0.0.6->-r requirements.txt (line 8))
  Downloading https://files.pythonhosted.org/packages/87/b0/9cf15108b73c4f2ffffe11d237c938f57785f55d3693d822d565432cb680/static3-0.7.0.tar.gz
Collecting jinja2 (from letter==0.4.1->-r requirements.txt (line 12))
  Downloading https://files.pythonhosted.org/packages/7f/ff/ae64bacdfc95f27a016a7bed8e8686763ba4d277a78ca76f32659220a731/Jinja2-2.10-py2.py3-none-any.whl (126kB)
[?25l[K    8% |██▋                             | 10kB 39.1MB/s eta 0:00:01[K    16% |█████▏                          | 20kB 36.1MB/s eta 0:00:01[K    24% |███████▉                        | 30kB 38.8MB/s eta 0:00:01[K    32% |██████████▍                     | 40kB 39.0MB/s eta 0:00:01[K    40% |█████████████                   | 51kB 39.1MB/s eta 0:00:01[K    48% |███████████████▋                | 61kB 40.1MB/s eta 0:00:01[K    56% |██████████████████▏             | 71kB 40.3MB/s eta 0:00:01[K    64% |████████████████████▊           | 81kB 40.5MB/s eta 0:00:01[K    72% |███████████████████████▍        | 92kB 41.4MB/s eta 0:00:01[K    81% |██████████████████████████      | 102kB 40.7MB/s eta 0:00:01[K    89% |████████████████████████████▌   | 112kB 41.5MB/s eta 0:00:01[K    97% |███████████████████████████████▏| 122kB 42.6MB/s eta 0:00:01[K    100% |████████████████████████████████| 133kB 9.0MB/s 
[?25hCollecting sqlparse (from django-debug-toolbar==1.2.1->-r requirements.txt (line 13))
  Downloading https://files.pythonhosted.org/packages/65/85/20bdd72f4537cf2c4d5d005368d502b2f464ede22982e724a82c86268eda/sqlparse-0.2.4-py2.py3-none-any.whl
Collecting certifi>=2017.4.17 (from requests==2.18.4->-r requirements.txt (line 15))
  Downloading https://files.pythonhosted.org/packages/7c/e6/92ad559b7192d846975fc916b65f667c7b8c3a32bea7372340bfe9a15fa5/certifi-2018.4.16-py2.py3-none-any.whl (150kB)
[?25l[K    6% |██▏                             | 10kB 45.1MB/s eta 0:00:01[K    13% |████▍                           | 20kB 39.3MB/s eta 0:00:01[K    20% |██████▌                         | 30kB 41.5MB/s eta 0:00:01[K    27% |████████▊                       | 40kB 41.1MB/s eta 0:00:01[K    34% |███████████                     | 51kB 40.7MB/s eta 0:00:01[K    40% |█████████████                   | 61kB 41.0MB/s eta 0:00:01[K    47% |███████████████▎                | 71kB 41.1MB/s eta 0:00:01[K    54% |█████████████████▍              | 81kB 40.7MB/s eta 0:00:01[K    61% |███████████████████▋            | 92kB 41.4MB/s eta 0:00:01[K    68% |█████████████████████▉          | 102kB 41.5MB/s eta 0:00:01[K    74% |████████████████████████        | 112kB 41.8MB/s eta 0:00:01[K    81% |██████████████████████████▏     | 122kB 42.6MB/s eta 0:00:01[K    88% |████████████████████████████▎   | 133kB 42.2MB/s eta 0:00:01[K    95% |██████████████████████████████▌ | 143kB 43.3MB/s eta 0:00:01[K    100% |████████████████████████████████| 153kB 8.2MB/s 
[?25hCollecting chardet<3.1.0,>=3.0.2 (from requests==2.18.4->-r requirements.txt (line 15))
  Downloading https://files.pythonhosted.org/packages/bc/a9/01ffebfb562e4274b6487b4bb1ddec7ca55ec7510b22e4c51f14098443b8/chardet-3.0.4-py2.py3-none-any.whl (133kB)
[?25l[K    7% |██▌                             | 10kB 45.3MB/s eta 0:00:01[K    15% |█████                           | 20kB 37.8MB/s eta 0:00:01[K    23% |███████▍                        | 30kB 40.3MB/s eta 0:00:01[K    30% |█████████▉                      | 40kB 40.0MB/s eta 0:00:01[K    38% |████████████▎                   | 51kB 39.9MB/s eta 0:00:01[K    46% |██████████████▊                 | 61kB 41.0MB/s eta 0:00:01[K    53% |█████████████████▏              | 71kB 40.8MB/s eta 0:00:01[K    61% |███████████████████▋            | 81kB 40.7MB/s eta 0:00:01[K    69% |██████████████████████▏         | 92kB 41.4MB/s eta 0:00:01[K    76% |████████████████████████▋       | 102kB 41.1MB/s eta 0:00:01[K    84% |███████████████████████████     | 112kB 40.5MB/s eta 0:00:01[K    92% |█████████████████████████████▌  | 122kB 41.7MB/s eta 0:00:01[K    99% |████████████████████████████████| 133kB 41.7MB/s eta 0:00:01[K    100% |████████████████████████████████| 143kB 8.3MB/s 
[?25hCollecting idna<2.7,>=2.5 (from requests==2.18.4->-r requirements.txt (line 15))
  Downloading https://files.pythonhosted.org/packages/27/cc/6dd9a3869f15c2edfab863b992838277279ce92663d334df9ecf5106f5c6/idna-2.6-py2.py3-none-any.whl (56kB)
[?25l[K    18% |█████▉                          | 10kB 52.2MB/s eta 0:00:01[K    36% |███████████▋                    | 20kB 42.8MB/s eta 0:00:01[K    54% |█████████████████▍              | 30kB 46.2MB/s eta 0:00:01[K    72% |███████████████████████▏        | 40kB 45.6MB/s eta 0:00:01[K    90% |█████████████████████████████   | 51kB 45.5MB/s eta 0:00:01[K    100% |████████████████████████████████| 61kB 11.4MB/s 
[?25hCollecting urllib3<1.23,>=1.21.1 (from requests==2.18.4->-r requirements.txt (line 15))
  Downloading https://files.pythonhosted.org/packages/63/cb/6965947c13a94236f6d4b8223e21beb4d576dc72e8130bd7880f600839b8/urllib3-1.22-py2.py3-none-any.whl (132kB)
[?25l[K    7% |██▌                             | 10kB 44.1MB/s eta 0:00:01[K    15% |█████                           | 20kB 38.9MB/s eta 0:00:01[K    23% |███████▍                        | 30kB 42.8MB/s eta 0:00:01[K    30% |██████████                      | 40kB 43.1MB/s eta 0:00:01[K    38% |████████████▍                   | 51kB 43.5MB/s eta 0:00:01[K    46% |██████████████▉                 | 61kB 44.9MB/s eta 0:00:01[K    54% |█████████████████▍              | 71kB 44.7MB/s eta 0:00:01[K    61% |███████████████████▉            | 81kB 44.8MB/s eta 0:00:01[K    69% |██████████████████████▎         | 92kB 45.7MB/s eta 0:00:01[K    77% |████████████████████████▊       | 102kB 45.9MB/s eta 0:00:01[K    85% |███████████████████████████▎    | 112kB 46.8MB/s eta 0:00:01[K    92% |█████████████████████████████▊  | 122kB 48.5MB/s eta 0:00:01[K    100% |████████████████████████████████| 133kB 9.5MB/s 
[?25hCollecting pytz>dev (from celery==3.1.25->-r requirements.txt (line 18))
  Downloading https://files.pythonhosted.org/packages/dc/83/15f7833b70d3e067ca91467ca245bae0f6fe56ddc7451aa0dc5606b120f2/pytz-2018.4-py2.py3-none-any.whl (510kB)
[?25l[K    2% |▋                               | 10kB 43.6MB/s eta 0:00:01[K    4% |█▎                              | 20kB 39.0MB/s eta 0:00:01[K    6% |██                              | 30kB 43.2MB/s eta 0:00:01[K    8% |██▋                             | 40kB 42.7MB/s eta 0:00:01[K    10% |███▏                            | 51kB 43.2MB/s eta 0:00:01[K    12% |███▉                            | 61kB 45.0MB/s eta 0:00:01[K    14% |████▌                           | 71kB 44.4MB/s eta 0:00:01[K    16% |█████▏                          | 81kB 44.6MB/s eta 0:00:01[K    18% |█████▊                          | 92kB 45.8MB/s eta 0:00:01[K    20% |██████▍                         | 102kB 45.9MB/s eta 0:00:01[K    22% |███████                         | 112kB 47.1MB/s eta 0:00:01[K    24% |███████▊                        | 122kB 48.7MB/s eta 0:00:01[K    26% |████████▍                       | 133kB 48.1MB/s eta 0:00:01[K    28% |█████████                       | 143kB 49.8MB/s eta 0:00:01[K    30% |█████████▋                      | 153kB 50.0MB/s eta 0:00:01[K    32% |██████████▎                     | 163kB 48.2MB/s eta 0:00:01[K    34% |███████████                     | 174kB 49.9MB/s eta 0:00:01[K    36% |███████████▌                    | 184kB 49.5MB/s eta 0:00:01[K    38% |████████████▏                   | 194kB 49.4MB/s eta 0:00:01[K    40% |████████████▉                   | 204kB 49.5MB/s eta 0:00:01[K    42% |█████████████▌                  | 215kB 48.6MB/s eta 0:00:01[K    44% |██████████████                  | 225kB 49.7MB/s eta 0:00:01[K    46% |██████████████▊                 | 235kB 49.8MB/s eta 0:00:01[K    48% |███████████████▍                | 245kB 48.7MB/s eta 0:00:01[K    50% |████████████████                | 256kB 49.7MB/s eta 0:00:01[K    52% |████████████████▊               | 266kB 50.8MB/s eta 0:00:01[K    54% |█████████████████▎              | 276kB 50.9MB/s eta 0:00:01[K    56% |██████████████████              | 286kB 51.5MB/s eta 0:00:01[K    58% |██████████████████▋             | 296kB 50.6MB/s eta 0:00:01[K    60% |███████████████████▎            | 307kB 51.6MB/s eta 0:00:01[K    62% |███████████████████▉            | 317kB 51.6MB/s eta 0:00:01[K    64% |████████████████████▌           | 327kB 50.5MB/s eta 0:00:01[K    66% |██████���██████████████▏          | 337kB 51.5MB/s eta 0:00:01[K    68% |█████████████████████▉          | 348kB 51.6MB/s eta 0:00:01[K    70% |██████████████████████▌         | 358kB 51.6MB/s eta 0:00:01[K    72% |███████████████████████         | 368kB 50.5MB/s eta 0:00:01[K    74% |███████████████████████▊        | 378kB 49.5MB/s eta 0:00:01[K    76% |████████████████████████▍       | 389kB 50.5MB/s eta 0:00:01[K    78% |█████████████████████████       | 399kB 50.5MB/s eta 0:00:01[K    80% |█████████████████████████▋      | 409kB 49.5MB/s eta 0:00:01[K    82% |██████████████████████████▎     | 419kB 50.4MB/s eta 0:00:01[K    84% |███████████████████████████     | 430kB 50.5MB/s eta 0:00:01[K    86% |███████████████████████████▋    | 440kB 50.5MB/s eta 0:00:01[K    88% |████████████████████████████▏   | 450kB 49.8MB/s eta 0:00:01[K    90% |████████████████████████████▉   | 460kB 48.8MB/s eta 0:00:01[K    92% |█████████████████████████████▌  | 471kB 50.7MB/s eta 0:00:01[K    94% |██████████████████████████████▏ | 481kB 50.7MB/s eta 0:00:01[K    96% |██████████████████████████████▉ | 491kB 49.6MB/s eta 0:00:01[K    98% |███████████████████████████████▍| 501kB 50.6MB/s eta 0:00:01[K    100% |████████████████████████████████| 512kB 3.0MB/s 
[?25hCollecting billiard<3.4,>=3.3.0.23 (from celery==3.1.25->-r requirements.txt (line 18))
  Downloading https://files.pythonhosted.org/packages/64/a6/d7b6fb7bd0a4680a41f1d4b27061c7b768c673070ba8ac116f865de4e7ca/billiard-3.3.0.23.tar.gz (151kB)
[?25l[K    6% |██▏                             | 10kB 50.7MB/s eta 0:00:01[K    13% |████▎                           | 20kB 44.2MB/s eta 0:00:01[K    20% |██████▌                         | 30kB 47.1MB/s eta 0:00:01[K    27% |████████▋                       | 40kB 46.8MB/s eta 0:00:01[K    33% |██████████▉                     | 51kB 46.6MB/s eta 0:00:01[K    40% |█████████████                   | 61kB 48.1MB/s eta 0:00:01[K    47% |███████████████▏                | 71kB 47.7MB/s eta 0:00:01[K    54% |█████████████████▎              | 81kB 47.5MB/s eta 0:00:01[K    60% |███████████████████▍            | 92kB 48.4MB/s eta 0:00:01[K    67% |█████████████████████▋          | 102kB 48.3MB/s eta 0:00:01[K    74% |███████████████████████▊        | 112kB 48.9MB/s eta 0:00:01[K    81% |██████████████████████████      | 122kB 50.1MB/s eta 0:00:01[K    87% |████████████████████████████    | 133kB 49.4MB/s eta 0:00:01[K    94% |█████████████���████████████████▎ | 143kB 50.6MB/s eta 0:00:01[K    100% |████████████████████████████████| 153kB 8.4MB/s 
[?25hCollecting kombu<3.1,>=3.0.37 (from celery==3.1.25->-r requirements.txt (line 18))
  Downloading https://files.pythonhosted.org/packages/4d/0e/73ac0df8949bdb6ad81812110962b38e6bb4243c3bfdad2d9e90b5509e2e/kombu-3.0.37-py2.py3-none-any.whl (240kB)
[?25l[K    4% |█▍                              | 10kB 28.8MB/s eta 0:00:01[K    8% |██▊                             | 20kB 31.1MB/s eta 0:00:01[K    12% |████                            | 30kB 31.6MB/s eta 0:00:01[K    17% |█████▌                          | 40kB 32.2MB/s eta 0:00:01[K    21% |██████▉                         | 51kB 32.2MB/s eta 0:00:01[K    25% |████████▏                       | 61kB 34.0MB/s eta 0:00:01[K    29% |█████████▌                      | 71kB 34.4MB/s eta 0:00:01[K    34% |███████████                     | 81kB 35.2MB/s eta 0:00:01[K    38% |████████████▎                   | 92kB 36.2MB/s eta 0:00:01[K    42% |█████████████▋                  | 102kB 36.8MB/s eta 0:00:01[K    46% |███████████████                 | 112kB 38.8MB/s eta 0:00:01[K    51% |████████████████▍               | 122kB 39.6MB/s eta 0:00:01[K    55% |█████████████████▊              | 133kB 40.8MB/s eta 0:00:01[K    59% |███████████████████             | 143kB 43.0MB/s eta 0:00:01[K    63% |████████████████████▍           | 153kB 45.0MB/s eta 0:00:01[K    68% |█████████████████████▉          | 163kB 45.0MB/s eta 0:00:01[K    72% |███████████████████████▏        | 174kB 46.2MB/s eta 0:00:01[K    76% |████████████████████████▌       | 184kB 46.5MB/s eta 0:00:01[K    80% |██████████████████████████      | 194kB 46.8MB/s eta 0:00:01[K    85% |███████████████████████████▎    | 204kB 47.2MB/s eta 0:00:01[K    89% |████████████████████████████▋   | 215kB 47.1MB/s eta 0:00:01[K    93% |██████████████████████████████  | 225kB 48.4MB/s eta 0:00:01[K    97% |███████████████████████████████▍| 235kB 46.8MB/s eta 0:00:01[K    100% |████████████████████████████████| 245kB 5.4MB/s 
[?25hCollecting django-appconf>=0.4 (from django-compressor==1.5->-r requirements.txt (line 20))
  Downloading https://files.pythonhosted.org/packages/5b/78/726cdf3e04660560cf25f9def95b8f2736310c581dabed9adfe60154a9f8/django_appconf-1.0.2-py2.py3-none-any.whl
Requirement already satisfied: setuptools in /home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages (from supervisor==3.0->-r requirements.txt (line 25))
Collecting meld3>=0.6.5 (from supervisor==3.0->-r requirements.txt (line 25))
  Downloading https://files.pythonhosted.org/packages/b6/ae/e6d731e4b9661642c1b20591d8054855bb5b8281cbfa18f561c2edd783f7/meld3-1.0.2-py2.py3-none-any.whl
Collecting pyasn1>=0.1.7 (from paramiko<3.0,>=1.10->Fabric==1.14.0->-r requirements.txt (line 2))
  Downloading https://files.pythonhosted.org/packages/ba/fe/02e3e2ee243966b143657fb8bd6bc97595841163b6d8c26820944acaec4d/pyasn1-0.4.2-py2.py3-none-any.whl (71kB)
[?25l[K    14% |████▋                           | 10kB 50.9MB/s eta 0:00:01[K    28% |█████████▏                      | 20kB 42.2MB/s eta 0:00:01[K    42% |█████████████▊                  | 30kB 44.0MB/s eta 0:00:01[K    57% |██████████████████▎             | 40kB 40.3MB/s eta 0:00:01[K    71% |██████████████████████▉         | 51kB 41.1MB/s eta 0:00:01[K    85% |███████████████████████████▍    | 61kB 41.7MB/s eta 0:00:01[K    100% |██████████████████████████���█████| 71kB 10.2MB/s 
[?25hCollecting bcrypt>=3.1.3 (from paramiko<3.0,>=1.10->Fabric==1.14.0->-r requirements.txt (line 2))
  Downloading https://files.pythonhosted.org/packages/2e/5a/2abeae20ce294fe6bf63da0e0b5a885c788e1360bbd124edcc0429678a59/bcrypt-3.1.4-cp27-cp27mu-manylinux1_x86_64.whl (57kB)
[?25l[K    17% |█████▊                          | 10kB 41.7MB/s eta 0:00:01[K    35% |███████████▍                    | 20kB 39.9MB/s eta 0:00:01[K    53% |█████████████████▏              | 30kB 43.5MB/s eta 0:00:01[K    71% |██████████████████████▉         | 40kB 43.8MB/s eta 0:00:01[K    89% |████████████████████████████▌   | 51kB 44.7MB/s eta 0:00:01[K    100% |████████████████████████████████| 61kB 11.2MB/s 
[?25hCollecting cryptography>=1.5 (from paramiko<3.0,>=1.10->Fabric==1.14.0->-r requirements.txt (line 2))
  Downloading https://files.pythonhosted.org/packages/dd/c2/3a5bfefb25690725824ade71e6b65449f0a9f4b29702cce10560f786ebf6/cryptography-2.2.2-cp27-cp27mu-manylinux1_x86_64.whl (2.2MB)
[?25l[K    0% |▏                               | 10kB 50.7MB/s eta 0:00:01[K    0% |▎                               | 20kB 41.7MB/s eta 0:00:01[K    1% |▌                               | 30kB 44.8MB/s eta 0:00:01[K    1% |▋                               | 40kB 42.8MB/s eta 0:00:01[K    2% |▊                               | 51kB 43.2MB/s eta 0:00:01[K    2% |█                               | 61kB 44.9MB/s eta 0:00:01[K    3% |█                               | 71kB 44.4MB/s eta 0:00:01[K    3% |█▏                              | 81kB 44.7MB/s eta 0:00:01[K    4% |█▍                              | 92kB 45.9MB/s eta 0:00:01[K    4% |█▌                              | 102kB 45.7MB/s eta 0:00:01[K    5% |█▊                              | 112kB 46.2MB/s eta 0:00:01[K    5% |█▉                              | 122kB 47.4MB/s eta 0:00:01[K    6% |██                              | 133kB 46.9MB/s eta 0:00:01[K    6% |██▏                             | 143kB 49.1MB/s eta 0:00:01[K    7% |██▎                             | 153kB 49.5MB/s eta 0:00:01[K    7% |██▍                             | 163kB 48.2MB/s eta 0:00:01[K    8% |██▋                             | 174kB 49.8MB/s eta 0:00:01[K    8% |██▊                             | 184kB 49.6MB/s eta 0:00:01[K    9% |██▉                             | 194kB 49.5MB/s eta 0:00:01[K    9% |███                             | 204kB 49.4MB/s eta 0:00:01[K    9% |███▏                            | 215kB 47.8MB/s eta 0:00:01[K    10% |███▍                            | 225kB 49.2MB/s eta 0:00:01[K    10% |███▌                            | 235kB 48.4MB/s eta 0:00:01[K    11% |███▋                            | 245kB 47.3MB/s eta 0:00:01[K    11% |███▉                            | 256kB 48.2MB/s eta 0:00:01[K    12% |████                            | 266kB 48.3MB/s eta 0:00:01[K    12% |████                            | 276kB 48.2MB/s eta 0:00:01[K    13% |████▎                           | 286kB 48.2MB/s eta 0:00:01[K    13% |████▍                           | 296kB 47.4MB/s eta 0:00:01[K    14% |████▌                           | 307kB 48.8MB/s eta 0:00:01[K    14% |████▊                           | 317kB 49.1MB/s eta 0:00:01[K    15% |████▉                           | 327kB 48.1MB/s eta 0:00:01[K    15% |█████                           | 337kB 50.0MB/s eta 0:00:01[K    16% |█████▏                          | 348kB 49.6MB/s eta 0:00:01[K    16% |█████▎                          | 358kB 49.6MB/s eta 0:00:01[K    17% |█████▌                          | 368kB 49.6MB/s eta 0:00:01[K    17% |█████▋                          | 378kB 48.3MB/s eta 0:00:01[K    18% |█████▊                          | 389kB 49.6MB/s eta 0:00:01[K    18% |██████                          | 399kB 49.1MB/s eta 0:00:01[K    18% |██████                          | 409kB 48.2MB/s eta 0:00:01[K    19% |██████▏                         | 419kB 49.6MB/s eta 0:00:01[K    19% |██████▍                         | 430kB 48.5MB/s eta 0:00:01[K    20% |██████▌                         | 440kB 48.4MB/s eta 0:00:01[K    20% |██████▊                         | 450kB 48.3MB/s eta 0:00:01[K    21% |██████▉                         | 460kB 46.1MB/s eta 0:00:01[K    21% |███████                         | 471kB 45.4MB/s eta 0:00:01[K    22% |███████▏                        | 481kB 43.7MB/s eta 0:00:01[K    22% |███████▎                        | 491kB 42.7MB/s eta 0:00:01[K    23% |███████▍                        | 501kB 43.7MB/s eta 0:00:01[K    23% |███████▋                        | 512kB 42.6MB/s eta 0:00:01[K    24% |███████▊                        | 522kB 41.7MB/s eta 0:00:01[K    24% |███████▉                        | 532kB 42.0MB/s eta 0:00:01[K    25% |████████                        | 542kB 40.9MB/s eta 0:00:01[K    25% |████████▏                       | 552kB 41.9MB/s eta 0:00:01[K    26% |████████▍                       | 563kB 42.5MB/s eta 0:00:01[K    26% |████████▌                       | 573kB 43.1MB/s eta 0:00:01[K    27% |████████▋                       | 583kB 45.8MB/s eta 0:00:01[K    27% |████████▉                       | 593kB 46.0MB/s eta 0:00:01[K    27% |█████████                       | 604kB 46.0MB/s eta 0:00:01[K    28% |█████████                       | 614kB 46.3MB/s eta 0:00:01[K    28% |█████████▎                      | 624kB 45.9MB/s eta 0:00:01[K    29% |█████████▍                      | 634kB 47.3MB/s eta 0:00:01[K    29% |█████████▌                      | 645kB 47.4MB/s eta 0:00:01[K    30% |█████████▊                      | 655kB 46.1MB/s eta 0:00:01[K    30% |█████████▉                      | 665kB 47.5MB/s eta 0:00:01[K    31% |██████████                      | 675kB 47.8MB/s eta 0:00:01[K    31% |██████████▏                     | 686kB 47.9MB/s eta 0:00:01[K    32% |██████████▎                     | 696kB 47.5MB/s eta 0:00:01[K    32% |██████████▌                     | 706kB 46.2MB/s eta 0:00:01[K    33% |██████████▋                     | 716kB 48.1MB/s eta 0:00:01[K    33% |██████████▊                     | 727kB 48.7MB/s eta 0:00:01[K    34% |███████████                     | 737kB 47.4MB/s eta 0:00:01[K    34% |███████████                     | 747kB 48.7MB/s eta 0:00:01[K    35% |███████████▏                    | 757kB 48.8MB/s eta 0:00:01[K    35% |███████████▍                    | 768kB 48.8MB/s eta 0:00:01[K    36% |███████████▌                    | 778kB 48.9MB/s eta 0:00:01[K    36% |███████████▊                    | 788kB 47.5MB/s eta 0:00:01[K    36% |███████████▉                    | 798kB 48.4MB/s eta 0:00:01[K    37% |████████████                    | 808kB 48.5MB/s eta 0:00:01[K    37% |████████████▏                   | 819kB 47.6MB/s eta 0:00:01[K    38% |████████████▎                   | 829kB 48.4MB/s eta 0:00:01[K    38% |████████████▍                   | 839kB 48.7MB/s eta 0:00:01[K    39% |████████████▋                   | 849kB 48.8MB/s eta 0:00:01[K    39% |████████████▊                   | 860kB 48.8MB/s eta 0:00:01[K    40% |████████████▉                   | 870kB 47.9MB/s eta 0:00:01[K    40% |█████████████                   | 880kB 48.8MB/s eta 0:00:01[K    41% |█████████████▏                  | 890kB 48.8MB/s eta 0:00:01[K    41% |█████████████▍                  | 901kB 47.9MB/s eta 0:00:01[K    42% |█████████████▌                  | 911kB 49.3MB/s eta 0:00:01[K    42% |█████████████▋                  | 921kB 49.4MB/s eta 0:00:01[K    43% |█████████████▉                  | 931kB 49.5MB/s eta 0:00:01[K    43% |██████████████                  | 942kB 49.2MB/s eta 0:00:01[K    44% |██���███████████                  | 952kB 47.8MB/s eta 0:00:01[K    44% |██████████████▎                 | 962kB 49.0MB/s eta 0:00:01[K    45% |██████████████▍                 | 972kB 49.0MB/s eta 0:00:01[K    45% |██████████████▌                 | 983kB 47.8MB/s eta 0:00:01[K    45% |██████████████▊                 | 993kB 47.7MB/s eta 0:00:01[K    46% |██████████████▉                 | 1.0MB 45.5MB/s eta 0:00:01[K    46% |███████████████                 | 1.0MB 43.5MB/s eta 0:00:01[K    47% |███████████████▏                | 1.0MB 41.1MB/s eta 0:00:01[K    47% |███████████████▎                | 1.0MB 39.6MB/s eta 0:00:01[K    48% |███████████████▌                | 1.0MB 40.0MB/s eta 0:00:01[K    48% |███████████████▋                | 1.1MB 40.2MB/s eta 0:00:01[K    49% |███████████████▊                | 1.1MB 39.5MB/s eta 0:00:01[K    49% |████████████████                | 1.1MB 40.0MB/s eta 0:00:01[K    50% |████████████████                | 1.1MB 39.8MB/s eta 0:00:01[K    50% |████████████████▎               | 1.1MB 40.6MB/s eta 0:00:01[K    51% |████████████████▍               | 1.1MB 42.7MB/s eta 0:00:01[K    51% |████████████████▌               | 1.1MB 43.5MB/s eta 0:00:01[K    52% |████████████████▊               | 1.1MB 46.8MB/s eta 0:00:01[K    52% |████████████████▉               | 1.1MB 48.0MB/s eta 0:00:01[K    53% |█████████████████               | 1.1MB 47.6MB/s eta 0:00:01[K    53% |█████████████████▏              | 1.2MB 48.7MB/s eta 0:00:01[K    54% |█████████████████▎              | 1.2MB 47.6MB/s eta 0:00:01[K    54% |█████████████████▍              | 1.2MB 47.6MB/s eta 0:00:01[K    54% |█████████████████▋              | 1.2MB 47.9MB/s eta 0:00:01[K    55% |█████████████████▊              | 1.2MB 47.2MB/s eta 0:00:01[K    55% |██████████████████              | 1.2MB 48.0MB/s eta 0:00:01[K    56% |██████████████████              | 1.2MB 48.0MB/s eta 0:00:01[K    56% |██████████████████▏             | 1.2MB 47.1MB/s eta 0:00:01[K    57% |██████████████████▍             | 1.2MB 48.0MB/s eta 0:00:01[K    57% |██████████████████▌             | 1.2MB 47.8MB/s eta 0:00:01[K    58% |██████████████████▋             | 1.3MB 47.8MB/s eta 0:00:01[K    58% |███���██████████████▉             | 1.3MB 48.7MB/s eta 0:00:01[K    59% |███████████████████             | 1.3MB 47.5MB/s eta 0:00:01[K    59% |███████████████████             | 1.3MB 48.6MB/s eta 0:00:01[K    60% |███████████████████▎            | 1.3MB 48.7MB/s eta 0:00:01[K    60% |███████████████████▍            | 1.3MB 47.8MB/s eta 0:00:01[K    61% |███████████████████▋            | 1.3MB 49.2MB/s eta 0:00:01[K    61% |███████████████████▊            | 1.3MB 48.9MB/s eta 0:00:01[K    62% |███████████████████▉            | 1.3MB 48.7MB/s eta 0:00:01[K    62% |████████████████████            | 1.4MB 49.1MB/s eta 0:00:01[K    63% |████████████████████▏           | 1.4MB 46.3MB/s eta 0:00:01[K    63% |████████████████████▎           | 1.4MB 47.4MB/s eta 0:00:01[K    63% |████████████████████▌           | 1.4MB 47.5MB/s eta 0:00:01[K    64% |████████████████████▋           | 1.4MB 46.8MB/s eta 0:00:01[K    64% |████████████████████▊           | 1.4MB 47.6MB/s eta 0:00:01[K    65% |█████████████████████           | 1.4MB 47.3MB/s eta 0:00:01[K    65% |█████████████████████           | 1.4MB 47.3MB/s eta 0:00:01[K    66% |█████████████████████▎          | 1.4MB 47.7MB/s eta 0:00:01[K    66% |█████████████████████▍          | 1.4MB 47.0MB/s eta 0:00:01[K    67% |█████████████████████▌          | 1.5MB 47.8MB/s eta 0:00:01[K    67% |█████████████████████▊          | 1.5MB 49.2MB/s eta 0:00:01[K    68% |█████████████████████▉          | 1.5MB 47.7MB/s eta 0:00:01[K    68% |██████████████████████          | 1.5MB 48.9MB/s eta 0:00:01[K    69% |██████████████████████▏         | 1.5MB 48.2MB/s eta 0:00:01[K    69% |██████████████████████▎         | 1.5MB 48.2MB/s eta 0:00:01[K    70% |██████████████████████▍         | 1.5MB 48.3MB/s eta 0:00:01[K    70% |██████████████████████▋         | 1.5MB 47.3MB/s eta 0:00:01[K    71% |██████████████████████▊         | 1.5MB 48.2MB/s eta 0:00:01[K    71% |███████████████████████         | 1.5MB 47.4MB/s eta 0:00:01[K    72% |███████████████████████         | 1.6MB 45.1MB/s eta 0:00:01[K    72% |███████████████████████▏        | 1.6MB 44.6MB/s eta 0:00:01[K    72% |███████████████████████▍        | 1.6MB 43.4MB/s eta 0:00:01[K    73% |███████████████████████▌        | 1.6MB 43.2MB/s eta 0:00:01[K    73% |███████████████████████▋        | 1.6MB 42.1MB/s eta 0:00:01[K    74% |███████████████████████▉        | 1.6MB 41.0MB/s eta 0:00:01[K    74% |████████████████████████        | 1.6MB 41.8MB/s eta 0:00:01[K    75% |████████████████████████        | 1.6MB 41.8MB/s eta 0:00:01[K    75% |████████████████████████▎       | 1.6MB 40.7MB/s eta 0:00:01[K    76% |████████████████████████▍       | 1.6MB 42.0MB/s eta 0:00:01[K    76% |████████████████████████▋       | 1.7MB 42.9MB/s eta 0:00:01[K    77% |████████████████████████▊       | 1.7MB 44.6MB/s eta 0:00:01[K    77% |████████████████████████▉       | 1.7MB 46.4MB/s eta 0:00:01[K    78% |█████████████████████████       | 1.7MB 45.9MB/s eta 0:00:01[K    78% |█████████████████████████▏      | 1.7MB 48.6MB/s eta 0:00:01[K    79% |█████████████████████████▎      | 1.7MB 48.9MB/s eta 0:00:01[K    79% |█████████████████████████▌      | 1.7MB 46.8MB/s eta 0:00:01[K    80% |█████████████████████████▋      | 1.7MB 47.7MB/s eta 0:00:01[K    80% |█████████████████████████▊      | 1.7MB 47.8MB/s eta 0:00:01[K    81% |██████████████████████████      | 1.8MB 47.8MB/s eta 0:00:01[K    81% |██████████████████████████      | 1.8MB 48.3MB/s eta 0:00:01[K    81% |██████████████████████████▎     | 1.8MB 47.5MB/s eta 0:00:01[K    82% |██████████████████████████▍     | 1.8MB 48.4MB/s eta 0:00:01[K    82% |██████████████████████████▌     | 1.8MB 48.0MB/s eta 0:00:01[K    83% |██████████████████████████▊     | 1.8MB 47.1MB/s eta 0:00:01[K    83% |██████████████████████████▉     | 1.8MB 48.4MB/s eta 0:00:01[K    84% |███████████████████████████     | 1.8MB 49.8MB/s eta 0:00:01[K    84% |████████████████���██████████▏    | 1.8MB 49.9MB/s eta 0:00:01[K    85% |███████████████████████████▎    | 1.8MB 50.5MB/s eta 0:00:01[K    85% |███████████████████████████▍    | 1.9MB 49.4MB/s eta 0:00:01[K    86% |███████████████████████████▋    | 1.9MB 50.2MB/s eta 0:00:01[K    86% |███████████████████████████▊    | 1.9MB 50.3MB/s eta 0:00:01[K    87% |████████████████████████████    | 1.9MB 49.3MB/s eta 0:00:01[K    87% |████████████████████████████    | 1.9MB 50.9MB/s eta 0:00:01[K    88% |████████████████████████████▏   | 1.9MB 51.0MB/s eta 0:00:01[K    88% |████████████████████████████▍   | 1.9MB 51.0MB/s eta 0:00:01[K    89% |████████████████████████████▌   | 1.9MB 50.5MB/s eta 0:00:01[K    89% |████████████████████████████▋   | 1.9MB 49.4MB/s eta 0:00:01[K    90% |████████████████████████████▉   | 1.9MB 50.2MB/s eta 0:00:01[K    90% |█████████████████████████████   | 2.0MB 50.0MB/s eta 0:00:01[K    90% |████���████████████████████████   | 2.0MB 49.1MB/s eta 0:00:01[K    91% |█████████████████████████████▎  | 2.0MB 49.8MB/s eta 0:00:01[K    91% |█████████████████████████████▍  | 2.0MB 49.8MB/s eta 0:00:01[K    92% |█████████████████████████████▋  | 2.0MB 49.9MB/s eta 0:00:01[K    92% |█████████████████████████████▊  | 2.0MB 49.8MB/s eta 0:00:01[K    93% |█████████████████████████████▉  | 2.0MB 48.9MB/s eta 0:00:01[K    93% |██████████████████████████████  | 2.0MB 50.3MB/s eta 0:00:01[K    94% |██████████████████████████████▏ | 2.0MB 50.3MB/s eta 0:00:01[K    94% |██████████████████████████████▎ | 2.0MB 49.4MB/s eta 0:00:01[K    95% |██████████████████████████████▌ | 2.1MB 50.7MB/s eta 0:00:01[K    95% |██████████████████████████████▋ | 2.1MB 50.8MB/s eta 0:00:01[K    96% |██████████████████████████████▊ | 2.1MB 50.9MB/s eta 0:00:01[K    96% |████████████████████���██████████ | 2.1MB 50.9MB/s eta 0:00:01[K    97% |███████████████████████████████ | 2.1MB 49.9MB/s eta 0:00:01[K    97% |███████████████████████████████▎| 2.1MB 50.7MB/s eta 0:00:01[K    98% |███████████████████████████████▍| 2.1MB 50.1MB/s eta 0:00:01[K    98% |███████████████████████████████▌| 2.1MB 49.1MB/s eta 0:00:01[K    99% |███████████████████████████████▊| 2.1MB 50.1MB/s eta 0:00:01[K    99% |███████████████████████████████▉| 2.2MB 50.2MB/s eta 0:00:01[K    99% |████████████████████████████████| 2.2MB 50.2MB/s eta 0:00:01[K    100% |████████████████████████████████| 2.2MB 675kB/s 
[?25hCollecting pynacl>=1.0.1 (from paramiko<3.0,>=1.10->Fabric==1.14.0->-r requirements.txt (line 2))
  Downloading https://files.pythonhosted.org/packages/80/3d/d709b9fbd69e21dd3a4d34eb690c5484094699e03b7447bc7eb173cfd7b6/PyNaCl-1.2.1-cp27-cp27mu-manylinux1_x86_64.whl (696kB)
[?25l[K    1% |▌                               | 10kB 33.8MB/s eta 0:00:01[K    2% |█                               | 20kB 28.1MB/s eta 0:00:01[K    4% |█▍                              | 30kB 29.9MB/s eta 0:00:01[K    5% |█▉                              | 40kB 28.4MB/s eta 0:00:01[K    7% |██▍                             | 51kB 28.1MB/s eta 0:00:01[K    8% |██▉                             | 61kB 29.0MB/s eta 0:00:01[K    10% |███▎                            | 71kB 28.9MB/s eta 0:00:01[K    11% |███▊                            | 81kB 28.9MB/s eta 0:00:01[K    13% |████▎                           | 92kB 29.5MB/s eta 0:00:01[K    14% |████▊                           | 102kB 29.3MB/s eta 0:00:01[K    16% |█████▏                          | 112kB 29.4MB/s eta 0:00:01[K    17% |█████▋                          | 122kB 29.8MB/s eta 0:00:01[K    19% |██████▏                         | 133kB 29.2MB/s eta 0:00:01[K    20% |██████▋                         | 143kB 30.3MB/s eta 0:00:01[K    22% |███████                         | 153kB 30.1MB/s eta 0:00:01[K    23% |███████▌                        | 163kB 29.4MB/s eta 0:00:01[K    24% |████████                        | 174kB 30.0MB/s eta 0:00:01[K    26% |████████▌                       | 184kB 29.6MB/s eta 0:00:01[K    27% |█████████                       | 194kB 29.5MB/s eta 0:00:01[K    29% |█████████▍                      | 204kB 29.6MB/s eta 0:00:01[K    30% |█████████▉                      | 215kB 28.8MB/s eta 0:00:01[K    32% |██████████▍                     | 225kB 29.5MB/s eta 0:00:01[K    33% |██████████▉                     | 235kB 29.4MB/s eta 0:00:01[K    35% |███████████▎                    | 245kB 28.7MB/s eta 0:00:01[K    36% |███████████▊                    | 256kB 29.6MB/s eta 0:00:01[K    38% |████████████▎                   | 266kB 29.8MB/s eta 0:00:01[K    39% |████████████▊                   | 276kB 29.2MB/s eta 0:00:01[K    41% |█████████████▏                  | 286kB 29.6MB/s eta 0:00:01[K    42% |█████████████▋                  | 296kB 28.9MB/s eta 0:00:01[K    44% |██████████████                  | 307kB 29.5MB/s eta 0:00:01[K    45% |██████████████▋                 | 317kB 29.8MB/s eta 0:00:01[K    47% |███████████████                 | 327kB 29.2MB/s eta 0:00:01[K    48% |███████████████▌                | 337kB 30.0MB/s eta 0:00:01[K    49% |████████████████                | 348kB 30.1MB/s eta 0:00:01[K    51% |████████████████▌               | 358kB 30.1MB/s eta 0:00:01[K    52% |█████████████████               | 368kB 30.2MB/s eta 0:00:01[K    54% |█████████████████▍              | 378kB 30.1MB/s eta 0:00:01[K    55% |█████████████████▉              | 389kB 30.7MB/s eta 0:00:01[K    57% |██████████████████▍             | 399kB 30.4MB/s eta 0:00:01[K    58% |██████████████████▉             | 409kB 29.9MB/s eta 0:00:01[K    60% |███████████████████▎            | 419kB 30.4MB/s eta 0:00:01[K    61% |███████████████████▊            | 430kB 30.4MB/s eta 0:00:01[K    63% |████████████████████▏           | 440kB 30.4MB/s eta 0:00:01[K    64% |████████████████████▊           | 450kB 30.2MB/s eta 0:00:01[K    66% |█████████████████████▏          | 460kB 29.6MB/s eta 0:00:01[K    67% |█████████████████████▋          | 471kB 30.1MB/s eta 0:00:01[K    69% |██████████████████████          | 481kB 30.2MB/s eta 0:00:01[K    70% |██████████████████████▋         | 491kB 30.5MB/s eta 0:00:01[K    72% |███████████████████████         | 501kB 32.4MB/s eta 0:00:01[K    73% |███���███████████████████▌        | 512kB 33.8MB/s eta 0:00:01[K    74% |████████████████████████        | 522kB 34.9MB/s eta 0:00:01[K    76% |████████████████████████▌       | 532kB 35.7MB/s eta 0:00:01[K    77% |█████████████████████████       | 542kB 36.0MB/s eta 0:00:01[K    79% |█████████████████████████▍      | 552kB 37.9MB/s eta 0:00:01[K    80% |█████████████████████████▉      | 563kB 40.0MB/s eta 0:00:01[K    82% |██████████████████████████▎     | 573kB 40.7MB/s eta 0:00:01[K    83% |██████████████████████████▉     | 583kB 43.7MB/s eta 0:00:01[K    85% |███████████████████████████▎    | 593kB 44.5MB/s eta 0:00:01[K    86% |███████████████████████████▊    | 604kB 45.2MB/s eta 0:00:01[K    88% |████████████████████████████▏   | 614kB 45.5MB/s eta 0:00:01[K    89% |████████████████████████████▊   | 624kB 45.2MB/s eta 0:00:01[K    91% |█████████████████████████████▏  | 634kB 47.7MB/s eta 0:00:01[K    92% |██████���██████████████████████▋  | 645kB 48.8MB/s eta 0:00:01[K    94% |██████████████████████████████  | 655kB 49.5MB/s eta 0:00:01[K    95% |██████████████████████████████▋ | 665kB 50.6MB/s eta 0:00:01[K    96% |███████████████████████████████ | 675kB 51.4MB/s eta 0:00:01[K    98% |███████████████████████████████▌| 686kB 51.6MB/s eta 0:00:01[K    99% |████████████████████████████████| 696kB 51.9MB/s eta 0:00:01[K    100% |████████████████████████████████| 706kB 2.2MB/s 
[?25hCollecting MarkupSafe>=0.23 (from jinja2->letter==0.4.1->-r requirements.txt (line 12))
  Downloading https://files.pythonhosted.org/packages/4d/de/32d741db316d8fdb7680822dd37001ef7a448255de9699ab4bfcbdf4172b/MarkupSafe-1.0.tar.gz
Collecting amqp<2.0,>=1.4.9 (from kombu<3.1,>=3.0.37->celery==3.1.25->-r requirements.txt (line 18))
  Downloading https://files.pythonhosted.org/packages/ed/09/314d2788aba0aa91f2578071a6484f87a615172a98c309c2aad3433da90b/amqp-1.4.9-py2.py3-none-any.whl (51kB)
[?25l[K    19% |██████▍                         | 10kB 44.0MB/s eta 0:00:01[K    39% |████████████▊                   | 20kB 36.3MB/s eta 0:00:01[K    59% |███████████████████             | 30kB 38.1MB/s eta 0:00:01[K    79% |█████████████████████████▍      | 40kB 37.9MB/s eta 0:00:01[K    99% |███████████████████████████████▊| 51kB 38.9MB/s eta 0:00:01[K    100% |████████████████████████████████| 61kB 11.5MB/s 
[?25hCollecting anyjson>=0.3.3 (from kombu<3.1,>=3.0.37->celery==3.1.25->-r requirements.txt (line 18))
  Downloading https://files.pythonhosted.org/packages/c3/4d/d4089e1a3dd25b46bebdb55a992b0797cff657b4477bc32ce28038fdecbc/anyjson-0.3.3.tar.gz
Collecting cffi>=1.1 (from bcrypt>=3.1.3->paramiko<3.0,>=1.10->Fabric==1.14.0->-r requirements.txt (line 2))
  Downloading https://files.pythonhosted.org/packages/14/dd/3e7a1e1280e7d767bd3fa15791759c91ec19058ebe31217fe66f3e9a8c49/cffi-1.11.5-cp27-cp27mu-manylinux1_x86_64.whl (407kB)
[?25l[K    2% |▉                               | 10kB 35.2MB/s eta 0:00:01[K    5% |█▋                              | 20kB 32.5MB/s eta 0:00:01[K    7% |██▍                             | 30kB 34.9MB/s eta 0:00:01[K    10% |███▏                            | 40kB 36.7MB/s eta 0:00:01[K    12% |████                            | 51kB 38.1MB/s eta 0:00:01[K    15% |████▉                           | 61kB 40.1MB/s eta 0:00:01[K    17% |█████▋                          | 71kB 40.7MB/s eta 0:00:01[K    20% |██████▍                         | 81kB 40.5MB/s eta 0:00:01[K    22% |███████▎                        | 92kB 41.8MB/s eta 0:00:01[K    25% |████████                        | 102kB 41.7MB/s eta 0:00:01[K    27% |████████▉                       | 112kB 43.6MB/s eta 0:00:01[K    30% |█████████▋                      | 122kB 45.9MB/s eta 0:00:01[K    32% |██████████▌                     | 133kB 46.6MB/s eta 0:00:01[K    35% |███████████▎                    | 143kB 47.8MB/s eta 0:00:01[K    37% |████████████                    | 153kB 48.0MB/s eta 0:00:01[K    40% |████████████▉                   | 163kB 47.2MB/s eta 0:00:01[K    42% |█████████████▊                  | 174kB 48.3MB/s eta 0:00:01[K    45% |██████████████▌                 | 184kB 49.1MB/s eta 0:00:01[K    47% |███████████████▎                | 194kB 49.3MB/s eta 0:00:01[K    50% |████████████████                | 204kB 49.9MB/s eta 0:00:01[K    52% |█████████████████               | 215kB 49.1MB/s eta 0:00:01[K    55% |█████████████████▊              | 225kB 50.1MB/s eta 0:00:01[K    57% |██████████████████▌             | 235kB 50.0MB/s eta 0:00:01[K    60% |███████████████████▎            | 245kB 49.0MB/s eta 0:00:01[K    62% |████████████████████            | 256kB 50.0MB/s eta 0:00:01[K    65% |█████████████████████           | 266kB 50.0MB/s eta 0:00:01[K    67% |█████████████████████▊          | 276kB 50.1MB/s eta 0:00:01[K    70% |██████████████████████▌         | 286kB 48.6MB/s eta 0:00:01[K    72% |███████████████████████▎        | 296kB 47.7MB/s eta 0:00:01[K    75% |████████████████████████▏       | 307kB 48.6MB/s eta 0:00:01[K    77% |█████████████████████████       | 317kB 48.6MB/s eta 0:00:01[K    80% |█████████████���███████████▊      | 327kB 47.7MB/s eta 0:00:01[K    82% |██████████████████████████▌     | 337kB 48.6MB/s eta 0:00:01[K    85% |███████████████████████████▍    | 348kB 48.6MB/s eta 0:00:01[K    87% |████████████████████████████▏   | 358kB 48.6MB/s eta 0:00:01[K    90% |█████████████████████████████   | 368kB 48.1MB/s eta 0:00:01[K    93% |█████████████████████████████▊  | 378kB 47.1MB/s eta 0:00:01[K    95% |██████████████████████████████▋ | 389kB 49.6MB/s eta 0:00:01[K    98% |███████████████████████████████▍| 399kB 49.6MB/s eta 0:00:01[K    100% |████████████████████████████████| 409kB 3.5MB/s 
[?25hCollecting asn1crypto>=0.21.0 (from cryptography>=1.5->paramiko<3.0,>=1.10->Fabric==1.14.0->-r requirements.txt (line 2))
  Downloading https://files.pythonhosted.org/packages/ea/cd/35485615f45f30a510576f1a56d1e0a7ad7bd8ab5ed7cdc600ef7cd06222/asn1crypto-0.24.0-py2.py3-none-any.whl (101kB)
[?25l[K    10% |███▎                            | 10kB 49.9MB/s eta 0:00:01[K    20% |██████▌                         | 20kB 40.7MB/s eta 0:00:01[K    30% |█████████▊                      | 30kB 44.0MB/s eta 0:00:01[K    40% |█████████████                   | 40kB 44.4MB/s eta 0:00:01[K    50% |████████████████▏               | 51kB 44.8MB/s eta 0:00:01[K    60% |███████████████████▍            | 61kB 46.4MB/s eta 0:00:01[K    70% |██████████████████████▋         | 71kB 46.3MB/s eta 0:00:01[K    80% |█████████████████████████▉      | 81kB 46.4MB/s eta 0:00:01[K    90% |█████████████████████████████   | 92kB 47.4MB/s eta 0:00:01[K    100% |████████████████████████████████| 102kB 11.3MB/s 
[?25hCollecting enum34; python_version < "3" (from cryptography>=1.5->paramiko<3.0,>=1.10->Fabric==1.14.0->-r requirements.txt (line 2))
  Downloading https://files.pythonhosted.org/packages/c5/db/e56e6b4bbac7c4a06de1c50de6fe1ef3810018ae11732a50f15f62c7d050/enum34-1.1.6-py2-none-any.whl
Collecting ipaddress; python_version < "3" (from cryptography>=1.5->paramiko<3.0,>=1.10->Fabric==1.14.0->-r requirements.txt (line 2))
  Downloading https://files.pythonhosted.org/packages/fc/d0/7fc3a811e011d4b388be48a0e381db8d990042df54aa4ef4599a31d39853/ipaddress-1.0.22-py2.py3-none-any.whl
Collecting pycparser (from cffi>=1.1->bcrypt>=3.1.3->paramiko<3.0,>=1.10->Fabric==1.14.0->-r requirements.txt (line 2))
  Downloading https://files.pythonhosted.org/packages/8c/2d/aad7f16146f4197a11f8e91fb81df177adcc2073d36a17b1491fd09df6ed/pycparser-2.18.tar.gz (245kB)
[?25l[K    4% |█▎                              | 10kB 43.2MB/s eta 0:00:01[K    8% |██▋                             | 20kB 38.4MB/s eta 0:00:01[K    12% |████                            | 30kB 41.0MB/s eta 0:00:01[K    16% |█████▎                          | 40kB 39.6MB/s eta 0:00:01[K    20% |██████▋                         | 51kB 39.6MB/s eta 0:00:01[K    24% |████████                        | 61kB 40.4MB/s eta 0:00:01[K    29% |█████████▎                      | 71kB 40.3MB/s eta 0:00:01[K    33% |██████████▋                     | 81kB 40.3MB/s eta 0:00:01[K    37% |████████████                    | 92kB 41.0MB/s eta 0:00:01[K    41% |���████████████▎                  | 102kB 40.8MB/s eta 0:00:01[K    45% |██████████████▋                 | 112kB 40.8MB/s eta 0:00:01[K    49% |████████████████                | 122kB 41.3MB/s eta 0:00:01[K    54% |█████████████████▎              | 133kB 40.8MB/s eta 0:00:01[K    58% |██████████████████▋             | 143kB 42.1MB/s eta 0:00:01[K    62% |████████████████████            | 153kB 42.3MB/s eta 0:00:01[K    66% |█████████████████████▎          | 163kB 41.6MB/s eta 0:00:01[K    70% |██████████████████████▋         | 174kB 42.3MB/s eta 0:00:01[K    74% |████████████████████████        | 184kB 42.4MB/s eta 0:00:01[K    79% |█████████████████████████▎      | 194kB 42.3MB/s eta 0:00:01[K    83% |██████████████████████████▋     | 204kB 42.6MB/s eta 0:00:01[K    87% |████████████████████████████    | 215kB 42.5MB/s eta 0:00:01[K    91% |█████████████████████████████▎  | 225kB 43.5MB/s eta 0:00:01[K    95% |██████████████████████████████▋ | 235kB 43.4MB/s eta 0:00:01[K    99% |██���█████████████████████████████| 245kB 43.0MB/s eta 0:00:01[K    100% |████████████████████████████████| 256kB 5.6MB/s 
[?25hBuilding wheels for collected packages: coverage, dj-database-url, gunicorn, dj-static, django-reversion, django-axes, ffs, letter, mock, jsonfield, pycrypto, future, supervisor, opal, static3, billiard, MarkupSafe, anyjson, pycparser
  Running setup.py bdist_wheel for coverage ... [?25l- \ | done
[?25h  Stored in directory: /home/travis/.cache/pip/wheels/c1/06/dd/d8465231b61703d5f5284d230a6ff6088d7d514920a36ee4b9
  Running setup.py bdist_wheel for dj-database-url ... [?25l- done
[?25h  Stored in directory: /home/travis/.cache/pip/wheels/90/82/cf/59898a8bed527fc54f031a002b05301de4439ade586d839c12
  Running setup.py bdist_wheel for gunicorn ... [?25l- done
[?25h  Stored in directory: /home/travis/.cache/pip/wheels/29/e8/2e/0114e87f51db3903619f2815f5e51ca52a0cc40fe4642bc145
  Running setup.py bdist_wheel for dj-static ... [?25l- done
[?25h  Stored in directory: /home/travis/.cache/pip/wheels/8c/76/23/961251de128e5a69a74f616098dede984f9c69fcedec2b65cc
  Running setup.py bdist_wheel for django-reversion ... [?25l- done
[?25h  Stored in directory: /home/travis/.cache/pip/wheels/28/ee/0e/e76a5e904c4ec1c22114472bbdd4b2d2eb4822a867ca3519b2
  Running setup.py bdist_wheel for django-axes ... [?25l- done
[?25h  Stored in directory: /home/travis/.cache/pip/wheels/87/01/90/83797054a628cd6f7ee15d72a1c24740db6d0bd5a0da8a9809
  Running setup.py bdist_wheel for ffs ... [?25l- done
[?25h  Stored in directory: /home/travis/.cache/pip/wheels/1a/bb/0b/2ecc6228e235d8c41ee1f78a63d5dd37810cfd5a5c8a819c74
  Running setup.py bdist_wheel for letter ... [?25l- done
[?25h  Stored in directory: /home/travis/.cache/pip/wheels/ba/47/f5/eb718f2a911848405692b6bfe591bdcafe0533404b167530e7
  Running setup.py bdist_wheel for mock ... [?25l- done
[?25h  Stored in directory: /home/travis/.cache/pip/wheels/7e/72/92/744b532c779242b57aab4bcba80c312b30c069bbd60025e7e6
  Running setup.py bdist_wheel for jsonfield ... [?25l- done
[?25h  Stored in directory: /home/travis/.cache/pip/wheels/cd/c6/9d/6ab674b816a7b0d04d9cd6a661f8afdae526a1ccdc27c0459b
  Running setup.py bdist_wheel for pycrypto ... [?25l- \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / done
[?25h  Stored in directory: /home/travis/.cache/pip/wheels/27/02/5e/77a69d0c16bb63c6ed32f5386f33a2809c94bd5414a2f6c196
  Running setup.py bdist_wheel for future ... [?25l- \ | / done
[?25h  Stored in directory: /home/travis/.cache/pip/wheels/bf/c9/a3/c538d90ef17cf7823fa51fc701a7a7a910a80f6a405bf15b1a
  Running setup.py bdist_wheel for supervisor ... [?25l- \ done
[?25h  Stored in directory: /home/travis/.cache/pip/wheels/f2/d0/4d/33284f88fa8fbff1bbc8c7277dc02d1516a6f9ed8d90d4813f
  Running setup.py bdist_wheel for opal ... [?25l- \ | / - \ | / - \ done
[?25h  Stored in directory: /home/travis/.cache/pip/wheels/90/84/50/634b5ee40487b81ae784977aa021a253e56e527716860e179f
  Running setup.py bdist_wheel for static3 ... [?25l- done
[?25h  Stored in directory: /home/travis/.cache/pip/wheels/c3/d0/4b/a415104b0303aa18d566463b02d1eacb8f43bc3d29a6dc4574
  Running setup.py bdist_wheel for billiard ... [?25l- \ | / done
[?25h  Stored in directory: /home/travis/.cache/pip/wheels/ab/4f/e6/c24fa73a0c43fa43eeaf3bb16b2a9a5ba0f215c5e32088c895
  Running setup.py bdist_wheel for MarkupSafe ... [?25l- \ done
[?25h  Stored in directory: /home/travis/.cache/pip/wheels/33/56/20/ebe49a5c612fffe1c5a632146b16596f9e64676768661e4e46
  Running setup.py bdist_wheel for anyjson ... [?25l- done
[?25h  Stored in directory: /home/travis/.cache/pip/wheels/0a/07/b1/a704fb6e43ef7b61969239c9fce608d52c3cc85d5eb6cd3891
  Running setup.py bdist_wheel for pycparser ... [?25l- \ done
[?25h  Stored in directory: /home/travis/.cache/pip/wheels/c0/a1/27/5ba234bd77ea5a290cbf6d675259ec52293193467a12ef1f46
Successfully built coverage dj-database-url gunicorn dj-static django-reversion django-axes ffs letter mock jsonfield pycrypto future supervisor opal static3 billiard MarkupSafe anyjson pycparser
Installing collected packages: pyasn1, six, pycparser, cffi, bcrypt, asn1crypto, enum34, idna, ipaddress, cryptography, pynacl, paramiko, Fabric, django, coverage, dj-database-url, gunicorn, psycopg2, static3, dj-static, django-reversion, django-axes, ffs, MarkupSafe, jinja2, letter, sqlparse, django-debug-toolbar, mock, certifi, chardet, urllib3, requests, python-dateutil, djangorestframework, pytz, billiard, amqp, anyjson, kombu, celery, django-celery, django-appconf, django-compressor, jsonfield, pycrypto, future, meld3, supervisor, opal, opal-reporting, opal-observations, opal-wardround, opal-dashboard, opal-dischargesummary, opal-guidelines, django-test-coverage
  Found existing installation: six 1.11.0
    Uninstalling six-1.11.0:
      Successfully uninstalled six-1.11.0
  Found existing installation: mock 2.0.0
    Uninstalling mock-2.0.0:
      Successfully uninstalled mock-2.0.0
  Running setup.py develop for opal-reporting
  Running setup.py develop for opal-observations
  Running setup.py develop for opal-wardround
  Running setup.py develop for opal-dashboard
  Running setup.py develop for opal-dischargesummary
  Running setup.py develop for opal-guidelines
  Running setup.py develop for django-test-coverage
Successfully installed Fabric-1.14.0 MarkupSafe-1.0 amqp-1.4.9 anyjson-0.3.3 asn1crypto-0.24.0 bcrypt-3.1.4 billiard-3.3.0.23 celery-3.1.25 certifi-2018.4.16 cffi-1.11.5 chardet-3.0.4 coverage-3.6 cryptography-2.2.2 dj-database-url-0.2.1 dj-static-0.0.6 django-1.10.8 django-appconf-1.0.2 django-axes-1.7.0 django-celery-3.2.2 django-compressor-1.5 django-debug-toolbar-1.2.1 django-reversion-1.10.2 django-test-coverage djangorestframework-3.4.7 enum34-1.1.6 ffs-0.0.8.2 future-0.16.0 gunicorn-0.17.4 idna-2.6 ipaddress-1.0.22 jinja2-2.10 jsonfield-1.0.3 kombu-3.0.37 letter-0.4.1 meld3-1.0.2 mock-1.0.1 opal-0.10.1 opal-dashboard opal-dischargesummary opal-guidelines opal-observations opal-reporting opal-wardround paramiko-2.4.1 psycopg2-2.7 pyasn1-0.4.2 pycparser-2.18 pycrypto-2.6.1 pynacl-1.2.1 python-dateutil-2.4.2 pytz-2018.4 requests-2.18.4 six-1.10.0 sqlparse-0.2.4 static3-0.7.0 supervisor-3.0 urllib3-1.22

travis_time:end:01bbd7f8:start=1526913121803768585,finish=1526913186071073042,duration=64267304457[0Ktravis_fold:end:install.1[0Ktravis_fold:start:install.2[0Ktravis_time:start:0cb68190[0K$ pip install coveralls
Collecting coveralls
  Downloading https://files.pythonhosted.org/packages/6f/c0/cd0b33454c0192cdd63360f8ac2a96a6132f01b34fa70524220c06fd4743/coveralls-1.3.0-py2.py3-none-any.whl
Collecting docopt>=0.6.1 (from coveralls)
  Downloading https://files.pythonhosted.org/packages/a2/55/8f8cab2afd404cf578136ef2cc5dfb50baa1761b68c9da1fb1e4eed343c9/docopt-0.6.2.tar.gz
Requirement already satisfied: requests>=1.0.0 in /home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages (from coveralls)
Requirement already satisfied: urllib3[secure]; python_version < "3" in /home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages (from coveralls)
Requirement already satisfied: coverage>=3.6 in /home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages (from coveralls)
Requirement already satisfied: certifi>=2017.4.17 in /home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages (from requests>=1.0.0->coveralls)
Requirement already satisfied: chardet<3.1.0,>=3.0.2 in /home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages (from requests>=1.0.0->coveralls)
Requirement already satisfied: idna<2.7,>=2.5 in /home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages (from requests>=1.0.0->coveralls)
Collecting pyOpenSSL>=0.14; python_version <= "2.7" and extra == "secure" (from urllib3[secure]; python_version < "3"->coveralls)
  Downloading https://files.pythonhosted.org/packages/96/af/9d29e6bd40823061aea2e0574ccb2fcf72bfd6130ce53d32773ec375458c/pyOpenSSL-18.0.0-py2.py3-none-any.whl (53kB)
[?25l[K    19% |██████▏                         | 10kB 49.4MB/s eta 0:00:01[K    38% |████████████▍                   | 20kB 42.8MB/s eta 0:00:01[K    57% |██████████████████▌             | 30kB 45.8MB/s eta 0:00:01[K    77% |████████████████████████▊       | 40kB 16.4MB/s eta 0:00:01[K    96% |██████████████���███████████████▉ | 51kB 18.8MB/s eta 0:00:01[K    100% |████████████████████████████████| 61kB 7.7MB/s 
[?25hRequirement already satisfied: cryptography>=1.3.4; python_version <= "2.7" and extra == "secure" in /home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages (from urllib3[secure]; python_version < "3"->coveralls)
Requirement already satisfied: ipaddress; python_version <= "2.7" and extra == "secure" in /home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages (from urllib3[secure]; python_version < "3"->coveralls)
Requirement already satisfied: six>=1.5.2 in /home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages (from pyOpenSSL>=0.14; python_version <= "2.7" and extra == "secure"->urllib3[secure]; python_version < "3"->coveralls)
Requirement already satisfied: asn1crypto>=0.21.0 in /home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages (from cryptography>=1.3.4; python_version <= "2.7" and extra == "secure"->urllib3[secure]; python_version < "3"->coveralls)
Requirement already satisfied: cffi>=1.7; platform_python_implementation != "PyPy" in /home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages (from cryptography>=1.3.4; python_version <= "2.7" and extra == "secure"->urllib3[secure]; python_version < "3"->coveralls)
Requirement already satisfied: enum34; python_version < "3" in /home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages (from cryptography>=1.3.4; python_version <= "2.7" and extra == "secure"->urllib3[secure]; python_version < "3"->coveralls)
Requirement already satisfied: pycparser in /home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages (from cffi>=1.7; platform_python_implementation != "PyPy"->cryptography>=1.3.4; python_version <= "2.7" and extra == "secure"->urllib3[secure]; python_version < "3"->coveralls)
Building wheels for collected packages: docopt
  Running setup.py bdist_wheel for docopt ... [?25l- done
[?25h  Stored in directory: /home/travis/.cache/pip/wheels/9b/04/dd/7daf4150b6d9b12949298737de9431a324d4b797ffd63f526e
Successfully built docopt
Installing collected packages: docopt, coveralls, pyOpenSSL
Successfully installed coveralls-1.3.0 docopt-0.6.2 pyOpenSSL-18.0.0

travis_time:end:0cb68190:start=1526913186077815324,finish=1526913189329739676,duration=3251924352[0Ktravis_fold:end:install.2[0Ktravis_fold:start:install.3[0Ktravis_time:start:1b2e69f7[0K$ gem install coveralls-lcov
Fetching: coveralls-lcov-1.5.1.gemFetching: coveralls-lcov-1.5.1.gem ( 23%)Fetching: coveralls-lcov-1.5.1.gem ( 55%)Fetching: coveralls-lcov-1.5.1.gem ( 86%)Fetching: coveralls-lcov-1.5.1.gem (100%)Fetching: coveralls-lcov-1.5.1.gem (100%)
Successfully installed coveralls-lcov-1.5.1
1 gem installed

travis_time:end:1b2e69f7:start=1526913189336246372,finish=1526913190050608704,duration=714362332[0Ktravis_fold:end:install.3[0Ktravis_fold:start:install.4[0Ktravis_time:start:1467711c[0K$ npm install karma karma-coverage jasmine-core karma-jasmine karma-firefox-launcher karma-coveralls
7[r[999;999H[6n[37;40mnpm[0m [0m[30;43mWARN[0m [0m[35mdeprecated[0m nodemailer@2.7.2: All versions below 4.0.1 of Nodemailer are deprecated. See https://nodemailer.com/status/
[0m[37;40mnpm[0m [0m[30;43mWARN[0m [0m[35mnotice[0m [SECURITY] stringstream has 1 moderate vulnerability. Go here for more details: https://nodesecurity.io/advisories?search=stringstream&version=0.0.6 - Run `npm i npm@latest -g` to upgrade your npm version, and then `npm audit` to get more info.
[0m[37;40mnpm[0m [0m[30;43mWARN[0m [0m[35mdeprecated[0m node-uuid@1.4.8: Use uuid module instead
[0m[37;40mnpm[0m [0m[30;43mWARN[0m [0m[35mdeprecated[0m socks@1.1.10: If using 2.x branch, please upgrade to at least 2.1.6 to avoid a serious bug with socket data flow and an import issue introduced in 2.1.0
[0m[37;40mnpm[0m [0m[30;43mWARN[0m [0m[35mdeprecated[0m socks@1.1.9: If using 2.x branch, please upgrade to at least 2.1.6 to avoid a serious bug with socket data flow and an import issue introduced in 2.1.0
[0m[37;40mnpm[0m [0m[30;43mWARN[0m [0m[35mdeprecated[0m mailcomposer@4.0.1: This project is unmaintained
[0m[37;40mnpm[0m [0m[30;43mWARN[0m [0m[35mdeprecated[0m buildmail@4.0.1: This project is unmaintained
[0m[37;40mnpm[0m [0m[30;43mWARN[0m [0m[35mdeprecated[0m uws@9.14.0: stop using this version
[0m[37;40mnpm[0m [0m[30;43mWARN[0m [0m[35mnotice[0m [SECURITY] timespan has 1 low vulnerability. Go here for more details: https://nodesecurity.io/advisories?search=timespan&version=2.3.0 - Run `npm i npm@latest -g` to upgrade your npm version, and then `npm audit` to get more info.
[0m[37;40mnpm[0m [0m[30;43mWARN[0m [0m[35mnotice[0m [SECURITY] tunnel-agent has 1 moderate vulnerability. Go here for more details: https://nodesecurity.io/advisories?search=tunnel-agent&version=0.4.3 - Run `npm i npm@latest -g` to upgrade your npm version, and then `npm audit` to get more info.
[0m[37;40mnpm[0m [0m[30;43mWARN[0m [0m[35mnotice[0m [SECURITY] hoek has 1 moderate vulnerability. Go here for more details: https://nodesecurity.io/advisories?search=hoek&version=2.16.3 - Run `npm i npm@latest -g` to upgrade your npm version, and then `npm audit` to get more info.
[0m
> uws@9.14.0 install /home/travis/build/openhealthcare/elcid/node_modules/uws
> node-gyp rebuild > build_log.txt 2>&1 || exit 0

[37;40mnpm[0m [0m[30;43mWARN[0m [0m[35msaveError[0m ENOENT: no such file or directory, open '/home/travis/build/openhealthcare/elcid/package.json'
[0m[37;40mnpm[0m [0m[34;40mnotice[0m[35m[0m created a lockfile as package-lock.json. You should commit this file.
[0m[37;40mnpm[0m [0m[30;43mWARN[0m [0m[35menoent[0m ENOENT: no such file or directory, open '/home/travis/build/openhealthcare/elcid/package.json'
[0m[37;40mnpm[0m [0m[30;43mWARN[0m[35m[0m elcid No description
[0m[37;40mnpm[0m [0m[30;43mWARN[0m[35m[0m elcid No repository field.
[0m[37;40mnpm[0m [0m[30;43mWARN[0m[35m[0m elcid No README data
[0m[37;40mnpm[0m [0m[30;43mWARN[0m[35m[0m elcid No license field.
[0m[37;40mnpm[0m [0m[30;43mWARN[0m [0m[35moptional[0m SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.4 (node_modules/fsevents):
[0m[37;40mnpm[0m [0m[30;43mWARN[0m [0m[35mnotsup[0m SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.4: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})
[0m
+ jasmine-core@3.1.0
+ karma-coveralls@1.2.1
+ karma-coverage@1.1.2
+ karma-jasmine@1.1.2
+ karma-firefox-launcher@1.1.0
+ karma@2.0.2
added 573 packages in 30.966s

[33m
   ╭─────────────────────────────────────╮[39m
   [33m│[39m                                     [33m│[39m
   [33m│[39m   Update available [2m5.5.1[22m[0m → [0m[32m6.0.1[39m    [33m│[39m
   [33m│[39m     Run [36mnpm i -g npm[39m to update      [33m│[39m
   [33m│[39m                                     [33m│[39m
[33m   ╰─────────────────────────────────────╯
[39m

travis_time:end:1467711c:start=1526913190061047613,finish=1526913232008242332,duration=41947194719[0Ktravis_fold:end:install.4[0Ktravis_fold:start:before_script.1[0Ktravis_time:start:28e327cc[0K$ export DISPLAY=:99.0

travis_time:end:28e327cc:start=1526913232015121802,finish=1526913232020035411,duration=4913609[0Ktravis_fold:end:before_script.1[0Ktravis_fold:start:before_script.2[0Ktravis_time:start:0f5c8b2c[0K$ sh -e /etc/init.d/xvfb start
Starting virtual X frame buffer: Xvfb.

travis_time:end:0f5c8b2c:start=1526913232027123177,finish=1526913232036547394,duration=9424217[0Ktravis_fold:end:before_script.2[0Ktravis_time:start:149d8130[0K$ opal test --coverage
Running Python Unit Tests
Creating test database for alias 'default'...
............................................................................ERROR:root:unable to load patient details for AA1111, return error didn't work
.ERROR:root:unable to load patient details for AA1111 with 500
.............................................../home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField Episode.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField Demographics.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField InpatientAdmission.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField ContactDetails.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField Carers.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField DuplicatePatient.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField Result.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField Allergies.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField EpisodeOfNeutropenia.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField HaemInformation.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField Birthday.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField HouseOwner.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField FavouriteDogs.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField FavouriteNumber.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField PatientColour.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField FamousLastWords.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField FavouriteColour.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField Location.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField Diagnosis.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField MicrobiologyTest.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField PatientConsultation.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField SymptomComplex.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField PresentingComplaint.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField PrimaryDiagnosis.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField ConsultantAtDischarge.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField SecondaryDiagnosis.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField PastMedicalHistory.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField GeneralNote.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField Travel.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField Antimicrobial.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField MicrobiologyInput.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField Todo.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField Line.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField Appointment.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField Observation.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField OPATReview.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField OPATOutstandingIssues.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField OPATLineAssessment.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField OPATMeta.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField OPATOutcome.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField OPATRejection.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField Symptom.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField ClinicalFindings.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField Management.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField WalkinNurseLedCare.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField ZikaPathway.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField StudyParticipation.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField LabSpecimin.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField LabTest.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField RidRTIStudyDiagnosis.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField RidRTITest.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField CheckpointsAssay.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField ExternalLiaisonContactDetails.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField Dinner.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField HatWearer.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField DogOwner.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField HoundOwner.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField SpanielOwner.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField Colour.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField EpisodeName.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField ExternalSubRecord.created received a naive datetime (2018-05-14 00:00:00) while time zone support is active.
  RuntimeWarning)
./home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField Demographics.created received a naive datetime (2015-01-01 00:00:00) while time zone support is active.
  RuntimeWarning)
/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField Allergies.created received a naive datetime (2018-05-20 14:34:12.045384) while time zone support is active.
  RuntimeWarning)
..........................................................................
----------------------------------------------------------------------
Ran 199 tests in 83.362s

OK
Destroying test database for alias 'default'...
Running Javascript Unit Tests
[33m21 05 2018 14:35:22.755:WARN [watcher]: [39mAll files matched by "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/opal/static/js/opal/services/flow.js" were excluded or matched by prior matchers.
[32m21 05 2018 14:35:23.395:INFO [karma]: [39mKarma v2.0.2 server started at http://0.0.0.0:9876/
[32m21 05 2018 14:35:23.396:INFO [launcher]: [39mLaunching browser Firefox with unlimited concurrency
[32m21 05 2018 14:35:23.403:INFO [launcher]: [39mStarting browser Firefox
[32m21 05 2018 14:35:27.076:INFO [Firefox 56.0.0 (Linux 0.0.0)]: [39mConnected on socket 3dE6Cdn8zFVbPnvXAAAA with id 29425962
Firefox 56.0.0 (Linux 0.0.0): Executed 0 of 153[32m SUCCESS[39m (0 secs / 0 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 1 of 153[32m SUCCESS[39m (0 secs / 0.065 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 2 of 153[32m SUCCESS[39m (0 secs / 0.093 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 3 of 153[32m SUCCESS[39m (0 secs / 0.139 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 4 of 153[32m SUCCESS[39m (0 secs / 0.181 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 5 of 153[32m SUCCESS[39m (0 secs / 0.214 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 6 of 153[32m SUCCESS[39m (0 secs / 0.242 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 7 of 153[32m SUCCESS[39m (0 secs / 0.266 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 8 of 153[32m SUCCESS[39m (0 secs / 0.659 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 9 of 153[32m SUCCESS[39m (0 secs / 0.752 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 10 of 153[32m SUCCESS[39m (0 secs / 0.787 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 11 of 153[32m SUCCESS[39m (0 secs / 0.835 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 12 of 153[32m SUCCESS[39m (0 secs / 0.881 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 13 of 153[32m SUCCESS[39m (0 secs / 0.925 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 14 of 153[32m SUCCESS[39m (0 secs / 0.943 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 15 of 153[32m SUCCESS[39m (0 secs / 1.101 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 16 of 153[32m SUCCESS[39m (0 secs / 1.123 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 17 of 153[32m SUCCESS[39m (0 secs / 1.144 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 18 of 153[32m SUCCESS[39m (0 secs / 1.18 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 19 of 153[32m SUCCESS[39m (0 secs / 1.201 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 20 of 153[32m SUCCESS[39m (0 secs / 1.299 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 21 of 153[32m SUCCESS[39m (0 secs / 1.38 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 22 of 153[32m SUCCESS[39m (0 secs / 1.475 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 23 of 153[32m SUCCESS[39m (0 secs / 1.501 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 24 of 153[32m SUCCESS[39m (0 secs / 1.52 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 25 of 153[32m SUCCESS[39m (0 secs / 1.548 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 26 of 153[32m SUCCESS[39m (0 secs / 1.564 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 27 of 153[32m SUCCESS[39m (0 secs / 1.591 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 28 of 153[32m SUCCESS[39m (0 secs / 1.613 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 29 of 153[32m SUCCESS[39m (0 secs / 1.679 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 30 of 153[32m SUCCESS[39m (0 secs / 1.762 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 31 of 153[32m SUCCESS[39m (0 secs / 1.814 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 32 of 153[32m SUCCESS[39m (0 secs / 1.884 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 33 of 153[32m SUCCESS[39m (0 secs / 1.939 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 34 of 153[32m SUCCESS[39m (0 secs / 1.99 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 35 of 153[32m SUCCESS[39m (0 secs / 2.023 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 36 of 153[32m SUCCESS[39m (0 secs / 2.065 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 37 of 153[32m SUCCESS[39m (0 secs / 2.099 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 38 of 153[32m SUCCESS[39m (0 secs / 2.171 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 39 of 153[32m SUCCESS[39m (0 secs / 2.19 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 40 of 153[32m SUCCESS[39m (0 secs / 2.209 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 41 of 153[32m SUCCESS[39m (0 secs / 2.251 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 42 of 153[32m SUCCESS[39m (0 secs / 2.265 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 43 of 153[32m SUCCESS[39m (0 secs / 2.296 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 44 of 153[32m SUCCESS[39m (0 secs / 2.315 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 45 of 153[32m SUCCESS[39m (0 secs / 2.359 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 46 of 153[32m SUCCESS[39m (0 secs / 2.407 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 47 of 153[32m SUCCESS[39m (0 secs / 2.447 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 48 of 153[32m SUCCESS[39m (0 secs / 2.466 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 49 of 153[32m SUCCESS[39m (0 secs / 2.483 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 50 of 153[32m SUCCESS[39m (0 secs / 2.499 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 51 of 153[32m SUCCESS[39m (0 secs / 2.513 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 52 of 153[32m SUCCESS[39m (0 secs / 2.526 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 53 of 153[32m SUCCESS[39m (0 secs / 2.543 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 54 of 153[32m SUCCESS[39m (0 secs / 2.582 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 55 of 153[32m SUCCESS[39m (0 secs / 2.622 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 56 of 153[32m SUCCESS[39m (0 secs / 2.68 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 57 of 153[32m SUCCESS[39m (0 secs / 2.725 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 58 of 153[32m SUCCESS[39m (0 secs / 2.754 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 59 of 153[32m SUCCESS[39m (0 secs / 2.778 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 60 of 153[32m SUCCESS[39m (0 secs / 2.926 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 61 of 153[32m SUCCESS[39m (0 secs / 2.942 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 62 of 153[32m SUCCESS[39m (0 secs / 2.957 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 63 of 153[32m SUCCESS[39m (0 secs / 2.965 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 64 of 153[32m SUCCESS[39m (0 secs / 2.994 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 65 of 153[32m SUCCESS[39m (0 secs / 3.008 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 66 of 153[32m SUCCESS[39m (0 secs / 3.022 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 67 of 153[32m SUCCESS[39m (0 secs / 3.035 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 68 of 153[32m SUCCESS[39m (0 secs / 3.049 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 69 of 153[32m SUCCESS[39m (0 secs / 3.059 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 70 of 153[32m SUCCESS[39m (0 secs / 3.076 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 71 of 153[32m SUCCESS[39m (0 secs / 3.093 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 72 of 153[32m SUCCESS[39m (0 secs / 3.108 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 73 of 153[32m SUCCESS[39m (0 secs / 3.116 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 74 of 153[32m SUCCESS[39m (0 secs / 3.137 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 75 of 153[32m SUCCESS[39m (0 secs / 3.151 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 76 of 153[32m SUCCESS[39m (0 secs / 3.166 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 77 of 153[32m SUCCESS[39m (0 secs / 3.175 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 78 of 153[32m SUCCESS[39m (0 secs / 3.183 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 79 of 153[32m SUCCESS[39m (0 secs / 3.192 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 80 of 153[32m SUCCESS[39m (0 secs / 3.205 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 81 of 153[32m SUCCESS[39m (0 secs / 3.215 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 82 of 153[32m SUCCESS[39m (0 secs / 3.223 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 83 of 153[32m SUCCESS[39m (0 secs / 3.233 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 84 of 153[32m SUCCESS[39m (0 secs / 3.24 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 85 of 153[32m SUCCESS[39m (0 secs / 3.247 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 86 of 153[32m SUCCESS[39m (0 secs / 3.254 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 87 of 153[32m SUCCESS[39m (0 secs / 3.271 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 88 of 153[32m SUCCESS[39m (0 secs / 3.282 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 89 of 153[32m SUCCESS[39m (0 secs / 3.292 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 90 of 153[32m SUCCESS[39m (0 secs / 3.302 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 91 of 153[32m SUCCESS[39m (0 secs / 3.339 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 92 of 153[32m SUCCESS[39m (0 secs / 3.357 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 93 of 153[32m SUCCESS[39m (0 secs / 3.373 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 94 of 153[32m SUCCESS[39m (0 secs / 3.383 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 95 of 153[32m SUCCESS[39m (0 secs / 3.394 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 96 of 153[32m SUCCESS[39m (0 secs / 3.408 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 97 of 153[32m SUCCESS[39m (0 secs / 3.416 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 98 of 153[32m SUCCESS[39m (0 secs / 3.422 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 99 of 153[32m SUCCESS[39m (0 secs / 3.429 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 100 of 153[32m SUCCESS[39m (0 secs / 3.434 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 101 of 153[32m SUCCESS[39m (0 secs / 3.44 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 102 of 153[32m SUCCESS[39m (0 secs / 3.449 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 103 of 153[32m SUCCESS[39m (0 secs / 3.468 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 104 of 153[32m SUCCESS[39m (0 secs / 3.524 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 105 of 153[32m SUCCESS[39m (0 secs / 3.559 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 106 of 153[32m SUCCESS[39m (0 secs / 3.59 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 107 of 153[32m SUCCESS[39m (0 secs / 3.615 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 108 of 153[32m SUCCESS[39m (0 secs / 3.646 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 109 of 153[32m SUCCESS[39m (0 secs / 3.666 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 110 of 153[32m SUCCESS[39m (0 secs / 3.684 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 111 of 153[32m SUCCESS[39m (0 secs / 3.704 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 112 of 153[32m SUCCESS[39m (0 secs / 3.719 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 113 of 153[32m SUCCESS[39m (0 secs / 3.729 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 114 of 153[32m SUCCESS[39m (0 secs / 3.768 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 115 of 153[32m SUCCESS[39m (0 secs / 3.784 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 116 of 153[32m SUCCESS[39m (0 secs / 3.851 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 117 of 153[32m SUCCESS[39m (0 secs / 3.878 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 118 of 153[32m SUCCESS[39m (0 secs / 3.901 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 119 of 153[32m SUCCESS[39m (0 secs / 3.928 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 120 of 153[32m SUCCESS[39m (0 secs / 3.942 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 121 of 153[32m SUCCESS[39m (0 secs / 3.954 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 122 of 153[32m SUCCESS[39m (0 secs / 3.973 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 123 of 153[32m SUCCESS[39m (0 secs / 3.983 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 124 of 153[32m SUCCESS[39m (0 secs / 3.992 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 125 of 153[32m SUCCESS[39m (0 secs / 4.015 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 126 of 153[32m SUCCESS[39m (0 secs / 4.063 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 127 of 153[32m SUCCESS[39m (0 secs / 4.082 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 128 of 153[32m SUCCESS[39m (0 secs / 4.098 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 129 of 153[32m SUCCESS[39m (0 secs / 4.138 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 130 of 153[32m SUCCESS[39m (0 secs / 4.16 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 131 of 153[32m SUCCESS[39m (0 secs / 4.204 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 132 of 153[32m SUCCESS[39m (0 secs / 4.219 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 133 of 153[32m SUCCESS[39m (0 secs / 4.234 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 134 of 153[32m SUCCESS[39m (0 secs / 4.249 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 135 of 153[32m SUCCESS[39m (0 secs / 4.261 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 136 of 153[32m SUCCESS[39m (0 secs / 4.274 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 137 of 153[32m SUCCESS[39m (0 secs / 4.288 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 138 of 153[32m SUCCESS[39m (0 secs / 4.299 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 139 of 153[32m SUCCESS[39m (0 secs / 4.314 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 140 of 153[32m SUCCESS[39m (0 secs / 4.324 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 141 of 153[32m SUCCESS[39m (0 secs / 4.335 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 142 of 153[32m SUCCESS[39m (0 secs / 4.345 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 143 of 153[32m SUCCESS[39m (0 secs / 4.359 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 144 of 153[32m SUCCESS[39m (0 secs / 4.374 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 145 of 153[32m SUCCESS[39m (0 secs / 4.387 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 146 of 153[32m SUCCESS[39m (0 secs / 4.401 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 147 of 153[32m SUCCESS[39m (0 secs / 4.412 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 148 of 153[32m SUCCESS[39m (0 secs / 4.42 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 149 of 153[32m SUCCESS[39m (0 secs / 4.426 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 150 of 153[32m SUCCESS[39m (0 secs / 4.432 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 151 of 153[32m SUCCESS[39m (0 secs / 4.438 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 152 of 153[32m SUCCESS[39m (0 secs / 4.443 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 153 of 153[32m SUCCESS[39m (0 secs / 4.448 secs)
[1A[2KFirefox 56.0.0 (Linux 0.0.0): Executed 153 of 153[32m SUCCESS[39m (7.623 secs / 4.448 secs)

travis_time:end:149d8130:start=1526913232041984554,finish=1526913335763732987,duration=103721748433[0K
[32;1mThe command "opal test --coverage" exited with 0.[0m
travis_fold:start:after_success.1[0Ktravis_time:start:0728e2d0[0K$ find coverage
coverage
coverage/Firefox 56.0.0 (Linux 0.0.0)
coverage/Firefox 56.0.0 (Linux 0.0.0)/lcov.info

travis_time:end:0728e2d0:start=1526913335770602274,finish=1526913335777397823,duration=6795549[0Ktravis_fold:end:after_success.1[0Ktravis_fold:start:after_success.2[0Ktravis_time:start:1e114174[0K$ coveralls-lcov -v -n coverage/Firefox\ 56.0.0\ \(Linux\ 0.0.0\)/lcov.info > coverage/coverage.json

travis_time:end:1e114174:start=1526913335784189950,finish=1526913336043703751,duration=259513801[0Ktravis_fold:end:after_success.2[0Ktravis_fold:start:after_success.3[0Ktravis_time:start:3292a397[0K$ cat coverage/coverage.json
{"service_name":"travis-ci","service_job_id":"381698298","git":{"head":{"id":"4c78cffd1582b5c4037f92a620b701442cb4d213\n","committer_email":"marcusbaw@gmail.com\n","committer_name":"Marcus Baw\n","author_email":"marcusbaw@gmail.com\n","author_name":"Marcus Baw\n","message":"amended tests to check the M2M  field as well as the FTFK  field\n"},"remotes":[],"branch":"HEAD\n"},"source_files":[{"name":"elcid/assets/js/elcid/routes.js","source":"var app = angular.module('opal');\napp.config(\n    ['$routeProvider',\n     function($routeProvider){\n\t     $routeProvider.when('/',  {redirectTo: '/list/'})\n     }]);\n","coverage":[1,1,null,null,19,null]},{"name":"elcid/assets/js/elcid/controllers/clinical_advice_form.js","source":"angular.module('opal.controllers').controller(\n    'ClinicalAdviceForm',\n    function(\n        $rootScope, $scope, $window,\n            recordLoader, ngProgressLite,\n            $cookies, Referencedata\n            ){\n        \"use strict\";\n\n        var REASON_FOR_INTERACTION_COOKIE = \"patientNotes-reasonForInteraction\";\n        var DISCUSSED_WITH_COOKIE = \"patientNotes-discussedWith\";\n\n        /*\n        * expects an episode to exist on the scope\n        */\n        function getCopy(item){\n            var copy = item.makeCopy();\n            var defaults = {\n                reason_for_interaction: $cookies.get(REASON_FOR_INTERACTION_COOKIE),\n                discussed_with: $cookies.get(DISCUSSED_WITH_COOKIE)\n            };\n\n            return _.extend(copy, defaults);\n        }\n\n        var self = this;\n\n        Referencedata.load().then(function(referencedata){\n          _.extend(self, referencedata.toLookuplists());\n        });\n\n        recordLoader.load().then(function(){\n            var item = $scope.episode.newItem(\"microbiology_input\", {column: $rootScope.fields.microbiology_input});\n            self.editing = getCopy(item);\n\n            self.save = function(){\n              ngProgressLite.set(0);\n              ngProgressLite.start();\n              $cookies.put(REASON_FOR_INTERACTION_COOKIE, self.editing.reason_for_interaction || \"\");\n              $cookies.put(DISCUSSED_WITH_COOKIE, self.editing.discussed_with || \"\");\n              item.save(self.editing).then(function() {\n                  ngProgressLite.done();\n                  item = $scope.episode.newItem('microbiology_input', {column: $rootScope.fields.microbiology_input});\n                  self.editing = getCopy(item);\n              });\n            };\n        });\n    }\n );\n","coverage":[1,null,null,null,null,null,null,null,null,3,3,null,null,null,null,1,4,4,null,null,null,null,4,null,null,3,null,3,3,null,null,3,3,3,null,3,1,1,1,1,1,1,1,1,null,null,null,null,null],"branches":[39,1,0,1,39,1,1,0,40,2,0,1,40,2,1,0]},{"name":"elcid/assets/js/elcid/controllers/confirm_discharge.js","source":"/*\n* is a patient is currently on the list, give the option to discharge\n*/\nangular.module('opal.controllers').controller('ConfirmDischargeCtrl', function(\n  $scope, $modal, $modalInstance, DischargePatientService,\n  patient, episode, tags, context, nextStepController\n){\n    $scope.newPatient = function(patient){\n        // There is no patient with this hospital number\n        // Show user the form for creating a new episode,\n        // with the hospital number pre-populated\n        modal = $modal.open({\n            backdrop: 'static',\n            templateUrl: '/templates/modals/add_episode.html',\n            controller: nextStepController,\n            size: 'lg',\n            resolve: {\n                referencedata: function(Referencedata) { return Referencedata.load(); },\n                demographics: function() {\n                    return patient.demographics[0];\n                },\n                tags: function(){ return tags; }\n            }\n        }).result.then(function(patient) {\n            // The user has created the episode, or cancelled\n            if(patient.then){\n                patient.then(function(r){\n                  $modalInstance.close(r);\n                });\n            }else{\n                $modalInstance.close(patient);\n            }\n        });\n    };\n  var demographics = patient.demographics[0];\n  $scope.patientName = demographics.first_name + \" \" + demographics.surname;\n\n   $scope.confirm = function(){\n     var dischargePatientService = new DischargePatientService();\n     dischargePatientService.discharge(episode, {category: \"Discharged\"}, tags).then(function(){\n       context.removeFromList(episode.id);\n       $scope.newPatient(patient);\n     });\n   };\n\n   $scope.cancel = function(){\n     $modalInstance.close();\n   };\n});\n","coverage":[null,null,null,1,null,null,null,5,null,null,null,3,null,null,null,null,null,1,null,0,null,0,null,null,null,3,1,1,null,null,2,null,null,null,5,5,null,5,1,1,1,1,null,null,null,5,0,null,null],"branches":[26,1,0,1,26,1,1,2]},{"name":"elcid/assets/js/elcid/controllers/diagnosis_add_episode.js","source":"angular.module('opal.controllers')\n.controller('DiagnosisAddEpisodeCtrl', function($scope, $http, $q,\n  $timeout, $modal,\n  $modalInstance, Episode,\n  referencedata,\n  tags, demographics) {\n    var DATE_FORMAT = 'DD/MM/YYYY';\n\n    _.extend($scope, referencedata.toLookuplists());\n\n    // TODO - this is no longer the way location/admission date works.\n    $scope.editing = {\n      tagging: {},\n      location: {\n        hospital: 'UCH'\n      },\n      demographics: demographics,\n    };\n\n    if(tags.tag){\n      $scope.editing.tagging[tags.tag] = true;\n    }\n\n    if(tags.subtag){\n      $scope.editing.tagging[tags.subtag] = true;\n    }\n\n    $scope.save = function() {\n      var dob, doa;\n\n      // This is a bit mucky but will do for now\n      doa = $scope.editing.start;\n      if (doa) {\n        if(!angular.isString(doa)){\n          doa = moment(doa).format(DATE_FORMAT);\n        }\n        $scope.editing.start = doa;\n      }\n\n      dob = $scope.editing.demographics.date_of_birth;\n      if (dob) {\n        if(!angular.isString(dob)){\n          dob = moment(dob).format(DATE_FORMAT);\n        }\n      }\n      $scope.editing.demographics.date_of_birth = dob;\n\n      $http.post('/api/v0.1/episode/', $scope.editing).success(function(episode) {\n        $scope.episode = new Episode(episode);\n        $scope.presenting_complaint();\n      });\n    };\n\n    $scope.presenting_complaint = function() {\n      var deferred = $q.defer();\n      $modalInstance.close(deferred.promise);\n\n      var item = $scope.episode.newItem('presenting_complaint');\n      $scope.episode.presenting_complaint[0] = item;\n      modal = $modal.open({\n        templateUrl: '/templates/modals/presenting_complaint.html/',\n        controller: 'EditItemCtrl',\n        resolve: {\n          item: function() { return item; },\n          referencedata: function() { return referencedata; },\n          metadata: function(Metadata) { return Metadata.load() },\n          episode: function() { return $scope.episode; },\n          profile: function(UserProfile) { return UserProfile.load() }\n        }\n      }).result.then(\n        function(){deferred.resolve($scope.episode)},\n        function(){deferred.resolve($scope.episode)}\n      );\n    };\n\n    $scope.cancel = function() {\n      $modalInstance.close(null);\n    };\n\n  });\n","coverage":[1,null,null,null,null,null,6,null,6,null,null,6,null,null,null,null,null,null,null,6,6,null,null,6,6,null,null,6,1,null,null,1,1,1,0,null,1,null,null,1,1,1,0,null,null,1,null,1,1,1,null,null,null,6,5,5,null,5,5,5,null,null,null,0,1,1,0,1,null,null,5,0,null,null,null,6,1,null,null,null],"branches":[20,1,0,6,20,1,1,0,24,2,0,6,24,2,1,0,33,3,0,1,33,3,1,0,34,4,0,0,34,4,1,1,41,5,0,1,41,5,1,0,42,6,0,0,42,6,1,1]},{"name":"elcid/assets/js/elcid/controllers/diagnosis_discharge.js","source":"//\n// This is the controller for elCID episodes that have a\n// presenting complaint/final diagnosis pair.\n//\n// We do the standard discharge, then ask some more questions.\n//\ncontrollers.controller(\n    'DiagnosisDischargeCtrl',\n    function(\n        $scope, $rootScope, $modalInstance, $modal, $q,\n        $location,\n        growl,\n        Flow,\n        tags, referencedata, episode, DischargePatientService){\n\n        $scope.tags = tags;\n        $scope.episode = episode;\n\n        $scope.steps = [\n          \"diagnosis\"\n        ];\n\n        $scope.steps_details = {\n            discharge: {\n                icon: \"fa fa-home\",\n                display_name: \"Discharge\",\n                subtitle: undefined,\n                done: false\n            },\n            diagnosis: {\n                icon: \"fa fa-stethoscope\",\n                display_name: \"Diagnosis\",\n                subtitle: undefined,\n                status: 'disabled',\n                done: false\n            },\n            presenting_complaint: {\n                icon: \"fa fa-heartbeat\",\n                display_name: \"Presenting Complaint\",\n                subtitle: \"Please enter one or more symptoms\",\n                done: false\n            },\n            antimicrobial: {\n                icon: \"fa fa-flask\",\n                display_name: \"Antimicrobial\",\n                subtitle: \"Please enter the <strong>drug name</strong> and the <strong>start and end dates</strong> or state that the patient was <strong>not on antimicrobials</strong>.\",\n                done: false\n            },\n            travel: {\n                icon: \"fa fa-plane\",\n                display_name: \"Travel\",\n                subtitle: \"Please enter a <strong>travel destination</strong> and <strong>dates</strong>, or state that the patient <strong>did not travel</strong>.\",\n                done: false\n            },\n            consultant_at_discharge: {\n                icon: \"fa fa-user-md\",\n                display_name: \"Consultant At Discharge\",\n                subtitle: \"Please record the <strong>consultant</strong> at discharge.\",\n                done: false\n            }\n        };\n\n\n        var dischargePatientService = new DischargePatientService();\n\n        /*\n        * a multi step model that acts a bit like a form controller for travel and\n        * antimicrobial\n        */\n        var MultiStep = function(requiredFields, negationField, editing, episode, columnName){\n            this.none = false;\n            this.warning = false;\n\n            this.remove = function(index){\n              editing[columnName].splice(index, 1);\n            };\n\n            this.getRequiredFields = function(antimicrobial){\n                return _.map(requiredFields, function(r){\n                    return antimicrobial[r];\n                });\n            };\n\n            this.newItem = function(){\n                return _.reduce(this.requiredFields, function(o, f){\n                    o[f] = undefined;\n                    return o;\n                }, {});\n            };\n\n            this.pristine = function(antimicrobial){\n              return !_.some(this.getRequiredFields(antimicrobial));\n            };\n\n            this.clear = function(){\n              if(this.none){\n                editing[columnName] = [this.newItem()];\n                editing[columnName][0][negationField] = true;\n              }\n              this.warning = false;\n            };\n\n            this.validate = function(antimicrobial){\n              var requiredAll = this.getRequiredFields(antimicrobial);\n              return _.every(requiredAll) || this.none;\n            };\n\n            // validates a whole step, e.g. all of the antimicrobial\n            this.validateStep = function(){\n              var toReview = $scope.editing[columnName];\n\n              // if there's just an empty form at the end, lets ignore that\n              if(toReview > 1){\n                  if(this.pristine(toReview)){\n                      toReview = _.first(toReview, toReview.length-1);\n                  }\n              }\n\n              var invalidModels = _.filter(toReview, function(a){\n                  return !this.validate(a);\n              }, this);\n\n              if(invalidModels.length){\n                this.warning = true;\n                return false;\n              }\n\n              return true;\n            };\n\n            this.addAnother = function(model){\n                if(!this.validate(model)){\n                    this.warning=true;\n                }\n                else{\n                    if(!this.none){\n                        model.submitted=true;\n                        var newModel = this.newItem();\n                        editing[columnName].push(newModel);\n                    }\n                }\n            };\n\n            this.reset = function(){\n                this.warning = false;\n            };\n\n            this.save = function(){\n              saves = [];\n\n              _.each($scope.editing[columnName], function(editingItem){\n                  delete editingItem.submitted;\n                  delete editingItem.id;\n                  if(!this.pristine(editingItem) || editingItem[negationField]){\n                    episodeItem = $scope.episode.newItem(columnName);\n                    saves.push(episodeItem.save(editingItem));\n                  }\n              }, this);\n\n              return saves;\n            };\n        };\n\n        $scope.currentCategory = episode.location[0].category;\n\n        $scope.editing = dischargePatientService.getEditing(episode);\n\n        if(!$scope.episode.presenting_complaint.length ||\n           !$scope.episode.presenting_complaint[0].symptoms ||\n           !$scope.episode.presenting_complaint[0].symptoms.length\n         ){\n           var presenting_complaint;\n\n           if(!$scope.episode.presenting_complaint.length){\n              presenting_complaint = $scope.episode.newItem('presenting_complaint');\n           }\n           else{\n              presenting_complaint = $scope.episode.presenting_complaint[0];\n           }\n\n            $scope.episode.presenting_complaint = [presenting_complaint];\n            $scope.editing.presenting_complaint = presenting_complaint.makeCopy();\n            $scope.editing.presenting_complaint.symptoms =[];\n            $scope.steps.unshift(\"presenting_complaint\");\n        }\n\n        if(!$scope.episode.antimicrobial.length){\n            $scope.antimicrobialStep = new MultiStep(\n                [\"drug\", \"start_date\", \"end_date\"],\n                \"no_antimicrobials\",\n                $scope.editing,\n                $scope.episode,\n                \"antimicrobial\"\n            );\n            $scope.editing.antimicrobial = [$scope.antimicrobialStep.newItem()];\n            $scope.steps.push(\"antimicrobial\");\n        }\n\n        if(!$scope.episode.travel.length){\n            $scope.travelStep = new MultiStep(\n                [\"dates\", \"destination\"],\n                \"did_not_travel\",\n                $scope.editing,\n                $scope.episode,\n                \"travel\"\n            );\n\n            $scope.editing.travel = [$scope.travelStep.newItem()];\n\n            $scope.steps.push(\"travel\");\n        }\n\n        $scope.editing.primary_diagnosis = $scope.episode.primary_diagnosis[0].makeCopy();\n\n        if($scope.is_list_view || !episode.isDischarged()){\n            $scope.steps.push(\"discharge\");\n        }\n\n        if($scope.episode.primary_diagnosis.length === 0){\n            var primary = $scope.episode.newItem('primary_diagnosis');\n            $scope.episode.primary_diagnosis[0] = primary;\n        }\n\n        if(!$scope.episode.consultant_at_discharge[0].consultant){\n            $scope.editing.consultant_at_discharge = $scope.episode.consultant_at_discharge[0].makeCopy();\n            $scope.steps.push(\"consultant_at_discharge\");\n        }\n\n        $scope.errors = _.reduce($scope.steps, function(mem, y){\n            mem[y] = undefined;\n            return mem;\n        }, {});\n\n        $scope.processSteps = [];\n\n        _.each($scope.steps, function(step){\n            var processStep = $scope.steps_details[step];\n            processStep.name = step;\n            $scope.processSteps.push(processStep);\n        });\n\n        $scope.nextStep = function(){\n            var currentIndex = _.indexOf($scope.steps, $scope.step);\n\n            if(currentIndex + 1 === $scope.steps.length){\n                return null;\n            }\n            return $scope.steps[currentIndex + 1];\n        };\n\n        $scope.previousStep = function(){\n            var currentIndex = _.indexOf($scope.steps, $scope.step);\n\n            if(!currentIndex){\n                return null;\n            }\n\n            return $scope.steps[currentIndex - 1];\n        };\n\n        $scope.goToPreviousStep = function(){\n            var processStep = _.find($scope.processSteps, function(processStep){\n                return processStep.name === $scope.step;\n            });\n            processStep.done = false;\n            $scope.step = $scope.previousStep();\n        };\n\n        $scope.resetFormValidation = function(someForm){\n            someForm.warning = false;\n        };\n\n        $scope.resetRequired = function(someFormField){\n            someFormField.$setValidity(\"required\", true);\n        };\n\n        $scope.goToNextStep = function(form, model){\n            var require_all, nextStep;\n            if($scope.step === \"diagnosis\"){\n                if(!form.primary_diagnosis_condition.$valid){\n                    form.primary_diagnosis_condition.$setDirty();\n                    return;\n                }\n\n            }\n            if($scope.step === \"travel\"){\n                if(!$scope.travelStep.validateStep()){\n                    return;\n                }\n            }\n            if($scope.step === \"antimicrobial\"){\n                if(!$scope.antimicrobialStep.validateStep()){\n                    return;\n                }\n            }\n            if($scope.step === \"presenting_complaint\"){\n                /*\n                this is a work around as multiple angular ui select does not play nicely\n                with ngRequired. It might be better to set each model as a different form\n                */\n                if(!model.presenting_complaint.symptoms.length){\n                    form.presenting_complaint_symptoms.$setValidity(\"required\", false);\n                    form.presenting_complaint_symptoms.$setDirty();\n                    return;\n                }\n            }\n            if($scope.step === \"consultant_at_discharge\"){\n                if(!form.consultant_at_discharge_consultant.$valid){\n                    form.consultant_at_discharge_consultant.$setDirty();\n                    return;\n                }\n            }\n\n            nextStep = $scope.nextStep();\n            var processStep = _.find($scope.processSteps, function(processStep){\n                return processStep.name === $scope.step;\n            });\n\n            processStep.done = true;\n\n            if(nextStep){\n                $scope.step = nextStep;\n            }\n            else{\n                $scope.save();\n            }\n        };\n\n        if(!$scope.step){\n            $scope.step = _.first($scope.steps);\n        }\n\n        if($scope.episode.secondary_diagnosis.length === 0){\n            $scope.editing.secondary_diagnosis =  [{condition: null, co_primary: false, id: 1}];\n        }else{\n            $scope.editing.secondary_diagnosis = _.map(\n                $scope.episode.secondary_diagnosis, function(sd){\n                    var copy = sd.makeCopy();\n                    copy.submitted = true;\n                    return copy;\n                });\n        }\n\n        $scope.confirming = false;\n        $scope.validDiagnosis = false;\n        $scope.is_list_view = $location.path().indexOf('/list/') === 0;\n        //\n        // This flag sets the visibility of the modal body\n        //\n        $scope.discharged = false;\n\n        _.extend($scope, referencedata.toLookuplists());\n\n        //\n        // We should deal with the case where we're confirming discharge\n        //\n        if(!$scope.is_list_view){\n            $scope.confirming = true;\n            $scope.validDiagnosis = _.contains($scope.condition_list, $scope.episode.primary_diagnosis[0].condition);\n            if(!$scope.validDiagnosis){\n                $scope.oldDiagnosis = $scope.episode.primary_diagnosis[0].condition;\n                $scope.editing.primary_diagnosis.condition = undefined;\n            }\n        }\n\n        //\n        // Add an extra Secondary diagnosis option to the list\n        //\n        $scope.secondaryDiagnosisWarning = false;\n\n        $scope.addSecondary = function(){\n            $scope.secondaryDiagnosisWarning = !_.every($scope.editing.secondary_diagnosis, function(x){\n                return x.condition;\n            });\n\n            if(!$scope.secondaryDiagnosisWarning){\n                _.each($scope.editing.secondary_diagnosis, function(e){\n                    e.submitted = true;\n                });\n\n                var d = {\n                    condition: null,\n                    co_primary: false,\n                    id: $scope.editing.secondary_diagnosis.length + 1\n                };\n\n                $scope.editing.secondary_diagnosis.push(d);\n            }\n        };\n\n        $scope.removeSecondary = function($index){\n            $scope.editing.secondary_diagnosis.splice(index, 1);\n        }\n\n        // Let's have a nice way to kill the modal.\n        $scope.cancel = function() {\n      \t    $modalInstance.close('cancel');\n        };\n\n        //\n        // We need to save both the primary diagnosis and any secondary diagnoses.\n        // The PD is simple as it's a singleton model, and we ensured it existed\n        // above.\n        //\n        // For SDs, we need to check whether we are creating or updating, and\n        // hit the appropriate .save().\n        //\n        // Once everything has come back from the server, growl the user and kill\n        // the modal.\n        //\n        $scope.save = function() {\n            var to_save;\n            var primary = episode.primary_diagnosis[0];\n\n            if($scope.confirming){\n                $scope.editing.primary_diagnosis.confirmed = true;\n            }\n\n            var saves = [];\n            saves.push(primary.save($scope.editing.primary_diagnosis));\n\n            if(_.contains($scope.steps, \"consultant_at_discharge\")){\n                to_save = $scope.episode.consultant_at_discharge[0];\n                saves.push(to_save.save($scope.editing.consultant_at_discharge));\n            }\n\n            if(_.contains($scope.steps, \"presenting_complaint\")){\n                to_save = $scope.episode.presenting_complaint[0];\n                saves.push(to_save.save($scope.editing.presenting_complaint));\n            }\n\n            if($scope.antimicrobialStep){\n                saves.concat($scope.antimicrobialStep.save());\n            }\n            if($scope.travelStep){\n                saves.concat($scope.travelStep.save());\n            }\n\n            // if they've removed an already existing diagnosis, let them delete it\n            _.each($scope.episode.secondary_diagnosis, function(sd){\n                if(sd.consistency_token){\n                    if(!_.find($scope.editing.secondary_diagnosis)){\n                        sd.destroy();\n                    }\n                }\n            });\n\n            // $scope.episode.presenting_complaint[0].save($scope.editing.presenting_complaint);\n\n            _.each(_.filter($scope.editing.secondary_diagnosis,\n                            function(sd){ return sd.condition!== null; }),\n                   function(sd, index){\n                       var save;\n                       var secondary;\n                       delete sd.submitted;\n\n                       if(sd.consistency_token){\n                           var consistency_token = sd.consistency_token;\n                           secondary = _.find(\n                               $scope.episode.secondary_diagnosis,\n                               function(sd){\n                                   return sd.consistency_token == consistency_token;\n                               }\n                           );\n                           save = secondary.save(sd);\n                       }else{\n                           secondary = $scope.episode.newItem('secondary_diagnosis');\n                           delete sd.id;\n                           save = secondary.save(sd);\n                       }\n                       saves.push(save);\n                   }\n              );\n\n\n            dischargePatientService.discharge(episode, $scope.editing, tags).then(function(){\n                $q.all(saves).then(function(){\n                    if($scope.confirming){\n                        growl.success('Final Diagnosis approved.');\n                    }else{\n                        growl.success($scope.episode.demographics[0].first_name + ' ' + $scope.episode.demographics[0].surname + ' discharged.');\n                    }\n                    $scope.discharged = true;\n                    if($scope.editing.category === \"Followup\"){\n                      /*\n                      * if a patient is marked as follow up, we leave them on the list\n                      * view\n                      */\n                      $modalInstance.close('followup');\n                    }\n                    else{\n                      $modalInstance.close('discharged');\n                    }\n                });\n            });\n\n        };\n    });\n","coverage":[null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,12,12,null,12,null,null,null,12,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,12,null,null,null,null,null,12,24,24,null,24,0,null,null,24,4,10,null,null,null,24,24,0,0,null,null,null,24,4,null,null,24,0,0,0,null,0,null,null,24,0,0,null,null,null,24,0,null,null,0,0,0,null,null,null,0,0,null,null,0,0,0,null,null,0,null,null,24,0,0,null,null,0,0,0,0,null,null,null,null,24,0,null,null,24,4,null,4,4,4,4,0,0,null,null,null,4,null,null,null,12,null,12,null,12,null,null,null,12,null,12,12,null,null,0,null,null,12,12,12,12,null,null,12,12,null,null,null,null,null,null,12,12,null,null,12,12,null,null,null,null,null,null,null,12,null,12,null,null,12,null,12,12,null,null,12,0,0,null,null,12,0,0,null,null,12,60,60,null,null,12,null,12,60,60,60,null,null,12,2,null,2,1,null,1,null,null,12,2,null,2,1,null,null,1,null,null,12,0,0,null,0,0,null,null,12,1,null,null,12,1,null,null,12,2,2,1,1,1,null,null,null,1,0,0,null,null,1,0,0,null,null,1,null,null,null,null,1,1,1,1,null,null,0,0,0,0,null,null,null,0,0,0,null,null,0,null,0,0,null,null,0,null,null,null,12,12,null,null,12,12,null,0,null,0,0,0,null,null,null,12,12,12,null,null,null,12,null,12,null,null,null,null,12,12,12,12,12,12,null,null,null,null,null,null,12,null,12,0,0,null,null,0,0,0,null,null,0,null,null,null,null,null,0,null,null,null,12,0,null,null,null,12,1,null,null,null,null,null,null,null,null,null,null,null,null,null,12,2,2,null,2,2,null,null,2,2,null,2,0,0,null,null,2,2,2,null,null,2,2,null,2,2,null,null,null,2,0,0,0,null,null,null,null,null,null,2,2,null,0,0,0,null,0,0,0,null,null,0,null,null,0,null,0,0,0,null,0,null,null,null,null,2,2,2,2,null,0,null,2,2,null,null,null,null,1,null,null,1,null,null,null,null,null,null],"branches":[96,1,0,0,96,1,1,0,105,2,0,0,105,2,1,0,113,3,0,0,113,3,1,0,114,4,0,0,114,4,1,0,123,5,0,0,123,5,1,0,132,6,0,0,132,6,1,0,136,7,0,0,136,7,1,0,154,8,0,0,154,8,1,4,154,9,0,4,154,9,1,4,168,10,0,12,168,10,1,0,168,11,0,12,168,11,1,0,168,11,2,0,174,12,0,12,174,12,1,0,187,13,0,12,187,13,1,0,199,14,0,12,199,14,1,0,215,15,0,12,215,15,1,0,215,16,0,12,215,16,1,12,219,17,0,0,219,17,1,12,224,18,0,0,224,18,1,12,245,19,0,1,245,19,1,1,254,20,0,1,254,20,1,1,279,21,0,1,279,21,1,1,280,22,0,1,280,22,1,0,286,23,0,0,286,23,1,1,287,24,0,0,287,24,1,0,291,25,0,0,291,25,1,1,292,26,0,0,292,26,1,0,296,27,0,1,296,27,1,0,301,28,0,1,301,28,1,0,307,29,0,0,307,29,1,0,308,30,0,0,308,30,1,0,321,31,0,0,321,31,1,0,329,32,0,12,329,32,1,0,333,33,0,12,333,33,1,0,357,34,0,12,357,34,1,0,360,35,0,12,360,35,1,0,376,36,0,0,376,36,1,0,415,37,0,2,415,37,1,0,422,38,0,0,422,38,1,2,427,39,0,2,427,39,1,0,432,40,0,2,432,40,1,0,435,41,0,2,435,41,1,0,441,42,0,0,441,42,1,0,442,43,0,0,442,43,1,0,457,44,0,0,457,44,1,0,478,45,0,2,478,45,1,0,484,46,0,1,484,46,1,1]},{"name":"elcid/assets/js/elcid/controllers/diagnosis_hospital_number.js","source":"angular.module('opal.controllers').controller(\n    'DiagnosisHospitalNumberCtrl',\n    function($scope,\n             $timeout,\n             $modal,\n             $modalInstance,\n             $http,\n             $q,\n             Episode,\n             tags,\n             context,\n             hospital_number\n          ){\n\n        $scope.model = {};\n        if(hospital_number){\n            $scope.model.hospitalNumber = hospital_number;\n        }\n        $scope.tags = tags;\n        $scope.findByHospitalNumber = function() {\n          var patientFound = function(result){\n            if(result.merged && result.merged.length){\n              $scope.result = result;\n            }\n            else{\n              $scope.newForPatient(result);\n            }\n          };\n\n          var patientNotFound = function(result){\n            $scope.result = result;\n          };\n\n          Episode.findByHospitalNumber(\n              $scope.model.hospitalNumber,\n              {\n                  newPatient: patientNotFound,\n                  newForPatient: patientFound,\n                  error: function(){\n                      // This shouldn't happen, but we should probably handle it better\n                      alert('ERROR: More than one patient found with hospital number');\n                      $modalInstance.close(null)\n                  }\n              }\n          );\n        };\n\n        $scope.newPatient = function(result){\n            // There is no patient with this hospital number\n            // Show user the form for creating a new episode,\n            // with the hospital number pre-populated\n            modal = $modal.open({\n                backdrop: 'static',\n                templateUrl: '/templates/modals/add_episode.html',\n                controller: 'DiagnosisAddEpisodeCtrl',\n                resolve: {\n                    referencedata: function(Referencedata) { return Referencedata.load(); },\n                    demographics: function() {\n                        return { hospital_number: $scope.model.hospitalNumber }\n                    },\n                    tags: function(){ return $scope.tags; }\n                }\n            }).result.then(function(result) {\n                // The user has created the episode, or cancelled\n                if(result.then){\n                    result.then(function(r){ $modalInstance.close(r) });\n                }else{\n                    $modalInstance.close(result);\n                }\n            });\n        };\n\n        $scope.newForPatient = function(patient){\n            if (patient.active_episode_id &&\n                // Check to see that this episode is not \"Discharged\"\n                patient.episodes[patient.active_episode_id].location[0].category != 'Discharged') {\n                // This patient has an active episode\n                $scope.newForPatientWithActiveEpisode(patient);\n            } else { // This patient has no active episode\n                $scope.addForPatient(patient);\n            };\n        };\n\n        $scope.newForPatientWithActiveEpisode = function(patient){\n            episode = new Episode(patient.episodes[patient.active_episode_id])\n\n            if(episode.category_name !== 'Inpatient'){ // It's the wrong category - add new\n                return $scope.addForPatient(patient);\n            }\n            var tag = $scope.tags.tag ||  $scope.tags.subtag;\n\n            if(episode.location[0].category == 'Followup' && episode.hasTag(tag)){\n              modal = $modal.open({\n                  templateUrl: '/templates/modals/confirm_discharge.html',\n                  controller: 'ConfirmDischargeCtrl',\n                  size: 'lg',\n                  resolve: {\n                      patient: function() { return patient; },\n                      episode: function() { return episode; },\n                      tags: function(){ return $scope.tags; },\n                      context: function(){ return context; },\n                      nextStepController: function(){ return 'DiagnosisAddEpisodeCtrl';}\n                  }\n              }).result.then(\n                  function(result){\n                      $modalInstance.close(result);\n                  },\n                  function(result){\n                      $modalInstance.close(result);\n                });\n            }\n            else{\n              if (episode.tagging[0][$scope.tags.tag] &&\n                  ($scope.tags.subtag === \"\" ||\n                   episode.tagging[0][$scope.tags.subtag])) {\n                  // There is already an active episode for this patient\n                  // with the current tag\n                  $modalInstance.close(episode);\n              } else {\n                  // There is already an active episode for this patient but\n                  // it doesn't have the current tag.\n                  // Add the current Tag.\n                  episode.tagging[0][$scope.tags.tag] = true;\n                  if($scope.tags.subtag !== \"\"){\n                      episode.tagging[0][$scope.tags.subtag] = true;\n                  }\n                  episode.tagging[0].save(episode.tagging[0].makeCopy()).then(\n                      function(){\n                          $modalInstance.close(episode);\n                      });\n              }\n            }\n        };\n\n        $scope.addForPatient = function(patient){\n            demographics = patient.demographics[0];\n\n            modal = $modal.open({\n                templateUrl: '/templates/modals/add_episode.html',\n                controller: 'DiagnosisAddEpisodeCtrl',\n                resolve: {\n                    referencedata: function(Referencedata) { return Referencedata.load(); },\n                    demographics: function() { return demographics; },\n                    tags: function(){ return $scope.tags; }\n                }\n            }).result.then(\n                function(result){\n                    $modalInstance.close(result);\n                },\n                function(result){\n                    $modalInstance.close(result);\n                });\n        };\n\n        $scope.cancel = function() {\n            $modalInstance.close(null);\n        };\n\n    });\n","coverage":[1,null,null,null,null,null,null,null,null,null,null,null,null,null,8,8,0,null,8,8,0,0,0,null,null,0,null,null,null,0,0,null,null,0,null,null,null,null,null,null,0,0,null,null,null,null,null,8,null,null,null,3,null,null,null,null,1,null,0,null,1,null,null,null,3,0,null,3,null,null,null,null,8,1,null,null,null,0,null,1,null,null,null,8,4,null,4,1,null,3,null,3,1,null,null,null,null,1,1,1,1,1,null,null,null,0,null,null,0,null,null,null,2,null,null,null,null,1,null,null,null,null,1,1,1,null,1,null,1,null,null,null,null,null,8,1,null,1,null,null,null,0,1,1,null,null,null,0,null,null,0,null,null,null,8,0,null,null,null],"branches":[16,1,0,0,16,1,1,8,22,2,0,0,22,2,1,0,22,3,0,0,22,3,1,0,65,4,0,0,65,4,1,3,74,5,0,0,74,5,1,1,74,6,0,1,74,6,1,0,87,7,0,1,87,7,1,3,90,8,0,3,90,8,1,0,92,9,0,1,92,9,1,2,92,10,0,3,92,10,1,1,113,11,0,1,113,11,1,1,113,12,0,2,113,12,1,2,113,12,2,1,124,13,0,1,124,13,1,0]},{"name":"elcid/assets/js/elcid/controllers/discharge.js","source":"//\n// This is the eLCID custom implementation of a discharge episode controller.\n// It is included from the eLCID extra aplication template as defined in\n// settings.py\n//\ncontrollers.controller(\n    'ElcidDischargeEpisodeCtrl',\n    function($scope,\n             $modalInstance, episode,\n             tags, DischargePatientService) {\n\n        var dischargePatientService = new DischargePatientService();\n        $scope.editing = dischargePatientService.getEditing(episode);\n        $scope.currentCategory = episode.location[0].category;\n\n        $scope.discharge = function(){\n            dischargePatientService.discharge(episode, $scope.editing, tags).then(function(){\n            if($scope.editing.category === \"Followup\"){\n              /*\n              * if a patient is marked as follow up, we leave them on the list\n              * view\n              */\n                $modalInstance.close('followup');\n            }\n            else{\n                $modalInstance.close('discharged');\n            }\n          });\n        };\n\n        $scope.cancel = function() {\n      \t    $modalInstance.close('cancel');\n        };\n    });\n","coverage":[null,null,null,null,null,1,null,null,null,null,null,4,4,4,null,4,2,2,null,null,null,null,1,null,null,1,null,null,null,null,4,1,null,null],"branches":[18,1,0,1,18,1,1,1]},{"name":"elcid/assets/js/elcid/controllers/duplicate_patient.js","source":"angular.module('opal.controllers').controller(\n    'DuplicatePatientCtrl', function($rootScope, $scope, $window, ngProgressLite){\n\n      self.save = function(){\n          ngProgressLite.set(0);\n          ngProgressLite.start()\n      };\n\n});\n","coverage":[1,null,null,0,0,0,null,null,null]},{"name":"elcid/assets/js/elcid/controllers/haem_view.js","source":"angular.module('opal.controllers').controller('HaemView', function($scope){\n  \"use strict\";\n  var vm = this;\n  function getAlertInvestigations(episode){\n      if(episode.microbiology_test){\n        return _.filter(episode.microbiology_test, function(mt){\n           return mt.alert_investigation;\n        });\n      }\n      else{\n        return [];\n      }\n  }\n\n  var orderByDate = function(significantDate){\n     // order by -date where date could be null, so we put that at the bottom\n     if(significantDate){\n         return -(moment(significantDate).unix());\n     }\n     else{\n         // this should never happen, but if it does, put it at the bottom\n         return 0;\n     }\n  };\n\n  vm.getClinicalAdviceDate = function(clinicalAdvice){\n     return clinicalAdvice.when || clinicalAdvice.created;\n  };\n\n  vm.clinicalAdviceOrdering = function(clinicalAdvice){\n     var clinicalAdviceDate = vm.getClinicalAdviceDate(clinicalAdvice);\n     return orderByDate(clinicalAdviceDate);\n  };\n\n  if($scope.patient.episodes.length){\n      $scope.episode.alertInvestigations = function(){\n              return _.reduce($scope.patient.episodes, function(r, e){\n              var alertInvestigations = getAlertInvestigations(e);\n              if(alertInvestigations.length){\n                  r = r.concat(alertInvestigations);\n              }\n\n              return r;\n          }, []);\n      };\n\n      this.isRecentHaemInformation = function(haemInformationRow){\n         var haemInformation = _.reduce($scope.patient.episodes, function(hi, e){\n             var episodeHaemInfo = e.haem_information || [];\n             hi = hi.concat(episodeHaemInfo);\n             return hi;\n         }, []);\n\n         haemInformation = _.sortBy(haemInformation, \"patient_type\");\n\n         haemInformation = _.sortBy(haemInformation, function(hi){\n             var significantDate = hi.count_recovery || hi.created;\n             return new Date(significantDate);\n         });\n\n         var result = {};\n\n         _.forEach(haemInformation, function(hi){\n             result[hi.patient_type] = hi.id;\n         });\n\n         return _.contains(_.values(result), haemInformationRow.id);\n      };\n  }\n});\n","coverage":[1,null,1,1,0,0,0,null,null,null,0,null,null,null,1,null,3,2,null,null,null,1,null,null,null,1,3,null,null,1,3,3,null,null,1,0,0,0,0,0,null,null,0,null,null,null,0,0,0,0,0,null,null,0,null,0,0,0,null,null,0,null,0,0,null,null,0,null,null,null],"branches":[5,1,0,0,5,1,1,0,17,2,0,2,17,2,1,1,27,3,0,3,27,3,1,2,35,4,0,0,35,4,1,1,39,5,0,0,39,5,1,0,49,6,0,0,49,6,1,0,57,7,0,0,57,7,1,0]},{"name":"elcid/assets/js/elcid/controllers/result_view.js","source":"angular.module('opal.controllers').controller('ResultView', function(){\n      \"use strict\";\n      var vm = this;\n      this.filterValue = \"\";\n      this.filter = function(item){\n          if(!vm.filterValue){\n            return true;\n          }\n\n          return item.profile_description.toLowerCase().indexOf(vm.filterValue.toLowerCase()) > -1\n      }\n});\n","coverage":[1,null,2,2,2,2,0,null,null,2,null,null],"branches":[6,1,0,0,6,1,1,2]},{"name":"elcid/assets/js/elcid/services/dicharge_patient.js","source":"angular.module('opal.services').factory('DischargePatientService', function($q) {\n    var DischargePatientService = function(episode, tags){\n        /* has 2 jobs\n        * i) create the editing fields for the template\n        * ii) return a promise dicharging those fields\n        */\n\n        this.getEditing = function(episode){\n            var newCategory,\n                admission,\n                end,\n\n            currentCategory = episode.location[0].category;\n\n            if(!currentCategory.length){\n                currentCategory = episode.category_name;\n            }\n\n            if (currentCategory.toUpperCase() == 'Inpatient'.toUpperCase()) {\n          \t    newCategory = 'Discharged';\n            } else if (currentCategory == 'Review' ||\n                       currentCategory == 'Followup') {\n          \t    newCategory = 'Unfollow';\n            } else {\n          \t    newCategory = currentCategory;\n            }\n\n            if(episode.start){\n                admission = moment(episode.start).format('MM/DD/YY')\n            }\n\n            if(!episode.end){\n                end = moment().format('DD/MM/YYYY');\n            }else{\n                end = episode.end;\n            }\n\n            return {\n                start: admission,\n          \t    category_name: newCategory,\n                end: end\n            };\n        };\n\n        this.discharge = function(episode, editing, tags){\n            var currentTag,\n                currentSubTag,\n                tagging = episode.getItem('tagging', 0),\n                location = episode.getItem('location', 0),\n                taggingAttrs = tagging.makeCopy(),\n                locationAttrs = location.makeCopy(),\n                episodeAttrs = episode.makeCopy();\n\n            if(tags){\n                currentTag = tags.tag;\n                currentSubTag = tags.subtag;\n            }else{\n                currentTag = 'mine';\n                currentSubTag = 'all';\n            }\n\n            if (editing.category != 'Unfollow') {\n                locationAttrs.category = editing.category;\n            }\n\n            if(editing.category == 'Unfollow') {\n                // No longer under active review does not set a discharge date\n                episodeAttrs.end = null;\n            }else{\n                episodeAttrs.end = editing.end;\n            }\n\n            if (editing.category != 'Followup') {\n              if(currentSubTag != ''){\n                  taggingAttrs[currentSubTag] = false;\n              }else{\n                  taggingAttrs[currentTag] = false;\n              }\n            }\n\n            var deferred = $q.defer();\n\n            tagging.save(taggingAttrs).then(function(){\n                location.save(locationAttrs).then(function(){\n                    episode.save(episodeAttrs).then(function(result){\n                      deferred.resolve(result);\n                    });\n                });\n            });\n\n            return deferred.promise;\n        };\n    };\n\n    return DischargePatientService;\n});\n","coverage":[1,2,null,null,null,null,null,2,0,null,null,null,null,null,0,0,null,null,0,0,0,null,0,null,0,null,null,0,0,null,null,0,0,null,0,null,null,0,null,null,null,null,null,null,2,2,null,null,null,null,null,null,null,2,2,2,null,0,0,null,null,2,2,null,null,2,null,0,null,2,null,null,2,1,1,null,0,null,null,null,2,null,2,2,2,2,null,null,null,null,2,null,null,null,2,null],"branches":[15,1,0,0,15,1,1,0,19,2,0,0,19,2,1,0,21,3,0,0,21,3,1,0,21,4,0,0,21,4,1,0,28,5,0,0,28,5,1,0,32,6,0,0,32,6,1,0,54,7,0,2,54,7,1,0,62,8,0,2,62,8,1,0,66,9,0,0,66,9,1,2,73,10,0,1,73,10,1,1,74,11,0,1,74,11,1,0]},{"name":"elcid/assets/js/elcid/services/flow.js","source":"//\n// Service for locating controllers and templates for\n//\nangular.module('opal.services').factory('elCIDFlow', function($routeParams){\n    \"use strict\";\n\n    var data_collection_slugs = [\n        'hiv-immune_inpatients',\n        'infectious_diseases-id_inpatients',\n        'tropical_diseases'\n    ];\n\n    var categories = {\n        'Walkin': {\n            enter: function(){\n                return {\n                    'controller': 'WalkinHospitalNumberCtrl',\n                    'template'  : '/templates/modals/hospital_number.html/'\n                };\n            },\n            exit: function(episode){\n                return {\n                    'controller': 'WalkinDischargeCtrl',\n                    'template'  : '/templates/modals/discharge_walkin_episode.html/'\n                };\n            }\n        },\n        'Inpatient': {\n            enter: function(){\n                if($routeParams.slug && data_collection_slugs.indexOf($routeParams.slug) != -1){\n                    return {\n                        'controller': 'DiagnosisHospitalNumberCtrl',\n                        'template'  : '/templates/modals/hospital_number.html/'\n                    }\n                }\n                if($routeParams.slug && $routeParams.slug === 'virology'){\n                  return {\n                      'controller': 'VirologyHospitalNumberCtrl',\n                      'template'  : '/templates/modals/hospital_number.html/'\n                  }\n                }\n                return {\n                    'controller': 'HospitalNumberCtrl',\n                    'template'  : '/templates/modals/hospital_number.html/'\n                }\n            },\n            exit: function(episode){\n                if($routeParams.slug && data_collection_slugs.indexOf($routeParams.slug) != -1){\n                    return {\n                        'controller': 'DiagnosisDischargeCtrl',\n                        'template'  : '/templates/elcid/modals/diagnosis_discharge.html'\n                    }\n                }\n\n                return {\n                    'controller': 'ElcidDischargeEpisodeCtrl',\n                    'template'  : '/templates/modals/discharge_episode.html/'\n                }\n\n            }\n        },\n        'OPAT': {\n            enter: function(){\n                return {\n                    'controller': 'OPATReferralCtrl',\n                    'template'  : '/opat/templates/modals/opat_referral.html/'\n                }\n            },\n            exit: function(episode){\n                return {\n                    'controller': 'OPATDischargeCtrl',\n                    'template'  : '/opat/templates/modals/discharge_opat_episode.html/'\n                }\n            }\n        },\n        TropicalLiaison: {\n            enter: function(){\n                return {\n                    controller: \"TropicalLiaisonAddPatient\",\n                    template: '/templates/infectiousdiseases/tropical_liaison_admission.html'\n                }\n            },\n            exit: function(episode){\n                return {\n                    'controller': 'ElcidDischargeEpisodeCtrl',\n                    'template'  : '/templates/infectiousdiseases/tropical_liaison_discharge.html'\n                }\n            }\n        }\n    }\n\n    var Flow = {\n        enter: function(){\n            var episode_type = 'Inpatient';\n            if($routeParams.slug){\n                if($routeParams.slug.indexOf('opat') == 0){\n                    episode_type = 'OPAT';\n                }else if ($routeParams.slug.indexOf('walkin') == 0){\n                    episode_type = 'Walkin';\n                }\n                else if($routeParams.slug === 'tropical_liaison'){\n                    episode_type = 'TropicalLiaison';\n                }\n            }\n            return categories[episode_type]['enter']();\n        },\n        exit: function(episode){\n            if($routeParams.slug === 'tropical_liaison'){\n              return categories.TropicalLiaison.exit(episode);\n            }\n            return categories[episode.category_name]['exit'](episode);\n        }\n    }\n    return Flow\n})\n","coverage":[null,null,null,1,null,null,9,null,null,null,null,null,9,null,null,1,null,null,null,null,null,1,null,null,null,null,null,null,null,5,3,null,null,null,null,2,1,null,null,null,null,1,null,null,null,null,null,4,3,null,null,null,null,null,1,null,null,null,null,null,null,null,null,1,null,null,null,null,null,1,null,null,null,null,null,null,null,0,null,null,null,null,null,0,null,null,null,null,null,null,null,9,null,7,7,6,1,5,1,null,4,0,null,null,7,null,null,6,0,null,6,null,null,9,null],"branches":[30,1,0,3,30,1,1,2,30,2,0,5,30,2,1,4,36,3,0,1,36,3,1,1,36,4,0,2,36,4,1,1,48,5,0,3,48,5,1,1,48,6,0,4,48,6,1,3,95,7,0,6,95,7,1,1,96,8,0,1,96,8,1,5,98,9,0,1,98,9,1,4,101,10,0,0,101,10,1,4,108,11,0,0,108,11,1,6]},{"name":"elcid/assets/js/elcid/services/location_ward_comparator.js","source":"angular.module('opal.services').factory('LocationWardComparator', function($routeParams){\n    \"use strict\";\n\n    var CATEGORIES = [\n      'Inepisode', 'Review', 'Followup', 'Transferred', 'Discharged', 'Deceased'\n    ];\n\n    return [\n        function(p) { return CATEGORIES.indexOf(p.location[0].category) },\n        function(p) { return p.location[0].hospital },\n        function(p) {\n            var matches = p.location[0].ward.match(/^T(\\d+)/)\n            if(matches){\n              var wardNumber = matches[1];\n              if(matches[1].length < 2){\n                return \"0\" + matches[1];\n              }\n              else{\n                return matches[1];\n              }\n            }\n            else{\n              return p.location[0].ward\n            }\n        },\n        function(p) { return parseInt(p.location[0].bed) }\n    ];\n});\n","coverage":[1,null,null,7,null,null,null,7,22,18,null,14,14,8,8,6,null,null,2,null,null,null,6,null,null,2,null,null],"branches":[13,1,0,8,13,1,1,6,15,2,0,6,15,2,1,2]},{"name":"elcid/assets/js/elcid/services/records/antimicrobial.js","source":"//\n// This is our Antimicrobial model for use on the front end.\n//\nangular.module('opal.records')\n    .factory('Antimicrobial', function($routeParams){\n\n        return function(record){\n            if(!record.id && $routeParams.slug){\n              if($routeParams.slug.indexOf('walkin') === 0){\n                if(!record.start_date){\n                    record.start_date = moment();\n                }\n              }\n            }\n            return record;\n        };\n\n    });\n","coverage":[null,null,null,1,null,null,3,3,1,1,1,null,null,null,3,null,null,null],"branches":[8,1,0,1,8,1,1,2,8,2,0,3,8,2,1,3,9,3,0,1,9,3,1,0,10,4,0,1,10,4,1,0]},{"name":"elcid/assets/js/elcid/services/records/diagnosis.js","source":"//\n// This is our General Note model for use on the front end.\n//\nangular.module('opal.records')\n    .factory('Diagnosis', function(){\n\n        return function(record){\n            if(!record.id){\n                if(!record.date_of_diagnosis){\n                    record.date_of_diagnosis = moment();\n                }\n            }\n\n            return record;\n\n        }\n\n    });\n","coverage":[null,null,null,1,null,null,2,2,2,1,null,null,null,2,null,null,null,null],"branches":[8,1,0,2,8,1,1,0,9,2,0,1,9,2,1,1]},{"name":"elcid/assets/js/elcid/services/records/general_note.js","source":"//\n// This is our General Note model for use on the front end.\n//\nangular.module('opal.records')\n    .factory('GeneralNote', function(){\n\n        return function(record){\n            if(!record.id){\n                if(!record.date){\n                    record.date = moment()\n                }\n            }\n\n            return record;\n\n        }\n\n    });\n","coverage":[null,null,null,1,null,null,2,2,2,1,null,null,null,2,null,null,null,null],"branches":[8,1,0,2,8,1,1,0,9,2,0,1,9,2,1,1]},{"name":"elcid/assets/js/elcid/services/records/investigation.js","source":"//\n// This is our Investigation model for use on the front end.\n//\nangular.module('opal.records')\n    .factory('Investigation', function(){\n\n        return function(record){\n            if(!record.id){\n                if(!record.date_ordered){\n                    record.date_ordered = moment()\n                }\n            }\n\n            return record;\n\n        }\n\n    });\n","coverage":[null,null,null,1,null,null,2,2,2,1,null,null,null,2,null,null,null,null],"branches":[8,1,0,2,8,1,1,0,9,2,0,1,9,2,1,1]},{"name":"elcid/assets/js/elcid/services/records/line.js","source":"//\n// This is our Line model for use on the front end.\n//\nangular.module('opal.records')\n    .factory('Line', function(){\n\n        return function(record){\n            if(!record.id){\n                if(!record.insertion_date){\n                    record.insertion_date = moment()\n                }\n            }\n\n            return record;\n\n        }\n\n    });\n","coverage":[null,null,null,1,null,null,2,2,2,1,null,null,null,2,null,null,null,null],"branches":[8,1,0,2,8,1,1,0,9,2,0,1,9,2,1,1]},{"name":"elcid/assets/js/elcid/services/records/microbiology_input.js","source":"//\n// This is our Clinical Advice model for use on the front end.\n//\nangular.module('opal.records')\n    .factory('MicrobiologyInput', function($window){\n\n        return function(record){\n            if(!record.id){\n                if(!record.initials){\n                    record.initials = $window.initials;\n                }\n                if(!record.when){\n                    record.when = moment();\n                }\n            }\n\n            return record;\n\n        }\n\n    });\n","coverage":[null,null,null,1,null,null,4,4,4,3,null,4,3,null,null,null,4,null,null,null,null],"branches":[8,1,0,4,8,1,1,0,9,2,0,3,9,2,1,1,12,3,0,3,12,3,1,1]},{"name":"elcid/assets/js/elcid/services/records/opat_line_assessment.js","source":"//\n// This is our OPAT Line Assessment model for use on the front end.\n//\nangular.module('opal.records')\n    .factory('OPATLineAssessment', function($window){\n\n        return function(record){\n            if(!record.id){\n                if(!record.assessment_date){\n                    record.assessment_date = moment();\n                }\n            }\n\n            return record;\n\n        }\n\n    });\n","coverage":[null,null,null,1,null,null,2,2,2,1,null,null,null,2,null,null,null,null],"branches":[8,1,0,2,8,1,1,0,9,2,0,1,9,2,1,1]},{"name":"elcid/assets/js/elcid/services/records/opat_review.js","source":"//\n// This is our OPAT Review model for use on the front end.\n//\nangular.module('opal.records')\n    .factory('OPATReview', function($window){\n\n        return function(record){\n            if(!record.id){\n                if(!record.initials){\n                    record.initials = $window.initials;\n                }\n                if(!record.datetime){\n                    record.datetime = moment();\n                }\n            }\n\n            return record;\n\n        }\n\n    });\n","coverage":[null,null,null,1,null,null,4,4,4,3,null,4,3,null,null,null,4,null,null,null,null],"branches":[8,1,0,4,8,1,1,0,9,2,0,3,9,2,1,1,12,3,0,3,12,3,1,1]},{"name":"opat/static/js/opat/controllers/opat_discharge.js","source":"//\n// This is the \"Next stage\" exit flow controller for OPAT patients.\n//\ncontrollers.controller(\n    'OPATDischargeCtrl',\n    function($scope, $modalInstance, $rootScope, $q,\n             growl,\n             Item, CopyToCategory,\n             referencedata, episode, tags){\n\n        var DATE_FORMAT = 'DD/MM/YYYY';\n        var opat_rejection = $rootScope.fields['opat_rejection'];\n\n        $scope.episode = episode;\n        $scope.meta = {\n            accepted: null,\n            rejection: {date: moment().format(DATE_FORMAT)}\n        };\n\n        $scope.qc = {\n            no_allergies: null,\n            consultant: null,\n            referring_team: null,\n            confirmed: false,\n\n            referral: function(){\n                if($scope.episode.location[0].opat_referral_team || ($scope.qc.referring_team != null && $scope.qc.confirmed)){\n                    return true\n                }\n                if($scope.episode.location[0].opat_referral_consultant || ($scope.qc.consultant != null && $scope.qc.confirmed)){\n                    return true\n                }\n                return false\n            },\n            allergies: function(){\n                if($scope.episode.allergies.length > 0){\n                    return true\n                }\n                return $scope.qc.no_allergies != null;\n            },\n            fails: function(){\n                return !$scope.qc.referral() || !$scope.qc.allergies()\n            },\n            passes: function(){\n                return !$scope.qc.fails();\n            }\n        };\n\n        _.extend($scope, referencedata.toLookuplists());\n\n        // Make sure that the episode's tagging item is an instance not an object\n        $scope.ensure_tagging = function(episode){\n            if(!$scope.episode.tagging[0].makeCopy){\n                $scope.episode.tagging[0] = $scope.episode.newItem('tagging')\n            }            return\n        };\n\n        //\n        // This method made more sense when we were storing metadata on a\n        // singleton. now it just returns a new metadata instance.\n        //\n        $scope.get_meta = function(){\n            return $scope.episode.newItem('opat_meta');\n        }\n\n        //\n        // The patient is accepted onto the OPAT service.\n        // We need to update their tagging data.\n        $scope.accept = function(){\n            if(!$scope.episode.tagging[0].makeCopy){\n                $scope.episode.tagging[0] = $scope.episode.newItem('tagging')\n            }\n            var tagging = $scope.episode.tagging[0].makeCopy();\n            tagging.opat_referrals = false;\n            tagging.opat_current = true;\n            tagging.opat = true;\n\n            var locationdata = $scope.episode.location[0].makeCopy();\n            locationdata.opat_acceptance = moment();\n            if($scope.qc.consultant || $scope.qc.referring_team){\n                if($scope.qc.referring_team){\n                    locationdata.opat_referral_team = $scope.qc.referring_team;\n                }\n                if($scope.qc.consultant){\n                    locationdata.opat_referral_consultant = $scope.qc.consultant;\n                }\n            }\n            episodeChanges = $scope.episode.makeCopy();\n            episodeChanges.start = locationdata.opat_acceptance;\n\n            var saves = [\n                $scope.episode.tagging[0].save(tagging),\n                $scope.episode.location[0].save(locationdata),\n                $scope.episode.save(episodeChanges)\n            ];\n\n            if($scope.qc.no_allergies == true){\n                var allergy = $scope.episode.newItem('allergies');\n                saves.push(allergy.save({drug: 'No known allergies'}));\n            }\n\n            $q.all(saves).then(function(){\n                growl.success(\n                    'Accepted: ' + episode.demographics[0].first_name + ' ' + episode.demographics[0].surname\n                );\n                $modalInstance.close('moved');\n            });\n        };\n\n        $scope.click_reject = function(){\n            $scope.meta.accepted = false;\n            $scope.meta.review_date = moment().add(3, 'M').toDate();\n            return\n        }\n        //\n        // The patient is rejected from the OAPT service.\n        // Store some extra data.\n        //\n        $scope.reject = function(){\n            var meta = $scope.get_meta();\n            var opatmetadata = meta.makeCopy();\n            var rejection = $scope.episode.newItem('opat_rejection', {column: opat_rejection});\n            var tagging = $scope.episode.tagging[0].makeCopy();\n\n            $scope.ensure_tagging(episode);\n            opatmetadata.review_date = $scope.meta.review_date;\n            var episodeToSave = $scope.episode.makeCopy();\n            episodeToSave.end = $scope.meta.rejection.date;\n\n            tagging.opat_referrals = false;\n            tagging.opat = false;\n\n            $q.all([\n                rejection.save($scope.meta.rejection),\n                $scope.episode.tagging[0].save(tagging),\n                meta.save(opatmetadata),\n                $scope.episode.save(episodeToSave)\n            ]).then(function(){\n                //\n                // This comment edited to add (DM): I have literally no idea what the next\n                // comment means :(\n                //\n                // Doesn't auto update for OPAT as TAGGING is not in the default schema.\n                $scope.episode.tagging[0] = tagging;\n                var dateStr = $scope.meta.review_date;\n\n                if(_.isDate(dateStr)){\n                    dateStr = moment($scope.meta.review_date).format(DATE_FORMAT);\n                }\n                var message = 'Rejected: ' + episode.demographics[0].first_name + ' ' + episode.demographics[0].surname;\n                message += '.\\n Patient will come up for OPAT review after ' + dateStr;\n                growl.success(message);\n                $modalInstance.close('discharged');\n            });\n\n        };\n\n        //\n        // The patient is being removed from the current list because they've\n        // switched to oral antibiotics\n        //\n        $scope.switch_to_oral = function(){\n            var meta = $scope.get_meta();\n            $scope.ensure_tagging($scope.episode);\n            var tagging = $scope.episode.tagging[0].makeCopy();\n            tagging.opat_current = false;\n            tagging.opat_followup = true;\n\n            updatedmeta = meta.makeCopy();\n            updatedmeta.reason_for_stopping = $scope.meta.reason;\n            updatedmeta.unplanned_stop_reason = $scope.meta.unplanned_stop;\n            updatedmeta.stopping_iv_details = $scope.meta.details;\n            updatedmeta.review_date       = $scope.meta.review_date;\n            updatedmeta.treatment_outcome = $scope.meta.outcome;\n            updatedmeta.deceased          = $scope.meta.died;\n            updatedmeta.cause_of_death    = $scope.meta.cause_of_death;\n            updatedmeta.death_category    = $scope.meta.death_category;\n            updatedmeta.readmitted        = $scope.meta.readmitted;\n            updatedmeta.treatment_outcome = $scope.meta.outcome;\n            updatedmeta.notes             = $scope.meta.notes;\n\n            var outcome = $scope.episode.newItem('opat_outcome');\n            var outcomesdata = {\n                patient_outcome: $scope.meta.patient_outcome,\n                opat_outcome   : $scope.meta.opat_outcome,\n                outcome_stage  : 'Completed Therapy',\n                infective_diagnosis: $scope.meta.infective_diagnosis\n            }\n\n            // Now let's save\n            $q.all([\n                outcome.save(outcomesdata),\n                meta.save(updatedmeta),\n                $scope.episode.tagging[0].save(tagging)\n            ]).then(function(){\n                growl.success('Moved to Follow up: ' + episode.demographics[0].first_name + ' ' + episode.demographics[0].surname)\n                $modalInstance.close('discharged');\n            });\n        }\n\n        //\n        // A patient has completed their OPAT therapy.\n        //\n        $scope.completed_therapy = function(addendum){\n            var meta = $scope.get_meta();\n            $scope.ensure_tagging($scope.episode);\n            var tagging = $scope.episode.tagging[0].makeCopy();\n            tagging.opat_current = false;\n            tagging.opat_followup = false;\n\n            updatedmeta = meta.makeCopy();\n\n            updatedmeta.review_date       = $scope.meta.review_date;\n            updatedmeta.treatment_outcome = $scope.meta.outcome;\n            updatedmeta.deceased          = $scope.meta.died;\n            updatedmeta.cause_of_death    = $scope.meta.cause_of_death;\n            updatedmeta.death_category    = $scope.meta.death_category;\n            updatedmeta.readmitted        = $scope.meta.readmitted;\n            updatedmeta.treatment_outcome = $scope.meta.outcome;\n            updatedmeta.notes             = $scope.meta.notes;\n\n            ep = $scope.episode.makeCopy();\n            ep.end = new Date();\n\n            var outcome = $scope.episode.newItem('opat_outcome');\n            var outcomesdata = {\n                patient_outcome: $scope.meta.patient_outcome,\n                opat_outcome   : $scope.meta.opat_outcome,\n                outcome_stage  : 'Completed Therapy',\n                infective_diagnosis: $scope.meta.infective_diagnosis\n            }\n\n            if(addendum){\n                outcomesdata.outcome_stage += addendum;\n            }\n\n            // Now let's save\n            $q.all([\n                meta.save(updatedmeta),\n                $scope.episode.tagging[0].save(tagging),\n                $scope.episode.save(ep),\n                outcome.save(outcomesdata)\n            ]).then(function(){\n                growl.success('Completed treatment: ' + episode.demographics[0].first_name + ' ' + episode.demographics[0].surname);\n                $modalInstance.close('discharged');\n            });\n        };\n\n        //\n        // The patient is being removed from the follow up list because they're\n        // going back to IV\n        //\n        // This means that we create a whole new OPAT episode for them !\n        //\n        $scope.back_to_iv = function(){\n            var meta = $scope.get_meta();\n            $scope.ensure_tagging($scope.episode);\n            var tagging = $scope.episode.tagging[0].makeCopy();\n\n            tagging.opat_current = false;\n            tagging.opat_followup = false;\n            updatedmeta = meta.makeCopy();\n            updatedmeta.reason_for_stopping = $scope.meta.reason;\n            updatedmeta.unplanned_stop_reason = $scope.meta.unplanned_stop;\n            updatedmeta.stopping_iv_details = $scope.meta.details;\n\n            $q.all([\n                meta.save(updatedmeta),\n                $scope.episode.tagging[0].save(tagging)\n            ]).then(function(){\n                CopyToCategory($scope.episode.id, 'OPAT').then(function(episode){\n                    var newtagging = episode.tagging[0].makeCopy();\n                    var locationdata = episode.location[0].makeCopy();\n                    newtagging.opat = true;\n                    newtagging.opat_referrals = true;\n                    locationdata.opat_referral_route = 'From OPAT Follow Up';\n                    locationdata.opat_referral_team = 'OPAT Team';\n                    locationdata.opat_referral = new Date();\n                    $q.all([\n                        episode.tagging[0].save(newtagging),\n                        episode.location[0].save(locationdata)\n                    ]).then(function(){\n                        growl.success(episode.demographics[0].first_name + ' ' + episode.demographics[0].surname + ' has been moved back to OPAT referrals');\n                        $modalInstance.close('discharged');\n                    })\n                });\n            });\n        }\n\n\n        // Let's have a nice way to kill the modal.\n        $scope.cancel = function() {\n\t        $modalInstance.close('cancel');\n        };\n    });\n","coverage":[null,null,null,1,null,null,null,null,null,null,6,6,null,6,6,null,null,null,null,6,null,null,null,null,null,null,0,0,null,0,0,null,0,null,null,0,0,null,0,null,null,0,null,null,0,null,null,null,6,null,null,6,4,0,4,null,null,null,null,null,null,6,5,null,null,null,null,null,6,1,0,null,1,1,1,1,null,1,1,1,0,0,null,0,0,null,null,1,1,null,1,null,null,null,null,null,1,0,0,null,null,1,1,null,null,1,null,null,null,6,0,0,0,null,null,null,null,null,6,1,1,1,1,null,1,1,1,1,null,1,1,null,1,null,null,null,null,null,null,null,null,null,null,1,1,null,1,0,null,1,1,1,1,null,null,null,null,null,null,null,null,6,1,1,1,1,1,null,1,1,1,1,1,1,1,1,1,1,1,1,null,1,1,null,null,null,null,null,null,null,1,null,null,null,null,1,1,null,null,null,null,null,null,6,2,2,2,2,2,null,2,null,2,2,2,2,2,2,2,2,null,2,2,null,2,2,null,null,null,null,null,null,2,0,null,null,null,2,null,null,null,null,null,2,2,null,null,null,null,null,null,null,null,null,6,0,0,0,null,0,0,0,0,0,0,null,0,null,null,null,0,0,0,0,0,0,0,0,0,null,null,null,0,0,null,null,null,null,null,null,null,6,0,null,null],"branches":[27,1,0,0,27,1,1,0,27,2,0,0,27,2,1,0,27,2,2,0,30,3,0,0,30,3,1,0,30,4,0,0,30,4,1,0,30,4,2,0,36,5,0,0,36,5,1,0,42,6,0,0,42,6,1,0,53,7,0,0,53,7,1,4,70,8,0,0,70,8,1,1,80,9,0,0,80,9,1,1,80,10,0,1,80,10,1,1,81,11,0,0,81,11,1,0,84,12,0,0,84,12,1,0,97,13,0,0,97,13,1,1,147,14,0,0,147,14,1,1,233,15,0,0,233,15,1,2]},{"name":"opat/static/js/opat/controllers/opat_referral.js","source":"//\n// This is our \"Enter OPAT\" flow controller\n//\ncontrollers.controller(\n    'OPATReferralCtrl',\n    function($scope, $modalInstance, $modal, $rootScope, $q,\n             growl,\n             Episode){\n        $scope.model = {\n            hospital_number : null\n        }\n        $scope.patient = null;\n        $scope.message = null;\n\n        //\n        // When we've created an episode with this flow, tag it to the correct\n        // teams and then kill the modal.\n        //\n        $scope.tag_and_close = function(episode){\n            if(!episode.newItem){\n                episode = new Episode(episode);\n            };\n            if(!episode.tagging[0].makeCopy){\n                episode.tagging[0] = episode.newItem('tagging');\n            }\n            var ep = episode.makeCopy()\n            var teams = episode.tagging[0].makeCopy();\n            var location = episode.location[0].makeCopy();\n\n            //\n            // See https://github.com/openhealthcare/elcid/issues/484 -\n            //\n            // Becuase we have a referrals situation, we have to flush teams.\n            //\n            _.each(_.keys(teams), function(team){\n                if(teams[team]){ teams[team] = false };\n            });\n\n            ep.category_name = 'OPAT'\n            teams.opat = true;\n            teams.opat_referrals = true;\n            location.opat_referral = moment();\n\n            //\n            // Pre fill some tests:\n            //\n            var mrsa = episode.newItem('microbiology_test');\n            var vte = episode.newItem('microbiology_test');\n\n            episode.save(ep).then(function(){\n                $q.all([\n                    episode.tagging[0].save(teams),\n                    episode.location[0].save(location),\n                    mrsa.save({test: 'MRSA PCR'}),\n                    vte.save({test: 'VTE Assessment'})\n                ]).then(function(){\n                    episode.active = true;\n                    $modalInstance.close(episode);\n                });\n            });\n\n\n        };\n\n        //\n        // We have an initial hospital number - we can now figure out whether to\n        // Add or pull over.\n        //\n        $scope.find_by_hospital_number = function(){\n\n          var patientFound = function(result){\n            if(result.merged && result.merged.length){\n              $scope.result = result;\n            }\n            else{\n              $scope.newForPatient(result);\n            }\n          };\n\n          var patientNotFound = function(result){\n            $scope.result = result;\n          };\n\n            Episode.findByHospitalNumber(\n                $scope.model.hospital_number,\n                {\n                    newPatient: patientNotFound,\n                    newForPatient: patientFound,\n                    error: function(){\n\t\t\t            // This shouldn't happen, but we should probably\n                        // handle it better\n                        msg = 'ERROR: More than one patient found with hospital number';\n\t\t\t            alert(msg);\n                        $modalInstance.close(null)\n                    }\n                }\n            );\n        };\n\n        //\n        // Create a new patient\n        //\n        $scope.newPatient = function(result){\n            // There is no patient with this hospital number\n\t    // Show user the form for creating a new episode,\n            // with the hospital number pre-populated\n\t    modal = $modal.open({\n  \t\ttemplateUrl: '/opat/templates/modals/add_episode.html',\n  \t\tcontroller: 'AddEpisodeCtrl',\n  \t\tresolve: {\n                    referencedata: function(Referencedata) { return Referencedata.load(); },\n\t\t    demographics: function() {\n\t\t\treturn { hospital_number: $scope.model.hospital_number }\n\t\t    },\n                    tags: function(){ return {tag: 'opat', subtag: ''} }\n\t\t}\n\t    }).result.then(function(result) {\n\t\t// The user has created the episode, or cancelled\n                if(result){ // We made an episode!\n                    $scope.tag_and_close(result);\n                }else{\n\t\t    $modalInstance.close(result);\n                }\n\t    });\n        };\n\n        //\n        // Create a new episode for an existing patient\n        //\n        $scope.newForPatient = function(patient){\n            var actually_make_new_episode = function(){\n                // Offer to import the data from this episode.\n\t\t\t\tfor (var eix in patient.episodes) {\n\t\t\t\t\tpatient.episodes[eix] = new Episode(patient.episodes[eix]);\n\t\t\t\t};\n\t\t\t\tmodal = $modal.open({\n\t\t\t\t\ttemplateUrl: '/templates/modals/copy_to_category.html/',\n\t\t\t\t\tcontroller: 'CopyToCategoryCtrl',\n\t\t\t\t\tresolve: {\n              category_name: function() { return 'OPAT' },\n  \t\t\t\t\t\tpatient: function() { return patient; },\n\t\t\t\t\t}\n\t\t\t\t}).result.then(\n                    function(result) {\n                        if(!_.isString(result)){\n                            $scope.tag_and_close(result);\n                            return\n                        };\n\t\t\t\t\t    if (result == 'open-new') {\n\t\t\t\t\t\t    // User has chosen to open a new episode\n                            $scope.add_for_patient(patient);\n\t\t\t\t\t    } else {\n\t\t\t\t\t\t    // User has chosen to reopen an episode, or cancelled\n\t\t\t\t\t\t    $modalInstance.close(result);\n\t\t\t\t\t    };\n\t\t\t\t    },\n                    function(result){ $modalInstance.close(result); });\n            }\n\n            if(patient.active_episode_id && _.keys(patient.episodes).length > 0){\n                opat_episodes = _.filter(patient.episodes, function(e){ return e.category_name == 'OPAT' });\n                if(opat_episodes.length > 0){\n                    // Tell the user that this patient is already on the opat service\n                    var list_name;\n                    message = \"Patient is already on the OPAT \";\n                    _.each(opat_episodes, function(e){\n                        if(e.tagging[0].opat_referrals){\n                            list_name = \"Referrals list\";\n                        }\n                        if(e.tagging[0].opat_current){\n                            list_name = \"Current list\";\n                        }\n                        if(e.tagging[0].opat_followup){\n                            list_name = \"Follow Up list\";\n                        }\n                    });\n                    if(list_name){\n                        message += list_name;\n                        $scope.message = message;\n                    }else{\n                        $scope.add_for_patient(patient);\n                    }\n                }else{\n                    actually_make_new_episode();\n                }\n            }else{\n                $scope.add_for_patient(patient);\n            }\n        };\n\n        //\n        // Add a new episode for an existing patient. Pre-fill the relevant demographics\n        //\n        $scope.add_for_patient = function(patient){\n            var demographics = patient.demographics[0];\n\n\t    modal = $modal.open({\n\t\ttemplateUrl: '/opat/templates/modals/add_episode.html',\n\t\tcontroller: 'AddEpisodeCtrl',\n\t\tresolve: {\n                    referencedata: function(Referencedata) { return Referencedata.load(); },\n\t\t    demographics: function() { return demographics; },\n                    tags: function(){ return {tag: 'walkin', subtag: ''}}\n\t\t}\n\t    }).result.then(function(result) {\n\t\t// The user has created the episode, or cancelled\n                if(result){ // We made an episode!\n                    $scope.tag_and_close(result);\n                }else{\n\t\t    $modalInstance.close(result);\n                }\n\t    });\n        };\n\n        // Let's have a nice way to kill the modal.\n        $scope.cancel = function() {\n\t        $modalInstance.close('cancel');\n        };\n    }\n);\n","coverage":[null,null,null,1,null,null,null,null,3,null,null,3,3,null,null,null,null,null,3,0,0,null,0,0,null,0,0,0,null,null,null,null,null,null,0,0,null,null,0,0,0,0,null,null,null,null,0,0,null,0,0,null,null,null,null,null,0,0,null,null,null,null,null,null,null,null,null,null,3,null,0,0,0,null,null,0,null,null,null,0,0,null,null,0,null,null,null,null,null,null,null,0,0,0,null,null,null,null,null,null,null,null,3,null,null,null,0,null,null,null,0,null,0,null,0,null,null,null,0,0,null,0,null,null,null,null,null,null,null,3,2,null,0,0,null,0,null,null,null,0,0,null,null,null,0,0,0,null,0,null,0,null,null,0,null,null,0,null,null,2,3,2,null,2,2,2,3,2,null,3,0,null,3,0,null,null,2,2,2,null,0,null,null,0,null,null,0,null,null,null,null,null,null,3,0,null,0,null,null,null,0,0,0,null,null,null,0,0,null,0,null,null,null,null,null,3,0,null,null,null],"branches":[20,1,0,0,20,1,1,0,23,2,0,0,23,2,1,0,36,3,0,0,36,3,1,0,72,4,0,0,72,4,1,0,72,5,0,0,72,5,1,0,119,6,0,0,119,6,1,0,145,7,0,0,145,7,1,0,149,8,0,0,149,8,1,0,160,9,0,2,160,9,1,0,160,10,0,2,160,10,1,2,162,11,0,2,162,11,1,0,167,12,0,2,167,12,1,1,170,13,0,0,170,13,1,3,173,14,0,0,173,14,1,3,177,15,0,2,177,15,1,0,207,16,0,0,207,16,1,0]},{"name":"microhaem/static/js/haem/controllers/uch_find_patient.js","source":"angular.module('opal.controllers').controller('UchFindPatientCtrl',\n  function(scope, Patient, Episode, step, episode, Item, $window) {\n    \"use strict\";\n\n    scope.lookup_hospital_number = function() {\n        Episode.findByHospitalNumber(\n            scope.demographics.hospital_number,\n            {\n                newPatient:    scope.new_patient,\n                newForPatient: scope.new_for_patient,\n                error        : function(){\n                    // this shouldn't happen, but we should probably handle it better\n                    $window.alert('ERROR: More than one patient found with hospital number');\n                }\n            });\n    };\n\n    this.initialise = function(scope){\n      scope.state = 'initial';\n      scope.hideFooter = true;\n\n      scope.demographics = {\n        hospital_number: undefined\n      };\n    };\n\n    scope.new_patient = function(result){\n        scope.hideFooter = false;\n        scope.state = 'editing_demographics';\n    };\n\n    scope.new_for_patient = function(rawPatient){\n        var patient = new Patient(rawPatient);\n        scope.demographics = patient.demographics[0];\n        var openEpisodes = _.filter(_.values(patient.episodes), function(x){\n          return !x.end;\n        });\n        var latestEpisode = _.last(_.sortBy(openEpisodes, \"id\"));\n\n        if(latestEpisode){\n          var editing = scope.pathway.populateEditingDict(latestEpisode);\n          // angular.extend doesn't work for angular reasons\n          _.each(editing, function(v, k){\n            if(k.indexOf(\"$\") !== 0){\n              scope.editing[k] = v;\n            }\n          });\n          scope.pathway.save_url = scope.pathway.save_url + \"/\" + patient.id + \"/\" + latestEpisode.id;\n        }\n        else{\n          scope.editing.demographics = patient.demographics[0].makeCopy();\n          scope.pathway.save_url = scope.pathway.save_url + \"/\" + patient.id;\n        }\n        scope.state  = 'has_demographics';\n        scope.hideFooter = false;\n    };\n\n    scope.showNext = function(editing){\n        return scope.state === 'has_demographics' || scope.state === 'editing_demographics';\n    };\n\n    scope.preSave = function(editing){\n      if(!editing.demographics.hospital_number){\n        editing.demographics.hospital_number = scope.demographics.hospital_number;\n      }\n    }\n\n    this.initialise(scope);\n});\n","coverage":[1,null,null,null,10,2,null,null,null,null,null,null,1,null,null,null,null,10,11,11,null,11,null,null,null,null,10,1,1,null,null,10,4,4,4,4,null,4,null,4,2,null,2,12,12,null,null,2,null,null,2,2,null,4,4,null,null,10,3,null,null,10,0,0,null,null,null,10,null],"branches":[40,1,0,2,40,1,1,2,44,2,0,12,44,2,1,0,59,3,0,3,59,3,1,2,63,4,0,0,63,4,1,0]},{"name":"walkin/static/js/walkin/controllers/nurse_investigation.js","source":"//\n// This controller provides a custom interface for Walkin nurses to create many\n// investigations at once.\n//\ncontrollers.controller(\n    'WalkinNurseInvestigationsCtrl',\n    function( $scope, $modalInstance, $q, episode ){\n        \"use strict\";\n\n        $scope.investigations = {};\n        $scope.episode        = episode;\n        $scope.saving = false;\n\n        $scope.test_names = {\n            blood_culture      : 'Blood Culture',\n            urine_mcs          : 'Urine MC&S',\n            wound_swab_mcs     : 'Wound swab MC&S',\n            throat_swab_mcs    : 'Throat swab MC&S',\n            stool_mcs          : 'Stool MC&S',\n            stool_ocp          : 'Stool OCP',\n            malaria_film       : 'Malaria Film',\n            full_blood_count   : 'Full Blood Count',\n            biochemistry       : 'Biochemistry',\n            serum_save         : 'Serum Save',\n            resp_pcr           : 'Respiratory Virus PCR',\n            chikungunya        : 'Chikungunya',\n            dengue             : 'Dengue',\n            parasite_id        : 'Parasite ID',\n            rickettsia_serology: 'Rickettsia Serology'\n        }\n        $scope.test_properties = _.invert( $scope.test_names );\n\n        _.each( episode.microbiology_test, function(test){\n            if( test.test in $scope.test_properties ){\n                $scope.investigations[$scope.test_properties[test.test]] = true;\n            }\n        });\n        $scope.initial = angular.copy( $scope.investigations );\n\n\n        $scope.save = function(){\n            var saves = [];\n            _.each( _.keys( $scope.investigations ), function( key ){\n                if( $scope.investigations[key] == true && !$scope.initial[key] ){\n                    var test = $scope.episode.newItem( 'microbiology_test' );\n                    saves.push( test.save( {\n                        test: $scope.test_names[key],\n                        date_ordered: moment()} ) );\n                }\n            });\n            if( saves.length > 0 ){\n                $scope.saving = true;\n                $q.all( saves ).then(\n                    function(){\n                        $scope.saving = false;\n                        $modalInstance.close();\n                    }\n                );\n            }else{\n                $modalInstance.close();\n            }\n        };\n\n        // Let's have a nice way to kill the modal.\n        $scope.cancel = function() {\n            $scope.saving = false;\n            $modalInstance.close('cancel');\n        };\n\n    }\n);\n","coverage":[null,null,null,null,1,null,null,null,null,9,9,9,null,9,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,9,null,9,2,2,null,null,9,null,null,9,4,4,5,4,4,null,null,null,null,4,3,3,null,3,3,null,null,null,1,null,null,null,null,9,1,1,null,null,null,null],"branches":[34,1,0,2,34,1,1,0,44,2,0,4,44,2,1,1,44,3,0,5,44,3,1,5,51,4,0,3,51,4,1,1]},{"name":"walkin/static/js/walkin/controllers/walkin_discharge.js","source":"//\n// This is the \"Next stage\" exit flow controller for OPAT patients.\n//\ncontrollers.controller(\n    'WalkinDischargeCtrl',\n    function(\n        $scope, $modalInstance, $modal, $rootScope, $q,\n        growl, Item, CopyToCategory, UserProfile, metadata, referencedata, episode, tags\n    ){\n\n        \"use strict\";\n\n        $scope.episode = episode;\n        $scope.meta = {\n            accepted        : null,\n            target_team     : null,\n            results_actioned: null,\n            follow_up       : null,\n            management      : episode.management[0].makeCopy()\n        };\n\n        //\n        // Here we conduct varous QC checks on the quality of data entered\n        // Individual methods are expected to return a boolean pass/fail for\n        // that check.\n        //\n        // qc.passes() and qc.fails() are predicate that check all the QC\n        // checks at once.\n        //\n        $scope.qc = {\n            ignore_hiv: false,\n            ignore_obs: false,\n            ignore_diagnosis: false,\n            hiv: function(){\n                if($scope.qc.ignore_hiv){ return true };\n                var hivtest = _.filter(\n                    $scope.episode.microbiology_test,\n                    function(t){return t.name=\"HIV Point of Care\"}\n                );\n                if(hivtest == []){\n                    return false;\n                }\n                var resulted = false;\n                _.each(hivtest, function(t){ if(t.result){ resulted = true }});\n                return resulted;\n            },\n            obs: function(){\n                if($scope.qc.ignore_obs){ return true };\n                return $scope.episode.observation.length > 0;\n            },\n            passes: function(){\n                return $scope.qc.hiv() && $scope.qc.obs()\n            },\n            fails: function(){ return !$scope.qc.passes() }\n        };\n\n        if($scope.meta.management.follow_up){ $scope.meta.follow_up = true; }\n\n        $scope.metadata = metadata;\n\n        _.extend($scope, referencedata.toLookuplists());\n\n        // Make sure that the episode's tagging item is an instance not an object\n        $scope.ensure_tagging = function(episode){\n            if(!$scope.episode.tagging[0].makeCopy){\n                $scope.episode.tagging[0] = $scope.episode.newItem('tagging',{\n                    column: $rootScope.fields.tagging }\n                                                                  )\n            }\n            return\n        };\n\n        //\n        // We have entered the follow up information - save this in\n        // Walk-in Management and then set the \"follow up\" variable.\n        //\n        $scope.save_follow_up = function(){\n            $scope.episode.management[0].save($scope.meta.management).then(\n                function(){\n                    $scope.meta.follow_up = 'saved';\n                }\n            );\n        };\n\n        $scope.move_to_doctor = function(){\n            $scope.ensure_tagging($scope.episode);\n            var tagging = $scope.episode.tagging[0].makeCopy();\n            tagging.walkin_triage = false;\n            tagging.walkin_doctor = true;\n\n            $scope.episode.tagging[0].save(tagging).then(function(){\n                growl.success('Moved to Doctor list')\n                $modalInstance.close('discharged');\n            });\n        };\n\n        //\n        // The doctor has finished seeing this patient - but there remain\n        // some outstanding test results that they would like to review.\n        //\n        // * Tag the patient to the review list\n        // * Set the discharge date on the Episode\n        // * Close the modal and inform the user\n        //\n        $scope.move_to_review = function(){\n            $scope.ensure_tagging($scope.episode);\n            var tagging = $scope.episode.tagging[0].makeCopy();\n            tagging.walkin_doctor = false;\n            tagging.walkin_review = true;\n\n            var ep = $scope.episode.makeCopy();\n            ep.end = new Date();\n\n            $scope.episode.save(ep).then(function(){\n                $scope.episode.tagging[0].save(tagging).then(function(){\n                    growl.success('Moved to Review list')\n                    $modalInstance.close('discharged');\n                });\n            });\n        }\n\n        //\n        // The nurse has cared for this patient and is sending them home.\n        //\n        // Save the nursing care metadata, the date of discharge, de-tag\n        // the patient, and then open a discharge summary window for the\n        // nurse to copy the episode summary.\n        //\n        $scope.nurse_led_care = function(){\n            var nursing = $scope.episode.newItem('walkin_nurse_led_care');\n\n            var ep = $scope.episode.makeCopy();\n            ep.end = new Date();\n\n            var to_save = [\n                nursing.save({\n                    reason:    $scope.meta.nurse_reason,\n                    treatment: $scope.meta.treatment\n                }),\n            ]\n            if($scope.meta.diagnosis){\n                var diagnosis = $scope.episode.newItem('diagnosis');\n                to_save.push(diagnosis.save({condition: $scope.meta.diagnosis}));\n            }\n\n            $scope.ensure_tagging($scope.episode);\n\n            var tagging = $scope.episode.tagging[0].makeCopy();\n            tagging.walkin_triage = false;\n            tagging.walkin_doctor = false;\n            tagging.walkin_review = false;\n\n            if($scope.episode.management.length == 0 || !$scope.episode.management[0].makeCopy){\n                $scope.episode.management[0] = $scope.episode.newItem('management',{\n                    column: $rootScope.fields.management }\n                                                                     )\n            }\n            var management = $scope.episode.management[0].makeCopy();\n            management.results_actioned = $scope.meta.results_actioned;\n            to_save.push($scope.episode.management[0].save(management));\n            to_save.push($scope.episode.tagging[0].save(tagging));\n\n            $scope.episode.save(ep).then(function(resp){\n                $q.all(to_save).then(function(){\n                    growl.success('Removed from Walk-in lists');\n                    var modal = $modal.open({\n                        templateUrl: '/dischargesummary/modals/walkinnurse/',\n                        controller: 'ModalDischargeSummaryCtrl',\n                        resolve: {episode: episode}\n                    });\n                    modal.result.then(\n                      function(){\n                        $modalInstance.close(\"discharged\");\n                      },\n                      function(){\n                        $modalInstance.close(\"discharged\");\n                      }\n                  );\n                });\n            });\n        };\n\n        //\n        // The appointment has finished with no further follow up.\n        //\n        // Untag this episode\n        // Set the discharge date if one does not exist\n        // Close the modal and inform the user\n        //\n        $scope.remove_from_list = function(){\n            $scope.ensure_tagging($scope.episode);\n            var tagging = $scope.episode.tagging[0].makeCopy();\n            tagging.walkin_triage = false;\n            tagging.walkin_doctor = false;\n            tagging.walkin_review = false;\n\n            var to_save = [\n                $scope.episode.tagging[0].save(tagging)\n            ]\n\n            if(!episode.end){\n                var ep = $scope.episode.makeCopy();\n                ep.end = new Date();\n                to_save.push($scope.episode.save(ep));\n            }\n\n            $q.all(to_save).then(function(){\n                growl.success('Removed from Walk-in lists');\n                $modalInstance.close('discharged');\n            });\n        }\n\n        //\n        // Copy this episode to a new inpatient episode.\n        //\n        // Untag this episode.\n        // Tag the new episode to the selected team\n        //\n        $scope.admit_to_ward = function(){\n            $scope.ensure_tagging($scope.episode);\n            var tagging = $scope.episode.tagging[0].makeCopy();\n            tagging.walkin = false;\n            tagging.walkin_doctor = false;\n            $scope.meta.management.follow_up = 'Admitted to ward';\n\n            CopyToCategory($scope.episode.id, 'Inpatient').then(\n                function(episode){\n                    var newtagging = episode.tagging[0];\n                    var newtags = {};\n                    newtags[$scope.meta.target_team] = true;\n                    var ep = $scope.episode.makeCopy();\n                    ep.end = new Date();\n                    $q.all([\n                        $scope.episode.tagging[0].save(tagging),\n                        $scope.episode.save(ep),\n                        newtagging.save(newtags),\n                        $scope.episode.management[0].save($scope.meta.management)\n                    ]).then(function(){\n                        var msg = 'Admitted to ' + $scope.meta.target_team + ' ward';\n                        growl.success(msg);\n                        $modalInstance.close('discharged');\n                    })\n                });\n        };\n\n\n        $scope._add_a_thing = function(what){\n            var deferred = $q.defer();\n            $scope.episode.recordEditor.newItem(what).then(\n                function(r){ deferred.resolve(r) },\n                function(r){ deferred.reject(r) }\n            );\n            $modalInstance.close(deferred.promise);\n        }\n\n        $scope.add_some_obs = function(){\n            $scope._add_a_thing('observation');\n        }\n\n        $scope.add_some_diagnosis = function(){\n            $scope._add_a_thing('diagnosis');\n        }\n\n        // Let's have a nice way to kill the modal.\n        $scope.cancel = function() {\n            $modalInstance.close('cancel');\n        };\n    });\n","coverage":[null,null,null,1,null,null,null,null,null,null,null,null,13,13,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,13,null,null,null,null,0,0,null,0,null,0,0,null,0,0,0,null,null,0,0,null,null,0,null,0,null,null,13,null,13,null,13,null,null,13,11,2,null,null,null,11,null,null,null,null,null,null,13,0,null,0,null,null,null,null,13,0,0,0,0,null,0,0,0,null,null,null,null,null,null,null,null,null,null,null,13,4,4,4,4,null,4,4,null,4,4,4,4,null,null,null,null,null,null,null,null,null,null,null,13,2,null,2,2,null,2,null,null,null,null,null,2,0,0,null,null,2,null,2,2,2,2,null,2,0,null,null,null,2,2,2,2,null,2,2,2,2,null,null,null,null,2,null,1,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,13,4,4,4,4,4,null,4,null,null,null,4,3,3,3,null,null,4,4,4,null,null,null,null,null,null,null,null,null,13,1,1,1,1,1,null,1,null,1,1,1,1,1,1,null,null,null,null,null,1,1,1,null,null,null,null,null,13,0,0,0,0,null,0,null,null,13,0,null,null,13,0,null,null,null,13,0,null,null],"branches":[35,1,0,0,35,1,1,0,40,2,0,0,40,2,1,0,44,3,0,0,44,3,1,0,48,4,0,0,48,4,1,0,52,5,0,0,52,5,1,0,57,6,0,0,57,6,1,13,65,7,0,2,65,7,1,9,141,8,0,0,141,8,1,2,153,9,0,0,153,9,1,2,153,10,0,2,153,10,1,2,201,11,0,3,201,11,1,1]},{"name":"walkin/static/js/walkin/controllers/walkin_hospital_number.js","source":"//\n// This is our \"Enter Walk-in\" flow controller\n//\ncontrollers.controller(\n    'WalkinHospitalNumberCtrl',\n    function($scope, $modalInstance, $modal, $rootScope, $q,\n             tags,\n             Episode){\n\n        $scope.model = {\n            hospitalNumber : null\n        }\n        $scope.patient = null;\n\n        //\n        // When we've created an episode with this flow, tag it to the correct\n        // teams and then kill the modal.\n        //\n        $scope.tag_and_close = function(episode){\n            if(!episode.newItem){\n                episode = new Episode(episode);\n            };\n            var ep = episode.makeCopy();\n            ep.category_name = 'Walkin';\n            ep.start = moment();\n            ep.end = moment();\n\n            //\n            // Pre fill some tests:\n            //\n            var hiv = episode.newItem('microbiology_test');\n\n            $q.all([\n                episode.save(ep),\n                hiv.save({test: 'HIV Point of Care'}),\n            ]).then(function(){\n                episode.active = true;\n                $modalInstance.close(episode);\n            })\n\n        };\n\n        //\n        // We have an initial hospital number - we can now figure out whether to\n        // Add or pull over.\n        //\n        $scope.findByHospitalNumber = function(){\n            var patientFound = function(result){\n              if(result.merged && result.merged.length){\n                $scope.result = result;\n              }\n              else{\n                $scope.newForPatient(result);\n              }\n            };\n\n            var patientNotFound = function(result){\n              $scope.result = result;\n            };\n\n            Episode.findByHospitalNumber(\n                $scope.model.hospitalNumber,\n                {\n                    newPatient: patientNotFound,\n                    newForPatient: patientFound,\n                    error: function(){\n                        // This shouldn't happen, but we should probably handle it better\n                        alert('ERROR: More than one patient found with hospital number');\n                        $modalInstance.close(null)\n                    }\n                }\n            );\n        };\n\n        //\n        // Create a new patient\n        //\n        $scope.newPatient = function(result){\n            // There is no patient with this hospital number\n            // Show user the form for creating a new episode,\n            // with the hospital number pre-populated\n            modal = $modal.open({\n                templateUrl: '/templates/modals/add_walkin_episode.html/',\n                controller: 'AddEpisodeCtrl',\n                resolve: {\n                    referencedata: function(Referencedata) { return Referencedata.load(); },\n                    demographics: function() {\n                        return { hospital_number: $scope.model.hospitalNumber }\n                    },\n                    tags: function(){ return tags }\n                }\n            }).result.then(function(result) {\n                // The user has created the episode, or cancelled\n                if(result){ // We made an episode!\n                    $scope.tag_and_close(result);\n                }else{\n                    $modalInstance.close(result);\n                }\n            });\n        };\n\n        //\n        // Create a new episode for an existing patient\n        //\n        $scope.newForPatient = function(patient){\n            var active_episodes = _.filter(\n                _.values(patient.episodes),\n                function(e){\n                    return e.active;\n                });\n            if(active_episodes.length > 0){\n                var die = false;\n                _.each(active_episodes, function(e){\n                    if(e.category_name == 'Inpatient'){\n                        alert('Warning - Patient is a current inpatient');\n                    }else if(e.category_name == 'Walkin'){\n                        var episode = new Episode(e);\n\n                        if(episode.getTags().length > 1){\n                            if(episode.hasTag('walkin_doctor')){\n                                alert('Patient is currently on the Walkin Doctor list');\n                                die = true;\n                                $scope.cancel();\n                                return\n                            }\n                            if(episode.hasTag('walkin_triage')){\n                                alert('Patient is currently on the Walkin Nurse list');\n                                die = true;\n                                $scope.cancel();\n                                return\n                            }\n                            if(episode.hasTag('walkin_review')){\n                                die = true;\n                                if(tags.subtag == 'walkin_review'){\n                                    alert('Patient is currently on the Walkin Review list');\n                                    console.log('already here');\n                                    $scope.cancel();\n                                } else {\n                                    alert('Patient is currently on the Walkin Review list. Moving them here.');\n                                    var tagging = episode.tagging[0].makeCopy();\n                                    tagging.walkin_review = false;\n                                    tagging[tags.subtag] = true;\n                                    episode.tagging[0].save(tagging).then(function(){\n                                        $modalInstance.close(episode);\n                                    })\n                                }\n                                return\n                            }\n                        }\n                    }\n                })\n            }\n            if(!die){\n                $scope.add_for_patient(patient);\n            }\n        };\n\n\n        //\n        // Add a new episode for an existing patient. Pre-fill the relevant demographics\n        //\n        $scope.add_for_patient = function(patient){\n            var demographics = patient.demographics[0];\n            modal = $modal.open({\n                templateUrl: '/templates/modals/add_walkin_episode.html/',\n                controller: 'AddEpisodeCtrl',\n                resolve: {\n                    referencedata: function(Referencedata) { return Referencedata; },\n                    demographics: function() { return demographics; },\n                    tags: function(){ return tags }\n                }\n            }).result.then(function(result) {\n                // The user has created the episode, or cancelled\n                if(result){ // We made an episode!\n                    $scope.tag_and_close(result);\n                }else{\n                    $modalInstance.close(result);\n                }\n            });\n        };\n\n        // Let's have a nice way to kill the modal.\n        $scope.cancel = function() {\n            $modalInstance.close('cancel');\n        };\n    }\n);\n","coverage":[null,null,null,1,null,null,null,null,null,4,null,null,4,null,null,null,null,null,4,1,1,null,1,1,1,1,null,null,null,null,1,null,1,null,null,null,1,1,null,null,null,null,null,null,null,null,4,0,0,0,null,null,0,null,null,null,0,0,null,null,0,null,null,null,null,null,null,0,0,null,null,null,null,null,null,null,null,4,null,null,null,2,null,null,null,3,null,2,null,3,null,null,null,0,0,null,0,null,null,null,null,null,null,null,4,0,null,null,0,null,0,0,0,0,0,0,0,null,0,0,0,0,0,0,null,0,0,0,0,0,null,0,0,0,0,0,0,null,0,0,0,0,0,0,null,null,0,null,null,null,null,null,0,0,null,null,null,null,null,null,null,4,1,1,null,null,null,1,1,2,null,null,null,0,0,null,0,null,null,null,null,null,4,0,null,null,null],"branches":[20,1,0,1,20,1,1,0,49,2,0,0,49,2,1,0,49,3,0,0,49,3,1,0,94,4,0,0,94,4,1,0,111,5,0,0,111,5,1,0,114,6,0,0,114,6,1,0,116,7,0,0,116,7,1,0,119,8,0,0,119,8,1,0,120,9,0,0,120,9,1,0,126,10,0,0,126,10,1,0,132,11,0,0,132,11,1,0,134,12,0,0,134,12,1,0,153,13,0,0,153,13,1,0,174,14,0,0,174,14,1,0]},{"name":"research/static/js/research/controllers/discharge.js","source":"// \n// Discharge Flow controller for research studies.\n//\ncontrollers.controller(\n    'ResearchStudyDischargeCtrl',\n    function(\n        $scope, $modalInstance,\n        episode, tags\n    ){\n        // Setup initial vars\n        $scope.tags    = tags;\n        $scope.episode = episode;\n\n        var admission;\n        if(episode.start){\n            admission = moment(episode.start).format('MM/DD/YY')\n        }\n\n        $scope.editing = {\n            start: admission,\n\t    category: 'ineligible',\n            end: null\n        };\n\n        \n        // \n        // Discharging an episode requires updating three server-side entities:\n        //\n        // * Location\n        // * Tagging\n        // * Episode\n        // \n        // Make these requests then kill our modal.\n        // \n        $scope.discharge = function(){\n\t    var tagging = episode.getItem('tagging', 0);\n            var location = episode.getItem('location', 0);\n            \n\t    var taggingAttrs = tagging.makeCopy();\n            var locationAttrs = location.makeCopy();\n            var episodeAttrs = episode.makeCopy();\n\n\t    locationAttrs.category = $scope.editing.category;\n            episodeAttrs.end = $scope.editing.end;\n\n            // \n            // Set tagging attributes to what they need to be\n            // \n\t    taggingAttrs[$scope.tags.tag] = false;\n\t    taggingAttrs[$scope.tags.tag+'_scientist'] = false;\n\t    taggingAttrs[$scope.tags.tag+'_research_practitioner'] = false;\n\n\t    tagging.save(taggingAttrs).then(function(){\n                location.save(locationAttrs).then(function(){\n                    episode.save(episodeAttrs).then(function(){\n                        $modalInstance.close('discharged');            \n                    })\n                })\n\n\t    });            \n        };\n\n        $scope.cancel = function() {\n\t    $modalInstance.close('cancel');\n        };\n        \n    });\n","coverage":[null,null,null,1,null,null,null,null,null,null,0,0,null,0,0,0,null,null,0,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,0,0,0,null,0,0,0,null,0,0,null,null,null,null,0,0,0,null,0,0,0,0,null,null,null,null,null,null,0,0,null,null,null],"branches":[15,1,0,0,15,1,1,0]},{"name":"research/static/js/research/controllers/research_hospital_number.js","source":"//\n// This is our \"Enter Walk-in\" flow controller\n//\ncontrollers.controller(\n    'ResearchStudyHospitalNumberCtrl',\n    function($scope, $modalInstance, $modal, $rootScope,\n             $routeParams, $q,\n             Episode){\n\n        $scope.model = {\n            hospitalNumber : null\n        }\n        $scope.patient = null;\n\n        //\n        // When we've created an episode with this flow, tag it to the correct\n        // teams and then kill the modal.\n        //\n        $scope.tag_and_close = function(episode){\n            if(!episode.newItem){ episode = new Episode(episode); };\n\n            var tag = $routeParams.tag;\n            var teams = episode.tagging[0].makeCopy();\n            teams[tag] = true;\n            teams[tag+'_research_practitioner'] = true,\n            teams[tag+'_scientist'] = true\n\n            var ep = episode.makeCopy()\n\n            ep.category_name = 'Research'\n\n            episode.save(ep).then(\n                function(){\n                    episode.tagging[0].save(teams).then(\n                        function(){\n                            episode.active = true;\n                            $modalInstance.close(episode);\n                        }\n                    );\n                }\n            );\n        };\n\n        //\n        // We have an initial hospital number - we can now figure out whether to\n        // Add or pull over.\n        //\n        $scope.findByHospitalNumber = function(){\n            var patientFound = function(result){\n              if(result.merged && result.merged.length){\n                $scope.result = result;\n              }\n              else{\n                $modalInstance.close();\n                $scope.newForPatient(result);\n              }\n            };\n\n            var patientNotFound = function(result){\n              $scope.result = result;\n            };\n\n\n            Episode.findByHospitalNumber(\n                $scope.model.hospitalNumber,\n                {\n                    newPatient: patientNotFound,\n                    newForPatient: patientFound,\n                    error: function(){\n                        // This shouldn't happen, but we should probably handle it better\n                        alert('ERROR: More than one patient found with hospital number');\n                        $modalInstance.close(null)\n                    }\n                }\n            );\n        };\n\n        //\n        // Create a new patient\n        //\n        $scope.newPatient = function(result){\n            // There is no patient with this hospital number\n            // Show user the form for creating a new episode,\n            // with the hospital number pre-populated\n            modal = $modal.open({\n                templateUrl: '/templates/modals/add_episode_without_teams.html/',\n                controller: 'AddEpisodeCtrl',\n                resolve: {\n                    referencedata: function(Referencedata) { return Referencedata.load(); },\n                    demographics: function() {\n                        return { hospital_number: $scope.model.hospitalNumber }\n                    },\n                    tags: function(){ return {}; }\n                }\n            }).result.then(function(result) {\n                // The user has created the episode, or cancelled\n                if(result){ // We made an episode!\n                    $scope.tag_and_close(result);\n                }else{\n                    $modalInstance.close(result);\n                }\n            });\n        };\n\n        //\n        // Create a new episode for an existing patient\n        //\n        $scope.newForPatient = function(patient){\n            if(patient.active_episode_id && _.keys(patient.episodes).length > 0){\n                // Offer to import the data from this episode.\n                for (var eix in patient.episodes) {\n                    patient.episodes[eix] = new Episode(patient.episodes[eix]);\n                };\n                modal = $modal.open({\n                    templateUrl: '/templates/modals/copy_to_category.html/',\n                    controller: 'CopyToCategoryCtrl',\n                    resolve: {\n                        patient: function() { return patient; },\n                        category_name: function() { return 'Research'; }\n                    }\n                }).result.then(\n                    function(result) {\n                        if(!_.isString(result)){\n                            $scope.tag_and_close(result);\n                            return\n                        };\n                        if (result == 'open-new') { // User has chosen to open a new episode\n                            $scope.add_for_patient(patient);\n                        } else {\n                            // User has chosen to reopen an episode, or cancelled\n                            $modalInstance.close(result);\n                        };\n                    },\n                    function(result){ $modalInstance.close(result); });\n            }else{\n                $scope.add_for_patient(patient);\n            };\n        };\n\n        //\n        // Add a new episode for an existing patient. Pre-fill the relevant demographics\n        //\n        $scope.add_for_patient = function(patient){\n            var demographics = patient.demographics[0];\n\n            modal = $modal.open({\n                templateUrl: '/templates/modals/add_episode_without_teams.html/',\n                controller: 'AddEpisodeCtrl',\n                resolve: {\n                    referencedata: function(Referencedata) { return Referencedata.load(); },\n                    demographics: function() { return demographics; },\n                    tags: function(){ return {} }\n                }\n            }).result.then(function(result) {\n                // The user has created the episode, or cancelled\n                if(result){ // We made an episode!\n                    $scope.tag_and_close(result);\n                }else{\n                    $modalInstance.close(result);\n                }\n            });\n        };\n\n        // Let's have a nice way to kill the modal.\n        $scope.cancel = function() {\n            $modalInstance.close('cancel');\n        };\n    }\n);\n","coverage":[null,null,null,1,null,null,null,null,null,5,null,null,5,null,null,null,null,null,5,0,null,0,0,0,0,null,null,0,null,0,null,0,null,0,null,0,0,null,null,null,null,null,null,null,null,null,null,5,0,0,0,null,null,0,0,null,null,null,0,0,null,null,null,0,null,null,null,null,null,null,0,0,null,null,null,null,null,null,null,null,5,null,null,null,4,null,null,null,5,null,5,null,4,null,null,null,0,0,null,0,null,null,null,null,null,null,null,5,0,null,0,0,null,0,null,null,null,0,0,null,null,null,0,0,0,null,0,0,null,null,0,null,null,0,null,0,null,null,null,null,null,null,5,0,null,0,null,null,null,0,0,0,null,null,null,0,0,null,0,null,null,null,null,null,5,0,null,null,null],"branches":[20,1,0,0,20,1,1,0,50,2,0,0,50,2,1,0,50,3,0,0,50,3,1,0,97,4,0,0,97,4,1,0,109,5,0,0,109,5,1,0,109,6,0,0,109,6,1,0,123,7,0,0,123,7,1,0,127,8,0,0,127,8,1,0,156,9,0,0,156,9,1,0]},{"name":"infectiousdiseases/static/js/infectiousdiseases/controllers/tropical_liaison_add_patient.js","source":"controllers.controller('TropicalLiaisonAddPatient', function(\n    $scope, $http, $modalInstance, $q, FieldTranslater, Episode\n){\n  \"use strict\";\n\n  $scope.editing = {\n    tagging: {tropical_liaison: true}\n  };\n\n  $scope.save = function(){\n    var newEpisode = _.pick($scope.editing, \"demographics\", \"tagging\");\n    newEpisode.category_name = \"Tropical Liaison\";\n    var toSave = FieldTranslater.jsToPatient(newEpisode);\n\n    $http.post('/api/v0.1/episode/', toSave).success(function(episode) {\n      episode = new Episode(episode);\n      var tropicalLiaison = $scope.editing.external_liaison_contact_details;\n      if(_.size(tropicalLiaison)){\n        var liasonContactDetails = episode.external_liaison_contact_details[0];\n        tropicalLiaison.id = liasonContactDetails.id;\n        liasonContactDetails.save(tropicalLiaison).then(function(){\n          $modalInstance.close(episode);\n        });\n      }\n      else{\n        $modalInstance.close(episode);\n      }\n    });\n  };\n\n  // Let's have a nice way to kill the modal.\n  $scope.cancel = function() {\n      $modalInstance.close('cancel');\n  };\n});\n","coverage":[1,null,null,null,null,3,null,null,null,3,2,2,2,null,2,2,2,2,1,1,1,1,null,null,null,1,null,null,null,null,null,3,0,null,null],"branches":[18,1,0,1,18,1,1,1]},{"name":"infectiousdiseases/static/js/infectiousdiseases/controllers/tropical_liaison_end_liaison.js","source":"controllers.controller(\n    'TropicalLiaisonEndLiason',\n    function($scope,\n             $modalInstance, episode,\n             DischargePatientService) {\n\n       \"use strict\";\n        var tags = {tag: \"tropical_liaison\", subtag: \"\"};\n        var dischargePatientService = new DischargePatientService();\n        $scope.editing = dischargePatientService.getEditing(episode);\n\n        $scope.discharge = function(){\n            dischargePatientService.discharge(episode, $scope.editing, tags).then(function(){\n                $scope.discharged = true;\n                $modalInstance.close('discharged');\n            });\n        };\n\n        $scope.cancel = function() {\n      \t    $modalInstance.close('cancel');\n        };\n    });\n","coverage":[1,null,null,null,null,null,null,3,3,3,null,3,1,1,1,null,null,null,3,1,null,null]},{"name":"infectiousdiseases/static/js/infectiousdiseases/controllers/virology_hospital_number.js","source":"angular.module('opal.controllers').controller(\n    'VirologyHospitalNumberCtrl',\n    function($scope,\n             $timeout,\n             $modal,\n             $modalInstance,\n             $http,\n             $q,\n             Episode,\n             tags,\n             context,\n             hospital_number) {\n\n      $scope.model = {};\n      if(hospital_number){\n          $scope.model.hospitalNumber = hospital_number;\n      }\n      $scope.tags = tags;\n\n\t    $scope.findByHospitalNumber = function() {\n\n            Episode.findByHospitalNumber(\n                $scope.model.hospitalNumber,\n                {\n                    newPatient: $scope.newPatient,\n                    newForPatient: $scope.newForPatient,\n                    error: function(){\n\t\t\t            // This shouldn't happen, but we should probably handle it better\n\t\t\t            alert('ERROR: More than one patient found with hospital number');\n                        $modalInstance.close(null)\n                    }\n                }\n            );\n\n\t    };\n        var addPatient = function(demographics){\n            modal = $modal.open({\n  \t\t\t\ttemplateUrl: '/templates/modals/add_episode.html/',\n  \t\t\t\tcontroller: 'AddEpisodeCtrl',\n                size: 'lg',\n  \t\t\t\tresolve: {\n  \t\t\t\t\treferencedata: function(Referencedata) {\n                        return Referencedata.load();\n                    },\n  \t\t\t\t\tdemographics: function() {\n  \t\t\t\t\t\treturn demographics\n  \t\t\t\t\t},\n                    tags: function(){ return $scope.tags; }\n  \t\t\t\t}\n  \t\t\t}).result.then(function(result) {\n  \t\t\t\t// The user has created the episode, or cancelled\n  \t\t\t\t$modalInstance.close(result);\n  \t\t\t});\n        }\n\n        $scope.newPatient = function(result){\n            addPatient({ hospital_number: result.hospitalNumber });\n        };\n\n        $scope.addForPatient = function(patient){\n            demographics = patient.demographics[0];\n            if(demographics.date_of_birth){\n                var dob = moment(demographics.date_of_birth, 'YYYY-MM-DD')\n                    .format('DD/MM/YYYY');\n                demographics.date_of_birth = dob;\n            }\n\n            addPatient(demographics);\n        };\n\n        $scope.newForPatient = function(patient){\n    \t\t\tif (patient.active_episode_id &&\n                    // Check to see that this episode is not \"Discharged\"\n                    patient.episodes[patient.active_episode_id].location[0].category != 'Discharged') {\n    \t\t\t\t// This patient has an active episode\n                    $scope.newForPatientWithActiveEpisode(patient);\n    \t\t\t} else { // This patient has no active episode\n                    $scope.addForPatient(patient);\n    \t\t\t};\n        };\n\n        $scope.newForPatientWithActiveEpisode = function(patient){\n      \t\t\tepisode = new Episode(patient.episodes[patient.active_episode_id])\n\n            if(episode.category_name != 'Inpatient'){ // It's the wrong category - add new\n                return $scope.addForPatient(patient);\n            }\n            var tag = $scope.tags.subtag || $scope.tags.tag;\n\n            if(episode.location[0].category == 'Followup' && episode.hasTag(tag)){\n              modal = $modal.open({\n                  templateUrl: '/templates/modals/confirm_discharge.html',\n                  controller: 'ConfirmDischargeCtrl',\n                  size: 'lg',\n                  resolve: {\n                      patient: function() { return patient; },\n                      episode: function() { return episode; },\n                      tags: function(){ return $scope.tags; },\n                      context: function(){ return context; },\n                      nextStepController: function(){ return 'AddEpisodeCtrl';}\n                  }\n              }).result.then(\n                  function(result){\n                      $modalInstance.close(result);\n                  },\n                  function(result){\n                      $modalInstance.close(result);\n                });\n            }\n            else{\n              if (episode.tagging[0][$scope.tags.tag] &&\n                        ($scope.tags.subtag ==='' ||\n                         episode.tagging[0][$scope.tags.subtag])) {\n                // There is already an active episode for this patient\n                        // with the current tag\n                $modalInstance.close(episode);\n              } else {\n                // There is already an active episode for this patient but\n                        // it doesn't have the current tag.\n                        // Add the current Tag.\n                        episode.tagging[0][$scope.tags.tag] = true;\n                        if($scope.tags.subtag !== ''){\n                            episode.tagging[0][$scope.tags.subtag] = true;\n                        }\n\n                        episode.tagging[0].save(episode.tagging[0].makeCopy()).then(\n                            function(){\n                        $modalInstance.close(episode);\n                            });\n              }\n\n          }\n      };\n\n\n\n\t    $scope.cancel = function() {\n\t\t    $modalInstance.close(null);\n\t    };\n\n    });\n","coverage":[1,null,null,null,null,null,null,null,null,null,null,null,null,20,20,1,null,20,null,20,null,0,null,null,null,null,null,null,0,0,null,null,null,null,null,20,9,null,null,null,null,null,1,null,null,3,null,2,null,null,null,3,null,null,null,20,3,null,null,20,6,6,6,null,6,null,null,6,null,null,20,6,null,null,null,1,null,5,null,null,null,20,4,null,4,1,null,3,null,3,1,null,null,null,null,0,0,0,0,1,null,null,null,0,null,null,0,null,null,null,2,null,null,null,null,1,null,null,null,null,1,1,1,null,null,1,null,1,null,null,null,null,null,null,null,null,20,1,null,null,null],"branches":[15,1,0,1,15,1,1,19,62,2,0,6,62,2,1,0,72,3,0,1,72,3,1,5,72,4,0,6,72,4,1,2,85,5,0,1,85,5,1,3,88,6,0,3,88,6,1,2,90,7,0,1,90,7,1,2,90,8,0,3,90,8,1,1,111,9,0,1,111,9,1,1,111,10,0,2,111,10,1,2,111,10,2,1,122,11,0,1,122,11,1,0]}]}

travis_time:end:3292a397:start=1526913336050425410,finish=1526913336057964899,duration=7539489[0Ktravis_fold:end:after_success.3[0Ktravis_fold:start:after_success.4[0Ktravis_time:start:1cc7a568[0K$ coveralls debug --merge=coverage/coverage.json
Missing .coveralls.yml file. Using only env variables.
Testing coveralls-python...
{"git": {"head": {"committer_email": "marcusbaw@gmail.com", "author_email": "marcusbaw@gmail.com", "author_name": "Marcus Baw", "message": "amended tests to check the M2M  field as well as the FTFK  field", "committer_name": "Marcus Baw", "id": "4c78cffd1582b5c4037f92a620b701442cb4d213"}, "remotes": [{"url": "https://github.com/openhealthcare/elcid.git", "name": "origin"}], "branch": "1595-merge-walkin.models.Symptoms-into-elcid.models.PresentingComplaint"}, "config_file": ".coveragerc", "source_files": [{"source": "\"\"\"\nelCID OPAL implementation\n\"\"\"\n\nfrom opal.core import application, menus\n\nfrom microhaem.constants import MICROHAEM_ROLE\nfrom django.core.urlresolvers import reverse\n\n\n\nclass Application(application.OpalApplication):\n    schema_module = 'elcid.schema'\n    javascripts = [\n        'js/elcid/routes.js',\n        'js/elcid/controllers/discharge.js',\n        'js/elcid/controllers/confirm_discharge.js',\n        'js/elcid/controllers/diagnosis_hospital_number.js',\n        'js/elcid/controllers/diagnosis_add_episode.js',\n        'js/elcid/controllers/diagnosis_discharge.js',\n        'js/elcid/controllers/clinical_advice_form.js',\n        'js/elcid/controllers/haem_view.js',\n        'js/elcid/controllers/result_view.js',\n        'js/elcid/services/dicharge_patient.js',\n        'js/elcid/services/flow.js',\n        'js/elcid/services/location_ward_comparator.js',\n        'js/elcid/services/records/investigation.js',\n        'js/elcid/services/records/general_note.js',\n        'js/elcid/services/records/diagnosis.js',\n        'js/elcid/services/records/microbiology_input.js',\n        'js/elcid/services/records/line.js',\n        'js/elcid/services/records/opat_line_assessment.js',\n        'js/elcid/services/records/opat_review.js',\n        'js/elcid/services/records/antimicrobial.js',\n    ]\n\n    styles = [\n        \"css/infectiousdiseases.css\"\n    ]\n\n    actions = [\n        'actions/presenting_complaint.html',\n    ]\n\n    patient_view_forms = {\n        \"General Consultation\": \"inline_forms/clinical_advice.html\",\n    }\n\n    @classmethod\n    def get_menu_items(klass, user=None):\n\n        if user:\n            if not user.is_authenticated():\n                return [menus.MenuItem(\n                    href=reverse('login'),\n                    icon='fa-sign-in',\n                    display='Log In')\n                ]\n\n        # import pathways here as this being in the init\n        # causes issues with django settings in heroku otherwise\n        items = application.OpalApplication.get_menu_items(user=user)\n        if user.profile.can_extract or user.is_superuser:\n            query = menus.MenuItem(\n                href=\"/search/#/extract/\",\n                activepattern=\"/search/#/extract\",\n                icon=\"fa-download\",\n                display=\"Extract\"\n            )\n            items.append(query)\n\n        menuitem = menus.MenuItem(\n            href='/referrals/',\n            display=\"Referrals\",\n            icon=\"fa fa-mail-forward\",\n            activepattern='referrals',\n            index=3\n        )\n\n        items.append(menuitem)\n\n        return items\n", "name": "elcid/__init__.py", "coverage": [null, null, null, null, 1, null, 1, 1, null, null, null, 1, 1, 1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 1, null, null, null, 1, null, null, null, 1, null, null, null, 1, 1, null, 1, 1, 1, null, null, null, null, null, null, null, 1, 1, 1, null, null, null, null, null, 1, null, 1, null, null, null, null, null, null, null, 1, null, 1, null]}, {"source": "\"\"\"\nAdmin for elcid fields\n\"\"\"\nfrom django.contrib import admin\n\nfrom elcid import models\n\nfrom reversion import models as rmodels\n\n\nclass NotMergedFilter(admin.SimpleListFilter):\n    # Human-readable title which will be displayed in the\n    # right admin sidebar just above the filter options.\n    title = 'review status'\n\n    # Parameter for the filter that will be used in the URL query.\n    parameter_name = 'decade'\n\n    def lookups(self, request, model_admin):\n        \"\"\"\n        Returns a list of tuples. The first element in each\n        tuple is the coded value for the option that will\n        appear in the URL query. The second element is the\n        human-readable name for the option that will appear\n        in the right sidebar.\n        \"\"\"\n        return (\n            ('not_merged', 'not merged'),\n            ('not_reviewed', 'not reviewed'),\n        )\n\n    def queryset(self, request, queryset):\n        \"\"\"\n        Returns the filtered queryset based on the value\n        provided in the query string and retrievable via\n        `self.value()`.\n        \"\"\"\n        # Compare the requested value (either '80s' or '90s')\n        # to decide how to filter the queryset.\n        if self.value() == 'not_merged':\n            return queryset.exclude(merged=True)\n        if self.value() == 'not_reviewed':\n            return queryset.exclude(reviewed=True)\n\n\nclass DuplicatePatientAdmin(admin.ModelAdmin):\n    list_filter = (NotMergedFilter,)\n\nadmin.site.register(models.DuplicatePatient, DuplicatePatientAdmin)\nadmin.site.register(rmodels.Version, admin.ModelAdmin)\nadmin.site.register(rmodels.Revision, admin.ModelAdmin)\n", "name": "elcid/admin.py", "coverage": [null, null, null, 1, null, 1, null, 1, null, null, 1, null, null, 1, null, null, 1, null, 1, null, null, null, null, null, null, null, 0, null, null, null, null, 1, null, null, null, null, null, null, null, 0, 0, 0, 0, null, null, 1, 1, null, 1, 1, 1, null]}, {"source": "import json\n\nfrom rest_framework import viewsets\nfrom rest_framework.response import Response\nfrom elcid.gloss_api import bulk_create_from_gloss_response\nfrom opal.core.api import OPALRouter\n\n\nclass GlossEndpointApi(viewsets.ViewSet):\n    base_name = 'glossapi'\n\n    def create(self, request):\n        request_data = json.loads(request.data)\n        bulk_create_from_gloss_response(request_data)\n        return Response(\"ok\")\n\n\nrouter = OPALRouter()\nrouter.register('glossapi', GlossEndpointApi)\n", "name": "elcid/api.py", "coverage": [1, null, 1, 1, 1, 1, null, null, 1, 1, null, 1, 1, 1, 1, null, null, 1, 1, null]}, {"source": "\"\"\"\nelCID Dashboards\n\"\"\"\nimport datetime\n\nfrom django.utils.functional import cached_property\nfrom django.core.urlresolvers import reverse\n\nfrom future.standard_library import install_aliases\ninstall_aliases()\n\nfrom urllib.parse import urlencode\n\n\nfrom dashboard import Dashboard, widgets\nfrom django.db.models import Count\nfrom opal.models import Episode\nfrom elcid.models import Diagnosis, Consultant\n\n\n\nclass NumberOfDiagnoses(widgets.Number):\n    tagline = 'Diagnoses made'\n\n    def get_number(self):\n        return Diagnosis.objects.count()\n\n\nclass CurrentPatients(widgets.Number):\n    tagline = 'Active'\n\n    def get_number(self):\n        return Episode.objects.filter(active=True).count()\n\n\nclass Admissions(widgets.LineChart):\n    tagline = 'Admissions'\n    slug = 'elcid-admissions'\n\n    def get_lines(self):\n        twentyten = datetime.datetime(2013, 1, 1)\n        dates = Episode.objects.filter(start__gte=twentyten).values('start').annotate(Count('start'))\n        ticks = ['x']\n        lines = ['Start']\n        for date in dates:\n            if date['start']:\n                ticks.append(date['start'].isoformat())\n                lines.append(date['start__count'])\n\n        return [ticks, lines]\n\n\nclass ConfirmedDiagnosisByConsultant(widgets.Table):\n\n    tagline = \"Confirmed Diagnosis by Consultant\"\n    TOTAL_NUMBER = \"Total Number of Patients\"\n    CONFIRMED_DIAGNOSIS = \"% Confirmed Diagnosis\"\n    CONSULTANT = \"Consultant\"\n    table_headers = [CONSULTANT, TOTAL_NUMBER, CONFIRMED_DIAGNOSIS]\n    include_index=True\n\n    @cached_property\n    def table_data(self):\n        rows = []\n        consultants = Consultant.objects.all()\n\n        for consultant in consultants:\n            row = {}\n            row[self.CONSULTANT] = consultant.name\n            link = reverse(\"wardround_index\")\n            link_args = urlencode({\"consultant_at_discharge\": consultant.name})\n            link = link + \"#/consultantreview?\" + link_args\n            consultant_link = \"%s__link\" % self.CONSULTANT\n            row[consultant_link] = link\n            episodes = Episode.objects.exclude(end=None)\n            episodes = episodes.filter(consultantatdischarge__consultant_fk=consultant.pk)\n            row[self.TOTAL_NUMBER] = episodes.count()\n            with_confirmed = episodes.filter(primarydiagnosis__confirmed=True)\n            confirmed_diagnosis = with_confirmed.distinct().count()\n\n            if row[self.TOTAL_NUMBER] > 0:\n                completed = float(confirmed_diagnosis)/float(row[self.TOTAL_NUMBER])\n                row[self.CONFIRMED_DIAGNOSIS] = int(100 * completed)\n\n            if row.get(self.CONFIRMED_DIAGNOSIS, 51) < 50:\n                row[self.row_class] = \"diagnosis-table-issue\"\n            rows.append(row)\n\n        rows = sorted(rows, key=lambda x: x[self.CONSULTANT])\n        rows = sorted(rows, key=lambda x: x.get(self.CONFIRMED_DIAGNOSIS, 101))\n\n        for i, row in enumerate(rows, start=1):\n            if row[self.TOTAL_NUMBER] == 0:\n                row['number'] = '-'\n            else:\n                row['number'] = i\n        return rows\n\n\nclass UsageDashboard(Dashboard):\n    \"\"\"\n    Dashboard relaying core usage statistics for elCID\n    \"\"\"\n    display_name        = 'elCID Metrics'\n    description = 'Core metrics for the elCID service.'\n\n    def get_widgets(user):\n        return [\n            Admissions,\n            widgets.NumberOfUsers,\n            widgets.NumberOfEpisodes,\n            NumberOfDiagnoses,\n            CurrentPatients,\n        ]\n", "name": "elcid/dashboards.py", "coverage": [null, null, null, 1, null, 1, 1, null, 1, 1, null, 1, null, null, 1, 1, 1, 1, null, null, null, 1, 1, null, 1, 0, null, null, 1, 1, null, 1, 0, null, null, 1, 1, 1, null, 1, 0, 0, 0, 0, 0, 0, 0, 0, null, 0, null, null, 1, null, 1, 1, 1, 1, 1, 1, null, 1, null, 1, 1, null, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, null, 1, 1, 1, null, 1, 0, 1, null, 1, 1, null, 1, 1, 1, null, 1, 1, null, null, 1, null, null, null, 1, 1, null, 1, 0, null, null, null, null, null, null, null]}, {"source": "from opal.core import detail\nfrom django.conf import settings\n\n\nclass Result(detail.PatientDetailView):\n    display_name = \"Test Results\"\n    order = 5\n    template = \"detail/result.html\"\n\n    @classmethod\n    def visible_to(klass, user):\n        if user.is_superuser:\n            return True\n        return settings.GLOSS_ENABLED\n", "name": "elcid/detail.py", "coverage": [1, 1, null, null, 1, 1, 1, 1, null, 1, null, 1, 1, 1, null]}, {"source": "\"\"\"\nForms for eLCID\n\"\"\"\nfrom django import forms\n\nclass BulkCreateUsersForm(forms.Form):\n    \"\"\"\n    Form for uploading a CSV of users to add.\n    \"\"\"\n    users = forms.FileField()\n", "name": "elcid/forms.py", "coverage": [null, null, null, 1, null, 1, null, null, null, 1, null]}, {"source": "from django.contrib.auth.models import User\nfrom django.db.models import FieldDoesNotExist\nfrom django.conf import settings\nfrom django.db import transaction\n\nfrom rest_framework.reverse import reverse\n\nfrom opal import models\nfrom elcid import models as eModels\nfrom opal.core import subrecords\n\nimport requests\nimport json\nimport logging\n\nEXTERNAL_SYSTEM_MAPPING = {\n    models.InpatientAdmission: \"Carecast\",\n    eModels.Demographics: \"Carecast\",\n    eModels.Allergies: \"ePMA\"\n}\n\n\ndef get_gloss_user():\n    user = User.objects.filter(username=settings.GLOSS_USERNAME).first()\n\n    if user:\n        return user\n    else:\n        return User.objects.create(\n            username=settings.GLOSS_USERNAME,\n            password=settings.GLOSS_PASSWORD\n        )\n\n\ndef subscribe(hospital_number):\n    base_url = settings.GLOSS_URL_BASE\n    url = \"{0}/api/subscribe/{1}\".format(base_url, hospital_number)\n    data = {\"end_point\": reverse(\"glossapi-list\")}\n    response = requests.post(url, data=data)\n    assert(response.status_code == 200)\n\n\ndef patient_query(hospital_number, episode):\n    base_url = settings.GLOSS_URL_BASE\n    url = \"{0}/api/patient/{1}\".format(base_url, hospital_number)\n    response = requests.get(url)\n\n    if not response.status_code == 200:\n        logging.error(\"unable to load patient details for {0} with {1}\".format(\n            hospital_number, response.status_code\n        ))\n    else:\n        content = json.loads(response.content)\n\n        if content[\"status\"] == \"error\":\n            logging.error(\n                \"unable to load patient details for {0}, return error {1}\".format(\n                hospital_number, content[\"data\"]\n                )\n            )\n        else:\n            bulk_create_from_gloss_response(content, episode=episode)\n\n\ndef get_external_source(api_name):\n        model = subrecords.get_subrecord_from_api_name(api_name)\n        external_system = EXTERNAL_SYSTEM_MAPPING.get(model)\n\n        try:\n            field = model._meta.get_field(\"external_system\")\n        except FieldDoesNotExist:\n            field = None\n\n        if not field and external_system:\n            e = \"We cannot supply the mapping for {} as it is not an externally sourced model\"\n            raise ValueError(e.format(model.__name__))\n        else:\n            return external_system\n\n\ndef demographics_query(hospital_number):\n    base_url = settings.GLOSS_URL_BASE\n    url = \"{0}/api/demographics/{1}\".format(base_url, hospital_number)\n    result = json.loads(requests.get(url).content)\n\n    if result[\"status\"] == \"success\" and result[\"messages\"]:\n        demographics = result[\"messages\"][\"demographics\"]\n        external_system = get_external_source(\"demographics\")\n\n        for demographic in demographics:\n            demographic[\"hospital_number\"] = hospital_number\n\n            if external_system:\n                demographic[\"external_system\"] = external_system\n\n        return [{\n            \"demographics\": demographics,\n            \"duplicate_patient\": result[\"messages\"].get(\n                \"duplicate_patient\", []\n            )\n        }]\n    else:\n        # TODO: handle this better\n        return []\n\n\ndef bulk_create_from_gloss_response(request_data, episode=None):\n    from elcid.models import Allergies\n\n    hospital_number = request_data[\"hospital_number\"]\n    update_dict = request_data[\"messages\"]\n    logging.info(\"running a bulk update with\")\n    logging.info(update_dict)\n\n    patient_query = models.Patient.objects.filter(\n        demographics__hospital_number=hospital_number\n    )\n\n    if not patient_query.exists():\n        patient = models.Patient()\n    else:\n        patient = patient_query.get()\n\n    user = get_gloss_user()\n\n    with transaction.atomic():\n        if \"allergies\" in update_dict:\n            Allergies.objects.filter(\n                patient__demographics__hospital_number=hospital_number\n            ).delete()\n\n        # as these are only going to have been sourced from upstream\n        # make sure it says they're sourced from upstream\n        for api_name, updates_list in update_dict.items():\n            external_system = get_external_source(api_name)\n\n            if external_system:\n                for i in updates_list:\n                    i[\"external_system\"] = external_system\n\n        if \"demographics\" not in update_dict:\n            update_dict[\"demographics\"] = [\n                dict(hospital_number=hospital_number)\n            ]\n\n        patient.bulk_update(update_dict, user, force=True, episode=episode)\n", "name": "elcid/gloss_api.py", "coverage": [1, 1, 1, 1, null, 1, null, 1, 1, 1, null, 1, 1, 1, null, 1, null, null, null, null, null, null, 1, 1, null, 1, 0, null, 1, null, null, null, null, null, 1, 0, 0, 0, 0, 0, null, null, 1, 1, 1, 1, null, 1, 1, null, null, null, 1, null, 1, 1, null, null, null, null, null, 1, null, null, 1, 1, 1, null, 1, 1, 1, 1, null, 1, 0, 0, null, 1, null, null, 1, 1, 1, 1, null, 1, 1, 1, null, 1, 1, null, 1, 1, null, 1, null, null, null, null, null, null, null, 0, null, null, 1, 1, null, 1, 1, 1, 1, null, 1, null, null, null, 1, 1, null, 1, null, 1, null, 1, 1, 1, null, null, null, null, null, 1, 1, null, 1, 1, 1, null, 1, 0, null, null, null, 1, null]}, {"source": "", "name": "elcid/management/__init__.py", "coverage": [null]}, {"source": "", "name": "elcid/management/commands/__init__.py", "coverage": [null]}, {"source": "\"\"\"\nRandomise our admission dates over the last year.\n\"\"\"\nimport datetime\nimport random\n\nfrom django.core.management.base import BaseCommand\nfrom django.conf import settings\n\nfrom opal.models import Episode\n\nclass Command(BaseCommand):\n\n    def handle(self, *args, **options):\n        twentyten = datetime.date(2010, 1, 1)\n\n        for e in Episode.objects.filter(start__lt=twentyten):\n            year = 2014\n            month = random.randint(1, 12)\n            day = random.randint(1, 28)\n            e.start = datetime.date(year, month, day)\n            e.save()\n", "name": "elcid/management/commands/randomise_admission_dates.py", "coverage": [null, null, null, 1, 1, null, 1, 1, null, 1, null, 1, null, 1, 1, null, 1, 1, 1, 1, 1, 1, null]}, {"source": "\n\"\"\"\n\n\"\"\"\nimport datetime\nimport json\nimport logging\n\nfrom django.core.management.base import BaseCommand\nfrom opal.core import subrecords\nfrom opal import models\n\n\nclass Command(BaseCommand):\n\n    def count_created_last_week(self, model):\n        today = datetime.datetime.combine(\n            datetime.date.today(), datetime.time.min\n        )\n        last_week = today - datetime.timedelta(7)\n        return model.objects.filter(created__gte=last_week).count()\n\n    def handle(self, *args, **options):\n        # we want to catch the output, so lets not output info level logging\n        root_logger = logging.getLogger('')\n        root_logger.setLevel(logging.ERROR)\n        result = dict(\n            all_time=dict(\n                Episode=models.Episode.objects.count()\n            ),\n            last_week=dict(\n                Episode=self.count_created_last_week(models.Episode)\n            )\n        )\n\n        for subrecord in subrecords.subrecords():\n            count_all_time = subrecord.objects.count()\n            count_last_week = self.count_created_last_week(subrecord)\n\n            result[\"all_time\"][subrecord.get_display_name()] = count_all_time\n            result[\"last_week\"][subrecord.get_display_name()] = count_last_week\n        self.stdout.write(json.dumps(result, indent=4))\n", "name": "elcid/management/commands/status_report.py", "coverage": [null, 1, null, null, 1, 1, 1, null, 1, 1, 1, null, null, 1, null, 1, 1, null, null, 1, 1, null, 1, null, 1, 1, 1, null, null, null, null, null, null, null, null, 1, 1, 1, null, 1, 1, 1, null]}, {"source": "import logging\nimport time\nimport random\nfrom datetime import datetime\n\nfrom django.conf import settings\nfrom django.db import connection\n\n\nclass SessionMiddleware(object):\n    logger = logging.getLogger('elcid.sessionLogger')\n\n    def process_request(self, request):\n        username = 'anonymous'\n        path = request.path\n        # add an empty line seprator per request\n        self.logger.info('')\n\n        if request.user.is_authenticated():\n            username = request.user.username\n        self.logger.info('{0} received a request with user {1} for {2}'.format(\n            datetime.now().strftime('%d/%m/%Y %H:%M:%S'), username, path\n        ))\n        self.logger.info('cookies')\n        self.logger.info(request.COOKIES)\n        self.logger.info('session')\n        self.logger.info(request.session.items())\n        expiry = request.session.get_expiry_date().isoformat()\n        self.logger.info('expiry {}'.format(expiry))\n\n    def process_response(self, request, response):\n        username = 'anonymous'\n        path = request.path\n\n        if request.user.is_authenticated():\n            username = request.user.username\n\n        self.logger.info('responding to a request with user {0} for {1}'.format(\n            username, path\n        ))\n\n        if request.user.is_authenticated():\n            if 'expired_token' in request.session:\n                self.logger.info(\n                    'now logged in, clearing {}'.format(\n                        request.session['expired_token']\n                    )\n                )\n                del request.session['expired_token']\n\n        if not request.user.is_authenticated():\n            if \"expired_token\" not in request.session:\n                expiration_id = random.randint(1, 1000000000)\n                self.logger.info(\n                    'no session token found, setting expiry to {}'.format(\n                        expiration_id\n                    )\n                )\n                request.session[\"expired_token\"] = expiration_id\n\n        return response\n\n\nclass LoggingMiddleware(object):\n    logger = logging.getLogger('elcid.requestLogger')\n\n    def process_request(self, request):\n        self.start_time = time.time()\n\n    def process_response(self, request, response):\n        try:\n            username = \"-\"\n            extra_log = \"\"\n            if hasattr(request, 'user'):\n                username = getattr(request.user, 'username', '-')\n            req_time = time.time() - self.start_time\n\n            if settings.DEBUG:\n                sql_time = sum(float(q['time']) for q in connection.queries) * 1000\n                extra_log += \" (%s SQL queries, %s ms)\" % (len(connection.queries), sql_time)\n\n            self.logger.info(\"%s %s %s %s %s (%.02f seconds)%s\" % (\n                datetime.now(), username, request.method, request.get_full_path(),\n                response.status_code, req_time, extra_log)\n            )\n        except Exception as e:\n            logging.error(\"LoggingMiddleware Error: %s\" % e)\n\n        return response\n", "name": "elcid/middleware.py", "coverage": [1, 1, 1, 1, null, 1, 1, null, null, 1, 1, null, 1, 1, 1, null, 1, null, 1, 1, 1, null, null, 1, 1, 1, 1, 1, 1, null, 1, 1, 1, null, 1, 1, null, 1, null, null, null, 1, 1, 1, null, null, null, null, 1, null, 1, 1, 1, 1, null, null, null, null, 1, null, 1, null, null, 1, 1, null, 1, 1, null, 1, 1, 1, 1, 1, 1, 1, null, 1, 1, 1, null, 1, null, null, null, 0, 0, null, 1, null]}, {"source": "\"\"\"\nelCID implementation specific models!\n\"\"\"\nfrom django.db.models.signals import post_save\nfrom django.dispatch import receiver\nfrom django.db import models\nfrom django.conf import settings\nfrom jsonfield import JSONField\n\nimport opal.models as omodels\n\nfrom opal.models import (\n    EpisodeSubrecord, PatientSubrecord, Episode,\n    Tagging, ExternallySourcedModel\n)\nfrom opal.core.fields import ForeignKeyOrFreeText\nfrom opal.core import lookuplists\nfrom microhaem.constants import MICROHAEM_CONSULTATIONS, MICROHAEM_TAG\n\n\nclass Demographics(omodels.Demographics, omodels.ExternallySourcedModel):\n    _is_singleton = True\n    _icon = 'fa fa-user'\n\n    pid_fields       = (\n        'hospital_number', 'nhs_number', 'surname', 'first_name',\n        'middle_name', 'post_code',\n    )\n\n    class Meta:\n        verbose_name_plural = \"Demographics\"\n\n    @classmethod\n    def get_form_template(cls, patient_list=None, episode_type=None):\n        if settings.GLOSS_ENABLED:\n            return super(Demographics, cls).get_form_template(patient_list=None, episode_type=None)\n        else:\n            return \"forms/demographics_form_pre_gloss.html\"\n\n\nclass ContactDetails(PatientSubrecord):\n    _is_singleton = True\n    _advanced_searchable = False\n    _icon = 'fa fa-phone'\n\n    address_line1 = models.CharField(\"Address line 1\", max_length = 45,\n                                     blank=True, null=True)\n    address_line2 = models.CharField(\"Address line 2\", max_length = 45,\n                                     blank=True, null=True)\n    city          = models.CharField(max_length = 50, blank = True)\n    county        = models.CharField(\"County\", max_length = 40,\n                                     blank=True, null=True)\n    post_code     = models.CharField(\"Post Code\", max_length = 10,\n                                     blank=True, null=True)\n    tel1          = models.CharField(blank=True, null=True, max_length=50)\n    tel2          = models.CharField(blank=True, null=True, max_length=50)\n\n    class Meta:\n        verbose_name_plural = \"Contact details\"\n\n\nclass Carers(PatientSubrecord):\n    _is_singleton = True\n    _advanced_searchable = False\n    _icon = 'fa fa-users'\n\n    gp    = models.TextField(blank=True, null=True)\n    nurse = models.TextField(blank=True, null=True)\n\n    class Meta:\n        verbose_name_plural = \"Carers\"\n\n\nclass DuplicatePatient(PatientSubrecord):\n    _no_admin = True\n    _icon = 'fa fa-clone'\n    _advanced_searchable = False\n    reviewed = models.BooleanField(default=False)\n    merged = models.BooleanField(default=False)\n\n    def icon(self):\n        return self._icon\n\n\nclass Location(omodels.Location):\n    # This is completely the wrong place for these - they need to go in their\n    # own OPATReferral model. The ticket for that work is currently\n    # opal-ideas#21\n    opat_referral_route        = models.CharField(max_length=255, blank=True,\n                                                  null=True)\n    opat_referral_team         = models.CharField(\n        max_length=255, blank=True, null=True, verbose_name=\"Referring Team\"\n    )\n    opat_referral_consultant   = models.CharField(\n        max_length=255, blank=True, null=True, verbose_name=\"Referring Consultant\"\n    )\n    opat_referral_team_address = models.TextField(\n        blank=True, null=True, verbose_name=\"Referring team address\"\n    )\n    opat_referral              = models.DateField(blank=True, null=True, verbose_name=\"Date Of Referral To OPAT\")\n    opat_acceptance            = models.DateField(blank=True, null=True, verbose_name=\"Date Of Acceptance To OPAT\")\n    opat_discharge             = models.DateField(blank=True, null=True)\n\n    def __unicode__(self):\n        try:\n            demographics = self.episode.patient.demographics_set.get()\n            return u'Location for {0}({1}) {2} {3} {4} {5}'.format(\n                demographics.name,\n                demographics.hospital_number,\n                self.category,\n                self.hospital,\n                self.ward,\n                self.bed\n            )\n        except:\n            return 'demographics'\n\n# TODO: Remove this - replace with Opal-lab\nclass Result(PatientSubrecord):\n    _icon = 'fa fa-crosshairs'\n    _advanced_searchable = False\n\n    lab_number = models.CharField(max_length=255, blank=True, null=True)\n    profile_code = models.CharField(max_length=255, blank=True, null=True)\n    external_identifier = models.CharField(max_length=255, blank=True, null=True)\n    profile_description = models.CharField(max_length=255, blank=True, null=True)\n    request_datetime = models.DateTimeField(blank=True, null=True)\n    observation_datetime = models.DateTimeField(blank=True, null=True)\n    last_edited = models.DateTimeField(blank=True, null=True)\n    result_status = models.CharField(max_length=255, blank=True, null=True)\n    observations = JSONField(blank=True, null=True)\n\n    def update_from_dict(self, data, *args, **kwargs):\n        if \"id\" not in data:\n            if \"patient_id\" not in data:\n                raise ValueError(\"no patient id found for result in %s\" % data)\n            if \"external_identifier\" in data and data[\"external_identifier\"]:\n                existing = Result.objects.filter(\n                    external_identifier=data[\"external_identifier\"],\n                    patient=data[\"patient_id\"]\n                ).first()\n\n                if existing:\n                    data[\"id\"] = existing.id\n\n        super(Result, self).update_from_dict(data, *args, **kwargs)\n\n\nclass PresentingComplaint(EpisodeSubrecord):\n    _title = 'Presenting Complaint'\n    _icon = 'fa fa-stethoscope'\n\n    DURATION_CHOICES = (\n        ('3 days or less', '3 days or less',),\n        ('4-10 days', '4-10 days',),\n        ('11-21 days', '11-21 days',),\n        ('22 days to 3 months', '22 days to 3 months',),\n        ('over 3 months', 'over 3 months',)\n    )\n    HELP_DURATION = \"The duration for which the patient had been experiencing \\\nthese symptoms when recorded.\"\n\n    symptoms = models.ManyToManyField(\n        omodels.Symptom, related_name=\"presenting_complaints\"\n    )\n    duration = models.CharField(\n        max_length=255, blank=True, null=True, choices=DURATION_CHOICES,\n        help_text=HELP_DURATION\n    )\n    details = models.TextField(blank=True, null=True)\n\n    def set_symptom(self, *args, **kwargs):\n        # ignore symptom for the time being\n        pass\n\n    def to_dict(self, user, fields=None):\n        if not fields:\n            fields = self.__class__._get_fieldnames_to_serialize()\n\n        result = {\n            i: getattr(self, i) for i in fields if not i == \"symptoms\"\n        }\n        if \"symptoms\" in fields:\n            result[\"symptoms\"] = list(self.symptoms.values_list(\"name\", flat=True))\n        return result\n\n    @classmethod\n    def _get_fieldnames_to_serialize(cls):\n        field_names = super(PresentingComplaint, cls)._get_fieldnames_to_serialize()\n        removed_fields = {u'symptom_fk_id', 'symptom_ft', 'symptom'}\n        field_names = [i for i in field_names if i not in removed_fields]\n        return field_names\n\n    # deprecated fields 9/11/2015\n    onset = models.CharField(max_length=255, blank=True, null=True)\n    symptom = ForeignKeyOrFreeText(omodels.Symptom)\n\n\nclass PrimaryDiagnosis(EpisodeSubrecord):\n    \"\"\"\n    This is the confirmed primary diagnosisa\n    \"\"\"\n    _is_singleton = True\n    _title = 'Primary Diagnosis'\n\n    condition = ForeignKeyOrFreeText(\n        omodels.Condition,\n        help_text=\"The diagnosis entered when discharged.\"\n    )\n    confirmed = models.BooleanField(default=False)\n\n    class Meta:\n        verbose_name_plural = \"Primary diagnoses\"\n\n\nclass Consultant(lookuplists.LookupList):\n    pass\n\nclass ConsultantAtDischarge(EpisodeSubrecord):\n    _title = 'Consultant At Discharge'\n    _is_singleton = True\n    consultant = ForeignKeyOrFreeText(Consultant)\n\n\nclass SecondaryDiagnosis(EpisodeSubrecord):\n    \"\"\"\n    This is a confirmed diagnosis at discharge time.\n    \"\"\"\n    _title = 'Secondary Diagnosis'\n    condition   = ForeignKeyOrFreeText(omodels.Condition)\n    co_primary = models.NullBooleanField(default=False)\n\n    class Meta:\n        verbose_name_plural = \"Secondary diagnoses\"\n\n\nclass Diagnosis(omodels.Diagnosis):\n    \"\"\"\n    This is a working-diagnosis list, will often contain things that are\n    not technically diagnoses, but is for historical reasons, called diagnosis.\n    \"\"\"\n    _angular_service = 'Diagnosis'\n\n    def __unicode__(self):\n        return u'Diagnosis of {0} - {1}'.format(\n            self.condition,\n            self.date_of_diagnosis\n            )\n\n    class Meta:\n        verbose_name_plural = \"Diagnoses\"\n\n\nclass PastMedicalHistory(EpisodeSubrecord):\n    _title = 'PMH'\n    _sort = 'year'\n    _icon = 'fa fa-history'\n\n    condition = ForeignKeyOrFreeText(omodels.Condition)\n    year = models.CharField(max_length=200, blank=True)\n    details = models.CharField(max_length=255, blank=True)\n\n    class Meta:\n        verbose_name_plural = \"Past medical histories\"\n\n\nclass GeneralNote(EpisodeSubrecord):\n    _title = 'General Notes'\n    _sort  = 'date'\n    _icon = 'fa fa-info-circle'\n    _angular_service = 'GeneralNote'\n\n    date    = models.DateField(null=True, blank=True)\n    comment = models.TextField()\n\n\nclass Travel(EpisodeSubrecord):\n    _icon = 'fa fa-plane'\n\n    destination         = ForeignKeyOrFreeText(omodels.Destination)\n    dates               = models.CharField(max_length=255, blank=True)\n    reason_for_travel   = ForeignKeyOrFreeText(omodels.Travel_reason)\n    did_not_travel      = models.NullBooleanField(default=False)\n    specific_exposures  = models.CharField(max_length=255, blank=True)\n    malaria_prophylaxis = models.NullBooleanField(default=False)\n    malaria_drug        = ForeignKeyOrFreeText(omodels.Antimicrobial)\n    malaria_compliance  = models.CharField(max_length=200, blank=True, null=True)\n\n\nclass Iv_stop(lookuplists.LookupList):\n    class Meta:\n        verbose_name = \"IV stop\"\n\n\nclass Drug_delivered(lookuplists.LookupList):\n    class Meta:\n        verbose_name_plural = \"Drugs delivered\"\n\n\nclass Antimicrobial(EpisodeSubrecord):\n    _title = 'Antimicrobials'\n    _sort = 'start_date'\n    _icon = 'fa fa-flask'\n    _angular_service = 'Antimicrobial'\n\n    drug          = ForeignKeyOrFreeText(omodels.Antimicrobial)\n    dose          = models.CharField(max_length=255, blank=True)\n    route         = ForeignKeyOrFreeText(omodels.Antimicrobial_route)\n    start_date    = models.DateField(null=True, blank=True)\n    end_date      = models.DateField(null=True, blank=True)\n    delivered_by  = ForeignKeyOrFreeText(Drug_delivered)\n    reason_for_stopping = ForeignKeyOrFreeText(Iv_stop)\n    adverse_event = ForeignKeyOrFreeText(omodels.Antimicrobial_adverse_event)\n    comments      = models.TextField(blank=True, null=True)\n    frequency     = ForeignKeyOrFreeText(omodels.Antimicrobial_frequency)\n    no_antimicrobials = models.NullBooleanField(default=False)\n\n\nclass Allergies(PatientSubrecord, ExternallySourcedModel):\n    _icon = 'fa fa-warning'\n\n    drug = ForeignKeyOrFreeText(omodels.Antimicrobial)\n    provisional = models.NullBooleanField()\n    details = models.CharField(max_length=255, blank=True)\n\n    # previously called drug this is the name of the problematic substance\n    allergy_description = models.CharField(max_length=255, blank=True)\n    allergy_type_description = models.CharField(max_length=255, blank=True)\n    certainty_id = models.CharField(max_length=255, blank=True)\n    certainty_description = models.CharField(max_length=255, blank=True)\n    allergy_reference_name = models.CharField(max_length=255, blank=True)\n    allergen_reference_system = models.CharField(max_length=255, blank=True)\n    allergen_reference = models.CharField(max_length=255, blank=True)\n    status_id = models.CharField(max_length=255, blank=True)\n    status_description = models.CharField(max_length=255, blank=True)\n    diagnosis_datetime = models.DateTimeField(null=True, blank=True)\n    allergy_start_datetime = models.DateTimeField(null=True, blank=True)\n    no_allergies = models.BooleanField(default=False)\n\n    class Meta:\n        verbose_name_plural = \"Allergies\"\n\n\nclass MicrobiologyInput(EpisodeSubrecord):\n    _title = 'Clinical Advice'\n    _sort = 'when'\n    _icon = 'fa fa-comments'\n    _list_limit = 3\n    _angular_service = 'MicrobiologyInput'\n\n    when = models.DateTimeField(null=True, blank=True)\n    initials = models.CharField(\n        max_length=255,\n        blank=True,\n        verbose_name=\"Advice given by\"\n    )\n    reason_for_interaction = ForeignKeyOrFreeText(\n        omodels.Clinical_advice_reason_for_interaction,\n        verbose_name=\"Reason for clinical interaction\"\n    )\n    clinical_discussion = models.TextField(blank=True)\n    agreed_plan = models.TextField(blank=True)\n    discussed_with = models.CharField(max_length=255, blank=True)\n    clinical_advice_given = models.NullBooleanField()\n    infection_control_advice_given = models.NullBooleanField()\n    change_in_antibiotic_prescription = models.NullBooleanField()\n    referred_to_opat = models.NullBooleanField()\n\n    def set_reason_for_interaction(self, incoming_value, user, data):\n        if(incoming_value in MICROHAEM_CONSULTATIONS):\n            if self.id:\n                episode = self.episode\n            else:\n                episode = Episode.objects.get(pk=data[\"episode_id\"])\n\n            existing = Tagging.objects.filter(\n                episode=episode, value=MICROHAEM_TAG\n            )\n\n            if existing.exists():\n                existing.update(archived=False)\n            else:\n                Tagging.objects.create(\n                    episode=episode,\n                    value=MICROHAEM_TAG\n                )\n        self.reason_for_interaction = incoming_value\n\n\nclass Todo(EpisodeSubrecord):\n    _title = 'To Do'\n    _icon = 'fa fa-th-list'\n\n    details = models.TextField(blank=True)\n\nclass Hiv_no(lookuplists.LookupList):\n    class Meta:\n        verbose_name = \"HIV refusal reason\"\n\n\nclass MicrobiologyTest(omodels.Investigation):\n    _title = 'Investigations'\n    _sort = 'date_ordered'\n    _icon = 'fa fa-crosshairs'\n    _angular_service = 'Investigation'\n\n    alert_investigation   = models.BooleanField(default=False)\n    hiv_declined          = ForeignKeyOrFreeText(\n        Hiv_no, verbose_name=\"Reason not done\"\n    )\n    spotted_fever_igm     = models.CharField(\n        max_length=20, blank=True, verbose_name=\"Spotted Fever Group IgM\"\n    )\n    spotted_fever_igg     = models.CharField(\n        max_length=20, blank=True, verbose_name=\"Spotted Fever Group IgG\"\n    )\n    typhus_group_igm      = models.CharField(\n        max_length=20, blank=True, verbose_name=\"Typhus Group IgM\"\n    )\n    typhus_group_igg      = models.CharField(\n        max_length=20, blank=True, verbose_name=\"Typhus Group IgG\"\n    )\n    scrub_typhus_igm      = models.CharField(\n        max_length=20, blank=True, verbose_name=\"Scrub Typhus IgM\"\n    )\n    scrub_typhus_igg      = models.CharField(\n        max_length=20, blank=True, verbose_name=\"Scrub Typhus IgG\"\n    )\n\n\nclass Line(EpisodeSubrecord):\n    _sort = 'insertion_datetime'\n    _icon = 'fa fa-bolt'\n    _angular_service = 'Line'\n\n    line_type            = ForeignKeyOrFreeText(omodels.Line_type)\n    site                 = ForeignKeyOrFreeText(omodels.Line_site)\n    insertion_datetime   = models.DateTimeField(blank=True, null=True)\n    inserted_by          = models.CharField(max_length=255, blank=True, null=True)\n    external_length      = models.CharField(\n        max_length=255, blank=True, null=True, verbose_name=\"External Length When Inserted\"\n    )\n    removal_datetime     = models.DateTimeField(blank=True, null=True)\n    complications        = ForeignKeyOrFreeText(omodels.Line_complication)\n    removal_reason       = ForeignKeyOrFreeText(omodels.Line_removal_reason)\n    special_instructions = models.TextField()\n\n\nclass Appointment(EpisodeSubrecord):\n    _title = 'Upcoming Appointments'\n    _sort = 'date'\n    _icon = 'fa fa-calendar'\n    _advanced_searchable = False\n    APPOINTMENT_CHOICES = [\n        (\"Doctor Clinic review appointment\", \"Doctor Clinic review appointment\"),\n        (\"Nurse Clinic review appointment\", \"Nurse Clinic review appointment\")\n    ]\n    appointment_type = models.CharField(\n        max_length=200,\n        blank=True, null=True,\n        choices=APPOINTMENT_CHOICES)\n    appointment_with = models.CharField(max_length=200, blank=True, null=True, verbose_name=\"With\")\n    date             = models.DateField(blank=True, null=True)\n\n\n@receiver(post_save, sender=Episode)\ndef get_information_from_gloss(sender, **kwargs):\n    from elcid import gloss_api\n\n    episode = kwargs.pop(\"instance\")\n    created = kwargs.pop(\"created\")\n    if created and settings.GLOSS_ENABLED:\n        hospital_number = episode.patient.demographics_set.first().hospital_number\n        gloss_api.subscribe(hospital_number)\n        gloss_api.patient_query(hospital_number, episode=episode)\n", "name": "elcid/models.py", "coverage": [null, null, null, 1, 1, 1, 1, 1, null, 1, null, 1, null, null, null, 1, 1, 1, null, null, 1, 1, 1, null, 1, null, null, null, null, 1, 1, null, 1, 1, 1, 1, null, 1, null, null, 1, 1, 1, 1, null, 1, null, 1, null, 1, 1, null, 1, null, 1, 1, null, 1, 1, null, null, 1, 1, 1, 1, null, 1, 1, null, 1, 1, null, null, 1, 1, 1, 1, 1, 1, null, 1, 0, null, null, 1, null, null, null, 1, null, 1, null, null, 1, null, null, 1, null, null, 1, 1, 1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 1, 1, 1, null, 1, 1, 1, 1, 1, 1, 1, 1, 1, null, 1, 1, 1, 0, 1, 1, null, null, null, null, 1, 1, null, 1, null, null, 1, 1, 1, null, 1, null, null, null, null, null, null, 1, null, null, 1, null, null, 1, null, null, null, 1, null, 1, null, 0, null, 1, 1, 1, null, 1, null, null, 1, 1, 1, null, 1, null, 1, 1, 1, 1, null, null, 1, 1, null, null, 1, null, null, null, 1, 1, null, 1, null, null, null, 1, null, 1, 1, null, null, 1, 1, null, 1, 1, 1, 1, null, null, 1, null, null, null, 1, 1, 1, null, 1, 1, null, null, 1, null, null, null, null, 1, null, null, null, null, null, null, null, 1, 1, null, null, 1, 1, 1, 1, null, 1, 1, 1, null, 1, 1, null, null, 1, 1, 1, 1, 1, null, 1, 1, null, null, 1, 1, null, 1, 1, 1, 1, 1, 1, 1, 1, null, null, 1, 1, 1, null, null, 1, 1, 1, null, null, 1, 1, 1, 1, 1, null, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, null, null, 1, 1, null, 1, 1, 1, null, null, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, null, 1, 1, null, null, 1, 1, 1, 1, 1, 1, null, 1, 1, null, null, null, null, 1, null, null, null, 1, 1, 1, 1, 1, 1, 1, null, 1, 1, 1, 0, null, 1, null, 1, null, null, null, 1, 1, null, 1, null, null, null, 1, null, null, 1, 1, 1, null, 1, null, 1, 1, 1, null, null, 1, 1, 1, 1, 1, null, 1, 1, null, null, 1, null, null, 1, null, null, 1, null, null, 1, null, null, 1, null, null, 1, null, null, null, null, 1, 1, 1, 1, null, 1, 1, 1, 1, 1, null, null, 1, 1, 1, 1, null, null, 1, 1, 1, 1, 1, 1, null, null, null, 1, null, null, null, 1, 1, null, null, 1, null, 1, null, 1, 1, 1, 1, 1, 1, null]}, {"source": "from opal.core.patient_lists import PatientList, TaggedPatientList\nfrom elcid import models\nfrom opal.models import Episode\nfrom opal.utils import AbstractBase\n\nlist_columns = [\n    models.Demographics,\n    models.Location,\n    models.Diagnosis,\n    models.PastMedicalHistory,\n    models.Travel,\n    models.Antimicrobial,\n    models.MicrobiologyTest,\n    models.GeneralNote,\n    models.Todo,\n]\n\n\nclass ElcidPatientList(PatientList, AbstractBase):\n    comparator_service = \"LocationWardComparator\"\n\n\nclass Mine(ElcidPatientList, TaggedPatientList):\n    \"\"\"\n    if the user has tagged episodes as theirs this will give them the\n    appropriate\n    episode queryset\n    \"\"\"\n    display_name = 'Mine'\n    tag = \"mine\"\n    order = 100\n    schema = list_columns\n    template_name = 'mine.html'\n\n    @classmethod\n    def get(klass, **kwargs):\n        tag = kwargs.get(\"tag\", None)\n        if tag and \"mine\" == tag.lower():\n            return klass\n\n    def get_queryset(self, user, **kwargs):\n        return Episode.objects.filter(\n            tagging__value='mine',\n            tagging__user=user,\n            tagging__archived=False\n        )\n\n    def to_dict(self, user):\n        qs = self.get_queryset(user)\n        return qs.serialised(user, qs)\n", "name": "elcid/patient_lists.py", "coverage": [1, 1, 1, 1, null, 1, null, null, null, null, null, null, null, null, null, null, null, null, 1, 1, null, null, 1, null, null, null, null, null, 1, 1, 1, 1, 1, null, 1, null, 0, 0, 0, null, 1, 1, null, null, null, null, null, 1, 1, 1, null]}, {"source": "from opal.core.search.queries import DatabaseQuery\nfrom elcid.gloss_api import demographics_query\n\n\nclass GlossQuery(DatabaseQuery):\n\n    def recursively_get_duplicate_patients(self, result):\n        \"\"\" a patient could be merged with another patient add infinitum\n        \"\"\"\n\n        # TODO make this handle if someones merged hospital_numbers into\n        # themselves (shouldn't happen but you can't trust an external system)\n        while result and \"duplicate_patient\" in result[0] and result[0][\"duplicate_patient\"] and result[0][\"duplicate_patient\"][0][\"new_id\"]:\n            hospital_number = result[0][\"duplicate_patient\"][0][\"new_id\"]\n            self.query[0][\"query\"] = hospital_number\n            result = self.demographics_query()\n\n        return result\n\n    def demographics_query(self):\n        exists_in_elcid = super(GlossQuery, self).get_patients()\n\n        if exists_in_elcid:\n            return [e.to_dict(self.user) for e in exists_in_elcid]\n        else:\n            if len(self.query) == 1:\n                if self.query[0][\"field\"] == \"Hospital Number\":\n                    return demographics_query(self.query[0][\"query\"])\n\n        return []\n\n    def patients_as_json(self):\n        result = self.demographics_query()\n\n        if result:\n            duplicate_patient = result[0].get(\"duplicate_patient\", [])\n\n            if duplicate_patient:\n                result[0][\"merged\"] = self.recursively_get_duplicate_patients(\n                    result\n                )\n                result[0][\"duplicate_patient\"] = [\n                    dict(\n                        new_id=result[0][\"merged\"][0][\"demographics\"][0][\"hospital_number\"]\n                    )\n                ]\n\n        return result\n", "name": "elcid/search.py", "coverage": [1, 1, null, null, 1, null, 1, null, null, null, null, null, 1, 1, 1, 1, null, 1, null, 1, 1, null, 1, 0, null, 1, 1, 1, null, 0, null, 1, 1, null, 1, 1, null, 1, 1, null, null, 1, null, null, null, null, null, 1, null]}, {"source": "", "name": "elcid/templatetags/__init__.py", "coverage": [null]}, {"source": "from opal.core.pathway.templatetags.pathways import add_common_context\nfrom django import template\n\nregister = template.Library()\n\n\n@register.inclusion_tag('_helpers/open_multisave.html', takes_context=True)\ndef open_multisave(\n    context, subrecord, add_button_text=None, remove_button_text=None\n):\n    \"\"\"\n        A multi save that does not collapse anything an always has a minimum\n        of one entry (it won't save it if its empty)\n    \"\"\"\n    if not add_button_text:\n        add_button_text = \"Add Another {}\".format(subrecord.get_display_name())\n\n    if not remove_button_text:\n        remove_button_text = \"Remove\"\n\n    ctx = add_common_context(context, subrecord)\n    ctx[\"remove_button_text\"] = remove_button_text\n    ctx[\"add_button_text\"] = add_button_text\n    return ctx\n", "name": "elcid/templatetags/elcid_pathways.py", "coverage": [1, 1, null, 1, null, null, 1, 1, null, null, null, null, null, null, 1, 1, null, 1, 1, null, 1, 1, 1, 1, null]}, {"source": "\"\"\"\nRoot elCID urlconf\n\"\"\"\nfrom django.conf.urls import url, include\nfrom django.contrib.admin.views.decorators import staff_member_required\nfrom django.contrib.auth.decorators import login_required\nfrom django.contrib import admin\n\nadmin.autodiscover()\n\nfrom opal.urls import urlpatterns as opatterns\nfrom elcid import api\n\nfrom elcid import views\n\nurlpatterns = [\n    url(\n        '^admin/bulk-create-users$',\n        staff_member_required(views.BulkCreateUserView.as_view()),\n        name='bulk-create-users'\n    ),\n    url(\n        r'^referrals/?$', views.TemplateView.as_view(\n            template_name='referral/referral_list.html'\n        )\n    ),\n    url(r'^test/500$', views.Error500View.as_view(), name='test-500'),\n    url(\n        r'stories/$',\n        views.StoriesView.as_view(),\n        name='stories'\n    ),\n    url(r'glossapi/v0.1/', include(api.router.urls)),\n]\n\nurlpatterns += opatterns\n", "name": "elcid/urls.py", "coverage": [null, null, null, 1, 1, 1, 1, null, 1, null, 1, 1, null, 1, null, 1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 1, null]}, {"source": "\"\"\"\neLCID specific views.\n\"\"\"\nimport csv\nimport random\n\nfrom django.apps import apps\nfrom django.contrib.auth.models import User\nfrom django.contrib.auth.mixins import LoginRequiredMixin\nfrom django.http import HttpResponse\nfrom django.views.generic import TemplateView, FormView, View\n\nfrom opal.core import application\n\nfrom elcid.forms import BulkCreateUsersForm\n\napp = application.get_app()\n\n\ndef temp_password():\n    num = random.randint(10, 99)\n    word = random.choice(['womble', 'bananas', 'flabbergasted', 'kerfuffle'])\n    return '{0}{1}'.format(num, word)\n\n\nclass Error500View(View):\n    \"\"\"\n    Demonstrative 500 error to preview templates.\n    \"\"\"\n    def get(self, *args, **kwargs):\n        if self.request.META['HTTP_USER_AGENT'].find('Googlebot') != -1:\n            return HttpResponse('No')\n        raise Exception(\"This is a deliberate error\")\n\n\nclass BulkCreateUserView(FormView):\n    \"\"\"\n    Used in the admin - bulk create users.\n    \"\"\"\n    form_class = BulkCreateUsersForm\n    template_name = 'admin/bulk_create_users.html'\n    success_url = '/admin/auth/user/'\n\n    def form_valid(self, form):\n        \"\"\"\n        Create the users from our uploaded file!\n\n        Arguments:\n        - `form`: Form\n\n        Return: HTTPResponse\n        Exceptions: None\n        \"\"\"\n        usernames = [u.username for u in User.objects.all()]\n        new_users = []\n\n        for row in csv.reader(form.cleaned_data['users']):\n            email = row[0]\n            name_part, _ = email.split('@')\n\n            # Check for reused usernames\n            if name_part in usernames:\n                form._errors['users'] = form.error_class(['Some of those users already exist :('])\n                del form.cleaned_data['users']\n                return self.form_invalid(form)\n\n            frist, last = name_part.split('.')\n            user = User(username=name_part,\n                        email=email,\n                        first_name=frist,\n                        last_name=last,\n                        is_active=True,\n                        is_staff=False,\n                        is_superuser=False)\n            user.tp = temp_password()\n            user.set_password(user.tp)\n            new_users.append(user)\n\n        for u in new_users:\n            u.save()\n\n        return super(BulkCreateUserView, self).form_valid(form)\n\n\nclass StoriesView(LoginRequiredMixin, TemplateView):\n    template_name = \"stories.html\"\n", "name": "elcid/views.py", "coverage": [null, null, null, 1, 1, null, 1, 1, 1, 1, 1, null, 1, null, 1, null, 1, null, null, 1, 1, 1, 1, null, null, 1, null, null, null, 1, 0, 0, 0, null, null, 1, null, null, null, 1, 1, 1, null, 1, null, null, null, null, null, null, null, null, null, 0, 0, null, 0, 0, 0, null, null, 0, 0, 0, 0, null, 0, 0, null, null, null, null, null, null, 0, 0, 0, null, 0, 0, null, 0, null, null, 1, 1, null]}, {"source": "\"\"\"\n[Virtual] Ward Round implementations\n\"\"\"\nimport datetime\n\nfrom opal.models import Episode\nfrom wardround.wardrounds import WardRound\n\n\nclass HistoricTagsMixin(object):\n    def to_dict(self):\n        \"\"\"\n        We're overriding this so that we can set the extra flag on historic Tags.\n        \"\"\"\n        return dict(name=self.name,\n                    description=self.description,\n                    episodes=Episode.objects.serialised(\n                        self.request.user,\n                        self.episodes(),\n                        episode_history=True,\n                        historic_tags=True),\n                    )\n\n\nclass Discharged(HistoricTagsMixin, WardRound):\n    display_name = 'Discharged last week'\n    description = 'Patients discharged in the last week'\n\n    filter_template = 'wardrounds/discharged_filter.html'\n    detail_template = 'wardrounds/discharged_detail.html'\n    filters = {\n        'team': 'episode.tagging[0][value]'\n    }\n\n    def episodes(self):\n        today = datetime.date.today()\n        one_week_ago = today - datetime.timedelta(days=7)\n        team = self.request.GET.get(\"team\", None)\n\n        episodes = Episode.objects.filter(\n            category_name__in=['Inpatient', 'Walkin'],\n            end__gte=one_week_ago)\n\n        if team:\n            episodes = episodes.filter(tagging__value=team)\n\n        return episodes\n", "name": "elcid/wardrounds.py", "coverage": [null, null, null, 1, null, 1, 1, null, null, 1, 1, null, null, null, 0, null, null, null, null, null, null, null, null, null, 1, 1, 1, null, 1, 1, 1, null, null, null, 1, 1, 1, 1, null, 1, null, null, null, 1, 1, null, 1, null]}, {"source": "", "name": "infectiousdiseases/__init__.py", "coverage": [null]}, {"source": "from future.standard_library import install_aliases\ninstall_aliases()\n\nfrom urllib.parse import urlencode\n\nfrom dashboard import Dashboard, widgets\nfrom django.core.urlresolvers import reverse\nfrom opal.models import Episode\nfrom django.utils.functional import cached_property\nfrom elcid.models import Consultant\n\n\nclass ConfirmedDiagnosisByConsultant(widgets.Table):\n    tagline = \"Confirmed Diagnosis by Consultant\"\n    TOTAL_NUMBER = \"Total Number of Patients\"\n    CONFIRMED_DIAGNOSIS = \"% Confirmed Diagnosis\"\n    CONSULTANT = \"Consultant\"\n    table_headers = [CONSULTANT, TOTAL_NUMBER, CONFIRMED_DIAGNOSIS]\n    include_index=True\n\n    @cached_property\n    def table_data(self):\n        rows = []\n        consultants = Consultant.objects.all()\n\n        for consultant in consultants:\n            row = {}\n            row[self.CONSULTANT] = consultant.name\n            link = reverse(\"wardround_index\")\n            link_args = urlencode({\"consultant_at_discharge\": consultant.name})\n            link = link + \"#/consultantreview?\" + link_args\n            consultant_link = \"%s__link\" % self.CONSULTANT\n            row[consultant_link] = link\n            episodes = Episode.objects.exclude(end=None)\n            episodes = episodes.filter(consultantatdischarge__consultant_fk=consultant.pk)\n            row[self.TOTAL_NUMBER] = episodes.count()\n            with_confirmed = episodes.filter(primarydiagnosis__confirmed=True)\n            confirmed_diagnosis = with_confirmed.distinct().count()\n            if row[self.TOTAL_NUMBER] == 0:\n                row[self.CONFIRMED_DIAGNOSIS] = 100\n            else:\n                completed = float(confirmed_diagnosis)/float(row[self.TOTAL_NUMBER])\n                row[self.CONFIRMED_DIAGNOSIS] = int(100 * completed)\n\n            if row[self.CONFIRMED_DIAGNOSIS] < 50:\n                row[self.row_class] = \"diagnosis-table-issue\"\n\n            rows.append(row)\n\n        rows = sorted(rows, key=lambda x: x[self.CONSULTANT])\n        return sorted(rows, key=lambda x: x[self.CONFIRMED_DIAGNOSIS])\n\n\nclass ConfirmedDiagnosis(Dashboard):\n    \"\"\"\n    Dashboard relaying stats about the number of patients discharged\n    by named consultants\n    \"\"\"\n    display_name = \"Consultant Review Dashboard\"\n    description = \"Statistics about the number of discharged patients with confirmed diagnoses\"\n\n    def get_widgets(user):\n        return [ConfirmedDiagnosisByConsultant]\n", "name": "infectiousdiseases/dashboards.py", "coverage": [1, 1, null, 1, null, 1, 1, 1, 1, 1, null, null, 1, 1, 1, 1, 1, 1, 1, null, 1, null, 1, 1, null, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, null, 1, 1, null, 1, 1, null, 1, null, 1, 1, null, null, 1, null, null, null, null, 1, 1, null, 1, 1, null]}, {"source": "from opal.core import episodes\n\n\nclass TropicalLiaison(episodes.EpisodeCategory):\n    display_name = \"Tropical Liaison\"\n    detail_template = \"detail/tropical_liaison.html\"\n\n    # don't judge me fix opal#948\n    slug = \"tropical liaison\"\n", "name": "infectiousdiseases/episode_categories.py", "coverage": [1, null, null, 1, 1, 1, null, null, 1, null]}, {"source": "from opal.models import EpisodeSubrecord\nfrom django.db import models\n\n\nclass ExternalLiaisonContactDetails(EpisodeSubrecord):\n    _title = \"Contact Details\"\n    _icon = 'fa fa-phone'\n    _is_singleton = True\n    _advanced_searchable = False\n\n    # required\n    external_hospital_number = models.CharField(\n        max_length=256, null=True, blank=True\n    )\n\n    # required\n    hospital = models.CharField(\n        max_length=256, null=True, blank=True\n    )\n\n    hospital_contact = models.CharField(\n        max_length=256, null=True, blank=True\n    )\n\n    contact_telephone_number = models.CharField(\n        max_length=256, null=True, blank=True\n    )\n\n    # not using an email field because at the\n    # moment validation won't flow through\n    contact_email_address = models.CharField(\n        max_length=256, null=True, blank=True\n    )\n\n    contact_notes = models.TextField(null=True, blank=True)\n", "name": "infectiousdiseases/models.py", "coverage": [1, 1, null, null, 1, 1, 1, 1, 1, null, null, 1, null, null, null, null, 1, null, null, null, 1, null, null, null, 1, null, null, null, null, null, 1, null, null, null, 1, null]}, {"source": "from opal.core.patient_lists import PatientList, TaggedPatientList\nfrom elcid.patient_lists import ElcidPatientList\nfrom elcid import models\nfrom infectiousdiseases import models as id_models\n\ngeneric_infectious_diseases_list = [\n    models.Demographics,\n    models.Location,\n    models.Diagnosis,\n    models.PastMedicalHistory,\n    models.Antimicrobial,\n    models.MicrobiologyTest,\n    models.GeneralNote,\n    models.Todo\n]\n\ntropical_liaison_list = [\n    models.Demographics,\n    id_models.ExternalLiaisonContactDetails,\n    models.Diagnosis,\n    models.PastMedicalHistory,\n    models.Antimicrobial,\n    models.MicrobiologyTest,\n    models.MicrobiologyInput,\n    models.GeneralNote\n]\n\n\nclass Virology(ElcidPatientList, TaggedPatientList):\n    display_name = 'Virology'\n    tag = \"virology\"\n    order = 7\n    schema = [\n        models.Demographics,\n        models.Location,\n        models.Diagnosis,\n        models.Antimicrobial,\n        models.MicrobiologyTest,\n        models.MicrobiologyInput,\n        models.GeneralNote\n    ]\n\n\nclass MicroOrtho(ElcidPatientList, TaggedPatientList):\n    display_name = 'Micro Ortho'\n    tag = \"microbiology\"\n    subtag = \"micro_ortho\"\n    order = 7\n    schema = [\n        models.Demographics,\n        models.Location,\n        models.Diagnosis,\n        models.Antimicrobial,\n        models.MicrobiologyTest,\n        models.MicrobiologyInput,\n        models.GeneralNote\n    ]\n\n\nclass InfectiousDiseasesIdLiason(ElcidPatientList, TaggedPatientList):\n    display_name = 'ID Liaison'\n    tag = \"infectious_diseases\"\n    subtag = \"id_liaison\"\n    order = 2\n\n    schema = [\n        models.Demographics,\n        models.Location,\n        models.Diagnosis,\n        models.PastMedicalHistory,\n        models.Antimicrobial,\n        models.MicrobiologyTest,\n        models.MicrobiologyInput,\n        models.GeneralNote,\n        models.Todo\n    ]\n\n\nclass InfectiousDiseasesIdInpatient(ElcidPatientList, TaggedPatientList):\n    display_name = 'ID Inpatients'\n    tag = \"infectious_diseases\"\n    subtag = \"id_inpatients\"\n    order = 1\n\n    schema = generic_infectious_diseases_list\n\n\nclass ImmuneInpatients(ElcidPatientList, TaggedPatientList):\n    display_name = 'Immune Inpatients'\n    tag = \"hiv\"\n    subtag = \"immune_inpatients\"\n    order = 3\n\n    schema = generic_infectious_diseases_list\n\n\nclass ImmuneLiason(ElcidPatientList, TaggedPatientList):\n    display_name = 'Immune Liaison'\n    tag = \"hiv\"\n    subtag = \"immune_liason\"\n    order = 4\n\n    schema = generic_infectious_diseases_list\n\n\nclass Tropical(ElcidPatientList, TaggedPatientList):\n    display_name = 'Tropical'\n    tag = \"tropical_diseases\"\n    schema = generic_infectious_diseases_list\n    order = 5\n\n\nclass TropicalLiaison(ElcidPatientList, TaggedPatientList):\n    display_name = 'Tropical Liaison'\n    tag = \"tropical_liaison\"\n    schema = tropical_liaison_list\n    direct_add = False\n    order = 6\n\n\nclass Weekend(ElcidPatientList, PatientList):\n    \"\"\"\n    On the weekend a single team handles the work of three regular teams.\n    Queryset should exclude patients 'discharged but requiring followup'\n    (see https://github.com/openhealthcare/elcid/issues/1525)\n    \"\"\"\n    display_name = 'Weekend HTD'\n    order = 99\n    schema = generic_infectious_diseases_list\n\n    def get_queryset(self, *args, **kwargs):\n        from opal.models import Episode # Avoid circular import from opal.models\n        return Episode.objects.filter(\n            tagging__archived=False,\n            tagging__value__in=[\n                'tropical_diseases', 'immune_inpatients', 'id_inpatients'\n            ]\n        ).exclude(\n            location__category=\"Followup\"\n        )\n", "name": "infectiousdiseases/patient_lists.py", "coverage": [1, 1, 1, 1, null, 1, null, null, null, null, null, null, null, null, null, null, 1, null, null, null, null, null, null, null, null, null, null, null, 1, 1, 1, 1, 1, null, null, null, null, null, null, null, null, null, null, 1, 1, 1, 1, 1, 1, null, null, null, null, null, null, null, null, null, null, 1, 1, 1, 1, 1, null, 1, null, null, null, null, null, null, null, null, null, null, null, null, 1, 1, 1, 1, 1, null, 1, null, null, 1, 1, 1, 1, 1, null, 1, null, null, 1, 1, 1, 1, 1, null, 1, null, null, 1, 1, 1, 1, 1, null, null, 1, 1, 1, 1, 1, 1, null, null, 1, null, null, null, null, null, 1, 1, 1, null, 1, 1, 1, null, null, null, null, null, null, null, null]}, {"source": "\"\"\"\nPlugin definition for the ID Plugin\n\"\"\"\nfrom opal.core import plugins\n\nclass InfectiousDiseasesPlugin(plugins.OpalPlugin):\n    \"\"\"\n    Main entrypoint to expose this plugin to our OPAL application.\n    \"\"\"\n    javascripts = {\n        'opal.controllers': [\n            'js/infectiousdiseases/controllers/tropical_liaison_add_patient.js',\n            'js/infectiousdiseases/controllers/tropical_liaison_end_liaison.js',\n            'js/infectiousdiseases/controllers/virology_hospital_number.js',\n        ]\n    }\n\n    actions = (\n        'actions/end_tropical_liaison.html',\n    )\n", "name": "infectiousdiseases/plugin.py", "coverage": [null, null, null, 1, null, 1, null, null, null, 1, null, null, null, null, null, null, null, 1, null, null, null]}, {"source": "import datetime\n\nfrom dateutil.relativedelta import relativedelta\nfrom django.utils.functional import cached_property\nfrom functools import partial\nfrom six import moves\nfrom opal.models import Episode\nfrom django.db.models import Count, Max\nfrom elcid.models import Diagnosis\nfrom reporting import Report, ReportFile\nfrom infectiousdiseases.patient_lists import InfectiousDiseasesIdLiason\n\n\nclass IdLiasionReport(Report):\n    slug = \"id-liasion-report\"\n    display_name = \"ID Liasion Report\"\n    description = \"A Monthly Summary of the ID Liasion Teams Output\"\n    template = \"reports/infectiousdiseases/id_liasion_report.html\"\n\n    def get_queryset(self, month_start):\n        month_end = month_start + relativedelta(day=31)\n        return Episode.objects.filter(\n            tagging__value=InfectiousDiseasesIdLiason.subtag,\n            tagging__archived=True\n        ).filter(\n            end__gte=month_start,\n            end__lte=month_end\n        )\n\n    def get_age(self, demographics):\n        if not demographics.date_of_birth:\n            return \"\"\n        else:\n            return relativedelta(\n                datetime.date.today(), demographics.date_of_birth\n            ).years\n\n    def get_demographics_row(self, episode):\n        demographics = episode.patient.demographics_set.first()\n        return [\n            demographics.name.strip(),\n            self.get_age(demographics),\n            demographics.sex\n        ]\n\n    def get_demographics_headers(self):\n        return [\n            \"Name\",\n            \"Age\",\n            \"Gender\"\n        ]\n\n    @cached_property\n    def diagnosis_repetitions(self):\n        diagnosis = Diagnosis.objects.filter(episode__in=self.qs)\n\n        if not diagnosis:\n            return 0\n\n        diagnosis = diagnosis.values('episode_id').annotate(Count('episode_id'))\n        return diagnosis.aggregate(Max('episode_id__count'))[\n            \"episode_id__count__max\"\n        ]\n\n    def get_diagnosis_headers(self):\n        return [\n            \"Condition {}\".format(i + 1) for i in range(self.diagnosis_repetitions)\n        ]\n\n    def get_diagnosis_row(self, episode):\n        row = []\n        for diagnosis in episode.diagnosis_set.all():\n            row.append(diagnosis.condition)\n\n        row_length = len(row)\n\n        if not row_length == self.diagnosis_repetitions:\n            row.extend(\n                \"\" for i in moves.xrange(\n                    self.diagnosis_repetitions - row_length\n                )\n            )\n        return row\n\n    def get_clinical_advice_headers(self):\n        return [\n            \"Clinical Advice Given\",\n            \"Infection Control Advice Given\",\n            \"Change In Antibiotic Prescription\",\n            \"Referred To Opat\"\n        ]\n\n    def get_aggregate_column(self, qs, field):\n        return qs.filter(**{field: True}).count()\n\n    def get_clinical_advice_row(self, episode):\n        qs = episode.microbiologyinput_set.all()\n        aggregate = partial(self.get_aggregate_column, qs)\n\n        return [\n            aggregate(\"clinical_advice_given\"),\n            aggregate(\"infection_control_advice_given\"),\n            aggregate(\"change_in_antibiotic_prescription\"),\n            aggregate(\"referred_to_opat\")\n        ]\n\n    def get_row(self, episode):\n        result = []\n        result.extend(self.get_demographics_row(episode))\n        result.extend(self.get_diagnosis_row(episode))\n        result.extend(self.get_clinical_advice_row(episode))\n        return result\n\n    def get_headers(self):\n        result = []\n        result.extend(self.get_demographics_headers())\n        result.extend(self.get_diagnosis_headers())\n        result.extend(self.get_clinical_advice_headers())\n        return result\n\n    @cached_property\n    def reports_available(self):\n        \"\"\"\n            A list of lists of available reports for the template\n        \"\"\"\n        first_episode = Episode.objects.filter(\n            tagging__value=InfectiousDiseasesIdLiason.subtag,\n            tagging__archived=True,\n        ).exclude(\n            end=None\n        ).order_by(\"end\").first()\n\n        if not first_episode:\n            return None\n\n        first_date = first_episode.end\n        today = datetime.date.today()\n        first_date = datetime.date(first_date.year, first_date.month, 1)\n        rd = relativedelta(today, first_date)\n        num = (rd.years * 12) + rd.months\n\n        months = []\n\n        for i in range(num):\n            key_date = first_date + relativedelta(months=i)\n            months.append(dict(\n                display_month=key_date.strftime(\"%B\"),\n                display_year=key_date.strftime(\"%Y\"),\n                value=key_date.strftime(\"%d/%m/%Y\")\n            ))\n\n        months.reverse()\n        rows = []\n\n        for i in range(0, len(months), 4):\n            rows.append(months[i:i+4])\n        return rows\n\n    def generate_report_data(self, criteria=None, **kwargs):\n        month_start = datetime.datetime.strptime(\n            criteria[\"reporting_month\"], \"%d/%m/%Y\"\n        ).date()\n\n        self.qs = self.get_queryset(month_start)\n        file_data = [self.get_headers()]\n\n        for episode in self.qs:\n            file_data.append(\n                self.get_row(episode)\n            )\n\n        file_name = \"id_liasion_report_{0}_{1}.csv\".format(\n            month_start.month,\n            month_start.year\n        )\n\n        return [\n            ReportFile(\n                file_name=file_name, file_data=file_data\n            )\n        ]\n", "name": "infectiousdiseases/reports.py", "coverage": [1, null, 1, 1, 1, 1, 1, 1, 1, 1, 1, null, null, 1, 1, 1, 1, 1, null, 1, 1, 1, null, null, null, null, null, null, null, 1, 1, 1, null, 1, null, null, null, 1, 1, 1, null, null, null, null, null, 1, 1, null, null, null, null, null, 1, null, 1, null, 1, 1, null, 1, 1, null, null, null, 1, 1, null, null, null, 1, 1, 1, 1, null, 1, null, 1, 1, null, null, null, null, 1, null, 1, 1, null, null, null, null, null, null, 1, 1, null, 1, 1, 1, null, 1, null, null, null, null, null, null, 1, 1, 1, 1, 1, 1, null, 1, 1, 1, 1, 1, 1, null, 1, null, null, null, null, 1, null, null, null, null, null, null, 1, 1, null, 1, 1, 1, 1, 1, null, 1, null, 1, 1, 1, null, null, null, null, null, 1, 1, null, 1, 1, 1, null, 1, 1, null, null, null, 1, 1, null, 1, 1, null, null, null, 1, null, null, null, null, 1, null, null, null, null, null]}, {"source": "", "name": "infectiousdiseases/tests/__init__.py", "coverage": [null]}, {"source": "import datetime\nfrom dateutil.relativedelta import relativedelta\nfrom mock import patch\n\nfrom opal.core.test import OpalTestCase\nfrom opal.models import Episode\n\nfrom infectiousdiseases.reports import IdLiasionReport\n\n\nclass IdLiasionReportTestCase(OpalTestCase):\n    def setUp(self):\n        self.report = IdLiasionReport()\n\n    def test_get_queryset_vanilla(self):\n        _, e1 = self.new_patient_and_episode_please()\n        e1.end = datetime.date(2017, 5, 5)\n        e1.tagging_set.create(\n            value=\"id_liaison\",\n            archived=True,\n        )\n        e1.save()\n\n        _, e2 = self.new_patient_and_episode_please()\n        e2.end = datetime.date(2017, 5, 5)\n\n        e2.tagging_set.create(\n            value=\"something_else\",\n            archived=True,\n        )\n        e2.save()\n        result = self.report.get_queryset(datetime.date(2017, 5, 1))\n        self.assertEqual(\n            list(result), list(Episode.objects.filter(id=e1.id))\n        )\n\n    def test_get_queryset_tagging_archived(self):\n        _, e1 = self.new_patient_and_episode_please()\n        e1.end = datetime.date(2017, 5, 5)\n        e1.save()\n        e1.tagging_set.create(\n            value=\"id_liaison\",\n            archived=False,\n        )\n        e1.tagging_set.create(\n            value=\"else\",\n            archived=True,\n        )\n        result = self.report.get_queryset(datetime.date(2017, 5, 1))\n        self.assertFalse(result.exists())\n\n    @patch(\"infectiousdiseases.reports.datetime\")\n    def test_get_age_earlier_year(self, dt):\n        dt.date.today.return_value = datetime.date(2017, 4, 5)\n        patient, _ = self.new_patient_and_episode_please()\n        demographics = patient.demographics_set.first()\n        demographics.date_of_birth = datetime.date(2010, 5, 1)\n\n        self.assertEqual(\n            self.report.get_age(demographics), 6\n        )\n\n    @patch(\"infectiousdiseases.reports.datetime\")\n    def test_get_age_later_year(self, dt):\n        dt.date.today.return_value = datetime.date(2017, 6, 5)\n        patient, _ = self.new_patient_and_episode_please()\n        demographics = patient.demographics_set.first()\n        demographics.date_of_birth = datetime.date(2010, 5, 1)\n        demographics.save()\n\n        self.assertEqual(\n            self.report.get_age(demographics), 7\n        )\n\n    def test_get_age_unkown(self):\n        patient, _ = self.new_patient_and_episode_please()\n        demographics = patient.demographics_set.first()\n\n        self.assertEqual(\n            self.report.get_age(demographics), \"\"\n        )\n\n    def test_get_demographics_row(self):\n        patient, episode = self.new_patient_and_episode_please()\n        year = datetime.date.today().year - 7\n        patient.demographics_set.update(\n            first_name=\"Sandra\",\n            surname=\"Wallis\",\n            date_of_birth=datetime.date(year, 1, 1),\n            sex_ft=\"\"\n        )\n        self.assertEqual(\n            self.report.get_demographics_row(episode),\n            [\"Sandra Wallis\", 7, \"\"]\n        )\n\n    def test_get_demographics_headers(self):\n        qs = Episode.objects.none()\n        self.report.qs = qs\n        self.assertEqual(\n            self.report.get_demographics_headers(),\n            [\"Name\", \"Age\", \"Gender\"]\n        )\n\n    def test_get_diagnosis_repititions(self):\n        _, episode = self.new_patient_and_episode_please()\n        episode.diagnosis_set.create(\n            condition_ft=\"something\"\n        )\n        episode.diagnosis_set.create(\n            condition_ft=\"something-else\"\n        )\n        _, episode_2 = self.new_patient_and_episode_please()\n        episode_2.diagnosis_set.create(\n            condition_ft=\"something\"\n        )\n        self.report.qs = Episode.objects.all()\n        self.assertEqual(\n            self.report.diagnosis_repetitions,\n            2\n        )\n\n    def test_get_diagnosis_headers(self):\n        _, episode = self.new_patient_and_episode_please()\n        episode.diagnosis_set.create(\n            condition_ft=\"something\"\n        )\n        episode.diagnosis_set.create(\n            condition_ft=\"something-else\"\n        )\n        _, episode_2 = self.new_patient_and_episode_please()\n        episode_2.diagnosis_set.create(\n            condition_ft=\"something\"\n        )\n        self.report.qs = Episode.objects.all()\n        self.assertEqual(\n            self.report.diagnosis_repetitions,\n            2\n        )\n        self.report.qs = Episode.objects.all()\n        self.assertEqual(\n            self.report.get_diagnosis_headers(),\n            ['Condition 1', 'Condition 2']\n        )\n\n    def test_get_diagnosis_row(self):\n        _, episode = self.new_patient_and_episode_please()\n        episode.diagnosis_set.create(\n            condition_ft=\"something\"\n        )\n        episode.diagnosis_set.create(\n            condition_ft=\"something-else\"\n        )\n        _, episode_2 = self.new_patient_and_episode_please()\n        episode_2.diagnosis_set.create(\n            condition_ft=\"something\"\n        )\n        self.report.qs = Episode.objects.all()\n        self.assertEqual(\n            self.report.diagnosis_repetitions,\n            2\n        )\n        self.report.qs = Episode.objects.all()\n        self.assertEqual(\n            self.report.get_diagnosis_row(episode),\n            ['something', 'something-else']\n        )\n        self.assertEqual(\n            self.report.get_diagnosis_row(episode_2),\n            ['something', '']\n        )\n\n    def test_get_clinical_advice_headers(self):\n        self.assertEqual(\n            self.report.get_clinical_advice_headers(),\n            [\n                \"Clinical Advice Given\",\n                \"Infection Control Advice Given\",\n                \"Change In Antibiotic Prescription\",\n                \"Referred To Opat\"\n            ]\n        )\n\n    def test_get_clinical_advice_none(self):\n        _, episode = self.new_patient_and_episode_please()\n        self.assertEqual(\n            self.report.get_clinical_advice_row(episode),\n            [0, 0, 0, 0]\n        )\n\n    def test_get_clinical_advice_row_empty(self):\n        _, episode = self.new_patient_and_episode_please()\n        episode.microbiologyinput_set.create()\n        self.assertEqual(\n            self.report.get_clinical_advice_row(episode),\n            [0, 0, 0, 0]\n        )\n\n    def test_get_clinical_advice_row_aggregate(self):\n        _, episode = self.new_patient_and_episode_please()\n        episode.microbiologyinput_set.create()\n        episode.microbiologyinput_set.create(\n            clinical_advice_given=True\n        )\n        episode.microbiologyinput_set.create(\n            clinical_advice_given=True\n        )\n        self.assertEqual(\n            self.report.get_clinical_advice_row(episode),\n            [2, 0, 0, 0]\n        )\n\n    def test_infectious_advice_given(self):\n        _, episode = self.new_patient_and_episode_please()\n        episode.microbiologyinput_set.create()\n        episode.microbiologyinput_set.create(\n            infection_control_advice_given=True\n        )\n\n        self.assertEqual(\n            self.report.get_clinical_advice_row(episode),\n            [0, 1, 0, 0]\n        )\n\n    def test_change_in_antibiotic_prescription_given(self):\n        _, episode = self.new_patient_and_episode_please()\n        episode.microbiologyinput_set.create()\n        episode.microbiologyinput_set.create(\n            change_in_antibiotic_prescription=True\n        )\n\n        self.assertEqual(\n            self.report.get_clinical_advice_row(episode),\n            [0, 0, 1, 0]\n        )\n\n    def test_change_in_referred_to_opat_given(self):\n        _, episode = self.new_patient_and_episode_please()\n        episode.microbiologyinput_set.create()\n        episode.microbiologyinput_set.create(\n            referred_to_opat=True\n        )\n\n        self.assertEqual(\n            self.report.get_clinical_advice_row(episode),\n            [0, 0, 0, 1]\n        )\n\n    def test_empty_report(self):\n        report = self.report.generate_report_data(\n            criteria=dict(reporting_month=\"01/05/2017\")\n        )\n        # we just return headers\n        self.assertEqual(\n            report[0].file_data[0],\n            [\n                'Name',\n                'Age',\n                'Gender',\n                'Clinical Advice Given',\n                'Infection Control Advice Given',\n                'Change In Antibiotic Prescription',\n                'Referred To Opat'\n            ]\n        )\n\n    def test_generate_report_data(self):\n        patient, episode = self.new_patient_and_episode_please()\n        patient_2, episode_2 = self.new_patient_and_episode_please()\n        episode.end = datetime.date(2017, 5, 5)\n        episode.tagging_set.create(\n            value=\"id_liaison\",\n            archived=True,\n        )\n        episode.save()\n\n        episode_2.end = datetime.date(2017, 5, 5)\n\n        episode_2.tagging_set.create(\n            value=\"id_liaison\",\n            archived=True,\n        )\n        episode_2.save()\n        year_1 = datetime.date.today().year - 7\n        year_2 = datetime.date.today().year - 17\n\n        patient.demographics_set.update(\n            first_name=\"Sandra\",\n            surname=\"Wallis\",\n            date_of_birth=datetime.date(year_1, 1, 1),\n            sex_ft=\"Unknown\"\n        )\n\n        patient_2.demographics_set.update(\n            first_name=\"Gemma\",\n            surname=\"Potts\",\n            date_of_birth=datetime.date(year_2, 5, 1),\n            sex_ft=\"Female\"\n        )\n\n        episode.diagnosis_set.create(\n            condition_ft=\"something\"\n        )\n\n        episode.diagnosis_set.create(\n            condition_ft=\"something-else\"\n        )\n        episode_2.diagnosis_set.create(\n            condition_ft=\"something\"\n        )\n\n        reports = self.report.generate_report_data(\n            criteria=dict(reporting_month=\"01/05/2017\")\n        )\n\n        self.assertEqual(len(reports), 1)\n\n        report = reports[0]\n\n        self.assertEqual(report.file_name, \"id_liasion_report_5_2017.csv\")\n        self.assertEqual(\n            report.file_data[0],\n            [\n                'Name',\n                'Age',\n                'Gender',\n                'Condition 1',\n                'Condition 2',\n                'Clinical Advice Given',\n                'Infection Control Advice Given',\n                'Change In Antibiotic Prescription',\n                'Referred To Opat'\n            ]\n        )\n\n        self.assertEqual(\n            report.file_data[1],\n            [\n                'Sandra Wallis',\n                7,\n                'Unknown',\n                'something',\n                'something-else',\n                0,\n                0,\n                0,\n                0\n            ]\n        )\n\n        self.assertEqual(\n            report.file_data[2],\n            [\n                'Gemma Potts',\n                17,\n                'Female',\n                'something',\n                '',\n                0,\n                0,\n                0,\n                0\n            ]\n        )\n\n    @patch(\"infectiousdiseases.reports.datetime\")\n    def test_reports_available_only_2(self, dt):\n\n        # override datetime.date.today\n        class NewDate(datetime.date):\n            @classmethod\n            def today(cls):\n                return cls(2017, 7, 2)\n        dt.date = NewDate\n        some_date = datetime.date(2017, 05, 3)\n        _, e = self.new_patient_and_episode_please()\n        e.end = some_date\n        e.save()\n        e.tagging_set.create(\n            value=\"id_liaison\",\n            archived=True,\n        )\n        ctx = self.report.reports_available\n        self.assertEqual(\n            len(ctx),\n            1\n        )\n        self.assertEqual(\n            len(ctx[0]),\n            2\n        )\n        self.assertEqual(\n            ctx[0][0],\n            {\n                'display_month': 'June',\n                'value': '01/06/2017',\n                'display_year': '2017'\n            }\n        )\n\n        self.assertEqual(\n            ctx[0][1],\n            {\n                'display_month': 'May',\n                'value': '01/05/2017',\n                'display_year': '2017'\n            }\n        )\n\n    @patch(\"infectiousdiseases.reports.datetime\")\n    def test_reports_available_chunking(self, dt):\n\n        # override datetime.date.today\n        class NewDate(datetime.date):\n            @classmethod\n            def today(cls):\n                return cls(2017, 7, 2)\n        dt.date = NewDate\n        some_date = datetime.date(2016, 5, 3)\n        _, e = self.new_patient_and_episode_please()\n        e.end = some_date\n        e.save()\n        e.tagging_set.create(\n            value=\"id_liaison\",\n            archived=True,\n        )\n        ctx = self.report.reports_available\n        self.assertEqual(\n            len(ctx),\n            4\n        )\n        self.assertEqual(\n            len(ctx[3]),\n            2\n        )\n\n    def test_reports_available_none(self):\n        self.assertIsNone(self.report.reports_available)\n", "name": "infectiousdiseases/tests/test_reports.py", "coverage": [1, 1, 1, null, 1, 1, null, 1, null, null, 1, 1, 1, null, 1, 1, 1, 1, null, null, null, 1, null, 1, 1, null, 1, null, null, null, 1, 1, 1, null, null, null, 1, 1, 1, 1, 1, null, null, null, 1, null, null, null, 1, 1, null, 1, null, 1, 1, 1, 1, null, 1, null, null, null, 1, null, 1, 1, 1, 1, 1, null, 1, null, null, null, 1, 1, 1, null, 1, null, null, null, 1, 1, 1, 1, null, null, null, null, null, 1, null, null, null, null, 1, 1, 1, 1, null, null, null, null, 1, 1, 1, null, null, 1, null, null, 1, 1, null, null, 1, 1, null, null, null, null, 1, 1, 1, null, null, 1, null, null, 1, 1, null, null, 1, 1, null, null, null, 1, 1, null, null, null, null, 1, 1, 1, null, null, 1, null, null, 1, 1, null, null, 1, 1, null, null, null, 1, 1, null, null, null, 1, null, null, null, null, 1, 1, null, null, null, null, null, null, null, null, null, 1, 1, 1, null, null, null, null, 1, 1, 1, 1, null, null, null, null, 1, 1, 1, 1, null, null, 1, null, null, 1, null, null, null, null, 1, 1, 1, 1, null, null, null, 1, null, null, null, null, 1, 1, 1, 1, null, null, null, 1, null, null, null, null, 1, 1, 1, 1, null, null, null, 1, null, null, null, null, 1, 1, null, null, null, 1, null, null, null, null, null, null, null, null, null, null, null, null, 1, 1, 1, 1, 1, null, null, null, 1, null, 1, null, 1, null, null, null, 1, 1, 1, null, 1, null, null, null, null, null, null, 1, null, null, null, null, null, null, 1, null, null, null, 1, null, null, 1, null, null, null, 1, null, null, null, 1, null, 1, null, 1, 1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 1, null, null, null, 1, 1, null, 1, 1, 1, 1, 1, 1, 1, null, null, null, 1, 1, null, null, null, 1, null, null, null, 1, null, null, null, null, null, null, null, null, 1, null, null, null, null, null, null, null, null, 1, null, null, null, 1, 1, null, 1, 1, 1, 1, 1, 1, 1, null, null, null, 1, 1, null, null, null, 1, null, null, null, null, 1, 1, null]}, {"source": "\"\"\"\nWardrounds for ID\n\"\"\"\nfrom wardround.wardrounds import WardRound\nfrom opal.models import Episode\nfrom elcid.models import Consultant\n\n\nclass ConsultantReview(WardRound):\n    display_name = \"Consultant review\"\n    description = \"Patients diagnosis review\"\n    filter_template = \"wardrounds/consultant_review_filter.html\"\n    detail_template = 'wardrounds/discharged_detail.html'\n\n    def episodes(self):\n        consultant_name = self.request.GET.get(\"consultant_at_discharge\", None)\n\n        episodes = Episode.objects.exclude(end=None)\n        episodes = episodes.exclude(consultantatdischarge__consultant_fk=None)\n        episodes = episodes.filter(primarydiagnosis__confirmed=False)\n\n        if consultant_name:\n            consultant = Consultant.objects.get(name=consultant_name)\n            episodes = episodes.filter(\n                consultantatdischarge__consultant_fk=consultant.id\n            )\n\n        return episodes.order_by(\"-end\")\n", "name": "infectiousdiseases/wardrounds.py", "coverage": [null, null, null, 1, 1, 1, null, null, 1, 1, 1, 1, 1, null, 1, 1, null, 1, 1, 1, null, 1, 1, 1, null, null, null, 1, null]}, {"source": "", "name": "microhaem/__init__.py", "coverage": [null]}, {"source": "MICROHAEM_CONSULTATIONS = [\n    \"Haematology telephone consult\",\n    \"Haematology ward round consult\",\n]\n\nMICROHAEM_TAG = \"micro_haem\"\nMICROHAEM_ROLE = \"micro_haem\"\n\nONCOLOGY_TAG = \"micro_oncology\"\nMICRO_ADVICE_TAG = \"micro_advice\"\n", "name": "microhaem/constants.py", "coverage": [1, null, null, null, null, 1, 1, null, 1, 1, null]}, {"source": "\"\"\"\nThe custom Micro Haem detail view.\n\"\"\"\nfrom opal.core import detail\nfrom opal.models import UserProfile\n\nclass MicroHaemPatientView(detail.PatientDetailView):\n    order = 1\n    name = 'micro_haem'\n    display_name = 'Micro Haem'\n    template   = 'detail/micro_haem.html'\n\n    @classmethod\n    def visible_to(self, user):\n        return UserProfile.objects.filter(\n            user=user,\n            roles__name='micro_haem'\n        ).count() > 0\n", "name": "microhaem/detail.py", "coverage": [null, null, null, 1, 1, null, 1, 1, 1, 1, 1, null, 1, null, 1, null, null, null, null]}, {"source": "from django.db import models\n\nfrom opal.core.fields import ForeignKeyOrFreeText\nfrom opal.core import lookuplists\n\nfrom opal.models import PatientSubrecord\n\n\nclass HaemChemotherapyType(lookuplists.LookupList):\n    class Meta:\n        verbose_name = \"Chemotherapy type\"\n\n\nclass HaemTransplantType(lookuplists.LookupList):\n    class Meta:\n        verbose_name = \"Transplant Type\"\n\n\nclass HaemInformationType(lookuplists.LookupList):\n    pass\n\n\nclass EpisodeOfNeutropenia(PatientSubrecord):\n    _advanced_searchable = False\n    _icon = 'fa fa-info-circle'\n    _sort = 'start'\n    _title = 'Episode of Neutropenia'\n    start = models.DateField(blank=True, null=True)\n    stop = models.DateField(blank=True, null=True)\n\n    class Meta:\n        ordering = ['-start']\n\n    @property\n    def icon(self):\n        return self._icon\n\n\nclass HaemInformation(PatientSubrecord):\n    _icon = 'fa fa-info-circle'\n    _title = 'Haematology Background Information'\n    _advanced_searchable = False\n\n    patient_type = ForeignKeyOrFreeText(HaemInformationType, verbose_name=\"Type\")\n    date_of_transplant = models.DateField(blank=True, null=True)\n    neutropenia_onset = models.DateField(blank=True, null=True)\n    type_of_transplant = ForeignKeyOrFreeText(HaemTransplantType, verbose_name=\"Transplant Type\")\n    type_of_chemotherapy = ForeignKeyOrFreeText(HaemChemotherapyType, verbose_name=\"Chemotherapy Type\")\n    date_of_chemotherapy = models.DateField(blank=True, null=True)\n    count_recovery = models.DateField(blank=True, null=True)\n    details = models.TextField(blank=True, null=True)\n\n    @property\n    def icon(self):\n        return self._icon\n", "name": "microhaem/models.py", "coverage": [1, null, 1, 1, null, 1, null, null, 1, 1, 1, null, null, 1, 1, 1, null, null, 1, 1, null, null, 1, 1, 1, 1, 1, 1, 1, null, 1, 1, null, 1, null, 0, null, null, 1, 1, 1, 1, null, 1, 1, 1, 1, 1, 1, 1, 1, null, 1, null, 0, null]}, {"source": "from opal.core.pathway import WizardPathway, Step\nfrom opal.utils import AbstractBase\nfrom elcid.models import Diagnosis\nfrom django.db import transaction\nfrom microhaem import constants\n\n\nclass AbstractReferPatientPathway(WizardPathway, AbstractBase):\n    display_name = \"Haem Referral\"\n    icon = \"fa-mail-forward\"\n    finish_button_text = \"Add Patient\"\n\n    steps = (\n        Step(\n            template=\"unused\",\n            step_controller=\"UchFindPatientCtrl\",\n            display_name=\"Find patient\",\n            icon=\"fa fa-user\",\n            base_template=\"pathways/base_steps/find_patient_with_help_text.html\"\n        ),\n        Step(\n            model=Diagnosis,\n            base_template=\"pathways/base_steps/diagnosis.html\"\n        )\n    )\n\n    @transaction.atomic\n    def save(self, data, user=None, episode=None, patient=None):\n        \"\"\"\n            Tags the episode with the tag\n        \"\"\"\n        tagging = data.pop(\"tagging\", [])\n        patient, episode = super(AbstractReferPatientPathway, self).save(\n            data, user=user, episode=episode, patient=patient\n        )\n        tag_names = []\n        tags_to_remove = set()\n        if tagging:\n            tag_names = [n for n, v in list(tagging[0].items()) if v]\n            tags_to_remove = set(\n                n for n, v in list(tagging[0].items()) if not v\n            )\n\n        tag_names = list(episode.get_tag_names(None)) + tag_names\n        tag_names = list(set(tag_names) - tags_to_remove)\n        tag_names.append(self.tag)\n        episode.set_tag_names(tag_names, None)\n\n        return patient, episode\n\n\nclass HaemReferalPathway(AbstractReferPatientPathway):\n    display_name = \"Haem Referral\"\n    slug = 'haem_referrals'\n    tag = constants.MICROHAEM_TAG\n    tag_display = \"Micro Haematology\"\n\n    def redirect_url(self, user=None, patient=None, episode=None):\n        return \"/#/patient/{}/micro_haem\".format(patient.id)\n\n\nclass OncologyReferalPathway(AbstractReferPatientPathway):\n    display_name = \"Oncology Referral\"\n    slug = 'oncology_referrals'\n    tag = constants.ONCOLOGY_TAG\n    tag_display = \"Micro Oncology\"\n\n\nclass MicroAdviceReferalPathway(AbstractReferPatientPathway):\n    display_name = \"Micro Advice Referral\"\n    slug = 'micro_advice_referrals'\n    tag = constants.MICRO_ADVICE_TAG\n    tag_display = \"Micro advice\"\n\n    steps = (\n        Step(\n            template=\"unused\",\n            step_controller=\"UchFindPatientCtrl\",\n            display_name=\"Find patient\",\n            icon=\"fa fa-user\",\n            base_template=\"pathways/base_steps/find_patient_with_help_text.html\"\n        ),\n        Step(\n            model=Diagnosis,\n            base_template=\"pathways/base_steps/diagnosis.html\"\n        ),\n        Step(\n            template=\"unused\",\n            display_name=\"Add to lists\",\n            icon=\"fa fa-tags\",\n            base_template=\"pathways/base_steps/add_to_teams.html\"\n        )\n    )\n", "name": "microhaem/pathways.py", "coverage": [1, 1, 1, 1, 1, null, null, 1, 1, 1, 1, null, 1, null, null, null, null, null, null, null, null, null, null, null, null, null, 1, 1, null, null, null, 1, 1, null, null, 1, 1, 1, 1, 1, null, null, null, 1, 1, 1, 1, null, 1, null, null, 1, 1, 1, 1, 1, null, 1, 1, null, null, 1, 1, 1, 1, 1, null, null, 1, 1, 1, 1, 1, null, 1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]}, {"source": "\"\"\"\nPatient Lists for the Micro service\n\"\"\"\nfrom opal.core import patient_lists\nfrom elcid import models\n\nlist_columns_haem = [\n    models.Demographics,\n    models.Location,\n    models.Diagnosis,\n    models.PastMedicalHistory,\n    models.Antimicrobial,\n    models.MicrobiologyTest,\n    models.MicrobiologyInput,\n]\n\n\nclass AntimicrobialStewardshipList(patient_lists.TaggedPatientList):\n    display_name = 'Antimicrobial Stewardship'\n    direct_add = True\n    tag = \"antimicrobial_stewardship\"\n    schema = list_columns_haem\n    order = 16\n    allow_edit_teams = True\n\n\nclass BacteraemiaReviewList(patient_lists.TaggedPatientList):\n    display_name = 'Bacteraemia Review'\n    direct_add = True\n    tag = \"bacteraemia_review\"\n    schema = list_columns_haem\n    order = 17\n    allow_edit_teams = True\n", "name": "microhaem/patient_lists.py", "coverage": [null, null, null, 1, 1, null, 1, null, null, null, null, null, null, null, null, null, null, 1, 1, 1, 1, 1, 1, 1, null, null, 1, 1, 1, 1, 1, 1, 1, null]}, {"source": "\"\"\"\nPlugin definition for the opat OPAL plugin\n\"\"\"\nfrom opal.core import plugins\n\n\nclass HaemPlugin(plugins.OpalPlugin):\n    \"\"\"\n    Main entrypoint to expose this plugin to our OPAL application.\n    \"\"\"\n    javascripts = {\n        'opal.controllers': [\n            'js/haem/controllers/uch_find_patient.js',\n        ],\n        'haem.referrals': [\n            'js/haem/app.js',\n        ]\n    }\n", "name": "microhaem/plugin.py", "coverage": [null, null, null, 1, null, null, 1, null, null, null, 1, null, null, null, null, null, null, null, null]}, {"source": "\"\"\"\nPackage definition for the opat OPAL plugin\n\"\"\"\n", "name": "opat/__init__.py", "coverage": [null, null, null, null]}, {"source": "\"\"\"\nDischarge summary template for OPAT\n\"\"\"\nfrom dischargesummary import DischargeTemplate\n\nclass OPATDischargeLetter(DischargeTemplate):\n    name = 'opat'\n    template = 'opat_discharge_letter.html'\n    button_display = 'OPAT Letter'\n", "name": "opat/dischargesummaries.py", "coverage": [null, null, null, 1, null, 1, 1, 1, 1, null]}, {"source": "from opal.core import episodes\n\n\nclass OPATEpisode(episodes.EpisodeCategory):\n    display_name            = 'OPAT'\n    detail_template = 'detail/opat2.html'\n", "name": "opat/episode_categories.py", "coverage": [1, null, null, 1, 1, 1, null]}, {"source": "\"\"\"\nModels for opat\n\"\"\"\nfrom django.db import models\nfrom opal.core import lookuplists\nfrom opal.models import EpisodeSubrecord\nimport opal.models as omodels\nfrom opal.core.fields import ForeignKeyOrFreeText\n\n\nclass OPATInfectiveDiagnosis(lookuplists.LookupList):\n    pass\n\n\nclass OPATDressingType(lookuplists.LookupList):\n    pass\n\n\nclass Opat_rvt(lookuplists.LookupList):\n    class Meta:\n        verbose_name = \"OPAT RVT\"\n\n\nclass Unplanned_stop(lookuplists.LookupList):\n    class Meta:\n        verbose_name = \"Unplanned stop\"\n\n\nclass OPATReview(EpisodeSubrecord):\n    _sort = 'datetime'\n    _title = 'OPAT Review'\n    _icon = 'fa fa-comments'\n    _list_limit = 1\n    _angular_service = 'OPATReview'\n\n    datetime                = models.DateTimeField(null=True, blank=True)\n    initials                = models.CharField(max_length=255, blank=True)\n    rv_type                 = ForeignKeyOrFreeText(Opat_rvt)\n    discussion              = models.TextField(blank=True, null=True)\n    opat_plan               = models.TextField(blank=True)\n    next_review             = models.DateField(blank=True, null=True)\n    dressing_changed        = models.NullBooleanField(default=False)\n    bung_changed            = models.NullBooleanField(default=False)\n    medication_administered = models.TextField(blank=True, null=True)\n    adverse_events          = ForeignKeyOrFreeText(omodels.Antimicrobial_adverse_event)\n\n    class Meta:\n        verbose_name = \"OPAT review\"\n\n\nclass OPATOutstandingIssues(EpisodeSubrecord):\n    _title = 'Outstanding Issues'\n    _icon = 'fa fa-th-list'\n    _advanced_searchable = False\n\n    details = models.TextField(blank=True)\n\n    class Meta:\n        verbose_name = \"OPAT outstanding issue\"\n\n\nclass OPATLineAssessment(EpisodeSubrecord):\n    _title = 'OPAT Line Assessment'\n    _icon = 'fa fa-check-square-o'\n    _angular_service = 'OPATLineAssessment'\n\n    line                   = models.CharField(max_length=200, blank=True, null=True)\n    assessment_date        = models.DateField(blank=True, null=True)\n    vip_score              = models.IntegerField(blank=True, null=True)\n    dressing_type          = models.CharField(max_length=200, blank=True, null=True)\n    dressing_change_date   = models.DateField(blank=True, null=True)\n    dressing_change_reason = models.CharField(max_length=200, blank=True, null=True)\n    next_bionector_date    = models.DateField(blank=True, null=True)\n    bionector_change_date  = models.DateField(blank=True, null=True)\n    comments               = models.TextField(blank=True, null=True)\n    dressing_intact        = models.NullBooleanField(default=False)\n    lumen_flush_ok         = models.NullBooleanField(default=False)\n    blood_drawback_seen    = models.NullBooleanField(default=False)\n    cm_from_exit_site      = models.FloatField(default=False)\n\n    class Meta:\n        verbose_name = \"OPAT line assessment\"\n\nclass OPATMeta(EpisodeSubrecord):\n    _clonable = False\n    _title = \"OPAT Episode\"\n\n    review_date           = models.DateField(blank=True, null=True)\n    reason_for_stopping   = models.CharField(max_length=200, blank=True, null=True)\n    unplanned_stop_reason = ForeignKeyOrFreeText(Unplanned_stop)\n    stopping_iv_details   = models.CharField(max_length=200, blank=True, null=True)\n    treatment_outcome     = models.CharField(max_length=200, blank=True, null=True)\n    deceased              = models.NullBooleanField(default=False)\n    death_category        = models.CharField(max_length=200, blank=True, null=True)\n    cause_of_death        = models.CharField(max_length=200, blank=True, null=True)\n    readmitted            = models.NullBooleanField(default=False)\n    readmission_cause     = models.CharField(max_length=200, blank=True, null=True)\n    notes                 = models.TextField(blank=True, null=True)\n\n\n    class Meta:\n        verbose_name = \"OPAT episode\"\n\n\nclass OPATOutcome(EpisodeSubrecord):\n    \"\"\"\n    This captures the final data for an OAPT episode - it is much the\n    same as OPAT meta data, but captured on the ward round and interrogated\n    differently.\n    \"\"\"\n    _title            = \"OPAT Outcome\"\n    _clonable         = False\n\n    outcome_stage         = models.CharField(max_length=200, blank=True, null=True)\n    treatment_outcome     = models.CharField(max_length=200, blank=True, null=True)\n    patient_outcome       = models.CharField(max_length=200, blank=True, null=True)\n    opat_outcome          = models.CharField(max_length=200, blank=True, null=True)\n    deceased              = models.NullBooleanField(default=False)\n    death_category        = models.CharField(max_length=200, blank=True, null=True)\n    cause_of_death        = models.CharField(max_length=200, blank=True, null=True)\n    readmitted            = models.NullBooleanField(default=False)\n    readmission_cause     = models.CharField(max_length=200, blank=True, null=True)\n    notes                 = models.TextField(blank=True, null=True)\n    patient_feedback      = models.NullBooleanField(default=False)\n    infective_diagnosis   = ForeignKeyOrFreeText(OPATInfectiveDiagnosis)\n\n    class Meta:\n        verbose_name = \"OPAT outcome\"\n\n\nclass OPATRejection(EpisodeSubrecord):\n    _clonable = False\n\n    decided_by            = models.CharField(max_length=255, blank=True, null=True)\n    patient_choice        = models.NullBooleanField(default=False)\n    oral_available        = models.NullBooleanField(default=False)\n    not_needed            = models.NullBooleanField(default=False)\n    patient_suitability   = models.NullBooleanField(default=False)\n    not_fit_for_discharge = models.NullBooleanField(default=False)\n    non_complex_infection = models.NullBooleanField(default=False)\n    no_social_support     = models.NullBooleanField(default=False)\n    reason                = models.CharField(max_length=255, blank=True, null=True)\n    date                  = models.DateField(blank=True, null=True)\n\n    class Meta:\n        verbose_name = \"OPAT rejection\"\n", "name": "opat/models.py", "coverage": [null, null, null, 1, 1, 1, 1, 1, null, null, 1, 1, null, null, 1, 1, null, null, 1, 1, 1, null, null, 1, 1, 1, null, null, 1, 1, 1, 1, 1, 1, null, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, null, 1, 1, null, null, 1, 1, 1, 1, null, 1, null, 1, 1, null, null, 1, 1, 1, 1, null, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, null, 1, 1, null, 1, 1, 1, null, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, null, null, 1, 1, null, null, 1, null, null, null, null, null, 1, 1, null, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, null, 1, 1, null, null, 1, 1, null, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, null, 1, 1, null]}, {"source": "\"\"\"\nPatient Lists for the OPAT service\n\"\"\"\nfrom opal.core import patient_lists\nfrom opat import models as opat_models\nfrom elcid import models\n\nlist_columns_opat = [\n    models.Demographics,\n    models.Location,\n    models.Diagnosis,\n    models.PastMedicalHistory,\n    models.Antimicrobial,\n    models.MicrobiologyTest,\n    opat_models.OPATReview,\n    models.Line,\n    opat_models.OPATOutstandingIssues,\n]\n\n\nclass OPATReferral(patient_lists.TaggedPatientList):\n    display_name = 'OPAT Referrals'\n    direct_add = False\n    tag = \"opat\"\n    subtag = \"opat_referrals\"\n    schema = list_columns_opat\n    order = 8\n    allow_edit_teams = False\n\n\nclass OPATFollowUp(patient_lists.TaggedPatientList):\n    display_name = 'OPAT Follow up'\n    direct_add = False\n    tag = \"opat\"\n    subtag = \"opat_followup\"\n    schema = list_columns_opat\n    order = 10\n    allow_edit_teams = False\n\n\nclass OPATCurrent(patient_lists.TaggedPatientList):\n    display_name = 'OPAT Current'\n    direct_add = False\n    tag = \"opat\"\n    subtag = \"opat_current\"\n    schema = list_columns_opat\n    order = 9\n    allow_edit_teams = False\n\n\nclass OPATListGroup(patient_lists.TabbedPatientListGroup):\n    member_lists = [\n        OPATReferral,\n        OPATCurrent,\n        OPATFollowUp,\n    ]\n", "name": "opat/patient_lists.py", "coverage": [null, null, null, 1, 1, 1, null, 1, null, null, null, null, null, null, null, null, null, null, null, null, 1, 1, 1, 1, 1, 1, 1, 1, null, null, 1, 1, 1, 1, 1, 1, 1, 1, null, null, 1, 1, 1, 1, 1, 1, 1, 1, null, null, 1, 1, null, null, null, null, null]}, {"source": "\"\"\"\nPlugin definition for the opat OPAL plugin\n\"\"\"\nfrom opal.core import plugins\nfrom opat.urls import urlpatterns\n\n\nclass OpatPlugin(plugins.OpalPlugin):\n    \"\"\"\n    Main entrypoint to expose this plugin to our OPAL application.\n    \"\"\"\n    urls = urlpatterns\n    javascripts = {\n        'opal.controllers': [\n            'js/opat/controllers/opat_referral.js',\n            'js/opat/controllers/opat_discharge.js'\n        ],\n        'opal.opat': [\n            # 'js/opat/app.js',\n            # 'js/opat/controllers/larry.js',\n            # 'js/opat/services/larry.js',\n        ]\n    }\n    actions = (\n        'actions/next_stage.html',\n        'actions/opat_discharge_summary.html'\n    )\n\n    def restricted_teams(self, user):\n        \"\"\"\n        Return any restricted teams for particualr users that our\n        plugin may define.\n        \"\"\"\n        return []\n\n    def flows(self):\n        \"\"\"\n        Return any custom flows that our plugin may define\n        \"\"\"\n        flows = {\n            'enter': {\n                'controller': 'OPATReferralCtrl',\n                'template'  : '/opat/templates/modals/opat_referral.html/'\n            },\n            'exit': {\n                'controller': 'OPATDischargeCtrl',\n                'template'  : '/opat/templates/modals/discharge_opat_episode.html/'\n            }\n        }\n        return {\n            'opat': {\n                'default': flows\n            },\n            'OPAT': flows\n        }\n\n", "name": "opat/plugin.py", "coverage": [null, null, null, 1, 1, null, null, 1, null, null, null, 1, 1, null, null, null, null, null, null, null, null, null, null, 1, null, null, null, null, 1, null, null, null, null, 0, null, 1, null, null, null, 1, null, null, null, null, null, null, null, null, null, 1, null, null, null, null, null, null, null]}, {"source": "\"\"\"\nUrls for the opat OPAL plugin\n\"\"\"\nfrom django.conf.urls import url\n\nfrom opat import views\n\nurlpatterns = [\n    url(r'^opat/templates/modals/discharge_opat_episode.html/?$',\n        views.DischargeOpatEpisodeTemplateView.as_view()),\n    url(r'^opat/templates/modals/opat_referral.html/?$',\n        views.OpatReferralTemplateView.as_view()),\n    url(r'^opat/templates/modals/add_episode.html/?$',\n        views.OpatAddEpisodeTemplateView.as_view()),\n]\n", "name": "opat/urls.py", "coverage": [null, null, null, 1, null, 1, null, 1, null, null, null, null, null, null, null, null]}, {"source": "\"\"\"\nViews for the opat OPAL Plugin\n\"\"\"\nfrom django.views.generic import TemplateView\nfrom django.contrib.auth.mixins import LoginRequiredMixin\n\n\nclass DischargeOpatEpisodeTemplateView(LoginRequiredMixin, TemplateView):\n    template_name = 'discharge_opat_episode_modal.html'\n\n\nclass OpatReferralTemplateView(LoginRequiredMixin, TemplateView):\n    template_name = 'opat_referral_modal.html'\n\n\nclass OpatAddEpisodeTemplateView(LoginRequiredMixin, TemplateView):\n    template_name = 'opat/add_episode_modal.html'\n", "name": "opat/views.py", "coverage": [null, null, null, 1, 1, null, null, 1, 1, null, null, 1, 1, null, null, 1, 1, null]}, {"source": "from wardround.wardrounds import WardRound\nfrom datetime import datetime, date\nfrom opat import models\nfrom opal.models import Episode\n\n\nclass OPATReviewList(WardRound):\n    display_name = 'OPAT Review'\n    description  = 'Final review of OPAT patients post end-of-treatment'\n\n    def episodes(self):\n        review_ready = models.OPATMeta.objects.filter(review_date__lte=date.today())\n        in_round = set()\n        for om in review_ready:\n            if om.episode.opatoutcome_set.filter(outcome_stage='OPAT Review').count() == 0:\n                in_round.add(om.episode.id)\n        return Episode.objects.filter(id__in=in_round)\n\n    detail_template = 'wardrounds/opat_detail.html'\n\n\nclass OPATCurrentList(WardRound):\n    display_name = 'OPAT Current'\n    description  = 'All patients on the OPAT current list'\n\n    def episodes(self):\n        return Episode.objects.filter(active=True,\n                                      tagging__value='opat_current',\n                                      tagging__archived=False)\n", "name": "opat/wardrounds.py", "coverage": [1, 1, 1, 1, null, null, 1, 1, 1, null, 1, 1, 1, 1, 1, 1, 1, null, 1, null, null, 1, 1, 1, null, 1, 1, null, null, null]}, {"source": "\"\"\"\nPackage definition\n\"\"\"\n", "name": "walkin/__init__.py", "coverage": [null, null, null, null]}, {"source": "\"\"\"\nDischarge summary template for Walkin\n\"\"\"\nfrom dischargesummary import DischargeTemplate\n\nclass WalkinDoctorDischargeLetter(DischargeTemplate):\n    name = 'walkindoctor'\n    template = 'walkin_discharge_letter.html'\n    button_display = 'Clinic Letter'\n\n\nclass WalkinNurseDischargeLetter(DischargeTemplate):\n    name = 'walkinnurse'\n    template = 'walkin_nurse_discharge_letter.html'\n    button_display = 'Nurse Clinic Letter'\n", "name": "walkin/dischargesummaries.py", "coverage": [null, null, null, 1, null, 1, 1, 1, 1, null, null, 1, 1, 1, 1, null]}, {"source": "from opal.core import episodes\n\n\nclass WalkinEpisode(episodes.EpisodeCategory):\n    display_name = 'Walkin'\n    detail_template = 'detail/walkin.html'\n", "name": "walkin/episode_categories.py", "coverage": [1, null, null, 1, 1, 1, null]}, {"source": "", "name": "walkin/management/__init__.py", "coverage": [null]}, {"source": "", "name": "walkin/management/commands/__init__.py", "coverage": [null]}, {"source": "from django.core.management.base import BaseCommand\nfrom elcid import models as emodels\nfrom walkin import models as wmodels\n\n\nclass Command(BaseCommand):\n\n    def handle(self, *args, **options):\n        wsymptoms = wmodels.Symptom.objects.all()\n\n        for wsymptom in wsymptoms:\n            elcid_pc = emodels.PresentingComplaint.objects.create(\n                created=wsymptom.created,\n                updated=wsymptom.updated,\n                created_by=wsymptom.created_by,\n                updated_by=wsymptom.updated_by,\n                consistency_token=wsymptom.consistency_token,\n                details=wsymptom.details,\n                duration=wsymptom.duration,\n                onset=wsymptom.onset,\n                episode_id=wsymptom.episode_id,\n                symptom_fk_id=wsymptom.symptom_fk_id,\n                symptom_ft=wsymptom.symptom_ft,\n            )\n            elcid_pc.symptoms.add(*wsymptom.symptoms.all())\n", "name": "walkin/management/commands/move_symptoms_to_presentingcomplaints.py", "coverage": [1, 1, 1, null, null, 1, null, 1, 1, null, 1, 1, null, null, null, null, null, null, null, null, null, null, null, null, 1, null]}, {"source": "\"\"\"\nModels for the OPAL Walkin clinic plugin\n\"\"\"\nfrom django.db import models\n\nfrom opal import models as omodels\nfrom opal.core import lookuplists\nfrom opal.core.fields import ForeignKeyOrFreeText\n\nclass Management_follow_up(lookuplists.LookupList):\n    class Meta:\n        verbose_name = \"Management follow up\"\n\n\nclass Management_clinics(lookuplists.LookupList):\n    class Meta:\n        verbose_name = \"Management clinics\"\n        verbose_name_plural = \"Management clinics\"\n\n\nclass Wi_nurse_reason(lookuplists.LookupList):\n    class Meta:\n        verbose_name = \"Walkin nurse reason\"\n\n\nclass Findings_rash_type(lookuplists.LookupList):\n    class Meta:\n        verbose_name = \"Findings rash type\"\n\n\nclass Findings_rash_distribution(lookuplists.LookupList):\n    class Meta:\n        verbose_name = \"Findings rash distribution\"\n\n\nclass Symptom(omodels.EpisodeSubrecord):\n    _title = 'Symptoms'\n    _icon = 'fa fa-stethoscope'\n    HELP_DURATION = \"The duration for which the patient had been experiencing \\\nthese symptoms when recorded.\"\n\n    symptoms = models.ManyToManyField(\n        omodels.Symptom, related_name=\"walkin_symptoms\"\n    )\n    duration = models.CharField(\n        max_length=255, blank=True, null=True,\n        help_text=HELP_DURATION\n    )\n    details = models.TextField(blank=True, null=True)\n\n    # deprecated fields 9/11/2015\n    onset = models.CharField(max_length=255, blank=True, null=True)\n    symptom = ForeignKeyOrFreeText(omodels.Symptom)\n\n    @classmethod\n    def _get_fieldnames_to_serialize(cls):\n        field_names = super(Symptom, cls)._get_fieldnames_to_serialize()\n        removed_fields = {u'symptom_fk_id', 'symptom_ft', 'symptom', 'onset'}\n        field_names = [i for i in field_names if i not in removed_fields]\n        return field_names\n\n    def set_symptom(self, *args, **kwargs):\n        # ignore symptom for the time being\n        pass\n\n\nclass ClinicalFindings(omodels.EpisodeSubrecord):\n    _title        = 'Clinical Findings'\n    _icon         = 'fa fa-stethoscope'\n\n    lymphadenopathy         = models.CharField(\n        max_length=20, blank=True, null=True\n    )\n    lymphadenopathy_details = models.CharField(\n        max_length=255, blank=True, null=True\n    )\n    jaundice                = models.CharField(max_length=20, blank=True)\n    dehydrated              = models.CharField(max_length=20, blank=True)\n\n    rash                    = models.CharField(max_length=20, blank=True)\n    rash_type               = ForeignKeyOrFreeText(Findings_rash_type)\n    rash_distribution       = ForeignKeyOrFreeText(Findings_rash_distribution)\n\n    cardiovascular          = models.CharField(\n        max_length=255, blank=True, null=True\n    )\n\n    respiratory             = models.CharField(\n        max_length=255, blank=True, null=True\n    )\n    abdominal               = models.CharField(\n        max_length=255, blank=True, null=True\n    )\n    oropharnyx              = models.CharField(\n        max_length=255, blank=True, null=True\n    )\n    neurological            = models.CharField(\n        max_length=255, blank=True, null=True\n    )\n    other_findings          = models.CharField(\n        max_length=255, blank=True, null=True\n    )\n\n\nclass Management(omodels.EpisodeSubrecord):\n    _is_singleton = True\n    _icon = 'fa fa-list-ol'\n    _title = 'Walkin Management'\n\n    follow_up           = ForeignKeyOrFreeText(Management_follow_up)\n    follow_up_clinic    = ForeignKeyOrFreeText(Management_clinics)\n    date_of_appointment = models.DateField(null=True, blank=True)\n    advice              = models.CharField(\n        max_length=255, blank=True, null=True\n    )\n    results_actioned    = models.CharField(\n        max_length=255, blank=True, null=True\n    )\n\n    def __unicode__(self):\n        return u'Management: {0}'.format(self.id)\n\n\nclass WalkinNurseLedCare(omodels.EpisodeSubrecord):\n    _icon  = 'fa fa-user-md'\n    _title = 'Nurse led care'\n\n    reason    = ForeignKeyOrFreeText(Wi_nurse_reason)\n    treatment = models.TextField(blank=True, null=True)\n\n\nclass ZikaPathway(omodels.EpisodeSubrecord):\n    # this model is no longer used in the application UI\n    # it's been left as there is still Zika data in the DB\n    _icon = 'fa fa-warning'\n    _advanced_searchable = False\n\n    pregnant           = models.BooleanField(default=False)\n    gestation          = models.CharField(max_length=255, blank=True, null=True)\n    due_date           = models.DateField(blank=True, null=True)\n    antenatal_hospital = models.CharField(max_length=255, blank=True, null=True)\n    yellow_fever       = models.CharField(max_length=255, blank=True, null=True)\n    date_leaving       = models.DateField(blank=True, null=True)\n    advice             = models.TextField(blank=True, null=True)\n    follow_up          = models.TextField(blank=True, null=True)\n", "name": "walkin/models.py", "coverage": [null, null, null, 1, null, 1, 1, 1, null, 1, 1, 1, null, null, 1, 1, 1, 1, null, null, 1, 1, 1, null, null, 1, 1, 1, null, null, 1, 1, 1, null, null, 1, 1, 1, 1, null, null, 1, null, null, 1, null, null, null, 1, null, null, 1, 1, null, 1, null, 0, 0, 0, 0, null, 1, null, 0, null, null, 1, 1, 1, null, 1, null, null, 1, null, null, 1, 1, null, 1, 1, 1, null, 1, null, null, null, 1, null, null, 1, null, null, 1, null, null, 1, null, null, 1, null, null, null, null, 1, 1, 1, 1, null, 1, 1, 1, 1, null, null, 1, null, null, null, null, null, null, null, 1, 1, 1, null, 1, 1, null, null, 1, null, null, 1, 1, null, 1, 1, 1, 1, 1, 1, 1, 1, null]}, {"source": "\"\"\"\nPatient Lists for the Walkin service\n\"\"\"\nfrom obs import models as obsmodels\nfrom opal.core import patient_lists\n\nfrom elcid import models\n\nfrom walkin import models as wimodels\n\n# defined separately in order to be able to override title of column to Symptoms\npresenting_complaint_column = patient_lists.Column(\n    name=models.PresentingComplaint.get_api_name(),\n    title=\"Symptoms\",\n    singleton=models.PresentingComplaint._is_singleton,\n    icon=getattr(models.PresentingComplaint, '_icon', ''),\n    limit=getattr(models.PresentingComplaint, '_list_limit', None),\n    template_path=\"records/walkin/presenting_complaint.html\",\n    detail_template_path=\"records/walkin/presenting_complaint.html\",\n)\n\nclass WalkinDoctor(patient_lists.TaggedPatientList):\n    display_name = 'Walkin Doctor'\n    direct_add = False\n    tag = \"walkin\"\n    subtag = \"walkin_doctor\"\n    order = 12\n    allow_edit_teams = False\n    schema = [\n        models.Demographics,\n        models.Location,\n        models.Travel,\n        presenting_complaint_column,\n        wimodels.ClinicalFindings,\n        models.MicrobiologyTest,\n        models.Diagnosis,\n        obsmodels.Observation,\n        models.Antimicrobial,\n        models.MicrobiologyInput\n    ]\n\n\nclass WalkinNurseTriage(patient_lists.TaggedPatientList):\n    display_name = 'Walkin Nurse Triage'\n    direct_add = False\n    tag = \"walkin\"\n    subtag = \"walkin_triage\"\n    order = 11\n    allow_edit_teams = False\n    schema = [\n        models.Demographics,\n        models.Location,\n        models.Allergies,\n        models.Travel,\n        presenting_complaint_column,\n        models.MicrobiologyTest,\n        obsmodels.Observation,\n    ]\n\n\nclass WalkinReview(patient_lists.TaggedPatientList):\n    display_name = 'Walkin Review'\n    direct_add = False\n    tag = \"walkin\"\n    subtag = \"walkin_review\"\n    order = 13\n    allow_edit_teams = False\n    schema = [\n        models.Demographics,\n        models.Location,\n        models.Travel,\n        presenting_complaint_column,\n        wimodels.ClinicalFindings,\n        models.MicrobiologyTest,\n        models.Diagnosis,\n        models.Antimicrobial,\n        models.MicrobiologyInput,\n        wimodels.Management\n    ]\n\nclass WalkinListGroup(patient_lists.TabbedPatientListGroup):\n    member_lists = [\n        WalkinNurseTriage,\n        WalkinDoctor,\n        WalkinReview\n    ]\n", "name": "walkin/patient_lists.py", "coverage": [null, null, null, 1, 1, null, 1, null, 1, null, null, 1, null, null, null, null, null, null, null, null, null, 1, 1, 1, 1, 1, 1, 1, 1, null, null, null, null, null, null, null, null, null, null, null, null, null, 1, 1, 1, 1, 1, 1, 1, 1, null, null, null, null, null, null, null, null, null, null, 1, 1, 1, 1, 1, 1, 1, 1, null, null, null, null, null, null, null, null, null, null, null, null, 1, 1, null, null, null, null, null]}, {"source": "\"\"\"\nPlugin definition\n\"\"\"\nfrom opal.core import plugins\n\nfrom walkin.urls import urlpatterns\n\n\nclass WalkinPlugin(plugins.OpalPlugin):\n    urls = urlpatterns\n    javascripts = {\n        'opal.controllers': [\n            'js/walkin/controllers/walkin_hospital_number.js',\n            'js/walkin/controllers/walkin_discharge.js',\n            'js/walkin/controllers/nurse_investigation.js',\n        ]\n    }\n    actions = [\n        'actions/walkin_next.html',\n        'actions/nurse_investigations.html',\n        'actions/discharge_summary.html',\n    ]\n", "name": "walkin/plugin.py", "coverage": [null, null, null, 1, null, 1, null, null, 1, 1, 1, null, null, null, null, null, null, 1, null, null, null, null, null]}, {"source": "\"\"\"\nUrls for the OPAL Walk In plugin\n\"\"\"\nfrom django.conf.urls import url\nfrom django.views.generic import TemplateView\n\nfrom walkin import views\n\nurlpatterns = [\n    url('^templates/modals/discharge_walkin_episode.html/?$',\n        views.DischargeWalkinEpisodeTemplateView.as_view()),\n    url('^templates/modals/add_walkin_episode.html/?$',\n        TemplateView.as_view(template_name='add_walkin_episode_modal.html')),\n    url('^walkin/modals/nurse_investigations.html$',\n        TemplateView.as_view(template_name='modals/nurse_investigations.html')),\n]\n", "name": "walkin/urls.py", "coverage": [null, null, null, 1, 1, null, 1, null, 1, null, null, null, null, null, null, null, null]}, {"source": "\"\"\"\nViews for the OPAL walkin plugin\n\"\"\"\nfrom django.views.generic import TemplateView\nfrom django.contrib.auth.mixins import LoginRequiredMixin\n\nfrom opal import models\n\nclass DischargeWalkinEpisodeTemplateView(LoginRequiredMixin, TemplateView):\n    template_name = 'discharge_walkin_episode.html'\n", "name": "walkin/views.py", "coverage": [null, null, null, 1, 1, null, 1, null, 1, 1, null]}, {"source": "var app = angular.module('opal');\napp.config(\n    ['$routeProvider',\n     function($routeProvider){\n\t     $routeProvider.when('/',  {redirectTo: '/list/'})\n     }]);\n", "name": "elcid/assets/js/elcid/routes.js", "coverage": [1, 1, null, null, 19, null]}, {"source": "angular.module('opal.controllers').controller(\n    'ClinicalAdviceForm',\n    function(\n        $rootScope, $scope, $window,\n            recordLoader, ngProgressLite,\n            $cookies, Referencedata\n            ){\n        \"use strict\";\n\n        var REASON_FOR_INTERACTION_COOKIE = \"patientNotes-reasonForInteraction\";\n        var DISCUSSED_WITH_COOKIE = \"patientNotes-discussedWith\";\n\n        /*\n        * expects an episode to exist on the scope\n        */\n        function getCopy(item){\n            var copy = item.makeCopy();\n            var defaults = {\n                reason_for_interaction: $cookies.get(REASON_FOR_INTERACTION_COOKIE),\n                discussed_with: $cookies.get(DISCUSSED_WITH_COOKIE)\n            };\n\n            return _.extend(copy, defaults);\n        }\n\n        var self = this;\n\n        Referencedata.load().then(function(referencedata){\n          _.extend(self, referencedata.toLookuplists());\n        });\n\n        recordLoader.load().then(function(){\n            var item = $scope.episode.newItem(\"microbiology_input\", {column: $rootScope.fields.microbiology_input});\n            self.editing = getCopy(item);\n\n            self.save = function(){\n              ngProgressLite.set(0);\n              ngProgressLite.start();\n              $cookies.put(REASON_FOR_INTERACTION_COOKIE, self.editing.reason_for_interaction || \"\");\n              $cookies.put(DISCUSSED_WITH_COOKIE, self.editing.discussed_with || \"\");\n              item.save(self.editing).then(function() {\n                  ngProgressLite.done();\n                  item = $scope.episode.newItem('microbiology_input', {column: $rootScope.fields.microbiology_input});\n                  self.editing = getCopy(item);\n              });\n            };\n        });\n    }\n );\n", "branches": [39, 1, 0, 1, 39, 1, 1, 0, 40, 2, 0, 1, 40, 2, 1, 0], "name": "elcid/assets/js/elcid/controllers/clinical_advice_form.js", "coverage": [1, null, null, null, null, null, null, null, null, 3, 3, null, null, null, null, 1, 4, 4, null, null, null, null, 4, null, null, 3, null, 3, 3, null, null, 3, 3, 3, null, 3, 1, 1, 1, 1, 1, 1, 1, 1, null, null, null, null, null]}, {"source": "/*\n* is a patient is currently on the list, give the option to discharge\n*/\nangular.module('opal.controllers').controller('ConfirmDischargeCtrl', function(\n  $scope, $modal, $modalInstance, DischargePatientService,\n  patient, episode, tags, context, nextStepController\n){\n    $scope.newPatient = function(patient){\n        // There is no patient with this hospital number\n        // Show user the form for creating a new episode,\n        // with the hospital number pre-populated\n        modal = $modal.open({\n            backdrop: 'static',\n            templateUrl: '/templates/modals/add_episode.html',\n            controller: nextStepController,\n            size: 'lg',\n            resolve: {\n                referencedata: function(Referencedata) { return Referencedata.load(); },\n                demographics: function() {\n                    return patient.demographics[0];\n                },\n                tags: function(){ return tags; }\n            }\n        }).result.then(function(patient) {\n            // The user has created the episode, or cancelled\n            if(patient.then){\n                patient.then(function(r){\n                  $modalInstance.close(r);\n                });\n            }else{\n                $modalInstance.close(patient);\n            }\n        });\n    };\n  var demographics = patient.demographics[0];\n  $scope.patientName = demographics.first_name + \" \" + demographics.surname;\n\n   $scope.confirm = function(){\n     var dischargePatientService = new DischargePatientService();\n     dischargePatientService.discharge(episode, {category: \"Discharged\"}, tags).then(function(){\n       context.removeFromList(episode.id);\n       $scope.newPatient(patient);\n     });\n   };\n\n   $scope.cancel = function(){\n     $modalInstance.close();\n   };\n});\n", "branches": [26, 1, 0, 1, 26, 1, 1, 2], "name": "elcid/assets/js/elcid/controllers/confirm_discharge.js", "coverage": [null, null, null, 1, null, null, null, 5, null, null, null, 3, null, null, null, null, null, 1, null, 0, null, 0, null, null, null, 3, 1, 1, null, null, 2, null, null, null, 5, 5, null, 5, 1, 1, 1, 1, null, null, null, 5, 0, null, null]}, {"source": "angular.module('opal.controllers')\n.controller('DiagnosisAddEpisodeCtrl', function($scope, $http, $q,\n  $timeout, $modal,\n  $modalInstance, Episode,\n  referencedata,\n  tags, demographics) {\n    var DATE_FORMAT = 'DD/MM/YYYY';\n\n    _.extend($scope, referencedata.toLookuplists());\n\n    // TODO - this is no longer the way location/admission date works.\n    $scope.editing = {\n      tagging: {},\n      location: {\n        hospital: 'UCH'\n      },\n      demographics: demographics,\n    };\n\n    if(tags.tag){\n      $scope.editing.tagging[tags.tag] = true;\n    }\n\n    if(tags.subtag){\n      $scope.editing.tagging[tags.subtag] = true;\n    }\n\n    $scope.save = function() {\n      var dob, doa;\n\n      // This is a bit mucky but will do for now\n      doa = $scope.editing.start;\n      if (doa) {\n        if(!angular.isString(doa)){\n          doa = moment(doa).format(DATE_FORMAT);\n        }\n        $scope.editing.start = doa;\n      }\n\n      dob = $scope.editing.demographics.date_of_birth;\n      if (dob) {\n        if(!angular.isString(dob)){\n          dob = moment(dob).format(DATE_FORMAT);\n        }\n      }\n      $scope.editing.demographics.date_of_birth = dob;\n\n      $http.post('/api/v0.1/episode/', $scope.editing).success(function(episode) {\n        $scope.episode = new Episode(episode);\n        $scope.presenting_complaint();\n      });\n    };\n\n    $scope.presenting_complaint = function() {\n      var deferred = $q.defer();\n      $modalInstance.close(deferred.promise);\n\n      var item = $scope.episode.newItem('presenting_complaint');\n      $scope.episode.presenting_complaint[0] = item;\n      modal = $modal.open({\n        templateUrl: '/templates/modals/presenting_complaint.html/',\n        controller: 'EditItemCtrl',\n        resolve: {\n          item: function() { return item; },\n          referencedata: function() { return referencedata; },\n          metadata: function(Metadata) { return Metadata.load() },\n          episode: function() { return $scope.episode; },\n          profile: function(UserProfile) { return UserProfile.load() }\n        }\n      }).result.then(\n        function(){deferred.resolve($scope.episode)},\n        function(){deferred.resolve($scope.episode)}\n      );\n    };\n\n    $scope.cancel = function() {\n      $modalInstance.close(null);\n    };\n\n  });\n", "branches": [20, 1, 0, 6, 20, 1, 1, 0, 24, 2, 0, 6, 24, 2, 1, 0, 33, 3, 0, 1, 33, 3, 1, 0, 34, 4, 0, 0, 34, 4, 1, 1, 41, 5, 0, 1, 41, 5, 1, 0, 42, 6, 0, 0, 42, 6, 1, 1], "name": "elcid/assets/js/elcid/controllers/diagnosis_add_episode.js", "coverage": [1, null, null, null, null, null, 6, null, 6, null, null, 6, null, null, null, null, null, null, null, 6, 6, null, null, 6, 6, null, null, 6, 1, null, null, 1, 1, 1, 0, null, 1, null, null, 1, 1, 1, 0, null, null, 1, null, 1, 1, 1, null, null, null, 6, 5, 5, null, 5, 5, 5, null, null, null, 0, 1, 1, 0, 1, null, null, 5, 0, null, null, null, 6, 1, null, null, null]}, {"source": "//\n// This is the controller for elCID episodes that have a\n// presenting complaint/final diagnosis pair.\n//\n// We do the standard discharge, then ask some more questions.\n//\ncontrollers.controller(\n    'DiagnosisDischargeCtrl',\n    function(\n        $scope, $rootScope, $modalInstance, $modal, $q,\n        $location,\n        growl,\n        Flow,\n        tags, referencedata, episode, DischargePatientService){\n\n        $scope.tags = tags;\n        $scope.episode = episode;\n\n        $scope.steps = [\n          \"diagnosis\"\n        ];\n\n        $scope.steps_details = {\n            discharge: {\n                icon: \"fa fa-home\",\n                display_name: \"Discharge\",\n                subtitle: undefined,\n                done: false\n            },\n            diagnosis: {\n                icon: \"fa fa-stethoscope\",\n                display_name: \"Diagnosis\",\n                subtitle: undefined,\n                status: 'disabled',\n                done: false\n            },\n            presenting_complaint: {\n                icon: \"fa fa-heartbeat\",\n                display_name: \"Presenting Complaint\",\n                subtitle: \"Please enter one or more symptoms\",\n                done: false\n            },\n            antimicrobial: {\n                icon: \"fa fa-flask\",\n                display_name: \"Antimicrobial\",\n                subtitle: \"Please enter the <strong>drug name</strong> and the <strong>start and end dates</strong> or state that the patient was <strong>not on antimicrobials</strong>.\",\n                done: false\n            },\n            travel: {\n                icon: \"fa fa-plane\",\n                display_name: \"Travel\",\n                subtitle: \"Please enter a <strong>travel destination</strong> and <strong>dates</strong>, or state that the patient <strong>did not travel</strong>.\",\n                done: false\n            },\n            consultant_at_discharge: {\n                icon: \"fa fa-user-md\",\n                display_name: \"Consultant At Discharge\",\n                subtitle: \"Please record the <strong>consultant</strong> at discharge.\",\n                done: false\n            }\n        };\n\n\n        var dischargePatientService = new DischargePatientService();\n\n        /*\n        * a multi step model that acts a bit like a form controller for travel and\n        * antimicrobial\n        */\n        var MultiStep = function(requiredFields, negationField, editing, episode, columnName){\n            this.none = false;\n            this.warning = false;\n\n            this.remove = function(index){\n              editing[columnName].splice(index, 1);\n            };\n\n            this.getRequiredFields = function(antimicrobial){\n                return _.map(requiredFields, function(r){\n                    return antimicrobial[r];\n                });\n            };\n\n            this.newItem = function(){\n                return _.reduce(this.requiredFields, function(o, f){\n                    o[f] = undefined;\n                    return o;\n                }, {});\n            };\n\n            this.pristine = function(antimicrobial){\n              return !_.some(this.getRequiredFields(antimicrobial));\n            };\n\n            this.clear = function(){\n              if(this.none){\n                editing[columnName] = [this.newItem()];\n                editing[columnName][0][negationField] = true;\n              }\n              this.warning = false;\n            };\n\n            this.validate = function(antimicrobial){\n              var requiredAll = this.getRequiredFields(antimicrobial);\n              return _.every(requiredAll) || this.none;\n            };\n\n            // validates a whole step, e.g. all of the antimicrobial\n            this.validateStep = function(){\n              var toReview = $scope.editing[columnName];\n\n              // if there's just an empty form at the end, lets ignore that\n              if(toReview > 1){\n                  if(this.pristine(toReview)){\n                      toReview = _.first(toReview, toReview.length-1);\n                  }\n              }\n\n              var invalidModels = _.filter(toReview, function(a){\n                  return !this.validate(a);\n              }, this);\n\n              if(invalidModels.length){\n                this.warning = true;\n                return false;\n              }\n\n              return true;\n            };\n\n            this.addAnother = function(model){\n                if(!this.validate(model)){\n                    this.warning=true;\n                }\n                else{\n                    if(!this.none){\n                        model.submitted=true;\n                        var newModel = this.newItem();\n                        editing[columnName].push(newModel);\n                    }\n                }\n            };\n\n            this.reset = function(){\n                this.warning = false;\n            };\n\n            this.save = function(){\n              saves = [];\n\n              _.each($scope.editing[columnName], function(editingItem){\n                  delete editingItem.submitted;\n                  delete editingItem.id;\n                  if(!this.pristine(editingItem) || editingItem[negationField]){\n                    episodeItem = $scope.episode.newItem(columnName);\n                    saves.push(episodeItem.save(editingItem));\n                  }\n              }, this);\n\n              return saves;\n            };\n        };\n\n        $scope.currentCategory = episode.location[0].category;\n\n        $scope.editing = dischargePatientService.getEditing(episode);\n\n        if(!$scope.episode.presenting_complaint.length ||\n           !$scope.episode.presenting_complaint[0].symptoms ||\n           !$scope.episode.presenting_complaint[0].symptoms.length\n         ){\n           var presenting_complaint;\n\n           if(!$scope.episode.presenting_complaint.length){\n              presenting_complaint = $scope.episode.newItem('presenting_complaint');\n           }\n           else{\n              presenting_complaint = $scope.episode.presenting_complaint[0];\n           }\n\n            $scope.episode.presenting_complaint = [presenting_complaint];\n            $scope.editing.presenting_complaint = presenting_complaint.makeCopy();\n            $scope.editing.presenting_complaint.symptoms =[];\n            $scope.steps.unshift(\"presenting_complaint\");\n        }\n\n        if(!$scope.episode.antimicrobial.length){\n            $scope.antimicrobialStep = new MultiStep(\n                [\"drug\", \"start_date\", \"end_date\"],\n                \"no_antimicrobials\",\n                $scope.editing,\n                $scope.episode,\n                \"antimicrobial\"\n            );\n            $scope.editing.antimicrobial = [$scope.antimicrobialStep.newItem()];\n            $scope.steps.push(\"antimicrobial\");\n        }\n\n        if(!$scope.episode.travel.length){\n            $scope.travelStep = new MultiStep(\n                [\"dates\", \"destination\"],\n                \"did_not_travel\",\n                $scope.editing,\n                $scope.episode,\n                \"travel\"\n            );\n\n            $scope.editing.travel = [$scope.travelStep.newItem()];\n\n            $scope.steps.push(\"travel\");\n        }\n\n        $scope.editing.primary_diagnosis = $scope.episode.primary_diagnosis[0].makeCopy();\n\n        if($scope.is_list_view || !episode.isDischarged()){\n            $scope.steps.push(\"discharge\");\n        }\n\n        if($scope.episode.primary_diagnosis.length === 0){\n            var primary = $scope.episode.newItem('primary_diagnosis');\n            $scope.episode.primary_diagnosis[0] = primary;\n        }\n\n        if(!$scope.episode.consultant_at_discharge[0].consultant){\n            $scope.editing.consultant_at_discharge = $scope.episode.consultant_at_discharge[0].makeCopy();\n            $scope.steps.push(\"consultant_at_discharge\");\n        }\n\n        $scope.errors = _.reduce($scope.steps, function(mem, y){\n            mem[y] = undefined;\n            return mem;\n        }, {});\n\n        $scope.processSteps = [];\n\n        _.each($scope.steps, function(step){\n            var processStep = $scope.steps_details[step];\n            processStep.name = step;\n            $scope.processSteps.push(processStep);\n        });\n\n        $scope.nextStep = function(){\n            var currentIndex = _.indexOf($scope.steps, $scope.step);\n\n            if(currentIndex + 1 === $scope.steps.length){\n                return null;\n            }\n            return $scope.steps[currentIndex + 1];\n        };\n\n        $scope.previousStep = function(){\n            var currentIndex = _.indexOf($scope.steps, $scope.step);\n\n            if(!currentIndex){\n                return null;\n            }\n\n            return $scope.steps[currentIndex - 1];\n        };\n\n        $scope.goToPreviousStep = function(){\n            var processStep = _.find($scope.processSteps, function(processStep){\n                return processStep.name === $scope.step;\n            });\n            processStep.done = false;\n            $scope.step = $scope.previousStep();\n        };\n\n        $scope.resetFormValidation = function(someForm){\n            someForm.warning = false;\n        };\n\n        $scope.resetRequired = function(someFormField){\n            someFormField.$setValidity(\"required\", true);\n        };\n\n        $scope.goToNextStep = function(form, model){\n            var require_all, nextStep;\n            if($scope.step === \"diagnosis\"){\n                if(!form.primary_diagnosis_condition.$valid){\n                    form.primary_diagnosis_condition.$setDirty();\n                    return;\n                }\n\n            }\n            if($scope.step === \"travel\"){\n                if(!$scope.travelStep.validateStep()){\n                    return;\n                }\n            }\n            if($scope.step === \"antimicrobial\"){\n                if(!$scope.antimicrobialStep.validateStep()){\n                    return;\n                }\n            }\n            if($scope.step === \"presenting_complaint\"){\n                /*\n                this is a work around as multiple angular ui select does not play nicely\n                with ngRequired. It might be better to set each model as a different form\n                */\n                if(!model.presenting_complaint.symptoms.length){\n                    form.presenting_complaint_symptoms.$setValidity(\"required\", false);\n                    form.presenting_complaint_symptoms.$setDirty();\n                    return;\n                }\n            }\n            if($scope.step === \"consultant_at_discharge\"){\n                if(!form.consultant_at_discharge_consultant.$valid){\n                    form.consultant_at_discharge_consultant.$setDirty();\n                    return;\n                }\n            }\n\n            nextStep = $scope.nextStep();\n            var processStep = _.find($scope.processSteps, function(processStep){\n                return processStep.name === $scope.step;\n            });\n\n            processStep.done = true;\n\n            if(nextStep){\n                $scope.step = nextStep;\n            }\n            else{\n                $scope.save();\n            }\n        };\n\n        if(!$scope.step){\n            $scope.step = _.first($scope.steps);\n        }\n\n        if($scope.episode.secondary_diagnosis.length === 0){\n            $scope.editing.secondary_diagnosis =  [{condition: null, co_primary: false, id: 1}];\n        }else{\n            $scope.editing.secondary_diagnosis = _.map(\n                $scope.episode.secondary_diagnosis, function(sd){\n                    var copy = sd.makeCopy();\n                    copy.submitted = true;\n                    return copy;\n                });\n        }\n\n        $scope.confirming = false;\n        $scope.validDiagnosis = false;\n        $scope.is_list_view = $location.path().indexOf('/list/') === 0;\n        //\n        // This flag sets the visibility of the modal body\n        //\n        $scope.discharged = false;\n\n        _.extend($scope, referencedata.toLookuplists());\n\n        //\n        // We should deal with the case where we're confirming discharge\n        //\n        if(!$scope.is_list_view){\n            $scope.confirming = true;\n            $scope.validDiagnosis = _.contains($scope.condition_list, $scope.episode.primary_diagnosis[0].condition);\n            if(!$scope.validDiagnosis){\n                $scope.oldDiagnosis = $scope.episode.primary_diagnosis[0].condition;\n                $scope.editing.primary_diagnosis.condition = undefined;\n            }\n        }\n\n        //\n        // Add an extra Secondary diagnosis option to the list\n        //\n        $scope.secondaryDiagnosisWarning = false;\n\n        $scope.addSecondary = function(){\n            $scope.secondaryDiagnosisWarning = !_.every($scope.editing.secondary_diagnosis, function(x){\n                return x.condition;\n            });\n\n            if(!$scope.secondaryDiagnosisWarning){\n                _.each($scope.editing.secondary_diagnosis, function(e){\n                    e.submitted = true;\n                });\n\n                var d = {\n                    condition: null,\n                    co_primary: false,\n                    id: $scope.editing.secondary_diagnosis.length + 1\n                };\n\n                $scope.editing.secondary_diagnosis.push(d);\n            }\n        };\n\n        $scope.removeSecondary = function($index){\n            $scope.editing.secondary_diagnosis.splice(index, 1);\n        }\n\n        // Let's have a nice way to kill the modal.\n        $scope.cancel = function() {\n      \t    $modalInstance.close('cancel');\n        };\n\n        //\n        // We need to save both the primary diagnosis and any secondary diagnoses.\n        // The PD is simple as it's a singleton model, and we ensured it existed\n        // above.\n        //\n        // For SDs, we need to check whether we are creating or updating, and\n        // hit the appropriate .save().\n        //\n        // Once everything has come back from the server, growl the user and kill\n        // the modal.\n        //\n        $scope.save = function() {\n            var to_save;\n            var primary = episode.primary_diagnosis[0];\n\n            if($scope.confirming){\n                $scope.editing.primary_diagnosis.confirmed = true;\n            }\n\n            var saves = [];\n            saves.push(primary.save($scope.editing.primary_diagnosis));\n\n            if(_.contains($scope.steps, \"consultant_at_discharge\")){\n                to_save = $scope.episode.consultant_at_discharge[0];\n                saves.push(to_save.save($scope.editing.consultant_at_discharge));\n            }\n\n            if(_.contains($scope.steps, \"presenting_complaint\")){\n                to_save = $scope.episode.presenting_complaint[0];\n                saves.push(to_save.save($scope.editing.presenting_complaint));\n            }\n\n            if($scope.antimicrobialStep){\n                saves.concat($scope.antimicrobialStep.save());\n            }\n            if($scope.travelStep){\n                saves.concat($scope.travelStep.save());\n            }\n\n            // if they've removed an already existing diagnosis, let them delete it\n            _.each($scope.episode.secondary_diagnosis, function(sd){\n                if(sd.consistency_token){\n                    if(!_.find($scope.editing.secondary_diagnosis)){\n                        sd.destroy();\n                    }\n                }\n            });\n\n            // $scope.episode.presenting_complaint[0].save($scope.editing.presenting_complaint);\n\n            _.each(_.filter($scope.editing.secondary_diagnosis,\n                            function(sd){ return sd.condition!== null; }),\n                   function(sd, index){\n                       var save;\n                       var secondary;\n                       delete sd.submitted;\n\n                       if(sd.consistency_token){\n                           var consistency_token = sd.consistency_token;\n                           secondary = _.find(\n                               $scope.episode.secondary_diagnosis,\n                               function(sd){\n                                   return sd.consistency_token == consistency_token;\n                               }\n                           );\n                           save = secondary.save(sd);\n                       }else{\n                           secondary = $scope.episode.newItem('secondary_diagnosis');\n                           delete sd.id;\n                           save = secondary.save(sd);\n                       }\n                       saves.push(save);\n                   }\n              );\n\n\n            dischargePatientService.discharge(episode, $scope.editing, tags).then(function(){\n                $q.all(saves).then(function(){\n                    if($scope.confirming){\n                        growl.success('Final Diagnosis approved.');\n                    }else{\n                        growl.success($scope.episode.demographics[0].first_name + ' ' + $scope.episode.demographics[0].surname + ' discharged.');\n                    }\n                    $scope.discharged = true;\n                    if($scope.editing.category === \"Followup\"){\n                      /*\n                      * if a patient is marked as follow up, we leave them on the list\n                      * view\n                      */\n                      $modalInstance.close('followup');\n                    }\n                    else{\n                      $modalInstance.close('discharged');\n                    }\n                });\n            });\n\n        };\n    });\n", "branches": [96, 1, 0, 0, 96, 1, 1, 0, 105, 2, 0, 0, 105, 2, 1, 0, 113, 3, 0, 0, 113, 3, 1, 0, 114, 4, 0, 0, 114, 4, 1, 0, 123, 5, 0, 0, 123, 5, 1, 0, 132, 6, 0, 0, 132, 6, 1, 0, 136, 7, 0, 0, 136, 7, 1, 0, 154, 8, 0, 0, 154, 8, 1, 4, 154, 9, 0, 4, 154, 9, 1, 4, 168, 10, 0, 12, 168, 10, 1, 0, 168, 11, 0, 12, 168, 11, 1, 0, 168, 11, 2, 0, 174, 12, 0, 12, 174, 12, 1, 0, 187, 13, 0, 12, 187, 13, 1, 0, 199, 14, 0, 12, 199, 14, 1, 0, 215, 15, 0, 12, 215, 15, 1, 0, 215, 16, 0, 12, 215, 16, 1, 12, 219, 17, 0, 0, 219, 17, 1, 12, 224, 18, 0, 0, 224, 18, 1, 12, 245, 19, 0, 1, 245, 19, 1, 1, 254, 20, 0, 1, 254, 20, 1, 1, 279, 21, 0, 1, 279, 21, 1, 1, 280, 22, 0, 1, 280, 22, 1, 0, 286, 23, 0, 0, 286, 23, 1, 1, 287, 24, 0, 0, 287, 24, 1, 0, 291, 25, 0, 0, 291, 25, 1, 1, 292, 26, 0, 0, 292, 26, 1, 0, 296, 27, 0, 1, 296, 27, 1, 0, 301, 28, 0, 1, 301, 28, 1, 0, 307, 29, 0, 0, 307, 29, 1, 0, 308, 30, 0, 0, 308, 30, 1, 0, 321, 31, 0, 0, 321, 31, 1, 0, 329, 32, 0, 12, 329, 32, 1, 0, 333, 33, 0, 12, 333, 33, 1, 0, 357, 34, 0, 12, 357, 34, 1, 0, 360, 35, 0, 12, 360, 35, 1, 0, 376, 36, 0, 0, 376, 36, 1, 0, 415, 37, 0, 2, 415, 37, 1, 0, 422, 38, 0, 0, 422, 38, 1, 2, 427, 39, 0, 2, 427, 39, 1, 0, 432, 40, 0, 2, 432, 40, 1, 0, 435, 41, 0, 2, 435, 41, 1, 0, 441, 42, 0, 0, 441, 42, 1, 0, 442, 43, 0, 0, 442, 43, 1, 0, 457, 44, 0, 0, 457, 44, 1, 0, 478, 45, 0, 2, 478, 45, 1, 0, 484, 46, 0, 1, 484, 46, 1, 1], "name": "elcid/assets/js/elcid/controllers/diagnosis_discharge.js", "coverage": [null, null, null, null, null, null, 1, null, null, null, null, null, null, null, null, 12, 12, null, 12, null, null, null, 12, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 12, null, null, null, null, null, 12, 24, 24, null, 24, 0, null, null, 24, 4, 10, null, null, null, 24, 24, 0, 0, null, null, null, 24, 4, null, null, 24, 0, 0, 0, null, 0, null, null, 24, 0, 0, null, null, null, 24, 0, null, null, 0, 0, 0, null, null, null, 0, 0, null, null, 0, 0, 0, null, null, 0, null, null, 24, 0, 0, null, null, 0, 0, 0, 0, null, null, null, null, 24, 0, null, null, 24, 4, null, 4, 4, 4, 4, 0, 0, null, null, null, 4, null, null, null, 12, null, 12, null, 12, null, null, null, 12, null, 12, 12, null, null, 0, null, null, 12, 12, 12, 12, null, null, 12, 12, null, null, null, null, null, null, 12, 12, null, null, 12, 12, null, null, null, null, null, null, null, 12, null, 12, null, null, 12, null, 12, 12, null, null, 12, 0, 0, null, null, 12, 0, 0, null, null, 12, 60, 60, null, null, 12, null, 12, 60, 60, 60, null, null, 12, 2, null, 2, 1, null, 1, null, null, 12, 2, null, 2, 1, null, null, 1, null, null, 12, 0, 0, null, 0, 0, null, null, 12, 1, null, null, 12, 1, null, null, 12, 2, 2, 1, 1, 1, null, null, null, 1, 0, 0, null, null, 1, 0, 0, null, null, 1, null, null, null, null, 1, 1, 1, 1, null, null, 0, 0, 0, 0, null, null, null, 0, 0, 0, null, null, 0, null, 0, 0, null, null, 0, null, null, null, 12, 12, null, null, 12, 12, null, 0, null, 0, 0, 0, null, null, null, 12, 12, 12, null, null, null, 12, null, 12, null, null, null, null, 12, 12, 12, 12, 12, 12, null, null, null, null, null, null, 12, null, 12, 0, 0, null, null, 0, 0, 0, null, null, 0, null, null, null, null, null, 0, null, null, null, 12, 0, null, null, null, 12, 1, null, null, null, null, null, null, null, null, null, null, null, null, null, 12, 2, 2, null, 2, 2, null, null, 2, 2, null, 2, 0, 0, null, null, 2, 2, 2, null, null, 2, 2, null, 2, 2, null, null, null, 2, 0, 0, 0, null, null, null, null, null, null, 2, 2, null, 0, 0, 0, null, 0, 0, 0, null, null, 0, null, null, 0, null, 0, 0, 0, null, 0, null, null, null, null, 2, 2, 2, 2, null, 0, null, 2, 2, null, null, null, null, 1, null, null, 1, null, null, null, null, null, null]}, {"source": "angular.module('opal.controllers').controller(\n    'DiagnosisHospitalNumberCtrl',\n    function($scope,\n             $timeout,\n             $modal,\n             $modalInstance,\n             $http,\n             $q,\n             Episode,\n             tags,\n             context,\n             hospital_number\n          ){\n\n        $scope.model = {};\n        if(hospital_number){\n            $scope.model.hospitalNumber = hospital_number;\n        }\n        $scope.tags = tags;\n        $scope.findByHospitalNumber = function() {\n          var patientFound = function(result){\n            if(result.merged && result.merged.length){\n              $scope.result = result;\n            }\n            else{\n              $scope.newForPatient(result);\n            }\n          };\n\n          var patientNotFound = function(result){\n            $scope.result = result;\n          };\n\n          Episode.findByHospitalNumber(\n              $scope.model.hospitalNumber,\n              {\n                  newPatient: patientNotFound,\n                  newForPatient: patientFound,\n                  error: function(){\n                      // This shouldn't happen, but we should probably handle it better\n                      alert('ERROR: More than one patient found with hospital number');\n                      $modalInstance.close(null)\n                  }\n              }\n          );\n        };\n\n        $scope.newPatient = function(result){\n            // There is no patient with this hospital number\n            // Show user the form for creating a new episode,\n            // with the hospital number pre-populated\n            modal = $modal.open({\n                backdrop: 'static',\n                templateUrl: '/templates/modals/add_episode.html',\n                controller: 'DiagnosisAddEpisodeCtrl',\n                resolve: {\n                    referencedata: function(Referencedata) { return Referencedata.load(); },\n                    demographics: function() {\n                        return { hospital_number: $scope.model.hospitalNumber }\n                    },\n                    tags: function(){ return $scope.tags; }\n                }\n            }).result.then(function(result) {\n                // The user has created the episode, or cancelled\n                if(result.then){\n                    result.then(function(r){ $modalInstance.close(r) });\n                }else{\n                    $modalInstance.close(result);\n                }\n            });\n        };\n\n        $scope.newForPatient = function(patient){\n            if (patient.active_episode_id &&\n                // Check to see that this episode is not \"Discharged\"\n                patient.episodes[patient.active_episode_id].location[0].category != 'Discharged') {\n                // This patient has an active episode\n                $scope.newForPatientWithActiveEpisode(patient);\n            } else { // This patient has no active episode\n                $scope.addForPatient(patient);\n            };\n        };\n\n        $scope.newForPatientWithActiveEpisode = function(patient){\n            episode = new Episode(patient.episodes[patient.active_episode_id])\n\n            if(episode.category_name !== 'Inpatient'){ // It's the wrong category - add new\n                return $scope.addForPatient(patient);\n            }\n            var tag = $scope.tags.tag ||  $scope.tags.subtag;\n\n            if(episode.location[0].category == 'Followup' && episode.hasTag(tag)){\n              modal = $modal.open({\n                  templateUrl: '/templates/modals/confirm_discharge.html',\n                  controller: 'ConfirmDischargeCtrl',\n                  size: 'lg',\n                  resolve: {\n                      patient: function() { return patient; },\n                      episode: function() { return episode; },\n                      tags: function(){ return $scope.tags; },\n                      context: function(){ return context; },\n                      nextStepController: function(){ return 'DiagnosisAddEpisodeCtrl';}\n                  }\n              }).result.then(\n                  function(result){\n                      $modalInstance.close(result);\n                  },\n                  function(result){\n                      $modalInstance.close(result);\n                });\n            }\n            else{\n              if (episode.tagging[0][$scope.tags.tag] &&\n                  ($scope.tags.subtag === \"\" ||\n                   episode.tagging[0][$scope.tags.subtag])) {\n                  // There is already an active episode for this patient\n                  // with the current tag\n                  $modalInstance.close(episode);\n              } else {\n                  // There is already an active episode for this patient but\n                  // it doesn't have the current tag.\n                  // Add the current Tag.\n                  episode.tagging[0][$scope.tags.tag] = true;\n                  if($scope.tags.subtag !== \"\"){\n                      episode.tagging[0][$scope.tags.subtag] = true;\n                  }\n                  episode.tagging[0].save(episode.tagging[0].makeCopy()).then(\n                      function(){\n                          $modalInstance.close(episode);\n                      });\n              }\n            }\n        };\n\n        $scope.addForPatient = function(patient){\n            demographics = patient.demographics[0];\n\n            modal = $modal.open({\n                templateUrl: '/templates/modals/add_episode.html',\n                controller: 'DiagnosisAddEpisodeCtrl',\n                resolve: {\n                    referencedata: function(Referencedata) { return Referencedata.load(); },\n                    demographics: function() { return demographics; },\n                    tags: function(){ return $scope.tags; }\n                }\n            }).result.then(\n                function(result){\n                    $modalInstance.close(result);\n                },\n                function(result){\n                    $modalInstance.close(result);\n                });\n        };\n\n        $scope.cancel = function() {\n            $modalInstance.close(null);\n        };\n\n    });\n", "branches": [16, 1, 0, 0, 16, 1, 1, 8, 22, 2, 0, 0, 22, 2, 1, 0, 22, 3, 0, 0, 22, 3, 1, 0, 65, 4, 0, 0, 65, 4, 1, 3, 74, 5, 0, 0, 74, 5, 1, 1, 74, 6, 0, 1, 74, 6, 1, 0, 87, 7, 0, 1, 87, 7, 1, 3, 90, 8, 0, 3, 90, 8, 1, 0, 92, 9, 0, 1, 92, 9, 1, 2, 92, 10, 0, 3, 92, 10, 1, 1, 113, 11, 0, 1, 113, 11, 1, 1, 113, 12, 0, 2, 113, 12, 1, 2, 113, 12, 2, 1, 124, 13, 0, 1, 124, 13, 1, 0], "name": "elcid/assets/js/elcid/controllers/diagnosis_hospital_number.js", "coverage": [1, null, null, null, null, null, null, null, null, null, null, null, null, null, 8, 8, 0, null, 8, 8, 0, 0, 0, null, null, 0, null, null, null, 0, 0, null, null, 0, null, null, null, null, null, null, 0, 0, null, null, null, null, null, 8, null, null, null, 3, null, null, null, null, 1, null, 0, null, 1, null, null, null, 3, 0, null, 3, null, null, null, null, 8, 1, null, null, null, 0, null, 1, null, null, null, 8, 4, null, 4, 1, null, 3, null, 3, 1, null, null, null, null, 1, 1, 1, 1, 1, null, null, null, 0, null, null, 0, null, null, null, 2, null, null, null, null, 1, null, null, null, null, 1, 1, 1, null, 1, null, 1, null, null, null, null, null, 8, 1, null, 1, null, null, null, 0, 1, 1, null, null, null, 0, null, null, 0, null, null, null, 8, 0, null, null, null]}, {"source": "//\n// This is the eLCID custom implementation of a discharge episode controller.\n// It is included from the eLCID extra aplication template as defined in\n// settings.py\n//\ncontrollers.controller(\n    'ElcidDischargeEpisodeCtrl',\n    function($scope,\n             $modalInstance, episode,\n             tags, DischargePatientService) {\n\n        var dischargePatientService = new DischargePatientService();\n        $scope.editing = dischargePatientService.getEditing(episode);\n        $scope.currentCategory = episode.location[0].category;\n\n        $scope.discharge = function(){\n            dischargePatientService.discharge(episode, $scope.editing, tags).then(function(){\n            if($scope.editing.category === \"Followup\"){\n              /*\n              * if a patient is marked as follow up, we leave them on the list\n              * view\n              */\n                $modalInstance.close('followup');\n            }\n            else{\n                $modalInstance.close('discharged');\n            }\n          });\n        };\n\n        $scope.cancel = function() {\n      \t    $modalInstance.close('cancel');\n        };\n    });\n", "branches": [18, 1, 0, 1, 18, 1, 1, 1], "name": "elcid/assets/js/elcid/controllers/discharge.js", "coverage": [null, null, null, null, null, 1, null, null, null, null, null, 4, 4, 4, null, 4, 2, 2, null, null, null, null, 1, null, null, 1, null, null, null, null, 4, 1, null, null]}, {"source": "angular.module('opal.controllers').controller(\n    'DuplicatePatientCtrl', function($rootScope, $scope, $window, ngProgressLite){\n\n      self.save = function(){\n          ngProgressLite.set(0);\n          ngProgressLite.start()\n      };\n\n});\n", "name": "elcid/assets/js/elcid/controllers/duplicate_patient.js", "coverage": [1, null, null, 0, 0, 0, null, null, null]}, {"source": "angular.module('opal.controllers').controller('HaemView', function($scope){\n  \"use strict\";\n  var vm = this;\n  function getAlertInvestigations(episode){\n      if(episode.microbiology_test){\n        return _.filter(episode.microbiology_test, function(mt){\n           return mt.alert_investigation;\n        });\n      }\n      else{\n        return [];\n      }\n  }\n\n  var orderByDate = function(significantDate){\n     // order by -date where date could be null, so we put that at the bottom\n     if(significantDate){\n         return -(moment(significantDate).unix());\n     }\n     else{\n         // this should never happen, but if it does, put it at the bottom\n         return 0;\n     }\n  };\n\n  vm.getClinicalAdviceDate = function(clinicalAdvice){\n     return clinicalAdvice.when || clinicalAdvice.created;\n  };\n\n  vm.clinicalAdviceOrdering = function(clinicalAdvice){\n     var clinicalAdviceDate = vm.getClinicalAdviceDate(clinicalAdvice);\n     return orderByDate(clinicalAdviceDate);\n  };\n\n  if($scope.patient.episodes.length){\n      $scope.episode.alertInvestigations = function(){\n              return _.reduce($scope.patient.episodes, function(r, e){\n              var alertInvestigations = getAlertInvestigations(e);\n              if(alertInvestigations.length){\n                  r = r.concat(alertInvestigations);\n              }\n\n              return r;\n          }, []);\n      };\n\n      this.isRecentHaemInformation = function(haemInformationRow){\n         var haemInformation = _.reduce($scope.patient.episodes, function(hi, e){\n             var episodeHaemInfo = e.haem_information || [];\n             hi = hi.concat(episodeHaemInfo);\n             return hi;\n         }, []);\n\n         haemInformation = _.sortBy(haemInformation, \"patient_type\");\n\n         haemInformation = _.sortBy(haemInformation, function(hi){\n             var significantDate = hi.count_recovery || hi.created;\n             return new Date(significantDate);\n         });\n\n         var result = {};\n\n         _.forEach(haemInformation, function(hi){\n             result[hi.patient_type] = hi.id;\n         });\n\n         return _.contains(_.values(result), haemInformationRow.id);\n      };\n  }\n});\n", "branches": [5, 1, 0, 0, 5, 1, 1, 0, 17, 2, 0, 2, 17, 2, 1, 1, 27, 3, 0, 3, 27, 3, 1, 2, 35, 4, 0, 0, 35, 4, 1, 1, 39, 5, 0, 0, 39, 5, 1, 0, 49, 6, 0, 0, 49, 6, 1, 0, 57, 7, 0, 0, 57, 7, 1, 0], "name": "elcid/assets/js/elcid/controllers/haem_view.js", "coverage": [1, null, 1, 1, 0, 0, 0, null, null, null, 0, null, null, null, 1, null, 3, 2, null, null, null, 1, null, null, null, 1, 3, null, null, 1, 3, 3, null, null, 1, 0, 0, 0, 0, 0, null, null, 0, null, null, null, 0, 0, 0, 0, 0, null, null, 0, null, 0, 0, 0, null, null, 0, null, 0, 0, null, null, 0, null, null, null]}, {"source": "angular.module('opal.controllers').controller('ResultView', function(){\n      \"use strict\";\n      var vm = this;\n      this.filterValue = \"\";\n      this.filter = function(item){\n          if(!vm.filterValue){\n            return true;\n          }\n\n          return item.profile_description.toLowerCase().indexOf(vm.filterValue.toLowerCase()) > -1\n      }\n});\n", "branches": [6, 1, 0, 0, 6, 1, 1, 2], "name": "elcid/assets/js/elcid/controllers/result_view.js", "coverage": [1, null, 2, 2, 2, 2, 0, null, null, 2, null, null]}, {"source": "angular.module('opal.services').factory('DischargePatientService', function($q) {\n    var DischargePatientService = function(episode, tags){\n        /* has 2 jobs\n        * i) create the editing fields for the template\n        * ii) return a promise dicharging those fields\n        */\n\n        this.getEditing = function(episode){\n            var newCategory,\n                admission,\n                end,\n\n            currentCategory = episode.location[0].category;\n\n            if(!currentCategory.length){\n                currentCategory = episode.category_name;\n            }\n\n            if (currentCategory.toUpperCase() == 'Inpatient'.toUpperCase()) {\n          \t    newCategory = 'Discharged';\n            } else if (currentCategory == 'Review' ||\n                       currentCategory == 'Followup') {\n          \t    newCategory = 'Unfollow';\n            } else {\n          \t    newCategory = currentCategory;\n            }\n\n            if(episode.start){\n                admission = moment(episode.start).format('MM/DD/YY')\n            }\n\n            if(!episode.end){\n                end = moment().format('DD/MM/YYYY');\n            }else{\n                end = episode.end;\n            }\n\n            return {\n                start: admission,\n          \t    category_name: newCategory,\n                end: end\n            };\n        };\n\n        this.discharge = function(episode, editing, tags){\n            var currentTag,\n                currentSubTag,\n                tagging = episode.getItem('tagging', 0),\n                location = episode.getItem('location', 0),\n                taggingAttrs = tagging.makeCopy(),\n                locationAttrs = location.makeCopy(),\n                episodeAttrs = episode.makeCopy();\n\n            if(tags){\n                currentTag = tags.tag;\n                currentSubTag = tags.subtag;\n            }else{\n                currentTag = 'mine';\n                currentSubTag = 'all';\n            }\n\n            if (editing.category != 'Unfollow') {\n                locationAttrs.category = editing.category;\n            }\n\n            if(editing.category == 'Unfollow') {\n                // No longer under active review does not set a discharge date\n                episodeAttrs.end = null;\n            }else{\n                episodeAttrs.end = editing.end;\n            }\n\n            if (editing.category != 'Followup') {\n              if(currentSubTag != ''){\n                  taggingAttrs[currentSubTag] = false;\n              }else{\n                  taggingAttrs[currentTag] = false;\n              }\n            }\n\n            var deferred = $q.defer();\n\n            tagging.save(taggingAttrs).then(function(){\n                location.save(locationAttrs).then(function(){\n                    episode.save(episodeAttrs).then(function(result){\n                      deferred.resolve(result);\n                    });\n                });\n            });\n\n            return deferred.promise;\n        };\n    };\n\n    return DischargePatientService;\n});\n", "branches": [15, 1, 0, 0, 15, 1, 1, 0, 19, 2, 0, 0, 19, 2, 1, 0, 21, 3, 0, 0, 21, 3, 1, 0, 21, 4, 0, 0, 21, 4, 1, 0, 28, 5, 0, 0, 28, 5, 1, 0, 32, 6, 0, 0, 32, 6, 1, 0, 54, 7, 0, 2, 54, 7, 1, 0, 62, 8, 0, 2, 62, 8, 1, 0, 66, 9, 0, 0, 66, 9, 1, 2, 73, 10, 0, 1, 73, 10, 1, 1, 74, 11, 0, 1, 74, 11, 1, 0], "name": "elcid/assets/js/elcid/services/dicharge_patient.js", "coverage": [1, 2, null, null, null, null, null, 2, 0, null, null, null, null, null, 0, 0, null, null, 0, 0, 0, null, 0, null, 0, null, null, 0, 0, null, null, 0, 0, null, 0, null, null, 0, null, null, null, null, null, null, 2, 2, null, null, null, null, null, null, null, 2, 2, 2, null, 0, 0, null, null, 2, 2, null, null, 2, null, 0, null, 2, null, null, 2, 1, 1, null, 0, null, null, null, 2, null, 2, 2, 2, 2, null, null, null, null, 2, null, null, null, 2, null]}, {"source": "//\n// Service for locating controllers and templates for\n//\nangular.module('opal.services').factory('elCIDFlow', function($routeParams){\n    \"use strict\";\n\n    var data_collection_slugs = [\n        'hiv-immune_inpatients',\n        'infectious_diseases-id_inpatients',\n        'tropical_diseases'\n    ];\n\n    var categories = {\n        'Walkin': {\n            enter: function(){\n                return {\n                    'controller': 'WalkinHospitalNumberCtrl',\n                    'template'  : '/templates/modals/hospital_number.html/'\n                };\n            },\n            exit: function(episode){\n                return {\n                    'controller': 'WalkinDischargeCtrl',\n                    'template'  : '/templates/modals/discharge_walkin_episode.html/'\n                };\n            }\n        },\n        'Inpatient': {\n            enter: function(){\n                if($routeParams.slug && data_collection_slugs.indexOf($routeParams.slug) != -1){\n                    return {\n                        'controller': 'DiagnosisHospitalNumberCtrl',\n                        'template'  : '/templates/modals/hospital_number.html/'\n                    }\n                }\n                if($routeParams.slug && $routeParams.slug === 'virology'){\n                  return {\n                      'controller': 'VirologyHospitalNumberCtrl',\n                      'template'  : '/templates/modals/hospital_number.html/'\n                  }\n                }\n                return {\n                    'controller': 'HospitalNumberCtrl',\n                    'template'  : '/templates/modals/hospital_number.html/'\n                }\n            },\n            exit: function(episode){\n                if($routeParams.slug && data_collection_slugs.indexOf($routeParams.slug) != -1){\n                    return {\n                        'controller': 'DiagnosisDischargeCtrl',\n                        'template'  : '/templates/elcid/modals/diagnosis_discharge.html'\n                    }\n                }\n\n                return {\n                    'controller': 'ElcidDischargeEpisodeCtrl',\n                    'template'  : '/templates/modals/discharge_episode.html/'\n                }\n\n            }\n        },\n        'OPAT': {\n            enter: function(){\n                return {\n                    'controller': 'OPATReferralCtrl',\n                    'template'  : '/opat/templates/modals/opat_referral.html/'\n                }\n            },\n            exit: function(episode){\n                return {\n                    'controller': 'OPATDischargeCtrl',\n                    'template'  : '/opat/templates/modals/discharge_opat_episode.html/'\n                }\n            }\n        },\n        TropicalLiaison: {\n            enter: function(){\n                return {\n                    controller: \"TropicalLiaisonAddPatient\",\n                    template: '/templates/infectiousdiseases/tropical_liaison_admission.html'\n                }\n            },\n            exit: function(episode){\n                return {\n                    'controller': 'ElcidDischargeEpisodeCtrl',\n                    'template'  : '/templates/infectiousdiseases/tropical_liaison_discharge.html'\n                }\n            }\n        }\n    }\n\n    var Flow = {\n        enter: function(){\n            var episode_type = 'Inpatient';\n            if($routeParams.slug){\n                if($routeParams.slug.indexOf('opat') == 0){\n                    episode_type = 'OPAT';\n                }else if ($routeParams.slug.indexOf('walkin') == 0){\n                    episode_type = 'Walkin';\n                }\n                else if($routeParams.slug === 'tropical_liaison'){\n                    episode_type = 'TropicalLiaison';\n                }\n            }\n            return categories[episode_type]['enter']();\n        },\n        exit: function(episode){\n            if($routeParams.slug === 'tropical_liaison'){\n              return categories.TropicalLiaison.exit(episode);\n            }\n            return categories[episode.category_name]['exit'](episode);\n        }\n    }\n    return Flow\n})\n", "branches": [30, 1, 0, 3, 30, 1, 1, 2, 30, 2, 0, 5, 30, 2, 1, 4, 36, 3, 0, 1, 36, 3, 1, 1, 36, 4, 0, 2, 36, 4, 1, 1, 48, 5, 0, 3, 48, 5, 1, 1, 48, 6, 0, 4, 48, 6, 1, 3, 95, 7, 0, 6, 95, 7, 1, 1, 96, 8, 0, 1, 96, 8, 1, 5, 98, 9, 0, 1, 98, 9, 1, 4, 101, 10, 0, 0, 101, 10, 1, 4, 108, 11, 0, 0, 108, 11, 1, 6], "name": "elcid/assets/js/elcid/services/flow.js", "coverage": [null, null, null, 1, null, null, 9, null, null, null, null, null, 9, null, null, 1, null, null, null, null, null, 1, null, null, null, null, null, null, null, 5, 3, null, null, null, null, 2, 1, null, null, null, null, 1, null, null, null, null, null, 4, 3, null, null, null, null, null, 1, null, null, null, null, null, null, null, null, 1, null, null, null, null, null, 1, null, null, null, null, null, null, null, 0, null, null, null, null, null, 0, null, null, null, null, null, null, null, 9, null, 7, 7, 6, 1, 5, 1, null, 4, 0, null, null, 7, null, null, 6, 0, null, 6, null, null, 9, null]}, {"source": "angular.module('opal.services').factory('LocationWardComparator', function($routeParams){\n    \"use strict\";\n\n    var CATEGORIES = [\n      'Inepisode', 'Review', 'Followup', 'Transferred', 'Discharged', 'Deceased'\n    ];\n\n    return [\n        function(p) { return CATEGORIES.indexOf(p.location[0].category) },\n        function(p) { return p.location[0].hospital },\n        function(p) {\n            var matches = p.location[0].ward.match(/^T(\\d+)/)\n            if(matches){\n              var wardNumber = matches[1];\n              if(matches[1].length < 2){\n                return \"0\" + matches[1];\n              }\n              else{\n                return matches[1];\n              }\n            }\n            else{\n              return p.location[0].ward\n            }\n        },\n        function(p) { return parseInt(p.location[0].bed) }\n    ];\n});\n", "branches": [13, 1, 0, 8, 13, 1, 1, 6, 15, 2, 0, 6, 15, 2, 1, 2], "name": "elcid/assets/js/elcid/services/location_ward_comparator.js", "coverage": [1, null, null, 7, null, null, null, 7, 22, 18, null, 14, 14, 8, 8, 6, null, null, 2, null, null, null, 6, null, null, 2, null, null]}, {"source": "//\n// This is our Antimicrobial model for use on the front end.\n//\nangular.module('opal.records')\n    .factory('Antimicrobial', function($routeParams){\n\n        return function(record){\n            if(!record.id && $routeParams.slug){\n              if($routeParams.slug.indexOf('walkin') === 0){\n                if(!record.start_date){\n                    record.start_date = moment();\n                }\n              }\n            }\n            return record;\n        };\n\n    });\n", "branches": [8, 1, 0, 1, 8, 1, 1, 2, 8, 2, 0, 3, 8, 2, 1, 3, 9, 3, 0, 1, 9, 3, 1, 0, 10, 4, 0, 1, 10, 4, 1, 0], "name": "elcid/assets/js/elcid/services/records/antimicrobial.js", "coverage": [null, null, null, 1, null, null, 3, 3, 1, 1, 1, null, null, null, 3, null, null, null]}, {"source": "//\n// This is our General Note model for use on the front end.\n//\nangular.module('opal.records')\n    .factory('Diagnosis', function(){\n\n        return function(record){\n            if(!record.id){\n                if(!record.date_of_diagnosis){\n                    record.date_of_diagnosis = moment();\n                }\n            }\n\n            return record;\n\n        }\n\n    });\n", "branches": [8, 1, 0, 2, 8, 1, 1, 0, 9, 2, 0, 1, 9, 2, 1, 1], "name": "elcid/assets/js/elcid/services/records/diagnosis.js", "coverage": [null, null, null, 1, null, null, 2, 2, 2, 1, null, null, null, 2, null, null, null, null]}, {"source": "//\n// This is our General Note model for use on the front end.\n//\nangular.module('opal.records')\n    .factory('GeneralNote', function(){\n\n        return function(record){\n            if(!record.id){\n                if(!record.date){\n                    record.date = moment()\n                }\n            }\n\n            return record;\n\n        }\n\n    });\n", "branches": [8, 1, 0, 2, 8, 1, 1, 0, 9, 2, 0, 1, 9, 2, 1, 1], "name": "elcid/assets/js/elcid/services/records/general_note.js", "coverage": [null, null, null, 1, null, null, 2, 2, 2, 1, null, null, null, 2, null, null, null, null]}, {"source": "//\n// This is our Investigation model for use on the front end.\n//\nangular.module('opal.records')\n    .factory('Investigation', function(){\n\n        return function(record){\n            if(!record.id){\n                if(!record.date_ordered){\n                    record.date_ordered = moment()\n                }\n            }\n\n            return record;\n\n        }\n\n    });\n", "branches": [8, 1, 0, 2, 8, 1, 1, 0, 9, 2, 0, 1, 9, 2, 1, 1], "name": "elcid/assets/js/elcid/services/records/investigation.js", "coverage": [null, null, null, 1, null, null, 2, 2, 2, 1, null, null, null, 2, null, null, null, null]}, {"source": "//\n// This is our Line model for use on the front end.\n//\nangular.module('opal.records')\n    .factory('Line', function(){\n\n        return function(record){\n            if(!record.id){\n                if(!record.insertion_date){\n                    record.insertion_date = moment()\n                }\n            }\n\n            return record;\n\n        }\n\n    });\n", "branches": [8, 1, 0, 2, 8, 1, 1, 0, 9, 2, 0, 1, 9, 2, 1, 1], "name": "elcid/assets/js/elcid/services/records/line.js", "coverage": [null, null, null, 1, null, null, 2, 2, 2, 1, null, null, null, 2, null, null, null, null]}, {"source": "//\n// This is our Clinical Advice model for use on the front end.\n//\nangular.module('opal.records')\n    .factory('MicrobiologyInput', function($window){\n\n        return function(record){\n            if(!record.id){\n                if(!record.initials){\n                    record.initials = $window.initials;\n                }\n                if(!record.when){\n                    record.when = moment();\n                }\n            }\n\n            return record;\n\n        }\n\n    });\n", "branches": [8, 1, 0, 4, 8, 1, 1, 0, 9, 2, 0, 3, 9, 2, 1, 1, 12, 3, 0, 3, 12, 3, 1, 1], "name": "elcid/assets/js/elcid/services/records/microbiology_input.js", "coverage": [null, null, null, 1, null, null, 4, 4, 4, 3, null, 4, 3, null, null, null, 4, null, null, null, null]}, {"source": "//\n// This is our OPAT Line Assessment model for use on the front end.\n//\nangular.module('opal.records')\n    .factory('OPATLineAssessment', function($window){\n\n        return function(record){\n            if(!record.id){\n                if(!record.assessment_date){\n                    record.assessment_date = moment();\n                }\n            }\n\n            return record;\n\n        }\n\n    });\n", "branches": [8, 1, 0, 2, 8, 1, 1, 0, 9, 2, 0, 1, 9, 2, 1, 1], "name": "elcid/assets/js/elcid/services/records/opat_line_assessment.js", "coverage": [null, null, null, 1, null, null, 2, 2, 2, 1, null, null, null, 2, null, null, null, null]}, {"source": "//\n// This is our OPAT Review model for use on the front end.\n//\nangular.module('opal.records')\n    .factory('OPATReview', function($window){\n\n        return function(record){\n            if(!record.id){\n                if(!record.initials){\n                    record.initials = $window.initials;\n                }\n                if(!record.datetime){\n                    record.datetime = moment();\n                }\n            }\n\n            return record;\n\n        }\n\n    });\n", "branches": [8, 1, 0, 4, 8, 1, 1, 0, 9, 2, 0, 3, 9, 2, 1, 1, 12, 3, 0, 3, 12, 3, 1, 1], "name": "elcid/assets/js/elcid/services/records/opat_review.js", "coverage": [null, null, null, 1, null, null, 4, 4, 4, 3, null, 4, 3, null, null, null, 4, null, null, null, null]}, {"source": "//\n// This is the \"Next stage\" exit flow controller for OPAT patients.\n//\ncontrollers.controller(\n    'OPATDischargeCtrl',\n    function($scope, $modalInstance, $rootScope, $q,\n             growl,\n             Item, CopyToCategory,\n             referencedata, episode, tags){\n\n        var DATE_FORMAT = 'DD/MM/YYYY';\n        var opat_rejection = $rootScope.fields['opat_rejection'];\n\n        $scope.episode = episode;\n        $scope.meta = {\n            accepted: null,\n            rejection: {date: moment().format(DATE_FORMAT)}\n        };\n\n        $scope.qc = {\n            no_allergies: null,\n            consultant: null,\n            referring_team: null,\n            confirmed: false,\n\n            referral: function(){\n                if($scope.episode.location[0].opat_referral_team || ($scope.qc.referring_team != null && $scope.qc.confirmed)){\n                    return true\n                }\n                if($scope.episode.location[0].opat_referral_consultant || ($scope.qc.consultant != null && $scope.qc.confirmed)){\n                    return true\n                }\n                return false\n            },\n            allergies: function(){\n                if($scope.episode.allergies.length > 0){\n                    return true\n                }\n                return $scope.qc.no_allergies != null;\n            },\n            fails: function(){\n                return !$scope.qc.referral() || !$scope.qc.allergies()\n            },\n            passes: function(){\n                return !$scope.qc.fails();\n            }\n        };\n\n        _.extend($scope, referencedata.toLookuplists());\n\n        // Make sure that the episode's tagging item is an instance not an object\n        $scope.ensure_tagging = function(episode){\n            if(!$scope.episode.tagging[0].makeCopy){\n                $scope.episode.tagging[0] = $scope.episode.newItem('tagging')\n            }            return\n        };\n\n        //\n        // This method made more sense when we were storing metadata on a\n        // singleton. now it just returns a new metadata instance.\n        //\n        $scope.get_meta = function(){\n            return $scope.episode.newItem('opat_meta');\n        }\n\n        //\n        // The patient is accepted onto the OPAT service.\n        // We need to update their tagging data.\n        $scope.accept = function(){\n            if(!$scope.episode.tagging[0].makeCopy){\n                $scope.episode.tagging[0] = $scope.episode.newItem('tagging')\n            }\n            var tagging = $scope.episode.tagging[0].makeCopy();\n            tagging.opat_referrals = false;\n            tagging.opat_current = true;\n            tagging.opat = true;\n\n            var locationdata = $scope.episode.location[0].makeCopy();\n            locationdata.opat_acceptance = moment();\n            if($scope.qc.consultant || $scope.qc.referring_team){\n                if($scope.qc.referring_team){\n                    locationdata.opat_referral_team = $scope.qc.referring_team;\n                }\n                if($scope.qc.consultant){\n                    locationdata.opat_referral_consultant = $scope.qc.consultant;\n                }\n            }\n            episodeChanges = $scope.episode.makeCopy();\n            episodeChanges.start = locationdata.opat_acceptance;\n\n            var saves = [\n                $scope.episode.tagging[0].save(tagging),\n                $scope.episode.location[0].save(locationdata),\n                $scope.episode.save(episodeChanges)\n            ];\n\n            if($scope.qc.no_allergies == true){\n                var allergy = $scope.episode.newItem('allergies');\n                saves.push(allergy.save({drug: 'No known allergies'}));\n            }\n\n            $q.all(saves).then(function(){\n                growl.success(\n                    'Accepted: ' + episode.demographics[0].first_name + ' ' + episode.demographics[0].surname\n                );\n                $modalInstance.close('moved');\n            });\n        };\n\n        $scope.click_reject = function(){\n            $scope.meta.accepted = false;\n            $scope.meta.review_date = moment().add(3, 'M').toDate();\n            return\n        }\n        //\n        // The patient is rejected from the OAPT service.\n        // Store some extra data.\n        //\n        $scope.reject = function(){\n            var meta = $scope.get_meta();\n            var opatmetadata = meta.makeCopy();\n            var rejection = $scope.episode.newItem('opat_rejection', {column: opat_rejection});\n            var tagging = $scope.episode.tagging[0].makeCopy();\n\n            $scope.ensure_tagging(episode);\n            opatmetadata.review_date = $scope.meta.review_date;\n            var episodeToSave = $scope.episode.makeCopy();\n            episodeToSave.end = $scope.meta.rejection.date;\n\n            tagging.opat_referrals = false;\n            tagging.opat = false;\n\n            $q.all([\n                rejection.save($scope.meta.rejection),\n                $scope.episode.tagging[0].save(tagging),\n                meta.save(opatmetadata),\n                $scope.episode.save(episodeToSave)\n            ]).then(function(){\n                //\n                // This comment edited to add (DM): I have literally no idea what the next\n                // comment means :(\n                //\n                // Doesn't auto update for OPAT as TAGGING is not in the default schema.\n                $scope.episode.tagging[0] = tagging;\n                var dateStr = $scope.meta.review_date;\n\n                if(_.isDate(dateStr)){\n                    dateStr = moment($scope.meta.review_date).format(DATE_FORMAT);\n                }\n                var message = 'Rejected: ' + episode.demographics[0].first_name + ' ' + episode.demographics[0].surname;\n                message += '.\\n Patient will come up for OPAT review after ' + dateStr;\n                growl.success(message);\n                $modalInstance.close('discharged');\n            });\n\n        };\n\n        //\n        // The patient is being removed from the current list because they've\n        // switched to oral antibiotics\n        //\n        $scope.switch_to_oral = function(){\n            var meta = $scope.get_meta();\n            $scope.ensure_tagging($scope.episode);\n            var tagging = $scope.episode.tagging[0].makeCopy();\n            tagging.opat_current = false;\n            tagging.opat_followup = true;\n\n            updatedmeta = meta.makeCopy();\n            updatedmeta.reason_for_stopping = $scope.meta.reason;\n            updatedmeta.unplanned_stop_reason = $scope.meta.unplanned_stop;\n            updatedmeta.stopping_iv_details = $scope.meta.details;\n            updatedmeta.review_date       = $scope.meta.review_date;\n            updatedmeta.treatment_outcome = $scope.meta.outcome;\n            updatedmeta.deceased          = $scope.meta.died;\n            updatedmeta.cause_of_death    = $scope.meta.cause_of_death;\n            updatedmeta.death_category    = $scope.meta.death_category;\n            updatedmeta.readmitted        = $scope.meta.readmitted;\n            updatedmeta.treatment_outcome = $scope.meta.outcome;\n            updatedmeta.notes             = $scope.meta.notes;\n\n            var outcome = $scope.episode.newItem('opat_outcome');\n            var outcomesdata = {\n                patient_outcome: $scope.meta.patient_outcome,\n                opat_outcome   : $scope.meta.opat_outcome,\n                outcome_stage  : 'Completed Therapy',\n                infective_diagnosis: $scope.meta.infective_diagnosis\n            }\n\n            // Now let's save\n            $q.all([\n                outcome.save(outcomesdata),\n                meta.save(updatedmeta),\n                $scope.episode.tagging[0].save(tagging)\n            ]).then(function(){\n                growl.success('Moved to Follow up: ' + episode.demographics[0].first_name + ' ' + episode.demographics[0].surname)\n                $modalInstance.close('discharged');\n            });\n        }\n\n        //\n        // A patient has completed their OPAT therapy.\n        //\n        $scope.completed_therapy = function(addendum){\n            var meta = $scope.get_meta();\n            $scope.ensure_tagging($scope.episode);\n            var tagging = $scope.episode.tagging[0].makeCopy();\n            tagging.opat_current = false;\n            tagging.opat_followup = false;\n\n            updatedmeta = meta.makeCopy();\n\n            updatedmeta.review_date       = $scope.meta.review_date;\n            updatedmeta.treatment_outcome = $scope.meta.outcome;\n            updatedmeta.deceased          = $scope.meta.died;\n            updatedmeta.cause_of_death    = $scope.meta.cause_of_death;\n            updatedmeta.death_category    = $scope.meta.death_category;\n            updatedmeta.readmitted        = $scope.meta.readmitted;\n            updatedmeta.treatment_outcome = $scope.meta.outcome;\n            updatedmeta.notes             = $scope.meta.notes;\n\n            ep = $scope.episode.makeCopy();\n            ep.end = new Date();\n\n            var outcome = $scope.episode.newItem('opat_outcome');\n            var outcomesdata = {\n                patient_outcome: $scope.meta.patient_outcome,\n                opat_outcome   : $scope.meta.opat_outcome,\n                outcome_stage  : 'Completed Therapy',\n                infective_diagnosis: $scope.meta.infective_diagnosis\n            }\n\n            if(addendum){\n                outcomesdata.outcome_stage += addendum;\n            }\n\n            // Now let's save\n            $q.all([\n                meta.save(updatedmeta),\n                $scope.episode.tagging[0].save(tagging),\n                $scope.episode.save(ep),\n                outcome.save(outcomesdata)\n            ]).then(function(){\n                growl.success('Completed treatment: ' + episode.demographics[0].first_name + ' ' + episode.demographics[0].surname);\n                $modalInstance.close('discharged');\n            });\n        };\n\n        //\n        // The patient is being removed from the follow up list because they're\n        // going back to IV\n        //\n        // This means that we create a whole new OPAT episode for them !\n        //\n        $scope.back_to_iv = function(){\n            var meta = $scope.get_meta();\n            $scope.ensure_tagging($scope.episode);\n            var tagging = $scope.episode.tagging[0].makeCopy();\n\n            tagging.opat_current = false;\n            tagging.opat_followup = false;\n            updatedmeta = meta.makeCopy();\n            updatedmeta.reason_for_stopping = $scope.meta.reason;\n            updatedmeta.unplanned_stop_reason = $scope.meta.unplanned_stop;\n            updatedmeta.stopping_iv_details = $scope.meta.details;\n\n            $q.all([\n                meta.save(updatedmeta),\n                $scope.episode.tagging[0].save(tagging)\n            ]).then(function(){\n                CopyToCategory($scope.episode.id, 'OPAT').then(function(episode){\n                    var newtagging = episode.tagging[0].makeCopy();\n                    var locationdata = episode.location[0].makeCopy();\n                    newtagging.opat = true;\n                    newtagging.opat_referrals = true;\n                    locationdata.opat_referral_route = 'From OPAT Follow Up';\n                    locationdata.opat_referral_team = 'OPAT Team';\n                    locationdata.opat_referral = new Date();\n                    $q.all([\n                        episode.tagging[0].save(newtagging),\n                        episode.location[0].save(locationdata)\n                    ]).then(function(){\n                        growl.success(episode.demographics[0].first_name + ' ' + episode.demographics[0].surname + ' has been moved back to OPAT referrals');\n                        $modalInstance.close('discharged');\n                    })\n                });\n            });\n        }\n\n\n        // Let's have a nice way to kill the modal.\n        $scope.cancel = function() {\n\t        $modalInstance.close('cancel');\n        };\n    });\n", "branches": [27, 1, 0, 0, 27, 1, 1, 0, 27, 2, 0, 0, 27, 2, 1, 0, 27, 2, 2, 0, 30, 3, 0, 0, 30, 3, 1, 0, 30, 4, 0, 0, 30, 4, 1, 0, 30, 4, 2, 0, 36, 5, 0, 0, 36, 5, 1, 0, 42, 6, 0, 0, 42, 6, 1, 0, 53, 7, 0, 0, 53, 7, 1, 4, 70, 8, 0, 0, 70, 8, 1, 1, 80, 9, 0, 0, 80, 9, 1, 1, 80, 10, 0, 1, 80, 10, 1, 1, 81, 11, 0, 0, 81, 11, 1, 0, 84, 12, 0, 0, 84, 12, 1, 0, 97, 13, 0, 0, 97, 13, 1, 1, 147, 14, 0, 0, 147, 14, 1, 1, 233, 15, 0, 0, 233, 15, 1, 2], "name": "opat/static/js/opat/controllers/opat_discharge.js", "coverage": [null, null, null, 1, null, null, null, null, null, null, 6, 6, null, 6, 6, null, null, null, null, 6, null, null, null, null, null, null, 0, 0, null, 0, 0, null, 0, null, null, 0, 0, null, 0, null, null, 0, null, null, 0, null, null, null, 6, null, null, 6, 4, 0, 4, null, null, null, null, null, null, 6, 5, null, null, null, null, null, 6, 1, 0, null, 1, 1, 1, 1, null, 1, 1, 1, 0, 0, null, 0, 0, null, null, 1, 1, null, 1, null, null, null, null, null, 1, 0, 0, null, null, 1, 1, null, null, 1, null, null, null, 6, 0, 0, 0, null, null, null, null, null, 6, 1, 1, 1, 1, null, 1, 1, 1, 1, null, 1, 1, null, 1, null, null, null, null, null, null, null, null, null, null, 1, 1, null, 1, 0, null, 1, 1, 1, 1, null, null, null, null, null, null, null, null, 6, 1, 1, 1, 1, 1, null, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, null, 1, 1, null, null, null, null, null, null, null, 1, null, null, null, null, 1, 1, null, null, null, null, null, null, 6, 2, 2, 2, 2, 2, null, 2, null, 2, 2, 2, 2, 2, 2, 2, 2, null, 2, 2, null, 2, 2, null, null, null, null, null, null, 2, 0, null, null, null, 2, null, null, null, null, null, 2, 2, null, null, null, null, null, null, null, null, null, 6, 0, 0, 0, null, 0, 0, 0, 0, 0, 0, null, 0, null, null, null, 0, 0, 0, 0, 0, 0, 0, 0, 0, null, null, null, 0, 0, null, null, null, null, null, null, null, 6, 0, null, null]}, {"source": "//\n// This is our \"Enter OPAT\" flow controller\n//\ncontrollers.controller(\n    'OPATReferralCtrl',\n    function($scope, $modalInstance, $modal, $rootScope, $q,\n             growl,\n             Episode){\n        $scope.model = {\n            hospital_number : null\n        }\n        $scope.patient = null;\n        $scope.message = null;\n\n        //\n        // When we've created an episode with this flow, tag it to the correct\n        // teams and then kill the modal.\n        //\n        $scope.tag_and_close = function(episode){\n            if(!episode.newItem){\n                episode = new Episode(episode);\n            };\n            if(!episode.tagging[0].makeCopy){\n                episode.tagging[0] = episode.newItem('tagging');\n            }\n            var ep = episode.makeCopy()\n            var teams = episode.tagging[0].makeCopy();\n            var location = episode.location[0].makeCopy();\n\n            //\n            // See https://github.com/openhealthcare/elcid/issues/484 -\n            //\n            // Becuase we have a referrals situation, we have to flush teams.\n            //\n            _.each(_.keys(teams), function(team){\n                if(teams[team]){ teams[team] = false };\n            });\n\n            ep.category_name = 'OPAT'\n            teams.opat = true;\n            teams.opat_referrals = true;\n            location.opat_referral = moment();\n\n            //\n            // Pre fill some tests:\n            //\n            var mrsa = episode.newItem('microbiology_test');\n            var vte = episode.newItem('microbiology_test');\n\n            episode.save(ep).then(function(){\n                $q.all([\n                    episode.tagging[0].save(teams),\n                    episode.location[0].save(location),\n                    mrsa.save({test: 'MRSA PCR'}),\n                    vte.save({test: 'VTE Assessment'})\n                ]).then(function(){\n                    episode.active = true;\n                    $modalInstance.close(episode);\n                });\n            });\n\n\n        };\n\n        //\n        // We have an initial hospital number - we can now figure out whether to\n        // Add or pull over.\n        //\n        $scope.find_by_hospital_number = function(){\n\n          var patientFound = function(result){\n            if(result.merged && result.merged.length){\n              $scope.result = result;\n            }\n            else{\n              $scope.newForPatient(result);\n            }\n          };\n\n          var patientNotFound = function(result){\n            $scope.result = result;\n          };\n\n            Episode.findByHospitalNumber(\n                $scope.model.hospital_number,\n                {\n                    newPatient: patientNotFound,\n                    newForPatient: patientFound,\n                    error: function(){\n\t\t\t            // This shouldn't happen, but we should probably\n                        // handle it better\n                        msg = 'ERROR: More than one patient found with hospital number';\n\t\t\t            alert(msg);\n                        $modalInstance.close(null)\n                    }\n                }\n            );\n        };\n\n        //\n        // Create a new patient\n        //\n        $scope.newPatient = function(result){\n            // There is no patient with this hospital number\n\t    // Show user the form for creating a new episode,\n            // with the hospital number pre-populated\n\t    modal = $modal.open({\n  \t\ttemplateUrl: '/opat/templates/modals/add_episode.html',\n  \t\tcontroller: 'AddEpisodeCtrl',\n  \t\tresolve: {\n                    referencedata: function(Referencedata) { return Referencedata.load(); },\n\t\t    demographics: function() {\n\t\t\treturn { hospital_number: $scope.model.hospital_number }\n\t\t    },\n                    tags: function(){ return {tag: 'opat', subtag: ''} }\n\t\t}\n\t    }).result.then(function(result) {\n\t\t// The user has created the episode, or cancelled\n                if(result){ // We made an episode!\n                    $scope.tag_and_close(result);\n                }else{\n\t\t    $modalInstance.close(result);\n                }\n\t    });\n        };\n\n        //\n        // Create a new episode for an existing patient\n        //\n        $scope.newForPatient = function(patient){\n            var actually_make_new_episode = function(){\n                // Offer to import the data from this episode.\n\t\t\t\tfor (var eix in patient.episodes) {\n\t\t\t\t\tpatient.episodes[eix] = new Episode(patient.episodes[eix]);\n\t\t\t\t};\n\t\t\t\tmodal = $modal.open({\n\t\t\t\t\ttemplateUrl: '/templates/modals/copy_to_category.html/',\n\t\t\t\t\tcontroller: 'CopyToCategoryCtrl',\n\t\t\t\t\tresolve: {\n              category_name: function() { return 'OPAT' },\n  \t\t\t\t\t\tpatient: function() { return patient; },\n\t\t\t\t\t}\n\t\t\t\t}).result.then(\n                    function(result) {\n                        if(!_.isString(result)){\n                            $scope.tag_and_close(result);\n                            return\n                        };\n\t\t\t\t\t    if (result == 'open-new') {\n\t\t\t\t\t\t    // User has chosen to open a new episode\n                            $scope.add_for_patient(patient);\n\t\t\t\t\t    } else {\n\t\t\t\t\t\t    // User has chosen to reopen an episode, or cancelled\n\t\t\t\t\t\t    $modalInstance.close(result);\n\t\t\t\t\t    };\n\t\t\t\t    },\n                    function(result){ $modalInstance.close(result); });\n            }\n\n            if(patient.active_episode_id && _.keys(patient.episodes).length > 0){\n                opat_episodes = _.filter(patient.episodes, function(e){ return e.category_name == 'OPAT' });\n                if(opat_episodes.length > 0){\n                    // Tell the user that this patient is already on the opat service\n                    var list_name;\n                    message = \"Patient is already on the OPAT \";\n                    _.each(opat_episodes, function(e){\n                        if(e.tagging[0].opat_referrals){\n                            list_name = \"Referrals list\";\n                        }\n                        if(e.tagging[0].opat_current){\n                            list_name = \"Current list\";\n                        }\n                        if(e.tagging[0].opat_followup){\n                            list_name = \"Follow Up list\";\n                        }\n                    });\n                    if(list_name){\n                        message += list_name;\n                        $scope.message = message;\n                    }else{\n                        $scope.add_for_patient(patient);\n                    }\n                }else{\n                    actually_make_new_episode();\n                }\n            }else{\n                $scope.add_for_patient(patient);\n            }\n        };\n\n        //\n        // Add a new episode for an existing patient. Pre-fill the relevant demographics\n        //\n        $scope.add_for_patient = function(patient){\n            var demographics = patient.demographics[0];\n\n\t    modal = $modal.open({\n\t\ttemplateUrl: '/opat/templates/modals/add_episode.html',\n\t\tcontroller: 'AddEpisodeCtrl',\n\t\tresolve: {\n                    referencedata: function(Referencedata) { return Referencedata.load(); },\n\t\t    demographics: function() { return demographics; },\n                    tags: function(){ return {tag: 'walkin', subtag: ''}}\n\t\t}\n\t    }).result.then(function(result) {\n\t\t// The user has created the episode, or cancelled\n                if(result){ // We made an episode!\n                    $scope.tag_and_close(result);\n                }else{\n\t\t    $modalInstance.close(result);\n                }\n\t    });\n        };\n\n        // Let's have a nice way to kill the modal.\n        $scope.cancel = function() {\n\t        $modalInstance.close('cancel');\n        };\n    }\n);\n", "branches": [20, 1, 0, 0, 20, 1, 1, 0, 23, 2, 0, 0, 23, 2, 1, 0, 36, 3, 0, 0, 36, 3, 1, 0, 72, 4, 0, 0, 72, 4, 1, 0, 72, 5, 0, 0, 72, 5, 1, 0, 119, 6, 0, 0, 119, 6, 1, 0, 145, 7, 0, 0, 145, 7, 1, 0, 149, 8, 0, 0, 149, 8, 1, 0, 160, 9, 0, 2, 160, 9, 1, 0, 160, 10, 0, 2, 160, 10, 1, 2, 162, 11, 0, 2, 162, 11, 1, 0, 167, 12, 0, 2, 167, 12, 1, 1, 170, 13, 0, 0, 170, 13, 1, 3, 173, 14, 0, 0, 173, 14, 1, 3, 177, 15, 0, 2, 177, 15, 1, 0, 207, 16, 0, 0, 207, 16, 1, 0], "name": "opat/static/js/opat/controllers/opat_referral.js", "coverage": [null, null, null, 1, null, null, null, null, 3, null, null, 3, 3, null, null, null, null, null, 3, 0, 0, null, 0, 0, null, 0, 0, 0, null, null, null, null, null, null, 0, 0, null, null, 0, 0, 0, 0, null, null, null, null, 0, 0, null, 0, 0, null, null, null, null, null, 0, 0, null, null, null, null, null, null, null, null, null, null, 3, null, 0, 0, 0, null, null, 0, null, null, null, 0, 0, null, null, 0, null, null, null, null, null, null, null, 0, 0, 0, null, null, null, null, null, null, null, null, 3, null, null, null, 0, null, null, null, 0, null, 0, null, 0, null, null, null, 0, 0, null, 0, null, null, null, null, null, null, null, 3, 2, null, 0, 0, null, 0, null, null, null, 0, 0, null, null, null, 0, 0, 0, null, 0, null, 0, null, null, 0, null, null, 0, null, null, 2, 3, 2, null, 2, 2, 2, 3, 2, null, 3, 0, null, 3, 0, null, null, 2, 2, 2, null, 0, null, null, 0, null, null, 0, null, null, null, null, null, null, 3, 0, null, 0, null, null, null, 0, 0, 0, null, null, null, 0, 0, null, 0, null, null, null, null, null, 3, 0, null, null, null]}, {"source": "angular.module('opal.controllers').controller('UchFindPatientCtrl',\n  function(scope, Patient, Episode, step, episode, Item, $window) {\n    \"use strict\";\n\n    scope.lookup_hospital_number = function() {\n        Episode.findByHospitalNumber(\n            scope.demographics.hospital_number,\n            {\n                newPatient:    scope.new_patient,\n                newForPatient: scope.new_for_patient,\n                error        : function(){\n                    // this shouldn't happen, but we should probably handle it better\n                    $window.alert('ERROR: More than one patient found with hospital number');\n                }\n            });\n    };\n\n    this.initialise = function(scope){\n      scope.state = 'initial';\n      scope.hideFooter = true;\n\n      scope.demographics = {\n        hospital_number: undefined\n      };\n    };\n\n    scope.new_patient = function(result){\n        scope.hideFooter = false;\n        scope.state = 'editing_demographics';\n    };\n\n    scope.new_for_patient = function(rawPatient){\n        var patient = new Patient(rawPatient);\n        scope.demographics = patient.demographics[0];\n        var openEpisodes = _.filter(_.values(patient.episodes), function(x){\n          return !x.end;\n        });\n        var latestEpisode = _.last(_.sortBy(openEpisodes, \"id\"));\n\n        if(latestEpisode){\n          var editing = scope.pathway.populateEditingDict(latestEpisode);\n          // angular.extend doesn't work for angular reasons\n          _.each(editing, function(v, k){\n            if(k.indexOf(\"$\") !== 0){\n              scope.editing[k] = v;\n            }\n          });\n          scope.pathway.save_url = scope.pathway.save_url + \"/\" + patient.id + \"/\" + latestEpisode.id;\n        }\n        else{\n          scope.editing.demographics = patient.demographics[0].makeCopy();\n          scope.pathway.save_url = scope.pathway.save_url + \"/\" + patient.id;\n        }\n        scope.state  = 'has_demographics';\n        scope.hideFooter = false;\n    };\n\n    scope.showNext = function(editing){\n        return scope.state === 'has_demographics' || scope.state === 'editing_demographics';\n    };\n\n    scope.preSave = function(editing){\n      if(!editing.demographics.hospital_number){\n        editing.demographics.hospital_number = scope.demographics.hospital_number;\n      }\n    }\n\n    this.initialise(scope);\n});\n", "branches": [40, 1, 0, 2, 40, 1, 1, 2, 44, 2, 0, 12, 44, 2, 1, 0, 59, 3, 0, 3, 59, 3, 1, 2, 63, 4, 0, 0, 63, 4, 1, 0], "name": "microhaem/static/js/haem/controllers/uch_find_patient.js", "coverage": [1, null, null, null, 10, 2, null, null, null, null, null, null, 1, null, null, null, null, 10, 11, 11, null, 11, null, null, null, null, 10, 1, 1, null, null, 10, 4, 4, 4, 4, null, 4, null, 4, 2, null, 2, 12, 12, null, null, 2, null, null, 2, 2, null, 4, 4, null, null, 10, 3, null, null, 10, 0, 0, null, null, null, 10, null]}, {"source": "//\n// This controller provides a custom interface for Walkin nurses to create many\n// investigations at once.\n//\ncontrollers.controller(\n    'WalkinNurseInvestigationsCtrl',\n    function( $scope, $modalInstance, $q, episode ){\n        \"use strict\";\n\n        $scope.investigations = {};\n        $scope.episode        = episode;\n        $scope.saving = false;\n\n        $scope.test_names = {\n            blood_culture      : 'Blood Culture',\n            urine_mcs          : 'Urine MC&S',\n            wound_swab_mcs     : 'Wound swab MC&S',\n            throat_swab_mcs    : 'Throat swab MC&S',\n            stool_mcs          : 'Stool MC&S',\n            stool_ocp          : 'Stool OCP',\n            malaria_film       : 'Malaria Film',\n            full_blood_count   : 'Full Blood Count',\n            biochemistry       : 'Biochemistry',\n            serum_save         : 'Serum Save',\n            resp_pcr           : 'Respiratory Virus PCR',\n            chikungunya        : 'Chikungunya',\n            dengue             : 'Dengue',\n            parasite_id        : 'Parasite ID',\n            rickettsia_serology: 'Rickettsia Serology'\n        }\n        $scope.test_properties = _.invert( $scope.test_names );\n\n        _.each( episode.microbiology_test, function(test){\n            if( test.test in $scope.test_properties ){\n                $scope.investigations[$scope.test_properties[test.test]] = true;\n            }\n        });\n        $scope.initial = angular.copy( $scope.investigations );\n\n\n        $scope.save = function(){\n            var saves = [];\n            _.each( _.keys( $scope.investigations ), function( key ){\n                if( $scope.investigations[key] == true && !$scope.initial[key] ){\n                    var test = $scope.episode.newItem( 'microbiology_test' );\n                    saves.push( test.save( {\n                        test: $scope.test_names[key],\n                        date_ordered: moment()} ) );\n                }\n            });\n            if( saves.length > 0 ){\n                $scope.saving = true;\n                $q.all( saves ).then(\n                    function(){\n                        $scope.saving = false;\n                        $modalInstance.close();\n                    }\n                );\n            }else{\n                $modalInstance.close();\n            }\n        };\n\n        // Let's have a nice way to kill the modal.\n        $scope.cancel = function() {\n            $scope.saving = false;\n            $modalInstance.close('cancel');\n        };\n\n    }\n);\n", "branches": [34, 1, 0, 2, 34, 1, 1, 0, 44, 2, 0, 4, 44, 2, 1, 1, 44, 3, 0, 5, 44, 3, 1, 5, 51, 4, 0, 3, 51, 4, 1, 1], "name": "walkin/static/js/walkin/controllers/nurse_investigation.js", "coverage": [null, null, null, null, 1, null, null, null, null, 9, 9, 9, null, 9, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 9, null, 9, 2, 2, null, null, 9, null, null, 9, 4, 4, 5, 4, 4, null, null, null, null, 4, 3, 3, null, 3, 3, null, null, null, 1, null, null, null, null, 9, 1, 1, null, null, null, null]}, {"source": "//\n// This is the \"Next stage\" exit flow controller for OPAT patients.\n//\ncontrollers.controller(\n    'WalkinDischargeCtrl',\n    function(\n        $scope, $modalInstance, $modal, $rootScope, $q,\n        growl, Item, CopyToCategory, UserProfile, metadata, referencedata, episode, tags\n    ){\n\n        \"use strict\";\n\n        $scope.episode = episode;\n        $scope.meta = {\n            accepted        : null,\n            target_team     : null,\n            results_actioned: null,\n            follow_up       : null,\n            management      : episode.management[0].makeCopy()\n        };\n\n        //\n        // Here we conduct varous QC checks on the quality of data entered\n        // Individual methods are expected to return a boolean pass/fail for\n        // that check.\n        //\n        // qc.passes() and qc.fails() are predicate that check all the QC\n        // checks at once.\n        //\n        $scope.qc = {\n            ignore_hiv: false,\n            ignore_obs: false,\n            ignore_diagnosis: false,\n            hiv: function(){\n                if($scope.qc.ignore_hiv){ return true };\n                var hivtest = _.filter(\n                    $scope.episode.microbiology_test,\n                    function(t){return t.name=\"HIV Point of Care\"}\n                );\n                if(hivtest == []){\n                    return false;\n                }\n                var resulted = false;\n                _.each(hivtest, function(t){ if(t.result){ resulted = true }});\n                return resulted;\n            },\n            obs: function(){\n                if($scope.qc.ignore_obs){ return true };\n                return $scope.episode.observation.length > 0;\n            },\n            passes: function(){\n                return $scope.qc.hiv() && $scope.qc.obs()\n            },\n            fails: function(){ return !$scope.qc.passes() }\n        };\n\n        if($scope.meta.management.follow_up){ $scope.meta.follow_up = true; }\n\n        $scope.metadata = metadata;\n\n        _.extend($scope, referencedata.toLookuplists());\n\n        // Make sure that the episode's tagging item is an instance not an object\n        $scope.ensure_tagging = function(episode){\n            if(!$scope.episode.tagging[0].makeCopy){\n                $scope.episode.tagging[0] = $scope.episode.newItem('tagging',{\n                    column: $rootScope.fields.tagging }\n                                                                  )\n            }\n            return\n        };\n\n        //\n        // We have entered the follow up information - save this in\n        // Walk-in Management and then set the \"follow up\" variable.\n        //\n        $scope.save_follow_up = function(){\n            $scope.episode.management[0].save($scope.meta.management).then(\n                function(){\n                    $scope.meta.follow_up = 'saved';\n                }\n            );\n        };\n\n        $scope.move_to_doctor = function(){\n            $scope.ensure_tagging($scope.episode);\n            var tagging = $scope.episode.tagging[0].makeCopy();\n            tagging.walkin_triage = false;\n            tagging.walkin_doctor = true;\n\n            $scope.episode.tagging[0].save(tagging).then(function(){\n                growl.success('Moved to Doctor list')\n                $modalInstance.close('discharged');\n            });\n        };\n\n        //\n        // The doctor has finished seeing this patient - but there remain\n        // some outstanding test results that they would like to review.\n        //\n        // * Tag the patient to the review list\n        // * Set the discharge date on the Episode\n        // * Close the modal and inform the user\n        //\n        $scope.move_to_review = function(){\n            $scope.ensure_tagging($scope.episode);\n            var tagging = $scope.episode.tagging[0].makeCopy();\n            tagging.walkin_doctor = false;\n            tagging.walkin_review = true;\n\n            var ep = $scope.episode.makeCopy();\n            ep.end = new Date();\n\n            $scope.episode.save(ep).then(function(){\n                $scope.episode.tagging[0].save(tagging).then(function(){\n                    growl.success('Moved to Review list')\n                    $modalInstance.close('discharged');\n                });\n            });\n        }\n\n        //\n        // The nurse has cared for this patient and is sending them home.\n        //\n        // Save the nursing care metadata, the date of discharge, de-tag\n        // the patient, and then open a discharge summary window for the\n        // nurse to copy the episode summary.\n        //\n        $scope.nurse_led_care = function(){\n            var nursing = $scope.episode.newItem('walkin_nurse_led_care');\n\n            var ep = $scope.episode.makeCopy();\n            ep.end = new Date();\n\n            var to_save = [\n                nursing.save({\n                    reason:    $scope.meta.nurse_reason,\n                    treatment: $scope.meta.treatment\n                }),\n            ]\n            if($scope.meta.diagnosis){\n                var diagnosis = $scope.episode.newItem('diagnosis');\n                to_save.push(diagnosis.save({condition: $scope.meta.diagnosis}));\n            }\n\n            $scope.ensure_tagging($scope.episode);\n\n            var tagging = $scope.episode.tagging[0].makeCopy();\n            tagging.walkin_triage = false;\n            tagging.walkin_doctor = false;\n            tagging.walkin_review = false;\n\n            if($scope.episode.management.length == 0 || !$scope.episode.management[0].makeCopy){\n                $scope.episode.management[0] = $scope.episode.newItem('management',{\n                    column: $rootScope.fields.management }\n                                                                     )\n            }\n            var management = $scope.episode.management[0].makeCopy();\n            management.results_actioned = $scope.meta.results_actioned;\n            to_save.push($scope.episode.management[0].save(management));\n            to_save.push($scope.episode.tagging[0].save(tagging));\n\n            $scope.episode.save(ep).then(function(resp){\n                $q.all(to_save).then(function(){\n                    growl.success('Removed from Walk-in lists');\n                    var modal = $modal.open({\n                        templateUrl: '/dischargesummary/modals/walkinnurse/',\n                        controller: 'ModalDischargeSummaryCtrl',\n                        resolve: {episode: episode}\n                    });\n                    modal.result.then(\n                      function(){\n                        $modalInstance.close(\"discharged\");\n                      },\n                      function(){\n                        $modalInstance.close(\"discharged\");\n                      }\n                  );\n                });\n            });\n        };\n\n        //\n        // The appointment has finished with no further follow up.\n        //\n        // Untag this episode\n        // Set the discharge date if one does not exist\n        // Close the modal and inform the user\n        //\n        $scope.remove_from_list = function(){\n            $scope.ensure_tagging($scope.episode);\n            var tagging = $scope.episode.tagging[0].makeCopy();\n            tagging.walkin_triage = false;\n            tagging.walkin_doctor = false;\n            tagging.walkin_review = false;\n\n            var to_save = [\n                $scope.episode.tagging[0].save(tagging)\n            ]\n\n            if(!episode.end){\n                var ep = $scope.episode.makeCopy();\n                ep.end = new Date();\n                to_save.push($scope.episode.save(ep));\n            }\n\n            $q.all(to_save).then(function(){\n                growl.success('Removed from Walk-in lists');\n                $modalInstance.close('discharged');\n            });\n        }\n\n        //\n        // Copy this episode to a new inpatient episode.\n        //\n        // Untag this episode.\n        // Tag the new episode to the selected team\n        //\n        $scope.admit_to_ward = function(){\n            $scope.ensure_tagging($scope.episode);\n            var tagging = $scope.episode.tagging[0].makeCopy();\n            tagging.walkin = false;\n            tagging.walkin_doctor = false;\n            $scope.meta.management.follow_up = 'Admitted to ward';\n\n            CopyToCategory($scope.episode.id, 'Inpatient').then(\n                function(episode){\n                    var newtagging = episode.tagging[0];\n                    var newtags = {};\n                    newtags[$scope.meta.target_team] = true;\n                    var ep = $scope.episode.makeCopy();\n                    ep.end = new Date();\n                    $q.all([\n                        $scope.episode.tagging[0].save(tagging),\n                        $scope.episode.save(ep),\n                        newtagging.save(newtags),\n                        $scope.episode.management[0].save($scope.meta.management)\n                    ]).then(function(){\n                        var msg = 'Admitted to ' + $scope.meta.target_team + ' ward';\n                        growl.success(msg);\n                        $modalInstance.close('discharged');\n                    })\n                });\n        };\n\n\n        $scope._add_a_thing = function(what){\n            var deferred = $q.defer();\n            $scope.episode.recordEditor.newItem(what).then(\n                function(r){ deferred.resolve(r) },\n                function(r){ deferred.reject(r) }\n            );\n            $modalInstance.close(deferred.promise);\n        }\n\n        $scope.add_some_obs = function(){\n            $scope._add_a_thing('observation');\n        }\n\n        $scope.add_some_diagnosis = function(){\n            $scope._add_a_thing('diagnosis');\n        }\n\n        // Let's have a nice way to kill the modal.\n        $scope.cancel = function() {\n            $modalInstance.close('cancel');\n        };\n    });\n", "branches": [35, 1, 0, 0, 35, 1, 1, 0, 40, 2, 0, 0, 40, 2, 1, 0, 44, 3, 0, 0, 44, 3, 1, 0, 48, 4, 0, 0, 48, 4, 1, 0, 52, 5, 0, 0, 52, 5, 1, 0, 57, 6, 0, 0, 57, 6, 1, 13, 65, 7, 0, 2, 65, 7, 1, 9, 141, 8, 0, 0, 141, 8, 1, 2, 153, 9, 0, 0, 153, 9, 1, 2, 153, 10, 0, 2, 153, 10, 1, 2, 201, 11, 0, 3, 201, 11, 1, 1], "name": "walkin/static/js/walkin/controllers/walkin_discharge.js", "coverage": [null, null, null, 1, null, null, null, null, null, null, null, null, 13, 13, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 13, null, null, null, null, 0, 0, null, 0, null, 0, 0, null, 0, 0, 0, null, null, 0, 0, null, null, 0, null, 0, null, null, 13, null, 13, null, 13, null, null, 13, 11, 2, null, null, null, 11, null, null, null, null, null, null, 13, 0, null, 0, null, null, null, null, 13, 0, 0, 0, 0, null, 0, 0, 0, null, null, null, null, null, null, null, null, null, null, null, 13, 4, 4, 4, 4, null, 4, 4, null, 4, 4, 4, 4, null, null, null, null, null, null, null, null, null, null, null, 13, 2, null, 2, 2, null, 2, null, null, null, null, null, 2, 0, 0, null, null, 2, null, 2, 2, 2, 2, null, 2, 0, null, null, null, 2, 2, 2, 2, null, 2, 2, 2, 2, null, null, null, null, 2, null, 1, null, null, 1, null, null, null, null, null, null, null, null, null, null, null, null, null, 13, 4, 4, 4, 4, 4, null, 4, null, null, null, 4, 3, 3, 3, null, null, 4, 4, 4, null, null, null, null, null, null, null, null, null, 13, 1, 1, 1, 1, 1, null, 1, null, 1, 1, 1, 1, 1, 1, null, null, null, null, null, 1, 1, 1, null, null, null, null, null, 13, 0, 0, 0, 0, null, 0, null, null, 13, 0, null, null, 13, 0, null, null, null, 13, 0, null, null]}, {"source": "//\n// This is our \"Enter Walk-in\" flow controller\n//\ncontrollers.controller(\n    'WalkinHospitalNumberCtrl',\n    function($scope, $modalInstance, $modal, $rootScope, $q,\n             tags,\n             Episode){\n\n        $scope.model = {\n            hospitalNumber : null\n        }\n        $scope.patient = null;\n\n        //\n        // When we've created an episode with this flow, tag it to the correct\n        // teams and then kill the modal.\n        //\n        $scope.tag_and_close = function(episode){\n            if(!episode.newItem){\n                episode = new Episode(episode);\n            };\n            var ep = episode.makeCopy();\n            ep.category_name = 'Walkin';\n            ep.start = moment();\n            ep.end = moment();\n\n            //\n            // Pre fill some tests:\n            //\n            var hiv = episode.newItem('microbiology_test');\n\n            $q.all([\n                episode.save(ep),\n                hiv.save({test: 'HIV Point of Care'}),\n            ]).then(function(){\n                episode.active = true;\n                $modalInstance.close(episode);\n            })\n\n        };\n\n        //\n        // We have an initial hospital number - we can now figure out whether to\n        // Add or pull over.\n        //\n        $scope.findByHospitalNumber = function(){\n            var patientFound = function(result){\n              if(result.merged && result.merged.length){\n                $scope.result = result;\n              }\n              else{\n                $scope.newForPatient(result);\n              }\n            };\n\n            var patientNotFound = function(result){\n              $scope.result = result;\n            };\n\n            Episode.findByHospitalNumber(\n                $scope.model.hospitalNumber,\n                {\n                    newPatient: patientNotFound,\n                    newForPatient: patientFound,\n                    error: function(){\n                        // This shouldn't happen, but we should probably handle it better\n                        alert('ERROR: More than one patient found with hospital number');\n                        $modalInstance.close(null)\n                    }\n                }\n            );\n        };\n\n        //\n        // Create a new patient\n        //\n        $scope.newPatient = function(result){\n            // There is no patient with this hospital number\n            // Show user the form for creating a new episode,\n            // with the hospital number pre-populated\n            modal = $modal.open({\n                templateUrl: '/templates/modals/add_walkin_episode.html/',\n                controller: 'AddEpisodeCtrl',\n                resolve: {\n                    referencedata: function(Referencedata) { return Referencedata.load(); },\n                    demographics: function() {\n                        return { hospital_number: $scope.model.hospitalNumber }\n                    },\n                    tags: function(){ return tags }\n                }\n            }).result.then(function(result) {\n                // The user has created the episode, or cancelled\n                if(result){ // We made an episode!\n                    $scope.tag_and_close(result);\n                }else{\n                    $modalInstance.close(result);\n                }\n            });\n        };\n\n        //\n        // Create a new episode for an existing patient\n        //\n        $scope.newForPatient = function(patient){\n            var active_episodes = _.filter(\n                _.values(patient.episodes),\n                function(e){\n                    return e.active;\n                });\n            if(active_episodes.length > 0){\n                var die = false;\n                _.each(active_episodes, function(e){\n                    if(e.category_name == 'Inpatient'){\n                        alert('Warning - Patient is a current inpatient');\n                    }else if(e.category_name == 'Walkin'){\n                        var episode = new Episode(e);\n\n                        if(episode.getTags().length > 1){\n                            if(episode.hasTag('walkin_doctor')){\n                                alert('Patient is currently on the Walkin Doctor list');\n                                die = true;\n                                $scope.cancel();\n                                return\n                            }\n                            if(episode.hasTag('walkin_triage')){\n                                alert('Patient is currently on the Walkin Nurse list');\n                                die = true;\n                                $scope.cancel();\n                                return\n                            }\n                            if(episode.hasTag('walkin_review')){\n                                die = true;\n                                if(tags.subtag == 'walkin_review'){\n                                    alert('Patient is currently on the Walkin Review list');\n                                    console.log('already here');\n                                    $scope.cancel();\n                                } else {\n                                    alert('Patient is currently on the Walkin Review list. Moving them here.');\n                                    var tagging = episode.tagging[0].makeCopy();\n                                    tagging.walkin_review = false;\n                                    tagging[tags.subtag] = true;\n                                    episode.tagging[0].save(tagging).then(function(){\n                                        $modalInstance.close(episode);\n                                    })\n                                }\n                                return\n                            }\n                        }\n                    }\n                })\n            }\n            if(!die){\n                $scope.add_for_patient(patient);\n            }\n        };\n\n\n        //\n        // Add a new episode for an existing patient. Pre-fill the relevant demographics\n        //\n        $scope.add_for_patient = function(patient){\n            var demographics = patient.demographics[0];\n            modal = $modal.open({\n                templateUrl: '/templates/modals/add_walkin_episode.html/',\n                controller: 'AddEpisodeCtrl',\n                resolve: {\n                    referencedata: function(Referencedata) { return Referencedata; },\n                    demographics: function() { return demographics; },\n                    tags: function(){ return tags }\n                }\n            }).result.then(function(result) {\n                // The user has created the episode, or cancelled\n                if(result){ // We made an episode!\n                    $scope.tag_and_close(result);\n                }else{\n                    $modalInstance.close(result);\n                }\n            });\n        };\n\n        // Let's have a nice way to kill the modal.\n        $scope.cancel = function() {\n            $modalInstance.close('cancel');\n        };\n    }\n);\n", "branches": [20, 1, 0, 1, 20, 1, 1, 0, 49, 2, 0, 0, 49, 2, 1, 0, 49, 3, 0, 0, 49, 3, 1, 0, 94, 4, 0, 0, 94, 4, 1, 0, 111, 5, 0, 0, 111, 5, 1, 0, 114, 6, 0, 0, 114, 6, 1, 0, 116, 7, 0, 0, 116, 7, 1, 0, 119, 8, 0, 0, 119, 8, 1, 0, 120, 9, 0, 0, 120, 9, 1, 0, 126, 10, 0, 0, 126, 10, 1, 0, 132, 11, 0, 0, 132, 11, 1, 0, 134, 12, 0, 0, 134, 12, 1, 0, 153, 13, 0, 0, 153, 13, 1, 0, 174, 14, 0, 0, 174, 14, 1, 0], "name": "walkin/static/js/walkin/controllers/walkin_hospital_number.js", "coverage": [null, null, null, 1, null, null, null, null, null, 4, null, null, 4, null, null, null, null, null, 4, 1, 1, null, 1, 1, 1, 1, null, null, null, null, 1, null, 1, null, null, null, 1, 1, null, null, null, null, null, null, null, null, 4, 0, 0, 0, null, null, 0, null, null, null, 0, 0, null, null, 0, null, null, null, null, null, null, 0, 0, null, null, null, null, null, null, null, null, 4, null, null, null, 2, null, null, null, 3, null, 2, null, 3, null, null, null, 0, 0, null, 0, null, null, null, null, null, null, null, 4, 0, null, null, 0, null, 0, 0, 0, 0, 0, 0, 0, null, 0, 0, 0, 0, 0, 0, null, 0, 0, 0, 0, 0, null, 0, 0, 0, 0, 0, 0, null, 0, 0, 0, 0, 0, 0, null, null, 0, null, null, null, null, null, 0, 0, null, null, null, null, null, null, null, 4, 1, 1, null, null, null, 1, 1, 2, null, null, null, 0, 0, null, 0, null, null, null, null, null, 4, 0, null, null, null]}, {"source": "// \n// Discharge Flow controller for research studies.\n//\ncontrollers.controller(\n    'ResearchStudyDischargeCtrl',\n    function(\n        $scope, $modalInstance,\n        episode, tags\n    ){\n        // Setup initial vars\n        $scope.tags    = tags;\n        $scope.episode = episode;\n\n        var admission;\n        if(episode.start){\n            admission = moment(episode.start).format('MM/DD/YY')\n        }\n\n        $scope.editing = {\n            start: admission,\n\t    category: 'ineligible',\n            end: null\n        };\n\n        \n        // \n        // Discharging an episode requires updating three server-side entities:\n        //\n        // * Location\n        // * Tagging\n        // * Episode\n        // \n        // Make these requests then kill our modal.\n        // \n        $scope.discharge = function(){\n\t    var tagging = episode.getItem('tagging', 0);\n            var location = episode.getItem('location', 0);\n            \n\t    var taggingAttrs = tagging.makeCopy();\n            var locationAttrs = location.makeCopy();\n            var episodeAttrs = episode.makeCopy();\n\n\t    locationAttrs.category = $scope.editing.category;\n            episodeAttrs.end = $scope.editing.end;\n\n            // \n            // Set tagging attributes to what they need to be\n            // \n\t    taggingAttrs[$scope.tags.tag] = false;\n\t    taggingAttrs[$scope.tags.tag+'_scientist'] = false;\n\t    taggingAttrs[$scope.tags.tag+'_research_practitioner'] = false;\n\n\t    tagging.save(taggingAttrs).then(function(){\n                location.save(locationAttrs).then(function(){\n                    episode.save(episodeAttrs).then(function(){\n                        $modalInstance.close('discharged');            \n                    })\n                })\n\n\t    });            \n        };\n\n        $scope.cancel = function() {\n\t    $modalInstance.close('cancel');\n        };\n        \n    });\n", "branches": [15, 1, 0, 0, 15, 1, 1, 0], "name": "research/static/js/research/controllers/discharge.js", "coverage": [null, null, null, 1, null, null, null, null, null, null, 0, 0, null, 0, 0, 0, null, null, 0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 0, 0, 0, null, 0, 0, 0, null, 0, 0, null, null, null, null, 0, 0, 0, null, 0, 0, 0, 0, null, null, null, null, null, null, 0, 0, null, null, null]}, {"source": "//\n// This is our \"Enter Walk-in\" flow controller\n//\ncontrollers.controller(\n    'ResearchStudyHospitalNumberCtrl',\n    function($scope, $modalInstance, $modal, $rootScope,\n             $routeParams, $q,\n             Episode){\n\n        $scope.model = {\n            hospitalNumber : null\n        }\n        $scope.patient = null;\n\n        //\n        // When we've created an episode with this flow, tag it to the correct\n        // teams and then kill the modal.\n        //\n        $scope.tag_and_close = function(episode){\n            if(!episode.newItem){ episode = new Episode(episode); };\n\n            var tag = $routeParams.tag;\n            var teams = episode.tagging[0].makeCopy();\n            teams[tag] = true;\n            teams[tag+'_research_practitioner'] = true,\n            teams[tag+'_scientist'] = true\n\n            var ep = episode.makeCopy()\n\n            ep.category_name = 'Research'\n\n            episode.save(ep).then(\n                function(){\n                    episode.tagging[0].save(teams).then(\n                        function(){\n                            episode.active = true;\n                            $modalInstance.close(episode);\n                        }\n                    );\n                }\n            );\n        };\n\n        //\n        // We have an initial hospital number - we can now figure out whether to\n        // Add or pull over.\n        //\n        $scope.findByHospitalNumber = function(){\n            var patientFound = function(result){\n              if(result.merged && result.merged.length){\n                $scope.result = result;\n              }\n              else{\n                $modalInstance.close();\n                $scope.newForPatient(result);\n              }\n            };\n\n            var patientNotFound = function(result){\n              $scope.result = result;\n            };\n\n\n            Episode.findByHospitalNumber(\n                $scope.model.hospitalNumber,\n                {\n                    newPatient: patientNotFound,\n                    newForPatient: patientFound,\n                    error: function(){\n                        // This shouldn't happen, but we should probably handle it better\n                        alert('ERROR: More than one patient found with hospital number');\n                        $modalInstance.close(null)\n                    }\n                }\n            );\n        };\n\n        //\n        // Create a new patient\n        //\n        $scope.newPatient = function(result){\n            // There is no patient with this hospital number\n            // Show user the form for creating a new episode,\n            // with the hospital number pre-populated\n            modal = $modal.open({\n                templateUrl: '/templates/modals/add_episode_without_teams.html/',\n                controller: 'AddEpisodeCtrl',\n                resolve: {\n                    referencedata: function(Referencedata) { return Referencedata.load(); },\n                    demographics: function() {\n                        return { hospital_number: $scope.model.hospitalNumber }\n                    },\n                    tags: function(){ return {}; }\n                }\n            }).result.then(function(result) {\n                // The user has created the episode, or cancelled\n                if(result){ // We made an episode!\n                    $scope.tag_and_close(result);\n                }else{\n                    $modalInstance.close(result);\n                }\n            });\n        };\n\n        //\n        // Create a new episode for an existing patient\n        //\n        $scope.newForPatient = function(patient){\n            if(patient.active_episode_id && _.keys(patient.episodes).length > 0){\n                // Offer to import the data from this episode.\n                for (var eix in patient.episodes) {\n                    patient.episodes[eix] = new Episode(patient.episodes[eix]);\n                };\n                modal = $modal.open({\n                    templateUrl: '/templates/modals/copy_to_category.html/',\n                    controller: 'CopyToCategoryCtrl',\n                    resolve: {\n                        patient: function() { return patient; },\n                        category_name: function() { return 'Research'; }\n                    }\n                }).result.then(\n                    function(result) {\n                        if(!_.isString(result)){\n                            $scope.tag_and_close(result);\n                            return\n                        };\n                        if (result == 'open-new') { // User has chosen to open a new episode\n                            $scope.add_for_patient(patient);\n                        } else {\n                            // User has chosen to reopen an episode, or cancelled\n                            $modalInstance.close(result);\n                        };\n                    },\n                    function(result){ $modalInstance.close(result); });\n            }else{\n                $scope.add_for_patient(patient);\n            };\n        };\n\n        //\n        // Add a new episode for an existing patient. Pre-fill the relevant demographics\n        //\n        $scope.add_for_patient = function(patient){\n            var demographics = patient.demographics[0];\n\n            modal = $modal.open({\n                templateUrl: '/templates/modals/add_episode_without_teams.html/',\n                controller: 'AddEpisodeCtrl',\n                resolve: {\n                    referencedata: function(Referencedata) { return Referencedata.load(); },\n                    demographics: function() { return demographics; },\n                    tags: function(){ return {} }\n                }\n            }).result.then(function(result) {\n                // The user has created the episode, or cancelled\n                if(result){ // We made an episode!\n                    $scope.tag_and_close(result);\n                }else{\n                    $modalInstance.close(result);\n                }\n            });\n        };\n\n        // Let's have a nice way to kill the modal.\n        $scope.cancel = function() {\n            $modalInstance.close('cancel');\n        };\n    }\n);\n", "branches": [20, 1, 0, 0, 20, 1, 1, 0, 50, 2, 0, 0, 50, 2, 1, 0, 50, 3, 0, 0, 50, 3, 1, 0, 97, 4, 0, 0, 97, 4, 1, 0, 109, 5, 0, 0, 109, 5, 1, 0, 109, 6, 0, 0, 109, 6, 1, 0, 123, 7, 0, 0, 123, 7, 1, 0, 127, 8, 0, 0, 127, 8, 1, 0, 156, 9, 0, 0, 156, 9, 1, 0], "name": "research/static/js/research/controllers/research_hospital_number.js", "coverage": [null, null, null, 1, null, null, null, null, null, 5, null, null, 5, null, null, null, null, null, 5, 0, null, 0, 0, 0, 0, null, null, 0, null, 0, null, 0, null, 0, null, 0, 0, null, null, null, null, null, null, null, null, null, null, 5, 0, 0, 0, null, null, 0, 0, null, null, null, 0, 0, null, null, null, 0, null, null, null, null, null, null, 0, 0, null, null, null, null, null, null, null, null, 5, null, null, null, 4, null, null, null, 5, null, 5, null, 4, null, null, null, 0, 0, null, 0, null, null, null, null, null, null, null, 5, 0, null, 0, 0, null, 0, null, null, null, 0, 0, null, null, null, 0, 0, 0, null, 0, 0, null, null, 0, null, null, 0, null, 0, null, null, null, null, null, null, 5, 0, null, 0, null, null, null, 0, 0, 0, null, null, null, 0, 0, null, 0, null, null, null, null, null, 5, 0, null, null, null]}, {"source": "controllers.controller('TropicalLiaisonAddPatient', function(\n    $scope, $http, $modalInstance, $q, FieldTranslater, Episode\n){\n  \"use strict\";\n\n  $scope.editing = {\n    tagging: {tropical_liaison: true}\n  };\n\n  $scope.save = function(){\n    var newEpisode = _.pick($scope.editing, \"demographics\", \"tagging\");\n    newEpisode.category_name = \"Tropical Liaison\";\n    var toSave = FieldTranslater.jsToPatient(newEpisode);\n\n    $http.post('/api/v0.1/episode/', toSave).success(function(episode) {\n      episode = new Episode(episode);\n      var tropicalLiaison = $scope.editing.external_liaison_contact_details;\n      if(_.size(tropicalLiaison)){\n        var liasonContactDetails = episode.external_liaison_contact_details[0];\n        tropicalLiaison.id = liasonContactDetails.id;\n        liasonContactDetails.save(tropicalLiaison).then(function(){\n          $modalInstance.close(episode);\n        });\n      }\n      else{\n        $modalInstance.close(episode);\n      }\n    });\n  };\n\n  // Let's have a nice way to kill the modal.\n  $scope.cancel = function() {\n      $modalInstance.close('cancel');\n  };\n});\n", "branches": [18, 1, 0, 1, 18, 1, 1, 1], "name": "infectiousdiseases/static/js/infectiousdiseases/controllers/tropical_liaison_add_patient.js", "coverage": [1, null, null, null, null, 3, null, null, null, 3, 2, 2, 2, null, 2, 2, 2, 2, 1, 1, 1, 1, null, null, null, 1, null, null, null, null, null, 3, 0, null, null]}, {"source": "controllers.controller(\n    'TropicalLiaisonEndLiason',\n    function($scope,\n             $modalInstance, episode,\n             DischargePatientService) {\n\n       \"use strict\";\n        var tags = {tag: \"tropical_liaison\", subtag: \"\"};\n        var dischargePatientService = new DischargePatientService();\n        $scope.editing = dischargePatientService.getEditing(episode);\n\n        $scope.discharge = function(){\n            dischargePatientService.discharge(episode, $scope.editing, tags).then(function(){\n                $scope.discharged = true;\n                $modalInstance.close('discharged');\n            });\n        };\n\n        $scope.cancel = function() {\n      \t    $modalInstance.close('cancel');\n        };\n    });\n", "name": "infectiousdiseases/static/js/infectiousdiseases/controllers/tropical_liaison_end_liaison.js", "coverage": [1, null, null, null, null, null, null, 3, 3, 3, null, 3, 1, 1, 1, null, null, null, 3, 1, null, null]}, {"source": "angular.module('opal.controllers').controller(\n    'VirologyHospitalNumberCtrl',\n    function($scope,\n             $timeout,\n             $modal,\n             $modalInstance,\n             $http,\n             $q,\n             Episode,\n             tags,\n             context,\n             hospital_number) {\n\n      $scope.model = {};\n      if(hospital_number){\n          $scope.model.hospitalNumber = hospital_number;\n      }\n      $scope.tags = tags;\n\n\t    $scope.findByHospitalNumber = function() {\n\n            Episode.findByHospitalNumber(\n                $scope.model.hospitalNumber,\n                {\n                    newPatient: $scope.newPatient,\n                    newForPatient: $scope.newForPatient,\n                    error: function(){\n\t\t\t            // This shouldn't happen, but we should probably handle it better\n\t\t\t            alert('ERROR: More than one patient found with hospital number');\n                        $modalInstance.close(null)\n                    }\n                }\n            );\n\n\t    };\n        var addPatient = function(demographics){\n            modal = $modal.open({\n  \t\t\t\ttemplateUrl: '/templates/modals/add_episode.html/',\n  \t\t\t\tcontroller: 'AddEpisodeCtrl',\n                size: 'lg',\n  \t\t\t\tresolve: {\n  \t\t\t\t\treferencedata: function(Referencedata) {\n                        return Referencedata.load();\n                    },\n  \t\t\t\t\tdemographics: function() {\n  \t\t\t\t\t\treturn demographics\n  \t\t\t\t\t},\n                    tags: function(){ return $scope.tags; }\n  \t\t\t\t}\n  \t\t\t}).result.then(function(result) {\n  \t\t\t\t// The user has created the episode, or cancelled\n  \t\t\t\t$modalInstance.close(result);\n  \t\t\t});\n        }\n\n        $scope.newPatient = function(result){\n            addPatient({ hospital_number: result.hospitalNumber });\n        };\n\n        $scope.addForPatient = function(patient){\n            demographics = patient.demographics[0];\n            if(demographics.date_of_birth){\n                var dob = moment(demographics.date_of_birth, 'YYYY-MM-DD')\n                    .format('DD/MM/YYYY');\n                demographics.date_of_birth = dob;\n            }\n\n            addPatient(demographics);\n        };\n\n        $scope.newForPatient = function(patient){\n    \t\t\tif (patient.active_episode_id &&\n                    // Check to see that this episode is not \"Discharged\"\n                    patient.episodes[patient.active_episode_id].location[0].category != 'Discharged') {\n    \t\t\t\t// This patient has an active episode\n                    $scope.newForPatientWithActiveEpisode(patient);\n    \t\t\t} else { // This patient has no active episode\n                    $scope.addForPatient(patient);\n    \t\t\t};\n        };\n\n        $scope.newForPatientWithActiveEpisode = function(patient){\n      \t\t\tepisode = new Episode(patient.episodes[patient.active_episode_id])\n\n            if(episode.category_name != 'Inpatient'){ // It's the wrong category - add new\n                return $scope.addForPatient(patient);\n            }\n            var tag = $scope.tags.subtag || $scope.tags.tag;\n\n            if(episode.location[0].category == 'Followup' && episode.hasTag(tag)){\n              modal = $modal.open({\n                  templateUrl: '/templates/modals/confirm_discharge.html',\n                  controller: 'ConfirmDischargeCtrl',\n                  size: 'lg',\n                  resolve: {\n                      patient: function() { return patient; },\n                      episode: function() { return episode; },\n                      tags: function(){ return $scope.tags; },\n                      context: function(){ return context; },\n                      nextStepController: function(){ return 'AddEpisodeCtrl';}\n                  }\n              }).result.then(\n                  function(result){\n                      $modalInstance.close(result);\n                  },\n                  function(result){\n                      $modalInstance.close(result);\n                });\n            }\n            else{\n              if (episode.tagging[0][$scope.tags.tag] &&\n                        ($scope.tags.subtag ==='' ||\n                         episode.tagging[0][$scope.tags.subtag])) {\n                // There is already an active episode for this patient\n                        // with the current tag\n                $modalInstance.close(episode);\n              } else {\n                // There is already an active episode for this patient but\n                        // it doesn't have the current tag.\n                        // Add the current Tag.\n                        episode.tagging[0][$scope.tags.tag] = true;\n                        if($scope.tags.subtag !== ''){\n                            episode.tagging[0][$scope.tags.subtag] = true;\n                        }\n\n                        episode.tagging[0].save(episode.tagging[0].makeCopy()).then(\n                            function(){\n                        $modalInstance.close(episode);\n                            });\n              }\n\n          }\n      };\n\n\n\n\t    $scope.cancel = function() {\n\t\t    $modalInstance.close(null);\n\t    };\n\n    });\n", "branches": [15, 1, 0, 1, 15, 1, 1, 19, 62, 2, 0, 6, 62, 2, 1, 0, 72, 3, 0, 1, 72, 3, 1, 5, 72, 4, 0, 6, 72, 4, 1, 2, 85, 5, 0, 1, 85, 5, 1, 3, 88, 6, 0, 3, 88, 6, 1, 2, 90, 7, 0, 1, 90, 7, 1, 2, 90, 8, 0, 3, 90, 8, 1, 1, 111, 9, 0, 1, 111, 9, 1, 1, 111, 10, 0, 2, 111, 10, 1, 2, 111, 10, 2, 1, 122, 11, 0, 1, 122, 11, 1, 0], "name": "infectiousdiseases/static/js/infectiousdiseases/controllers/virology_hospital_number.js", "coverage": [1, null, null, null, null, null, null, null, null, null, null, null, null, 20, 20, 1, null, 20, null, 20, null, 0, null, null, null, null, null, null, 0, 0, null, null, null, null, null, 20, 9, null, null, null, null, null, 1, null, null, 3, null, 2, null, null, null, 3, null, null, null, 20, 3, null, null, 20, 6, 6, 6, null, 6, null, null, 6, null, null, 20, 6, null, null, null, 1, null, 5, null, null, null, 20, 4, null, 4, 1, null, 3, null, 3, 1, null, null, null, null, 0, 0, 0, 0, 1, null, null, null, 0, null, null, 0, null, null, null, 2, null, null, null, null, 1, null, null, null, null, 1, 1, 1, null, null, 1, null, 1, null, null, null, null, null, null, null, null, 20, 1, null, null, null]}], "service_name": "travis-ci", "service_job_id": "381698298", "service_pull_request": "false"}
==
Reporting 89 files
==

elcid/__init__.py - 21/83
elcid/admin.py - 13/52
elcid/api.py - 13/20
elcid/dashboards.py - 59/115
elcid/detail.py - 10/15
elcid/forms.py - 3/11
elcid/gloss_api.py - 69/147
elcid/management/__init__.py - 0/1
elcid/management/commands/__init__.py - 0/1
elcid/management/commands/randomise_admission_dates.py - 14/23
elcid/management/commands/status_report.py - 22/43
elcid/middleware.py - 53/90
elcid/models.py - 265/476
elcid/patient_lists.py - 19/51
elcid/search.py - 23/49
elcid/templatetags/__init__.py - 0/1
elcid/templatetags/elcid_pathways.py - 13/25
elcid/urls.py - 10/37
elcid/views.py - 23/87
elcid/wardrounds.py - 19/48
infectiousdiseases/__init__.py - 0/1
infectiousdiseases/dashboards.py - 44/64
infectiousdiseases/episode_categories.py - 5/10
infectiousdiseases/models.py - 13/36
infectiousdiseases/patient_lists.py - 59/141
infectiousdiseases/plugin.py - 4/21
infectiousdiseases/reports.py - 89/182
infectiousdiseases/tests/__init__.py - 0/1
infectiousdiseases/tests/test_reports.py - 169/439
infectiousdiseases/wardrounds.py - 17/29
microhaem/__init__.py - 0/1
microhaem/constants.py - 5/11
microhaem/detail.py - 9/19
microhaem/models.py - 35/56
microhaem/pathways.py - 42/94
microhaem/patient_lists.py - 17/34
microhaem/plugin.py - 3/19
opat/__init__.py - 0/4
opat/dischargesummaries.py - 5/10
opat/episode_categories.py - 4/7
opat/models.py - 106/147
opat/patient_lists.py - 30/57
opat/plugin.py - 10/57
opat/urls.py - 3/16
opat/views.py - 8/18
opat/wardrounds.py - 20/30
walkin/__init__.py - 0/4
walkin/dischargesummaries.py - 9/16
walkin/episode_categories.py - 4/7
walkin/management/__init__.py - 0/1
walkin/management/commands/__init__.py - 0/1
walkin/management/commands/move_symptoms_to_presentingcomplaints.py - 9/26
walkin/models.py - 72/146
walkin/patient_lists.py - 31/87
walkin/plugin.py - 6/23
walkin/urls.py - 4/17
walkin/views.py - 5/11
elcid/assets/js/elcid/routes.js - 21/6
elcid/assets/js/elcid/controllers/clinical_advice_form.js - 49/49
elcid/assets/js/elcid/controllers/confirm_discharge.js - 41/49
elcid/assets/js/elcid/controllers/diagnosis_add_episode.js - 107/80
elcid/assets/js/elcid/controllers/diagnosis_discharge.js - 1428/498
elcid/assets/js/elcid/controllers/diagnosis_hospital_number.js - 119/159
elcid/assets/js/elcid/controllers/discharge.js - 28/34
elcid/assets/js/elcid/controllers/duplicate_patient.js - 1/9
elcid/assets/js/elcid/controllers/haem_view.js - 22/70
elcid/assets/js/elcid/controllers/result_view.js - 11/12
elcid/assets/js/elcid/services/dicharge_patient.js - 41/96
elcid/assets/js/elcid/services/flow.js - 111/115
elcid/assets/js/elcid/services/location_ward_comparator.js - 115/28
elcid/assets/js/elcid/services/records/antimicrobial.js - 13/18
elcid/assets/js/elcid/services/records/diagnosis.js - 10/18
elcid/assets/js/elcid/services/records/general_note.js - 10/18
elcid/assets/js/elcid/services/records/investigation.js - 10/18
elcid/assets/js/elcid/services/records/line.js - 10/18
elcid/assets/js/elcid/services/records/microbiology_input.js - 27/21
elcid/assets/js/elcid/services/records/opat_line_assessment.js - 10/18
elcid/assets/js/elcid/services/records/opat_review.js - 27/21
opat/static/js/opat/controllers/opat_discharge.js - 203/295
opat/static/js/opat/controllers/opat_referral.js - 60/220
microhaem/static/js/haem/controllers/uch_find_patient.js - 178/69
walkin/static/js/walkin/controllers/nurse_investigation.js - 126/71
walkin/static/js/walkin/controllers/walkin_discharge.js - 392/268
walkin/static/js/walkin/controllers/walkin_hospital_number.js - 59/187
research/static/js/research/controllers/discharge.js - 1/67
research/static/js/research/controllers/research_hospital_number.js - 59/169
infectiousdiseases/static/js/infectiousdiseases/controllers/tropical_liaison_add_patient.js - 29/35
infectiousdiseases/static/js/infectiousdiseases/controllers/tropical_liaison_end_liaison.js - 20/22
infectiousdiseases/static/js/infectiousdiseases/controllers/virology_hospital_number.js - 291/141

travis_time:end:1cc7a568:start=1526913336064455842,finish=1526913336502863613,duration=438407771[0Ktravis_fold:end:after_success.4[0Ktravis_fold:start:after_success.5[0Ktravis_time:start:0ba5b1b8[0K$ coveralls --merge=coverage/coverage.json
Submitting coverage to coveralls.io...
Coverage submitted!
Job #2940.1
https://coveralls.io/jobs/36708423

travis_time:end:0ba5b1b8:start=1526913336509784653,finish=1526913337799461410,duration=1289676757[0Ktravis_fold:end:after_success.5[0K
Done. Your build exited with 0.
