diff --git a/CHANGELOG.md b/CHANGELOG.md
index a9cd519e0e..00ad4c3936 100755
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,6 +1,55 @@
 Change Log
 ==========
 
+## Version 2.5.0
+
+_2015-08-25_
+
+ *  **Timeouts now default to 10 seconds.** Previously we defaulted to never
+    timing out, and that was a lousy policy. If establishing a connection,
+    reading the next byte from a connection, or writing the next byte to a
+    connection takes more than 10 seconds to complete, you’ll need to adjust
+    the timeouts manually.
+
+ *  **OkHttp now rejects request headers that contain invalid characters.** This
+    includes potential security problems (newline characters) as well as simple
+    non-ASCII characters (including international characters and emoji).
+
+ *  **Call canceling is more reliable.**  We had a bug where a socket being
+     connected wasn't being closed when the application used `Call.cancel()`.
+
+ *  **Changing a HttpUrl’s scheme now tracks the default port.** We had a bug
+    where changing a URL from `http` to `https` would leave it on port 80.
+
+ *  **Okio has been updated to 1.6.0.**
+     ```
+     <dependency>
+       <groupId>com.squareup.okio</groupId>
+       <artifactId>okio</artifactId>
+       <version>1.6.0</version>
+     </dependency>
+     ```
+
+ *  New: `Cache.initialize()`. Call this on a background thread to eagerly
+    initialize the response cache.
+ *  New: Fold `MockWebServerRule` into `MockWebServer`. This makes it easier to
+    write JUnit tests with `MockWebServer`. The `MockWebServer` library now
+    depends on JUnit, though it continues to work with all testing frameworks.
+ *  Fix: `FormEncodingBuilder` is now consistent with browsers in which
+    characters it escapes. Previously we weren’t percent-encoding commas,
+    parens, and other characters.
+ *  Fix: Relax `FormEncodingBuilder` to support building empty forms.
+ *  Fix: Timeouts throw `SocketTimeoutException`, not `InterruptedIOException`.
+ *  Fix: Change `MockWebServer` to use the same logic as OkHttp when determining
+    whether an HTTP request permits a body.
+ *  Fix: `HttpUrl` now uses the canonical form for IPv6 addresses.
+ *  Fix: Use `HttpUrl` internally.
+ *  Fix: Recover from Android 4.2.2 EBADF crashes.
+ *  Fix: Don't crash with an `IllegalStateException` if an HTTP/2 or SPDY
+    write fails, leaving the connection in an inconsistent state.
+ *  Fix: Make sure the default user agent is ASCII.
+
+
 ## Version 2.4.0
 
 _2015-05-22_
diff --git a/README.md b/README.md
index 6e010257bb..4fde155df0 100755
--- a/README.md
+++ b/README.md
@@ -11,12 +11,12 @@ Download [the latest JAR][3] or grab via Maven:
 <dependency>
   <groupId>com.squareup.okhttp</groupId>
   <artifactId>okhttp</artifactId>
-  <version>2.4.0</version>
+  <version>2.5.0</version>
 </dependency>
 ```
 or Gradle:
 ```groovy
-compile 'com.squareup.okhttp:okhttp:2.4.0'
+compile 'com.squareup.okhttp:okhttp:2.5.0'
 ```
 
 Snapshots of the development version are available in [Sonatype's `snapshots` repository][snap].
@@ -36,13 +36,13 @@ Download [the latest JAR][4] or grab via Maven:
 <dependency>
   <groupId>com.squareup.okhttp</groupId>
   <artifactId>mockwebserver</artifactId>
-  <version>2.4.0</version>
+  <version>2.5.0</version>
   <scope>test</scope>
 </dependency>
 ```
 or Gradle:
 ```groovy
-testCompile 'com.squareup.okhttp:mockwebserver:2.4.0'
+testCompile 'com.squareup.okhttp:mockwebserver:2.5.0'
 ```
 
 
diff --git a/benchmarks/pom.xml b/benchmarks/pom.xml
index a56c4112d2..d0d2566523 100755
--- a/benchmarks/pom.xml
+++ b/benchmarks/pom.xml
@@ -6,7 +6,7 @@
   <parent>
     <groupId>com.squareup.okhttp</groupId>
     <artifactId>parent</artifactId>
-    <version>2.5.0-SNAPSHOT</version>
+    <version>2.6.0-SNAPSHOT</version>
   </parent>
 
   <artifactId>benchmarks</artifactId>
diff --git a/mockwebserver/README.md b/mockwebserver/README.md
index 00a3b0f54b..3fd6ca6e9d 100755
--- a/mockwebserver/README.md
+++ b/mockwebserver/README.md
@@ -42,7 +42,7 @@ public void test() throws Exception {
   server.start();
 
   // Ask the server for its URL. You'll need this to make HTTP requests.
-  URL baseUrl = server.getUrl("/v1/chat/");
+  URL baseUrl = server.url("/v1/chat/");
 
   // Exercise your application code, which should make those HTTP requests.
   // Responses are returned in the same order that they are enqueued.
diff --git a/mockwebserver/pom.xml b/mockwebserver/pom.xml
index 3d5c842f8a..9ef5211d1f 100755
--- a/mockwebserver/pom.xml
+++ b/mockwebserver/pom.xml
@@ -6,7 +6,7 @@
   <parent>
     <groupId>com.squareup.okhttp</groupId>
     <artifactId>parent</artifactId>
-    <version>2.5.0-SNAPSHOT</version>
+    <version>2.6.0-SNAPSHOT</version>
   </parent>
 
   <artifactId>mockwebserver</artifactId>
diff --git a/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java
index 6662744193..458c6f9a5c 100755
--- a/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java
+++ b/mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java
@@ -35,7 +35,6 @@
 import com.squareup.okhttp.internal.ws.WebSocketProtocol;
 import com.squareup.okhttp.ws.WebSocketListener;
 import java.io.IOException;
-import java.net.Inet6Address;
 import java.net.InetAddress;
 import java.net.InetSocketAddress;
 import java.net.ProtocolException;
@@ -165,18 +164,6 @@ public int getPort() {
 
   public String getHostName() {
     maybeStart();
-    if (inetSocketAddress.getAddress() instanceof Inet6Address) {
-      Inet6Address address = (Inet6Address) inetSocketAddress.getAddress();
-      String hostName = inetSocketAddress.getHostName();
-      if (hostName.contains(":")) {
-        int scopeSeparator = hostName.indexOf('%');
-        if (scopeSeparator != -1) {
-          // Hack around lack of scope support in HttpUrl.
-          hostName = hostName.substring(0, scopeSeparator);
-        }
-        return "[" + hostName + "]";
-      }
-    }
     return inetSocketAddress.getHostName();
   }
 
diff --git a/okcurl/pom.xml b/okcurl/pom.xml
index 70cab20dda..e80d121eaa 100755
--- a/okcurl/pom.xml
+++ b/okcurl/pom.xml
@@ -6,7 +6,7 @@
   <parent>
     <groupId>com.squareup.okhttp</groupId>
     <artifactId>parent</artifactId>
-    <version>2.5.0-SNAPSHOT</version>
+    <version>2.6.0-SNAPSHOT</version>
   </parent>
 
   <artifactId>okcurl</artifactId>
diff --git a/okhttp-android-support/pom.xml b/okhttp-android-support/pom.xml
index 5453b955d7..f514808304 100755
--- a/okhttp-android-support/pom.xml
+++ b/okhttp-android-support/pom.xml
@@ -6,7 +6,7 @@
   <parent>
     <groupId>com.squareup.okhttp</groupId>
     <artifactId>parent</artifactId>
-    <version>2.5.0-SNAPSHOT</version>
+    <version>2.6.0-SNAPSHOT</version>
   </parent>
 
   <artifactId>okhttp-android-support</artifactId>
diff --git a/okhttp-apache/pom.xml b/okhttp-apache/pom.xml
index 70722835fb..74ff837b60 100755
--- a/okhttp-apache/pom.xml
+++ b/okhttp-apache/pom.xml
@@ -6,7 +6,7 @@
   <parent>
     <groupId>com.squareup.okhttp</groupId>
     <artifactId>parent</artifactId>
-    <version>2.5.0-SNAPSHOT</version>
+    <version>2.6.0-SNAPSHOT</version>
   </parent>
 
   <artifactId>okhttp-apache</artifactId>
diff --git a/okhttp-testing-support/pom.xml b/okhttp-testing-support/pom.xml
index 2b19defa4f..654b0e39e8 100755
--- a/okhttp-testing-support/pom.xml
+++ b/okhttp-testing-support/pom.xml
@@ -6,7 +6,7 @@
   <parent>
     <groupId>com.squareup.okhttp</groupId>
     <artifactId>parent</artifactId>
-    <version>2.5.0-SNAPSHOT</version>
+    <version>2.6.0-SNAPSHOT</version>
   </parent>
 
   <artifactId>okhttp-testing-support</artifactId>
diff --git a/okhttp-tests/pom.xml b/okhttp-tests/pom.xml
index ae31be751a..2bb198258a 100755
--- a/okhttp-tests/pom.xml
+++ b/okhttp-tests/pom.xml
@@ -6,7 +6,7 @@
   <parent>
     <groupId>com.squareup.okhttp</groupId>
     <artifactId>parent</artifactId>
-    <version>2.5.0-SNAPSHOT</version>
+    <version>2.6.0-SNAPSHOT</version>
   </parent>
 
   <artifactId>okhttp-tests</artifactId>
diff --git a/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java
index 051eae4b07..fb6f54597f 100755
--- a/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java
+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java
@@ -1889,9 +1889,8 @@ public RecordingSSLSocketFactory(SSLSocketFactory delegate) {
     }
 
     @Override
-    protected SSLSocket configureSocket(SSLSocket sslSocket) throws IOException {
+    protected void configureSocket(SSLSocket sslSocket) throws IOException {
       socketsCreated.add(sslSocket);
-      return sslSocket;
     }
 
     public List<SSLSocket> getSocketsCreated() {
diff --git a/okhttp-tests/src/test/java/com/squareup/okhttp/DelegatingSSLSocketFactory.java b/okhttp-tests/src/test/java/com/squareup/okhttp/DelegatingSSLSocketFactory.java
index 3fe6eb48ae..a14db22e67 100755
--- a/okhttp-tests/src/test/java/com/squareup/okhttp/DelegatingSSLSocketFactory.java
+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/DelegatingSSLSocketFactory.java
@@ -90,8 +90,7 @@ public SSLSocket createSocket(Socket socket, String host, int port, boolean auto
     return sslSocket;
   }
 
-  protected SSLSocket configureSocket(SSLSocket sslSocket) throws IOException {
+  protected void configureSocket(SSLSocket sslSocket) throws IOException {
     // No-op by default.
-    return sslSocket;
   }
 }
diff --git a/okhttp-tests/src/test/java/com/squareup/okhttp/DelegatingServerSocketFactory.java b/okhttp-tests/src/test/java/com/squareup/okhttp/DelegatingServerSocketFactory.java
index 7116fa3023..ef24aaaaeb 100755
--- a/okhttp-tests/src/test/java/com/squareup/okhttp/DelegatingServerSocketFactory.java
+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/DelegatingServerSocketFactory.java
@@ -35,30 +35,33 @@ public DelegatingServerSocketFactory(ServerSocketFactory delegate) {
   @Override
   public ServerSocket createServerSocket() throws IOException {
     ServerSocket serverSocket = delegate.createServerSocket();
-    return configureServerSocket(serverSocket);
+    configureServerSocket(serverSocket);
+    return serverSocket;
   }
 
   @Override
   public ServerSocket createServerSocket(int port) throws IOException {
     ServerSocket serverSocket = delegate.createServerSocket(port);
-    return configureServerSocket(serverSocket);
+    configureServerSocket(serverSocket);
+    return serverSocket;
   }
 
   @Override
   public ServerSocket createServerSocket(int port, int backlog) throws IOException {
     ServerSocket serverSocket = delegate.createServerSocket(port, backlog);
-    return configureServerSocket(serverSocket);
+    configureServerSocket(serverSocket);
+    return serverSocket;
   }
 
   @Override
   public ServerSocket createServerSocket(int port, int backlog, InetAddress ifAddress)
       throws IOException {
     ServerSocket serverSocket = delegate.createServerSocket(port, backlog, ifAddress);
-    return configureServerSocket(serverSocket);
+    configureServerSocket(serverSocket);
+    return serverSocket;
   }
 
-  protected ServerSocket configureServerSocket(ServerSocket serverSocket) throws IOException {
+  protected void configureServerSocket(ServerSocket serverSocket) throws IOException {
     // No-op by default.
-    return serverSocket;
   }
 }
diff --git a/okhttp-tests/src/test/java/com/squareup/okhttp/DelegatingSocket.java b/okhttp-tests/src/test/java/com/squareup/okhttp/DelegatingSocket.java
deleted file mode 100755
index ecc135cc24..0000000000
--- a/okhttp-tests/src/test/java/com/squareup/okhttp/DelegatingSocket.java
+++ /dev/null
@@ -1,200 +0,0 @@
-/*
- * Copyright 2015 Square Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.squareup.okhttp;
-
-import java.io.IOException;
-import java.io.InputStream;
-import java.io.OutputStream;
-import java.net.InetAddress;
-import java.net.Socket;
-import java.net.SocketAddress;
-import java.net.SocketException;
-import java.nio.channels.SocketChannel;
-
-/**
- * A {@link Socket} that delegates all calls.
- */
-public abstract class DelegatingSocket extends Socket {
-  protected final Socket delegate;
-
-  public DelegatingSocket(Socket delegate) {
-    this.delegate = delegate;
-  }
-
-  @Override public void shutdownInput() throws IOException {
-    delegate.shutdownInput();
-  }
-
-  @Override public void shutdownOutput() throws IOException {
-    delegate.shutdownOutput();
-  }
-
-  @Override public void close() throws IOException {
-    delegate.close();
-  }
-
-  @Override public InetAddress getInetAddress() {
-    return delegate.getInetAddress();
-  }
-
-  @Override public InputStream getInputStream() throws IOException {
-    return delegate.getInputStream();
-  }
-
-  @Override public boolean getKeepAlive() throws SocketException {
-    return delegate.getKeepAlive();
-  }
-
-  @Override public InetAddress getLocalAddress() {
-    return delegate.getLocalAddress();
-  }
-
-  @Override public int getLocalPort() {
-    return delegate.getLocalPort();
-  }
-
-  @Override public OutputStream getOutputStream() throws IOException {
-    return delegate.getOutputStream();
-  }
-
-  @Override public int getPort() {
-    return delegate.getPort();
-  }
-
-  @Override public int getSoLinger() throws SocketException {
-    return delegate.getSoLinger();
-  }
-
-  @Override public int getReceiveBufferSize() throws SocketException {
-    return delegate.getReceiveBufferSize();
-  }
-
-  @Override public int getSendBufferSize() throws SocketException {
-    return delegate.getSendBufferSize();
-  }
-
-  @Override public int getSoTimeout() throws SocketException {
-    return delegate.getSoTimeout();
-  }
-
-  @Override public boolean getTcpNoDelay() throws SocketException {
-    return delegate.getTcpNoDelay();
-  }
-
-  @Override public void setKeepAlive(boolean keepAlive) throws SocketException {
-    delegate.setKeepAlive(keepAlive);
-  }
-
-  @Override public void setSendBufferSize(int size) throws SocketException {
-    delegate.setSendBufferSize(size);
-  }
-
-  @Override public void setReceiveBufferSize(int size) throws SocketException {
-    delegate.setReceiveBufferSize(size);
-  }
-
-  @Override public void setSoLinger(boolean on, int timeout) throws SocketException {
-    delegate.setSoLinger(on, timeout);
-  }
-
-  @Override public void setSoTimeout(int timeout) throws SocketException {
-    delegate.setSoTimeout(timeout);
-  }
-
-  @Override public void setTcpNoDelay(boolean on) throws SocketException {
-    delegate.setTcpNoDelay(on);
-  }
-
-  @Override public String toString() {
-    return delegate.toString();
-  }
-
-  @Override public SocketAddress getLocalSocketAddress() {
-    return delegate.getLocalSocketAddress();
-  }
-
-  @Override public SocketAddress getRemoteSocketAddress() {
-    return delegate.getRemoteSocketAddress();
-  }
-
-  @Override public boolean isBound() {
-    return delegate.isBound();
-  }
-
-  @Override public boolean isConnected() {
-    return delegate.isConnected();
-  }
-
-  @Override public boolean isClosed() {
-    return delegate.isClosed();
-  }
-
-  @Override public void bind(SocketAddress localAddr) throws IOException {
-    delegate.bind(localAddr);
-  }
-
-  @Override public void connect(SocketAddress remoteAddr) throws IOException {
-    delegate.connect(remoteAddr);
-  }
-
-  @Override public void connect(SocketAddress remoteAddr, int timeout) throws IOException {
-    delegate.connect(remoteAddr, timeout);
-  }
-
-  @Override public boolean isInputShutdown() {
-    return delegate.isInputShutdown();
-  }
-
-  @Override public boolean isOutputShutdown() {
-    return delegate.isOutputShutdown();
-  }
-
-  @Override public void setReuseAddress(boolean reuse) throws SocketException {
-    delegate.setReuseAddress(reuse);
-  }
-
-  @Override public boolean getReuseAddress() throws SocketException {
-    return delegate.getReuseAddress();
-  }
-
-  @Override public void setOOBInline(boolean oobinline) throws SocketException {
-    delegate.setOOBInline(oobinline);
-  }
-
-  @Override public boolean getOOBInline() throws SocketException {
-    return delegate.getOOBInline();
-  }
-
-  @Override public void setTrafficClass(int value) throws SocketException {
-    delegate.setTrafficClass(value);
-  }
-
-  @Override public int getTrafficClass() throws SocketException {
-    return delegate.getTrafficClass();
-  }
-
-  @Override public void sendUrgentData(int value) throws IOException {
-    delegate.sendUrgentData(value);
-  }
-
-  @Override public SocketChannel getChannel() {
-    return delegate.getChannel();
-  }
-
-  @Override public void setPerformancePreferences(int connectionTime, int latency, int bandwidth) {
-    delegate.setPerformancePreferences(connectionTime, latency, bandwidth);
-  }
-}
diff --git a/okhttp-tests/src/test/java/com/squareup/okhttp/DelegatingSocketFactory.java b/okhttp-tests/src/test/java/com/squareup/okhttp/DelegatingSocketFactory.java
index e673fdf900..e8fdfe80fd 100755
--- a/okhttp-tests/src/test/java/com/squareup/okhttp/DelegatingSocketFactory.java
+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/DelegatingSocketFactory.java
@@ -36,37 +36,41 @@ public DelegatingSocketFactory(SocketFactory delegate) {
   @Override
   public Socket createSocket() throws IOException {
     Socket socket = delegate.createSocket();
-    return configureSocket(socket);
+    configureSocket(socket);
+    return socket;
   }
 
   @Override
   public Socket createSocket(String host, int port) throws IOException, UnknownHostException {
     Socket socket = delegate.createSocket(host, port);
-    return configureSocket(socket);
+    configureSocket(socket);
+    return socket;
   }
 
   @Override
   public Socket createSocket(String host, int port, InetAddress localAddress, int localPort)
       throws IOException, UnknownHostException {
     Socket socket = delegate.createSocket(host, port, localAddress, localPort);
-    return configureSocket(socket);
+    configureSocket(socket);
+    return socket;
   }
 
   @Override
   public Socket createSocket(InetAddress host, int port) throws IOException {
     Socket socket = delegate.createSocket(host, port);
-    return configureSocket(socket);
+    configureSocket(socket);
+    return socket;
   }
 
   @Override
   public Socket createSocket(InetAddress host, int port, InetAddress localAddress, int localPort)
       throws IOException {
     Socket socket = delegate.createSocket(host, port, localAddress, localPort);
-    return configureSocket(socket);
+    configureSocket(socket);
+    return socket;
   }
 
-  protected Socket configureSocket(Socket socket) throws IOException {
+  protected void configureSocket(Socket socket) throws IOException {
     // No-op by default.
-    return socket;
   }
 }
diff --git a/okhttp-tests/src/test/java/com/squareup/okhttp/FallbackTestClientSocketFactory.java b/okhttp-tests/src/test/java/com/squareup/okhttp/FallbackTestClientSocketFactory.java
index 5504e77d4f..5f9e623c1c 100755
--- a/okhttp-tests/src/test/java/com/squareup/okhttp/FallbackTestClientSocketFactory.java
+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/FallbackTestClientSocketFactory.java
@@ -40,8 +40,37 @@ public FallbackTestClientSocketFactory(SSLSocketFactory delegate) {
     super(delegate);
   }
 
-  @Override protected SSLSocket configureSocket(SSLSocket sslSocket) throws IOException {
-    return new TlsFallbackScsvDisabledSSLSocket(sslSocket);
+  @Override public SSLSocket createSocket(Socket s, String host, int port, boolean autoClose)
+      throws IOException {
+    SSLSocket socket = super.createSocket(s, host, port, autoClose);
+    return new TlsFallbackScsvDisabledSSLSocket(socket);
+  }
+
+  @Override public SSLSocket createSocket() throws IOException {
+    SSLSocket socket = super.createSocket();
+    return new TlsFallbackScsvDisabledSSLSocket(socket);
+  }
+
+  @Override public SSLSocket createSocket(String host,int port) throws IOException {
+    SSLSocket socket = super.createSocket(host, port);
+    return new TlsFallbackScsvDisabledSSLSocket(socket);
+  }
+
+  @Override public SSLSocket createSocket(String host,int port, InetAddress localHost,
+      int localPort) throws IOException {
+    SSLSocket socket = super.createSocket(host, port, localHost, localPort);
+    return new TlsFallbackScsvDisabledSSLSocket(socket);
+  }
+
+  @Override public SSLSocket createSocket(InetAddress host,int port) throws IOException {
+    SSLSocket socket = super.createSocket(host, port);
+    return new TlsFallbackScsvDisabledSSLSocket(socket);
+  }
+
+  @Override public SSLSocket createSocket(InetAddress address,int port,
+      InetAddress localAddress, int localPort) throws IOException {
+    SSLSocket socket = super.createSocket(address, port, localAddress, localPort);
+    return new TlsFallbackScsvDisabledSSLSocket(socket);
   }
 
   private static class TlsFallbackScsvDisabledSSLSocket extends DelegatingSSLSocket {
diff --git a/okhttp-tests/src/test/java/com/squareup/okhttp/HttpUrlTest.java b/okhttp-tests/src/test/java/com/squareup/okhttp/HttpUrlTest.java
index b281069f5f..66288a1980 100755
--- a/okhttp-tests/src/test/java/com/squareup/okhttp/HttpUrlTest.java
+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/HttpUrlTest.java
@@ -17,8 +17,10 @@
 
 import com.squareup.okhttp.UrlComponentEncodingTester.Component;
 import com.squareup.okhttp.UrlComponentEncodingTester.Encoding;
+import java.net.MalformedURLException;
 import java.net.URI;
 import java.net.URL;
+import java.net.UnknownHostException;
 import java.util.Arrays;
 import java.util.Collections;
 import java.util.LinkedHashSet;
@@ -949,6 +951,27 @@
     assertEquals(null, HttpUrl.get(uri));
   }
 
+  @Test public void fromJavaNetUrl_checked() throws Exception {
+    HttpUrl httpUrl = HttpUrl.getChecked("http://username:password@host/path?query#fragment");
+    assertEquals("http://username:password@host/path?query#fragment", httpUrl.toString());
+  }
+
+  @Test public void fromJavaNetUrlUnsupportedScheme_checked() throws Exception {
+    try {
+      HttpUrl.getChecked("mailto:user@example.com");
+      fail();
+    } catch (MalformedURLException e) {
+    }
+  }
+
+  @Test public void fromJavaNetUrlBadHost_checked() throws Exception {
+    try {
+      HttpUrl.getChecked("http://hostw ithspace/");
+      fail();
+    } catch (UnknownHostException expected) {
+    }
+  }
+
   @Test public void composeQueryWithComponents() throws Exception {
     HttpUrl base = HttpUrl.parse("http://host/");
     HttpUrl url = base.newBuilder().addQueryParameter("a+=& b", "c+=& d").build();
diff --git a/okhttp-tests/src/test/java/com/squareup/okhttp/URLConnectionTest.java b/okhttp-tests/src/test/java/com/squareup/okhttp/URLConnectionTest.java
index 514ae76fdb..65c1c057ab 100755
--- a/okhttp-tests/src/test/java/com/squareup/okhttp/URLConnectionTest.java
+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/URLConnectionTest.java
@@ -2232,18 +2232,15 @@ private void testRedirect(boolean temporary, String method) throws Exception {
     server.setServerSocketFactory(
         new DelegatingServerSocketFactory(ServerSocketFactory.getDefault()) {
           @Override
-          protected ServerSocket configureServerSocket(ServerSocket serverSocket)
-              throws IOException {
+          protected void configureServerSocket(ServerSocket serverSocket) throws IOException {
             serverSocket.setReceiveBufferSize(SOCKET_BUFFER_SIZE);
-            return serverSocket;
           }
         });
     client.client().setSocketFactory(new DelegatingSocketFactory(SocketFactory.getDefault()) {
       @Override
-      protected Socket configureSocket(Socket socket) throws IOException {
+      protected void configureSocket(Socket socket) throws IOException {
         socket.setReceiveBufferSize(SOCKET_BUFFER_SIZE);
         socket.setSendBufferSize(SOCKET_BUFFER_SIZE);
-        return socket;
       }
     });
 
@@ -3181,6 +3178,37 @@ private void zeroLengthPayload(String method)
     assertContent("abc", client.open(server.getUrl("/")));
   }
 
+  @Test public void urlWithSpaceInHost() throws Exception {
+    URLConnection urlConnection = client.open(new URL("http://and roid.com/"));
+    try {
+      urlConnection.getInputStream();
+      fail();
+    } catch (UnknownHostException expected) {
+    }
+  }
+
+  @Test public void urlWithSpaceInHostViaHttpProxy() throws Exception {
+    server.enqueue(new MockResponse());
+    URLConnection urlConnection =
+        client.open(new URL("http://and roid.com/"), server.toProxyAddress());
+
+    try {
+      // This test is to check that a NullPointerException is not thrown.
+      urlConnection.getInputStream();
+      fail(); // the RI makes a bogus proxy request for "GET http://and roid.com/ HTTP/1.1"
+    } catch (UnknownHostException expected) {
+    }
+  }
+
+  @Test public void urlHostWithNul() throws Exception {
+    URLConnection urlConnection = client.open(new URL("http://host\u0000/"));
+    try {
+      urlConnection.getInputStream();
+      fail();
+    } catch (UnknownHostException expected) {
+    }
+  }
+
   /** Returns a gzipped copy of {@code bytes}. */
   public Buffer gzip(String data) throws IOException {
     Buffer result = new Buffer();
diff --git a/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/DisconnectTest.java b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/DisconnectTest.java
index d64badbefc..7a70d03e34 100755
--- a/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/DisconnectTest.java
+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/DisconnectTest.java
@@ -55,18 +55,15 @@
     server.setServerSocketFactory(
         new DelegatingServerSocketFactory(ServerSocketFactory.getDefault()) {
           @Override
-          protected ServerSocket configureServerSocket(ServerSocket serverSocket)
-              throws IOException {
+          protected void configureServerSocket(ServerSocket serverSocket) throws IOException {
             serverSocket.setReceiveBufferSize(SOCKET_BUFFER_SIZE);
-            return serverSocket;
           }
         });
     client.setSocketFactory(new DelegatingSocketFactory(SocketFactory.getDefault()) {
       @Override
-      protected Socket configureSocket(Socket socket) throws IOException {
+      protected void configureSocket(Socket socket) throws IOException {
         socket.setSendBufferSize(SOCKET_BUFFER_SIZE);
         socket.setReceiveBufferSize(SOCKET_BUFFER_SIZE);
-        return socket;
       }
     });
   }
diff --git a/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/ThreadInterruptTest.java b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/ThreadInterruptTest.java
index 9088f9316b..63f55e1f18 100755
--- a/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/ThreadInterruptTest.java
+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/ThreadInterruptTest.java
@@ -16,12 +16,9 @@
 package com.squareup.okhttp.internal.http;
 
 import com.squareup.okhttp.DelegatingServerSocketFactory;
-import com.squareup.okhttp.DelegatingSocket;
 import com.squareup.okhttp.DelegatingSocketFactory;
 import com.squareup.okhttp.OkHttpClient;
 import com.squareup.okhttp.OkUrlFactory;
-import com.squareup.okhttp.internal.Internal;
-import com.squareup.okhttp.internal.Network;
 import com.squareup.okhttp.mockwebserver.MockResponse;
 import com.squareup.okhttp.mockwebserver.MockWebServer;
 
@@ -30,28 +27,17 @@
 import java.io.InterruptedIOException;
 import java.io.OutputStream;
 import java.net.HttpURLConnection;
-import java.net.Inet4Address;
-import java.net.InetAddress;
-import java.net.NetworkInterface;
 import java.net.ServerSocket;
 import java.net.Socket;
-import java.net.SocketAddress;
-import java.net.SocketException;
-import java.net.SocketTimeoutException;
-import java.net.UnknownHostException;
-import java.util.Enumeration;
 import java.util.concurrent.TimeUnit;
-import java.util.concurrent.atomic.AtomicInteger;
 
 import okio.Buffer;
 import org.junit.Before;
-import org.junit.Ignore;
 import org.junit.Test;
 
 import javax.net.ServerSocketFactory;
 import javax.net.SocketFactory;
 
-import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.fail;
 
 public final class ThreadInterruptTest {
@@ -59,14 +45,6 @@
   // The size of the socket buffers in bytes.
   private static final int SOCKET_BUFFER_SIZE = 256 * 1024;
 
-  // 203.0.113.255 reserved for documentation.
-  private static final byte[] IPV4_BLACKHOLE_ADDRESS =
-      new byte[] { (byte) 203, 0, 113, (byte) 255 };
-
-  // 2001:db8::1 reserved for documentation.
-  public static final byte[] IPV6_BLACKHOLE_ADDRESS =
-      new byte[] { 0x20, 0x01, 0x0d, (byte) 0xb8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 };
-
   private MockWebServer server;
   private OkHttpClient client;
 
@@ -79,51 +57,19 @@
     server.setServerSocketFactory(
         new DelegatingServerSocketFactory(ServerSocketFactory.getDefault()) {
           @Override
-          protected ServerSocket configureServerSocket(ServerSocket serverSocket)
-              throws IOException {
+          protected void configureServerSocket(ServerSocket serverSocket) throws IOException {
             serverSocket.setReceiveBufferSize(SOCKET_BUFFER_SIZE);
-            return serverSocket;
           }
         });
     client.setSocketFactory(new DelegatingSocketFactory(SocketFactory.getDefault()) {
       @Override
-      protected Socket configureSocket(Socket socket) throws IOException {
+      protected void configureSocket(Socket socket) throws IOException {
         socket.setSendBufferSize(SOCKET_BUFFER_SIZE);
         socket.setReceiveBufferSize(SOCKET_BUFFER_SIZE);
-        return socket;
       }
     });
   }
 
-  @Test @Ignore public void interruptConnect() throws Exception {
-    // Neither the OpenJDK nor Android implement interruption of Socket.connect() using
-    // Thread.interrupt().
-    fail();
-  }
-
-  // Connect timeouts throw InterruptedIOException (actually SocketTimeoutException).
-  // Interruptions should terminate connection attempts, but timeouts should not.
-  @Test public void timeoutConnect() throws Exception {
-    InetAddress localAddress = getNonLoopbackLocalAddress();
-    InetAddress blackholeAddress = getBlackholeAddress(localAddress);
-    // Attempt to connect twice: once using an address that will timeout, once on the real
-    // address.
-    Internal.instance.setNetwork(client,
-        new FakeNetwork(new InetAddress[] { blackholeAddress, localAddress }));
-    TimeoutCountingSocketFactory clientSocketFactory = new TimeoutCountingSocketFactory();
-    client.setSocketFactory(clientSocketFactory);
-
-    server.enqueue(new MockResponse());
-    server.start(localAddress, 0);
-
-    HttpURLConnection connection = new OkUrlFactory(client).open(server.getUrl("/"));
-    connection.setConnectTimeout(10);
-    assertEquals(200, connection.getResponseCode());
-    clientSocketFactory.assertTimeoutCount(1);
-
-    connection.disconnect();
-  }
-
   @Test public void interruptWritingRequestBody() throws Exception {
     int requestBodySize = 2 * 1024 * 1024; // 2 MiB
 
@@ -187,82 +133,4 @@ private void interruptLater(final int delayMillis) {
     };
     interruptingCow.start();
   }
-
-  private static class FakeNetwork implements Network {
-    private final InetAddress[] addresses;
-
-    public FakeNetwork(InetAddress[] addresses) {
-      this.addresses = addresses;
-    }
-
-    @Override public InetAddress[] resolveInetAddresses(String host) throws UnknownHostException {
-      return addresses;
-    }
-  }
-
-  private static InetAddress getNonLoopbackLocalAddress() throws SocketException {
-    InetAddress localAddress = null;
-    Enumeration<NetworkInterface> interfaces = NetworkInterface.getNetworkInterfaces();
-    outer: while (interfaces.hasMoreElements()) {
-      NetworkInterface networkInterface = interfaces.nextElement();
-      if (networkInterface.isUp() && !networkInterface.isLoopback()) {
-        Enumeration<InetAddress> addresses = networkInterface.getInetAddresses();
-        while (addresses.hasMoreElements()) {
-          localAddress = addresses.nextElement();
-          break outer;
-        }
-      }
-    }
-    if (localAddress == null) {
-      fail("No network");
-    }
-    return localAddress;
-  }
-
-  private static InetAddress getBlackholeAddress(InetAddress localAddress)
-      throws UnknownHostException {
-    byte[] addressBytes =
-        localAddress instanceof Inet4Address ? IPV4_BLACKHOLE_ADDRESS : IPV6_BLACKHOLE_ADDRESS;
-    return InetAddress.getByAddress(addressBytes);
-  }
-
-  private static class TimeoutCountingSocketFactory extends DelegatingSocketFactory {
-    private final AtomicInteger timeoutCount = new AtomicInteger(0);
-
-    public void assertTimeoutCount(int expected) {
-      assertEquals(expected, timeoutCount.get());
-    }
-
-    public TimeoutCountingSocketFactory() {
-      super(SocketFactory.getDefault());
-    }
-
-    @Override protected Socket configureSocket(Socket socket) throws IOException {
-      return new TimeoutCountingSocket(socket);
-    }
-
-    private class TimeoutCountingSocket extends DelegatingSocket {
-      public TimeoutCountingSocket(Socket delegate) {
-        super(delegate);
-      }
-
-      @Override public void connect(SocketAddress remoteAddr) throws IOException {
-        try {
-          super.connect(remoteAddr);
-        } catch (SocketTimeoutException e) {
-          timeoutCount.incrementAndGet();
-          throw e;
-        }
-      }
-
-      @Override public void connect(SocketAddress remoteAddr, int timeout) throws IOException {
-        try {
-          super.connect(remoteAddr, timeout);
-        } catch (SocketTimeoutException e) {
-          timeoutCount.incrementAndGet();
-          throw e;
-        }
-      }
-    }
-  }
 }
diff --git a/okhttp-urlconnection/pom.xml b/okhttp-urlconnection/pom.xml
index 7b7ee3f96b..be60560ad7 100755
--- a/okhttp-urlconnection/pom.xml
+++ b/okhttp-urlconnection/pom.xml
@@ -6,7 +6,7 @@
   <parent>
     <groupId>com.squareup.okhttp</groupId>
     <artifactId>parent</artifactId>
-    <version>2.5.0-SNAPSHOT</version>
+    <version>2.6.0-SNAPSHOT</version>
   </parent>
 
   <artifactId>okhttp-urlconnection</artifactId>
diff --git a/okhttp-urlconnection/src/main/java/com/squareup/okhttp/internal/huc/HttpURLConnectionImpl.java b/okhttp-urlconnection/src/main/java/com/squareup/okhttp/internal/huc/HttpURLConnectionImpl.java
index 8db26d75fd..1cddd3ecb2 100755
--- a/okhttp-urlconnection/src/main/java/com/squareup/okhttp/internal/huc/HttpURLConnectionImpl.java
+++ b/okhttp-urlconnection/src/main/java/com/squareup/okhttp/internal/huc/HttpURLConnectionImpl.java
@@ -46,10 +46,12 @@
 import java.net.HttpRetryException;
 import java.net.HttpURLConnection;
 import java.net.InetSocketAddress;
+import java.net.MalformedURLException;
 import java.net.ProtocolException;
 import java.net.Proxy;
 import java.net.SocketPermission;
 import java.net.URL;
+import java.net.UnknownHostException;
 import java.security.Permission;
 import java.util.ArrayList;
 import java.util.Arrays;
@@ -321,14 +323,16 @@ private void initHttpEngine() throws IOException {
     }
   }
 
-  private HttpEngine newHttpEngine(String method, Connection connection,
-      RetryableSink requestBody, Response priorResponse) {
+  private HttpEngine newHttpEngine(String method, Connection connection, RetryableSink requestBody,
+      Response priorResponse) throws MalformedURLException, UnknownHostException {
     // OkHttp's Call API requires a placeholder body; the real body will be streamed separately.
     RequestBody placeholderBody = HttpMethod.requiresRequestBody(method)
         ? EMPTY_REQUEST_BODY
         : null;
+    URL url = getURL();
+    HttpUrl httpUrl = Internal.instance.getHttpUrlChecked(url.toString());
     Request.Builder builder = new Request.Builder()
-        .url(getURL())
+        .url(httpUrl)
         .method(method, placeholderBody);
     Headers headers = requestHeaders.build();
     for (int i = 0, size = headers.size(); i < size; i++) {
diff --git a/okhttp-ws-tests/pom.xml b/okhttp-ws-tests/pom.xml
index 870b99cd65..c7d1778e6e 100755
--- a/okhttp-ws-tests/pom.xml
+++ b/okhttp-ws-tests/pom.xml
@@ -6,7 +6,7 @@
   <parent>
     <groupId>com.squareup.okhttp</groupId>
     <artifactId>parent</artifactId>
-    <version>2.5.0-SNAPSHOT</version>
+    <version>2.6.0-SNAPSHOT</version>
   </parent>
 
   <artifactId>okhttp-ws-tests</artifactId>
diff --git a/okhttp-ws/pom.xml b/okhttp-ws/pom.xml
index 80561c1eef..81f8afd8c9 100755
--- a/okhttp-ws/pom.xml
+++ b/okhttp-ws/pom.xml
@@ -6,7 +6,7 @@
   <parent>
     <groupId>com.squareup.okhttp</groupId>
     <artifactId>parent</artifactId>
-    <version>2.5.0-SNAPSHOT</version>
+    <version>2.6.0-SNAPSHOT</version>
   </parent>
 
   <artifactId>okhttp-ws</artifactId>
diff --git a/okhttp/pom.xml b/okhttp/pom.xml
index 8d8b5244fa..5cd118711a 100755
--- a/okhttp/pom.xml
+++ b/okhttp/pom.xml
@@ -6,7 +6,7 @@
   <parent>
     <groupId>com.squareup.okhttp</groupId>
     <artifactId>parent</artifactId>
-    <version>2.5.0-SNAPSHOT</version>
+    <version>2.6.0-SNAPSHOT</version>
   </parent>
 
   <artifactId>okhttp</artifactId>
diff --git a/okhttp/src/main/java/com/squareup/okhttp/Cache.java b/okhttp/src/main/java/com/squareup/okhttp/Cache.java
index 5461e40ead..dcf363486e 100755
--- a/okhttp/src/main/java/com/squareup/okhttp/Cache.java
+++ b/okhttp/src/main/java/com/squareup/okhttp/Cache.java
@@ -279,7 +279,7 @@ private void abortQuietly(DiskLruCache.Editor editor) {
    * <p>
    * The initialization time may vary depending on the journal file size and
    * the current actual cache size. The application needs to be aware of calling
-   * this function during the initialization phase and preferrably in a background
+   * this function during the initialization phase and preferably in a background
    * worker thread.
    * <p>
    * Note that if the application chooses to not call this method to initialize
diff --git a/okhttp/src/main/java/com/squareup/okhttp/Connection.java b/okhttp/src/main/java/com/squareup/okhttp/Connection.java
index b184b8a8b3..2a3614e8d7 100755
--- a/okhttp/src/main/java/com/squareup/okhttp/Connection.java
+++ b/okhttp/src/main/java/com/squareup/okhttp/Connection.java
@@ -258,6 +258,9 @@ private void connectTls(int readTimeout, int writeTimeout, Request request,
       handshake = unverifiedHandshake;
       socket = sslSocket;
       success = true;
+    } catch (AssertionError e) {
+      if (Util.isAndroidGetsocknameError(e)) throw new IOException(e);
+      throw e;
     } finally {
       if (sslSocket != null) {
         Platform.get().afterHandshake(sslSocket);
diff --git a/okhttp/src/main/java/com/squareup/okhttp/HttpUrl.java b/okhttp/src/main/java/com/squareup/okhttp/HttpUrl.java
index dc8c7f2e08..2f0abfa1f8 100755
--- a/okhttp/src/main/java/com/squareup/okhttp/HttpUrl.java
+++ b/okhttp/src/main/java/com/squareup/okhttp/HttpUrl.java
@@ -561,7 +561,9 @@ public String fragment() {
 
   /** Returns the URL that would be retrieved by following {@code link} from this URL. */
   public HttpUrl resolve(String link) {
-    return new Builder().parse(this, link);
+    Builder builder = new Builder();
+    Builder.ParseResult result = builder.parse(this, link);
+    return result == Builder.ParseResult.SUCCESS ? builder.build() : null;
   }
 
   public Builder newBuilder() {
@@ -584,11 +586,13 @@ public Builder newBuilder() {
   }
 
   /**
-   * Returns a new {@code OkUrl} representing {@code url} if it is a well-formed HTTP or HTTPS URL,
-   * or null if it isn't.
+   * Returns a new {@code HttpUrl} representing {@code url} if it is a well-formed HTTP or HTTPS
+   * URL, or null if it isn't.
    */
   public static HttpUrl parse(String url) {
-    return new Builder().parse(null, url);
+    Builder builder = new Builder();
+    Builder.ParseResult result = builder.parse(null, url);
+    return result == Builder.ParseResult.SUCCESS ? builder.build() : null;
   }
 
   /**
@@ -599,6 +603,29 @@ public static HttpUrl get(URL url) {
     return parse(url.toString());
   }
 
+  /**
+   * Returns a new {@code HttpUrl} representing {@code url} if it is a well-formed HTTP or HTTPS
+   * URL, or throws an exception if it isn't.
+   *
+   * @throws MalformedURLException if there was a non-host related URL issue
+   * @throws UnknownHostException if the host was invalid
+   */
+  static HttpUrl getChecked(String url) throws MalformedURLException, UnknownHostException {
+    Builder builder = new Builder();
+    Builder.ParseResult result = builder.parse(null, url);
+    switch (result) {
+      case SUCCESS:
+        return builder.build();
+      case INVALID_HOST:
+        throw new UnknownHostException("Invalid host: " + url);
+      case UNSUPPORTED_SCHEME:
+      case MISSING_SCHEME:
+      case INVALID_PORT:
+      default:
+        throw new MalformedURLException("Invalid URL: " + result + " for " + url);
+    }
+  }
+
   public static HttpUrl get(URI uri) {
     return parse(uri.toString());
   }
@@ -883,7 +910,15 @@ public HttpUrl build() {
       return result.toString();
     }
 
-    HttpUrl parse(HttpUrl base, String input) {
+    enum ParseResult {
+      SUCCESS,
+      MISSING_SCHEME,
+      UNSUPPORTED_SCHEME,
+      INVALID_PORT,
+      INVALID_HOST,
+    }
+
+    ParseResult parse(HttpUrl base, String input) {
       int pos = skipLeadingAsciiWhitespace(input, 0, input.length());
       int limit = skipTrailingAsciiWhitespace(input, pos, input.length());
 
@@ -897,12 +932,12 @@ HttpUrl parse(HttpUrl base, String input) {
           this.scheme = "http";
           pos += "http:".length();
         } else {
-          return null; // Not an HTTP scheme.
+          return ParseResult.UNSUPPORTED_SCHEME; // Not an HTTP scheme.
         }
       } else if (base != null) {
         this.scheme = base.scheme;
       } else {
-        return null; // No scheme.
+        return ParseResult.MISSING_SCHEME; // No scheme.
       }
 
       // Authority.
@@ -960,12 +995,12 @@ HttpUrl parse(HttpUrl base, String input) {
               if (portColonOffset + 1 < componentDelimiterOffset) {
                 this.host = canonicalizeHost(input, pos, portColonOffset);
                 this.port = parsePort(input, portColonOffset + 1, componentDelimiterOffset);
-                if (this.port == -1) return null; // Invalid port.
+                if (this.port == -1) return ParseResult.INVALID_PORT; // Invalid port.
               } else {
                 this.host = canonicalizeHost(input, pos, portColonOffset);
                 this.port = defaultPort(this.scheme);
               }
-              if (this.host == null) return null; // Invalid host.
+              if (this.host == null) return ParseResult.INVALID_HOST; // Invalid host.
               pos = componentDelimiterOffset;
               break authority;
           }
@@ -1002,7 +1037,7 @@ HttpUrl parse(HttpUrl base, String input) {
             input, pos + 1, limit, FRAGMENT_ENCODE_SET, true, false);
       }
 
-      return build();
+      return ParseResult.SUCCESS;
     }
 
     private void resolvePath(String input, int pos, int limit) {
diff --git a/okhttp/src/main/java/com/squareup/okhttp/OkHttpClient.java b/okhttp/src/main/java/com/squareup/okhttp/OkHttpClient.java
index 1ef79b0f67..4ed8000a66 100755
--- a/okhttp/src/main/java/com/squareup/okhttp/OkHttpClient.java
+++ b/okhttp/src/main/java/com/squareup/okhttp/OkHttpClient.java
@@ -27,9 +27,11 @@
 import com.squareup.okhttp.internal.tls.OkHostnameVerifier;
 import java.io.IOException;
 import java.net.CookieHandler;
+import java.net.MalformedURLException;
 import java.net.Proxy;
 import java.net.ProxySelector;
 import java.net.URLConnection;
+import java.net.UnknownHostException;
 import java.security.GeneralSecurityException;
 import java.util.ArrayList;
 import java.util.List;
@@ -157,6 +159,11 @@ public void callEnqueue(Call call, Callback responseCallback, boolean forWebSock
       public void apply(ConnectionSpec tlsConfiguration, SSLSocket sslSocket, boolean isFallback) {
         tlsConfiguration.apply(sslSocket, isFallback);
       }
+
+      @Override public HttpUrl getHttpUrlChecked(String url)
+          throws MalformedURLException, UnknownHostException {
+        return HttpUrl.getChecked(url);
+      }
     };
   }
 
diff --git a/okhttp/src/main/java/com/squareup/okhttp/internal/Internal.java b/okhttp/src/main/java/com/squareup/okhttp/internal/Internal.java
index 1e583ba1b3..21bcbf5c30 100755
--- a/okhttp/src/main/java/com/squareup/okhttp/internal/Internal.java
+++ b/okhttp/src/main/java/com/squareup/okhttp/internal/Internal.java
@@ -21,6 +21,7 @@
 import com.squareup.okhttp.ConnectionPool;
 import com.squareup.okhttp.ConnectionSpec;
 import com.squareup.okhttp.Headers;
+import com.squareup.okhttp.HttpUrl;
 import com.squareup.okhttp.OkHttpClient;
 import com.squareup.okhttp.Protocol;
 import com.squareup.okhttp.Request;
@@ -28,6 +29,8 @@
 import com.squareup.okhttp.internal.http.RouteException;
 import com.squareup.okhttp.internal.http.Transport;
 import java.io.IOException;
+import java.net.MalformedURLException;
+import java.net.UnknownHostException;
 import java.util.logging.Logger;
 import javax.net.ssl.SSLSocket;
 import okio.BufferedSink;
@@ -85,6 +88,9 @@ public abstract void connectAndSetOwner(OkHttpClient client, Connection connecti
   public abstract void apply(ConnectionSpec tlsConfiguration, SSLSocket sslSocket,
       boolean isFallback);
 
+  public abstract HttpUrl getHttpUrlChecked(String url)
+      throws MalformedURLException, UnknownHostException;
+
   // TODO delete the following when web sockets move into the main package.
   public abstract void callEnqueue(Call call, Callback responseCallback, boolean forWebSocket);
   public abstract void callEngineReleaseConnection(Call call) throws IOException;
diff --git a/okhttp/src/main/java/com/squareup/okhttp/internal/Util.java b/okhttp/src/main/java/com/squareup/okhttp/internal/Util.java
index d44972d278..efc26ec811 100755
--- a/okhttp/src/main/java/com/squareup/okhttp/internal/Util.java
+++ b/okhttp/src/main/java/com/squareup/okhttp/internal/Util.java
@@ -84,6 +84,8 @@ public static void closeQuietly(Socket socket) {
     if (socket != null) {
       try {
         socket.close();
+      } catch (AssertionError e) {
+        if (!isAndroidGetsocknameError(e)) throw e;
       } catch (RuntimeException rethrown) {
         throw rethrown;
       } catch (Exception ignored) {
@@ -277,4 +279,13 @@ public static String toHumanReadableAscii(String s) {
     }
     return s;
   }
+
+  /**
+   * Returns true if {@code e} is due to a firmware bug fixed after Android 4.2.2.
+   * https://code.google.com/p/android/issues/detail?id=54072
+   */
+  public static boolean isAndroidGetsocknameError(AssertionError e) {
+    return e.getCause() != null && e.getMessage() != null
+        && e.getMessage().contains("getsockname failed");
+  }
 }
diff --git a/pom.xml b/pom.xml
index 9ecff5dda8..7219018974 100755
--- a/pom.xml
+++ b/pom.xml
@@ -11,7 +11,7 @@
 
   <groupId>com.squareup.okhttp</groupId>
   <artifactId>parent</artifactId>
-  <version>2.5.0-SNAPSHOT</version>
+  <version>2.6.0-SNAPSHOT</version>
   <packaging>pom</packaging>
 
   <name>OkHttp (Parent)</name>
@@ -42,7 +42,7 @@
 
     <!-- Compilation -->
     <java.version>1.7</java.version>
-    <okio.version>1.5.0</okio.version>
+    <okio.version>1.6.0</okio.version>
     <!-- ALPN library targeted to Java 7 -->
     <alpn.jdk7.version>7.1.2.v20141202</alpn.jdk7.version>
     <!-- ALPN library targeted to Java 8 update 25. -->
diff --git a/samples/crawler/pom.xml b/samples/crawler/pom.xml
index 1703c305a2..aebd0eb2e4 100755
--- a/samples/crawler/pom.xml
+++ b/samples/crawler/pom.xml
@@ -6,7 +6,7 @@
   <parent>
     <groupId>com.squareup.okhttp.sample</groupId>
     <artifactId>sample-parent</artifactId>
-    <version>2.5.0-SNAPSHOT</version>
+    <version>2.6.0-SNAPSHOT</version>
   </parent>
 
   <artifactId>crawler</artifactId>
diff --git a/samples/guide/pom.xml b/samples/guide/pom.xml
index c1c1339128..55e2671c29 100755
--- a/samples/guide/pom.xml
+++ b/samples/guide/pom.xml
@@ -6,7 +6,7 @@
   <parent>
     <groupId>com.squareup.okhttp.sample</groupId>
     <artifactId>sample-parent</artifactId>
-    <version>2.5.0-SNAPSHOT</version>
+    <version>2.6.0-SNAPSHOT</version>
   </parent>
 
   <artifactId>guide</artifactId>
diff --git a/samples/pom.xml b/samples/pom.xml
index e2be70ea56..29f1e87db9 100755
--- a/samples/pom.xml
+++ b/samples/pom.xml
@@ -6,7 +6,7 @@
   <parent>
     <groupId>com.squareup.okhttp</groupId>
     <artifactId>parent</artifactId>
-    <version>2.5.0-SNAPSHOT</version>
+    <version>2.6.0-SNAPSHOT</version>
   </parent>
 
   <groupId>com.squareup.okhttp.sample</groupId>
diff --git a/samples/simple-client/pom.xml b/samples/simple-client/pom.xml
index a6092921f9..3a1aa7d0f7 100755
--- a/samples/simple-client/pom.xml
+++ b/samples/simple-client/pom.xml
@@ -6,7 +6,7 @@
   <parent>
     <groupId>com.squareup.okhttp.sample</groupId>
     <artifactId>sample-parent</artifactId>
-    <version>2.5.0-SNAPSHOT</version>
+    <version>2.6.0-SNAPSHOT</version>
   </parent>
 
   <artifactId>simple-client</artifactId>
diff --git a/samples/static-server/pom.xml b/samples/static-server/pom.xml
index 6432b40192..f223151016 100755
--- a/samples/static-server/pom.xml
+++ b/samples/static-server/pom.xml
@@ -6,7 +6,7 @@
   <parent>
     <groupId>com.squareup.okhttp.sample</groupId>
     <artifactId>sample-parent</artifactId>
-    <version>2.5.0-SNAPSHOT</version>
+    <version>2.6.0-SNAPSHOT</version>
   </parent>
 
   <artifactId>static-server</artifactId>
