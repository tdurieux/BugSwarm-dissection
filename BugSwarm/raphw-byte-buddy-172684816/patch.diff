diff --git a/byte-buddy-dep/src/main/java/net/bytebuddy/utility/JavaType.java b/byte-buddy-dep/src/main/java/net/bytebuddy/utility/JavaType.java
index 888836489d..1b1d8c826b 100755
--- a/byte-buddy-dep/src/main/java/net/bytebuddy/utility/JavaType.java
+++ b/byte-buddy-dep/src/main/java/net/bytebuddy/utility/JavaType.java
@@ -36,7 +36,7 @@
     CALL_SITE("java.lang.invoke.CallSite", Opcodes.ACC_PUBLIC | Opcodes.ACC_ABSTRACT, Object.class),
 
     /**
-     * The Java 7 {@code java.lang.reflect.Parameter} type.
+     * The Java 8 {@code java.lang.reflect.Parameter} type.
      */
     PARAMETER("java.lang.reflect.Parameter", Opcodes.ACC_PUBLIC | Opcodes.ACC_FINAL, Object.class, AnnotatedElement.class),
 
diff --git a/byte-buddy-dep/src/test/java/net/bytebuddy/utility/JavaTypeTest.java b/byte-buddy-dep/src/test/java/net/bytebuddy/utility/JavaTypeTest.java
index b0c46fe6cb..f92c0d0be1 100755
--- a/byte-buddy-dep/src/test/java/net/bytebuddy/utility/JavaTypeTest.java
+++ b/byte-buddy-dep/src/test/java/net/bytebuddy/utility/JavaTypeTest.java
@@ -91,12 +91,12 @@ public void testJava7Types() throws Exception {
         assertThat(JavaType.METHOD_TYPE.load(), notNullValue(Class.class));
         assertThat(JavaType.METHOD_HANDLES_LOOKUP.load(), notNullValue(Class.class));
         assertThat(JavaType.CALL_SITE.load(), notNullValue(Class.class));
-        assertThat(JavaType.PARAMETER.load(), notNullValue(Class.class));
     }
 
     @Test
     @JavaVersionRule.Enforce(8)
     public void testJava8Types() throws Exception {
+        assertThat(JavaType.PARAMETER.load(), notNullValue(Class.class));
         assertThat(JavaType.EXECUTABLE.load(), notNullValue(Class.class));
     }
 
