#!groovy
// The above triggers groovy syntax highlighting in vim

plugins {
  id "org.jetbrains.intellij" version "0.1.10"
  id "org.sonarqube" version "1.2-rc1"
  id "com.github.hierynomus.license" version "0.11.0"
  id "net.researchgate.release" version "2.2.2"
  id "com.jfrog.artifactory" version "4.4.0"
}

apply plugin: 'org.jetbrains.intellij'
apply plugin: 'jacoco'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'maven'

group = 'org.sonarsource.sonarlint.intellij'
description = 'SonarLint for IntelliJ IDEA'

sourceCompatibility = 1.8
targetCompatibility = 1.8

intellij {

  if (project.hasProperty("ijVersion")){
    version ijVersion
  } else {
    version '2016.2'
  }
  pluginName 'SonarLint'
  updateSinceUntilBuild false
  publish {
    pluginId '7973'
  }
}

repositories {
  jcenter()
  mavenLocal()
  mavenCentral()
  maven {
    url "https://repox.sonarsource.com/sonarsource"
  }
}

configurations {
  sqplugin
}

dependencies {
  compile 'org.sonarsource.sonarlint.core:sonarlint-client-api:2.4'
  compile 'org.sonarsource.sonarlint.core:sonarlint-core:2.4'
  compile 'commons-lang:commons-lang:2.6'
  compile 'commons-io:commons-io:2.4'
  compile 'com.google.code.findbugs:jsr305:2.0.2'
  testCompile 'junit:junit:4.11'
  testCompile 'org.assertj:assertj-core:2.2.0'
  testCompile 'org.mockito:mockito-core:1.10.19'
  sqplugin (
    'org.sonarsource.java:sonar-java-plugin:4.2',
    'org.sonarsource.javascript:sonar-javascript-plugin:2.15',
    'org.sonarsource.php:sonar-php-plugin:2.8',
    'org.sonarsource.python:sonar-python-plugin:1.6'
  )
}

task cleanSQPlugins(type: Delete) {
  delete fileTree('src/main/resources/plugins').include('**/*.jar')
}

task downloadSQPlugins(type: Copy) {
  from configurations.sqplugin.filter { it.name.matches('.*sonar-.*-plugin.*\\.jar') }
  into 'src/main/resources/plugins'
}

task updateSQPlugins {
  dependsOn cleanSQPlugins, downloadSQPlugins
}

project.afterEvaluate {
  tasks.buildPlugin.dependsOn(updateSQPlugins)
}

release {
  failOnSnapshotDependencies = false
  failOnCommitNeeded = false
  requireBranch = ''
}

sonarqube {
  properties {
    property 'sonar.projectName', 'SonarLint for IntelliJ IDEA'
  }
}

license {
  strictCheck true
}

// Avoids IllegalStateException "Can't add different class with same name":
jacocoTestReport.doFirst {
  sourceDirectories = files('src/main/java')
  classDirectories = files('build/classes/main')
  additionalClassDirs = files()
  additionalSourceDirs = files()
}

artifactory {
  contextUrl = System.getenv('ARTIFACTORY_URL')
  publish {    
    repository {
      repoKey = System.getenv('ARTIFACTORY_DEPLOY_REPO')
      username = System.getenv('ARTIFACTORY_DEPLOY_USERNAME')
      password = System.getenv('ARTIFACTORY_DEPLOY_PASSWORD')      
    }
    defaults {
      publishConfigs('archives')
      publishPom = true // Publish generated POM files to Artifactory (true by default)
      publishIvy = false // Publish generated Ivy descriptor files to Artifactory (true by default)
    }
  }  
}

