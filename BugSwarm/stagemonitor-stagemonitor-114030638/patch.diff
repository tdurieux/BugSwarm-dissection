diff --git a/stagemonitor-core/src/main/java/org/stagemonitor/core/CorePlugin.java b/stagemonitor-core/src/main/java/org/stagemonitor/core/CorePlugin.java
index 04badd7305..d2c1b62000 100755
--- a/stagemonitor-core/src/main/java/org/stagemonitor/core/CorePlugin.java
+++ b/stagemonitor-core/src/main/java/org/stagemonitor/core/CorePlugin.java
@@ -504,7 +504,7 @@ void registerReporters(Metric2Registry metric2Registry, Configuration configurat
 		List<ScheduledReporter> onShutdownReporters = new LinkedList<ScheduledReporter>();
 		reportToConsole(metricRegistry, getConsoleReportingInterval(), allFilters, onShutdownReporters);
 		registerAggregationReporter(metricRegistry, allFilters, onShutdownReporters, getAggregationReportingInterval());
-		if (reportToJMX()) {
+		if (configuration.getConfig(CorePlugin.class).isReportToJMX()) {
 			// Because JMX reporter is on registration and not periodic only the
 			// regex filter is applicable here (not filtering metrics by count)
 			reportToJMX(metricRegistry, regexFilter);
@@ -688,7 +688,7 @@ public long getAggregationReportingInterval() {
 		return reportingIntervalAggregation.getValue();
 	}
 
-	public boolean reportToJMX() {
+	public boolean isReportToJMX() {
 		return reportingJmx.getValue();
 	}
 
diff --git a/stagemonitor-core/src/test/java/org/stagemonitor/core/JmxReportingTest.java b/stagemonitor-core/src/test/java/org/stagemonitor/core/JmxReportingTest.java
index 21f7e81e14..df3564fd2c 100755
--- a/stagemonitor-core/src/test/java/org/stagemonitor/core/JmxReportingTest.java
+++ b/stagemonitor-core/src/test/java/org/stagemonitor/core/JmxReportingTest.java
@@ -25,7 +25,7 @@ public void setUp() throws Exception {
 		registry = new Metric2Registry();
 		final Configuration configuration = Mockito.mock(Configuration.class);
 		final CorePlugin corePlugin = mock(CorePlugin.class);
-		when(corePlugin.reportToJMX()).thenReturn(true);
+		when(corePlugin.isReportToJMX()).thenReturn(true);
 		when(configuration.getConfig(CorePlugin.class)).thenReturn(corePlugin);
 
 		new CorePlugin(mock(ElasticsearchClient.class)).registerReporters(registry, configuration, new MeasurementSession("JmxReportingTest", "test", "test"));
diff --git a/stagemonitor-core/src/test/java/org/stagemonitor/core/configuration/ConfigurationOptionTest.java b/stagemonitor-core/src/test/java/org/stagemonitor/core/configuration/ConfigurationOptionTest.java
index 4b79d6ea99..ea6c5739c1 100755
--- a/stagemonitor-core/src/test/java/org/stagemonitor/core/configuration/ConfigurationOptionTest.java
+++ b/stagemonitor-core/src/test/java/org/stagemonitor/core/configuration/ConfigurationOptionTest.java
@@ -122,7 +122,7 @@ public void testElasticsearchUrlTrailingSlash() {
 	@Test
 	public void testDefaultValues() {
 		assertEquals(0L, corePlugin.getConsoleReportingInterval());
-		assertEquals(true, corePlugin.reportToJMX());
+		assertEquals(false, corePlugin.isReportToJMX());
 		assertEquals(60, corePlugin.getGraphiteReportingInterval());
 		assertEquals(null, corePlugin.getGraphiteHostName());
 		assertEquals(2003, corePlugin.getGraphitePort());
