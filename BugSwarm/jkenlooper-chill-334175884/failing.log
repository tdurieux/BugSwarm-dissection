travis_fold:start:worker_info[0K[33;1mWorker information[0m
hostname: 404efb21-d2e7-404d-b03f-386aabb9cbe0@1.i-052e0e8-production-2-worker-org-ec2.travisci.net
version: v3.4.0 https://github.com/travis-ci/worker/tree/ce0440bc30c289a49a9b0c21e4e1e6f7d7825101
instance: 1e9af14 travisci/ci-garnet:packer-1512502276-986baf0 (via amqp)
startup: 1.103442972s
travis_fold:end:worker_info[0Kmode of ‘/usr/local/clang-5.0.0/bin’ changed from 0777 (rwxrwxrwx) to 0775 (rwxrwxr-x)
travis_fold:start:system_info[0K[33;1mBuild system information[0m
Build language: python
Build group: stable
Build dist: trusty
Build id: 334175883
Job id: 334175884
Runtime kernel version: 4.14.12-041412-generic
travis-build version: cf6d29c9c
[34m[1mBuild image provisioning date and time[0m
Tue Dec  5 20:11:19 UTC 2017
[34m[1mOperating System Details[0m
Distributor ID:	Ubuntu
Description:	Ubuntu 14.04.5 LTS
Release:	14.04
Codename:	trusty
[34m[1mCookbooks Version[0m
7c2c6a6 https://github.com/travis-ci/travis-cookbooks/tree/7c2c6a6
[34m[1mgit version[0m
git version 2.15.1
[34m[1mbash version[0m
GNU bash, version 4.3.11(1)-release (x86_64-pc-linux-gnu)
[34m[1mgcc version[0m
gcc (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

[34m[1mdocker version[0m
Client:
 Version:      17.09.0-ce
 API version:  1.32
 Go version:   go1.8.3
 Git commit:   afdb6d4
 Built:        Tue Sep 26 22:39:28 2017
 OS/Arch:      linux/amd64
[34m[1mclang version[0m
clang version 5.0.0 (tags/RELEASE_500/final)
Target: x86_64-unknown-linux-gnu
Thread model: posix
InstalledDir: /usr/local/clang-5.0.0/bin
[34m[1mjq version[0m
jq-1.5
[34m[1mbats version[0m
Bats 0.4.0
[34m[1mshellcheck version[0m
0.4.6
[34m[1mshfmt version[0m
v2.0.0
[34m[1mccache version[0m
ccache version 3.1.9

Copyright (C) 2002-2007 Andrew Tridgell
Copyright (C) 2009-2011 Joel Rosdahl

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 3 of the License, or (at your option) any later
version.
[34m[1mcmake version[0m
cmake version 3.9.2

CMake suite maintained and supported by Kitware (kitware.com/cmake).
[34m[1mheroku version[0m
heroku-cli/6.14.39-addc925 (linux-x64) node-v9.2.0
[34m[1mimagemagick version[0m
Version: ImageMagick 6.7.7-10 2017-07-31 Q16 http://www.imagemagick.org
[34m[1mmd5deep version[0m
4.2
[34m[1mmercurial version[0m
Mercurial Distributed SCM (version 4.2.2)
(see https://mercurial-scm.org for more information)

Copyright (C) 2005-2017 Matt Mackall and others
This is free software; see the source for copying conditions. There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
[34m[1mmysql version[0m
mysql  Ver 14.14 Distrib 5.6.33, for debian-linux-gnu (x86_64) using  EditLine wrapper
[34m[1mopenssl version[0m
OpenSSL 1.0.1f 6 Jan 2014
[34m[1mpacker version[0m
Packer v1.0.2

Your version of Packer is out of date! The latest version
is 1.1.2. You can update by downloading from www.packer.io
[34m[1mpostgresql client version[0m
psql (PostgreSQL) 9.6.6
[34m[1mragel version[0m
Ragel State Machine Compiler version 6.8 Feb 2013
Copyright (c) 2001-2009 by Adrian Thurston
[34m[1msubversion version[0m
svn, version 1.8.8 (r1568071)
   compiled Aug 10 2017, 17:20:39 on x86_64-pc-linux-gnu

Copyright (C) 2013 The Apache Software Foundation.
This software consists of contributions made by many people;
see the NOTICE file for more information.
Subversion is open source software, see http://subversion.apache.org/

The following repository access (RA) modules are available:

* ra_svn : Module for accessing a repository using the svn network protocol.
  - with Cyrus SASL authentication
  - handles 'svn' scheme
* ra_local : Module for accessing a repository on local disk.
  - handles 'file' scheme
* ra_serf : Module for accessing a repository via WebDAV protocol using serf.
  - using serf 1.3.3
  - handles 'http' scheme
  - handles 'https' scheme

[34m[1msudo version[0m
Sudo version 1.8.9p5
Configure options: --prefix=/usr -v --with-all-insults --with-pam --with-fqdn --with-logging=syslog --with-logfac=authpriv --with-env-editor --with-editor=/usr/bin/editor --with-timeout=15 --with-password-timeout=0 --with-passprompt=[sudo] password for %p:  --without-lecture --with-tty-tickets --disable-root-mailer --enable-admin-flag --with-sendmail=/usr/sbin/sendmail --with-timedir=/var/lib/sudo --mandir=/usr/share/man --libexecdir=/usr/lib/sudo --with-sssd --with-sssd-lib=/usr/lib/x86_64-linux-gnu --with-selinux
Sudoers policy plugin version 1.8.9p5
Sudoers file grammar version 43

Sudoers path: /etc/sudoers
Authentication methods: 'pam'
Syslog facility if syslog is being used for logging: authpriv
Syslog priority to use when user authenticates successfully: notice
Syslog priority to use when user authenticates unsuccessfully: alert
Send mail if the user is not in sudoers
Use a separate timestamp for each user/tty combo
Lecture user the first time they run sudo
Root may run sudo
Allow some information gathering to give useful error messages
Require fully-qualified hostnames in the sudoers file
Visudo will honor the EDITOR environment variable
Set the LOGNAME and USER environment variables
Length at which to wrap log file lines (0 for no wrap): 80
Authentication timestamp timeout: 15.0 minutes
Password prompt timeout: 0.0 minutes
Number of tries to enter a password: 3
Umask to use or 0777 to use user's: 022
Path to mail program: /usr/sbin/sendmail
Flags for mail program: -t
Address to send mail to: root
Subject line for mail messages: *** SECURITY information for %h ***
Incorrect password message: Sorry, try again.
Path to authentication timestamp dir: /var/lib/sudo
Default password prompt: [sudo] password for %p: 
Default user to run commands as: root
Value to override user's $PATH with: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin
Path to the editor for use by visudo: /usr/bin/editor
When to require a password for 'list' pseudocommand: any
When to require a password for 'verify' pseudocommand: all
File descriptors >= 3 will be closed before executing a command
Environment variables to check for sanity:
	TZ
	TERM
	LINGUAS
	LC_*
	LANGUAGE
	LANG
	COLORTERM
Environment variables to remove:
	RUBYOPT
	RUBYLIB
	PYTHONUSERBASE
	PYTHONINSPECT
	PYTHONPATH
	PYTHONHOME
	TMPPREFIX
	ZDOTDIR
	READNULLCMD
	NULLCMD
	FPATH
	PERL5DB
	PERL5OPT
	PERL5LIB
	PERLLIB
	PERLIO_DEBUG 
	JAVA_TOOL_OPTIONS
	SHELLOPTS
	GLOBIGNORE
	PS4
	BASH_ENV
	ENV
	TERMCAP
	TERMPATH
	TERMINFO_DIRS
	TERMINFO
	_RLD*
	LD_*
	PATH_LOCALE
	NLSPATH
	HOSTALIASES
	RES_OPTIONS
	LOCALDOMAIN
	CDPATH
	IFS
Environment variables to preserve:
	JAVA_HOME
	TRAVIS
	CI
	DEBIAN_FRONTEND
	XAUTHORIZATION
	XAUTHORITY
	PS2
	PS1
	PATH
	LS_COLORS
	KRB5CCNAME
	HOSTNAME
	HOME
	DISPLAY
	COLORS
Locale to use while parsing sudoers: C
Directory in which to store input/output logs: /var/log/sudo-io
File in which to store the input/output log: %{seq}
Add an entry to the utmp/utmpx file when allocating a pty
PAM service name to use
PAM service name to use for login shells
Create a new PAM session for the command to run in
Maximum I/O log sequence number: 0

Local IP address and netmask pairs:
	172.17.0.2/255.255.0.0

Sudoers I/O plugin version 1.8.9p5
[34m[1mgzip version[0m
gzip 1.6
Copyright (C) 2007, 2010, 2011 Free Software Foundation, Inc.
Copyright (C) 1993 Jean-loup Gailly.
This is free software.  You may redistribute copies of it under the terms of
the GNU General Public License <http://www.gnu.org/licenses/gpl.html>.
There is NO WARRANTY, to the extent permitted by law.

Written by Jean-loup Gailly.
[34m[1mzip version[0m
Copyright (c) 1990-2008 Info-ZIP - Type 'zip "-L"' for software license.
This is Zip 3.0 (July 5th 2008), by Info-ZIP.
Currently maintained by E. Gordon.  Please send bug reports to
the authors using the web page at www.info-zip.org; see README for details.

Latest sources and executables are at ftp://ftp.info-zip.org/pub/infozip,
as of above date; see http://www.info-zip.org/ for other sites.

Compiled with gcc 4.8.2 for Unix (Linux ELF) on Oct 21 2013.

Zip special compilation options:
	USE_EF_UT_TIME       (store Universal Time)
	BZIP2_SUPPORT        (bzip2 library version 1.0.6, 6-Sept-2010)
	    bzip2 code and library copyright (c) Julian R Seward
	    (See the bzip2 license for terms of use)
	SYMLINK_SUPPORT      (symbolic links supported)
	LARGE_FILE_SUPPORT   (can read and write large files on file system)
	ZIP64_SUPPORT        (use Zip64 to store large files in archives)
	UNICODE_SUPPORT      (store and read UTF-8 Unicode paths)
	STORE_UNIX_UIDs_GIDs (store UID/GID sizes/values using new extra field)
	UIDGID_NOT_16BIT     (old Unix 16-bit UID/GID extra field not used)
	[encryption, version 2.91 of 05 Jan 2007] (modified for Zip 3)

Encryption notice:
	The encryption code of this program is not copyrighted and is
	put in the public domain.  It was originally written in Europe
	and, to the best of our knowledge, can be freely distributed
	in both source and object forms from any country, including
	the USA under License Exception TSU of the U.S. Export
	Administration Regulations (section 740.13(e)) of 6 June 2002.

Zip environment options:
             ZIP:  [none]
          ZIPOPT:  [none]
[34m[1mvim version[0m
VIM - Vi IMproved 7.4 (2013 Aug 10, compiled Nov 24 2016 16:43:18)
Included patches: 1-52
Extra patches: 8.0.0056
Modified by pkg-vim-maintainers@lists.alioth.debian.org
Compiled by buildd@
Huge version without GUI.  Features included (+) or not (-):
+acl             +farsi           +mouse_netterm   +syntax
+arabic          +file_in_path    +mouse_sgr       +tag_binary
+autocmd         +find_in_path    -mouse_sysmouse  +tag_old_static
-balloon_eval    +float           +mouse_urxvt     -tag_any_white
-browse          +folding         +mouse_xterm     -tcl
++builtin_terms  -footer          +multi_byte      +terminfo
+byte_offset     +fork()          +multi_lang      +termresponse
+cindent         +gettext         -mzscheme        +textobjects
-clientserver    -hangul_input    +netbeans_intg   +title
-clipboard       +iconv           +path_extra      -toolbar
+cmdline_compl   +insert_expand   -perl            +user_commands
+cmdline_hist    +jumplist        +persistent_undo +vertsplit
+cmdline_info    +keymap          +postscript      +virtualedit
+comments        +langmap         +printer         +visual
+conceal         +libcall         +profile         +visualextra
+cryptv          +linebreak       +python          +viminfo
+cscope          +lispindent      -python3         +vreplace
+cursorbind      +listcmds        +quickfix        +wildignore
+cursorshape     +localmap        +reltime         +wildmenu
+dialog_con      -lua             +rightleft       +windows
+diff            +menu            -ruby            +writebackup
+digraphs        +mksession       +scrollbind      -X11
-dnd             +modify_fname    +signs           -xfontset
-ebcdic          +mouse           +smartindent     -xim
+emacs_tags      -mouseshape      -sniff           -xsmp
+eval            +mouse_dec       +startuptime     -xterm_clipboard
+ex_extra        +mouse_gpm       +statusline      -xterm_save
+extra_search    -mouse_jsbterm   -sun_workshop    -xpm
   system vimrc file: "$VIM/vimrc"
     user vimrc file: "$HOME/.vimrc"
 2nd user vimrc file: "~/.vim/vimrc"
      user exrc file: "$HOME/.exrc"
  fall-back for $VIM: "/usr/share/vim"
Compilation: gcc -c -I. -Iproto -DHAVE_CONFIG_H     -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=1      
Linking: gcc   -Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,--as-needed -o vim        -lm -ltinfo -lnsl  -lselinux  -lacl -lattr -lgpm -ldl    -L/usr/lib/python2.7/config-x86_64-linux-gnu -lpython2.7 -lpthread -ldl -lutil -lm -Xlinker -export-dynamic -Wl,-O1 -Wl,-Bsymbolic-functions      
[34m[1miptables version[0m
iptables v1.4.21
[34m[1mcurl version[0m
curl 7.35.0 (x86_64-pc-linux-gnu) libcurl/7.35.0 OpenSSL/1.0.1f zlib/1.2.8 libidn/1.28 librtmp/2.3
[34m[1mwget version[0m
GNU Wget 1.15 built on linux-gnu.
[34m[1mrsync version[0m
rsync  version 3.1.0  protocol version 31
[34m[1mgimme version[0m
v1.2.0
[34m[1mnvm version[0m
0.33.6
[34m[1mperlbrew version[0m
/home/travis/perl5/perlbrew/bin/perlbrew  - App::perlbrew/0.80
[34m[1mphpenv version[0m
rbenv 1.1.1-25-g6aa70b6
[34m[1mrvm version[0m
rvm 1.29.3 (latest) by Michal Papis, Piotr Kuczynski, Wayne E. Seguin [https://rvm.io]
[34m[1mdefault ruby version[0m
ruby 2.4.1p111 (2017-03-22 revision 58053) [x86_64-linux]
[34m[1mCouchDB version[0m
couchdb 1.6.1
[34m[1mElasticSearch version[0m
5.5.0
[34m[1mInstalled Firefox version[0m
firefox 56.0.2
[34m[1mMongoDB version[0m
MongoDB 3.4.10
[34m[1mPhantomJS version[0m
2.1.1
[34m[1mPre-installed PostgreSQL versions[0m
9.2.24
9.3.20
9.4.15
9.5.10
9.6.6
[34m[1mRabbitMQ Version[0m
3.6.14
[34m[1mRedis version[0m
redis-server 4.0.6
[34m[1mriak version[0m
2.2.3
[34m[1mPre-installed Go versions[0m
1.7.4
[34m[1mant version[0m
Apache Ant(TM) version 1.9.3 compiled on April 8 2014
[34m[1mmvn version[0m
Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z)
Maven home: /usr/local/maven-3.5.2
Java version: 1.8.0_151, vendor: Oracle Corporation
Java home: /usr/lib/jvm/java-8-oracle/jre
Default locale: en_US, platform encoding: UTF-8
OS name: "linux", version: "4.4.0-101-generic", arch: "amd64", family: "unix"
[34m[1mgradle version[0m

------------------------------------------------------------
Gradle 4.0.1
------------------------------------------------------------

Build time:   2017-07-07 14:02:41 UTC
Revision:     38e5dc0f772daecca1d2681885d3d85414eb6826

Groovy:       2.4.11
Ant:          Apache Ant(TM) version 1.9.6 compiled on June 29 2015
JVM:          1.8.0_151 (Oracle Corporation 25.151-b12)
OS:           Linux 4.4.0-101-generic amd64

[34m[1mlein version[0m
Leiningen 2.8.1 on Java 1.8.0_151 Java HotSpot(TM) 64-Bit Server VM
[34m[1mPre-installed Node.js versions[0m
v4.8.6
v6.12.0
v6.12.1
v8.9
v8.9.1
[34m[1mphpenv versions[0m
  system
  5.6
* 5.6.32 (set by /home/travis/.phpenv/version)
  7.0
  7.0.25
  7.1
  7.1.11
  hhvm
  hhvm-stable
[34m[1mcomposer --version[0m
Composer version 1.5.2 2017-09-11 16:59:25
[34m[1mPre-installed Ruby versions[0m
ruby-2.2.7
ruby-2.3.4
ruby-2.4.1
travis_fold:end:system_info[0K
removed ‘/etc/apt/sources.list.d/basho_riak.list’
W: http://ppa.launchpad.net/couchdb/stable/ubuntu/dists/trusty/Release.gpg: Signature by key 15866BAFD9BCC4F3C1E0DFC7D69548E1C17EAB57 uses weak digest algorithm (SHA1)
127.0.0.1	localhost
::1	 ip6-localhost ip6-loopback
fe00::0	ip6-localnet
ff00::0	ip6-mcastprefix
ff02::1	ip6-allnodes
ff02::2	ip6-allrouters
172.17.0.3	travis-job-jkenlooper-chill-334175884.travisci.net travis-job-jkenlooper-chill-334175884
travis_fold:start:git.checkout[0Ktravis_time:start:0d57a154[0K$ git clone --depth=50 --branch=feature/sqlalchemy https://github.com/jkenlooper/chill.git jkenlooper/chill
Cloning into 'jkenlooper/chill'...
remote: Counting objects: 595, done.[K
remote: Compressing objects:   0% (1/249)   [Kremote: Compressing objects:   1% (3/249)   [Kremote: Compressing objects:   2% (5/249)   [Kremote: Compressing objects:   3% (8/249)   [Kremote: Compressing objects:   4% (10/249)   [Kremote: Compressing objects:   5% (13/249)   [Kremote: Compressing objects:   6% (15/249)   [Kremote: Compressing objects:   7% (18/249)   [Kremote: Compressing objects:   8% (20/249)   [Kremote: Compressing objects:   9% (23/249)   [Kremote: Compressing objects:  10% (25/249)   [Kremote: Compressing objects:  11% (28/249)   [Kremote: Compressing objects:  12% (30/249)   [Kremote: Compressing objects:  13% (33/249)   [Kremote: Compressing objects:  14% (35/249)   [Kremote: Compressing objects:  15% (38/249)   [Kremote: Compressing objects:  16% (40/249)   [Kremote: Compressing objects:  17% (43/249)   [Kremote: Compressing objects:  18% (45/249)   [Kremote: Compressing objects:  19% (48/249)   [Kremote: Compressing objects:  20% (50/249)   [Kremote: Compressing objects:  21% (53/249)   [Kremote: Compressing objects:  22% (55/249)   [Kremote: Compressing objects:  23% (58/249)   [Kremote: Compressing objects:  24% (60/249)   [Kremote: Compressing objects:  25% (63/249)   [Kremote: Compressing objects:  26% (65/249)   [Kremote: Compressing objects:  27% (68/249)   [Kremote: Compressing objects:  28% (70/249)   [Kremote: Compressing objects:  29% (73/249)   [Kremote: Compressing objects:  30% (75/249)   [Kremote: Compressing objects:  31% (78/249)   [Kremote: Compressing objects:  32% (80/249)   [Kremote: Compressing objects:  33% (83/249)   [Kremote: Compressing objects:  34% (85/249)   [Kremote: Compressing objects:  35% (88/249)   [Kremote: Compressing objects:  36% (90/249)   [Kremote: Compressing objects:  37% (93/249)   [Kremote: Compressing objects:  38% (95/249)   [Kremote: Compressing objects:  39% (98/249)   [Kremote: Compressing objects:  40% (100/249)   [Kremote: Compressing objects:  41% (103/249)   [Kremote: Compressing objects:  42% (105/249)   [Kremote: Compressing objects:  43% (108/249)   [Kremote: Compressing objects:  44% (110/249)   [Kremote: Compressing objects:  45% (113/249)   [Kremote: Compressing objects:  46% (115/249)   [Kremote: Compressing objects:  47% (118/249)   [Kremote: Compressing objects:  48% (120/249)   [Kremote: Compressing objects:  49% (123/249)   [Kremote: Compressing objects:  50% (125/249)   [Kremote: Compressing objects:  51% (127/249)   [Kremote: Compressing objects:  52% (130/249)   [Kremote: Compressing objects:  53% (132/249)   [Kremote: Compressing objects:  54% (135/249)   [Kremote: Compressing objects:  55% (137/249)   [Kremote: Compressing objects:  56% (140/249)   [Kremote: Compressing objects:  57% (142/249)   [Kremote: Compressing objects:  58% (145/249)   [Kremote: Compressing objects:  59% (147/249)   [Kremote: Compressing objects:  60% (150/249)   [Kremote: Compressing objects:  61% (152/249)   [Kremote: Compressing objects:  62% (155/249)   [Kremote: Compressing objects:  63% (157/249)   [Kremote: Compressing objects:  64% (160/249)   [Kremote: Compressing objects:  65% (162/249)   [Kremote: Compressing objects:  66% (165/249)   [Kremote: Compressing objects:  67% (167/249)   [Kremote: Compressing objects:  68% (170/249)   [Kremote: Compressing objects:  69% (172/249)   [Kremote: Compressing objects:  70% (175/249)   [Kremote: Compressing objects:  71% (177/249)   [Kremote: Compressing objects:  72% (180/249)   [Kremote: Compressing objects:  73% (182/249)   [Kremote: Compressing objects:  74% (185/249)   [Kremote: Compressing objects:  75% (187/249)   [Kremote: Compressing objects:  76% (190/249)   [Kremote: Compressing objects:  77% (192/249)   [Kremote: Compressing objects:  78% (195/249)   [Kremote: Compressing objects:  79% (197/249)   [Kremote: Compressing objects:  80% (200/249)   [Kremote: Compressing objects:  81% (202/249)   [Kremote: Compressing objects:  82% (205/249)   [Kremote: Compressing objects:  83% (207/249)   [Kremote: Compressing objects:  84% (210/249)   [Kremote: Compressing objects:  85% (212/249)   [Kremote: Compressing objects:  86% (215/249)   [Kremote: Compressing objects:  87% (217/249)   [Kremote: Compressing objects:  88% (220/249)   [Kremote: Compressing objects:  89% (222/249)   [Kremote: Compressing objects:  90% (225/249)   [Kremote: Compressing objects:  91% (227/249)   [Kremote: Compressing objects:  92% (230/249)   [Kremote: Compressing objects:  93% (232/249)   [Kremote: Compressing objects:  94% (235/249)   [Kremote: Compressing objects:  95% (237/249)   [Kremote: Compressing objects:  96% (240/249)   [Kremote: Compressing objects:  97% (242/249)   [Kremote: Compressing objects:  98% (245/249)   [Kremote: Compressing objects:  99% (247/249)   [Kremote: Compressing objects: 100% (249/249)   [Kremote: Compressing objects: 100% (249/249), done.[K
Receiving objects:   0% (1/595)   Receiving objects:   1% (6/595)   Receiving objects:   2% (12/595)   Receiving objects:   3% (18/595)   Receiving objects:   4% (24/595)   Receiving objects:   5% (30/595)   Receiving objects:   6% (36/595)   Receiving objects:   7% (42/595)   Receiving objects:   8% (48/595)   Receiving objects:   9% (54/595)   Receiving objects:  10% (60/595)   Receiving objects:  11% (66/595)   Receiving objects:  12% (72/595)   Receiving objects:  13% (78/595)   Receiving objects:  14% (84/595)   Receiving objects:  15% (90/595)   Receiving objects:  16% (96/595)   Receiving objects:  17% (102/595)   Receiving objects:  18% (108/595)   Receiving objects:  19% (114/595)   Receiving objects:  20% (119/595)   Receiving objects:  21% (125/595)   Receiving objects:  22% (131/595)   Receiving objects:  23% (137/595)   Receiving objects:  24% (143/595)   Receiving objects:  25% (149/595)   Receiving objects:  26% (155/595)   Receiving objects:  27% (161/595)   Receiving objects:  28% (167/595)   Receiving objects:  29% (173/595)   Receiving objects:  30% (179/595)   Receiving objects:  31% (185/595)   Receiving objects:  32% (191/595)   Receiving objects:  33% (197/595)   Receiving objects:  34% (203/595)   Receiving objects:  35% (209/595)   Receiving objects:  36% (215/595)   Receiving objects:  37% (221/595)   Receiving objects:  38% (227/595)   Receiving objects:  39% (233/595)   Receiving objects:  40% (238/595)   Receiving objects:  41% (244/595)   Receiving objects:  42% (250/595)   Receiving objects:  43% (256/595)   Receiving objects:  44% (262/595)   Receiving objects:  45% (268/595)   Receiving objects:  46% (274/595)   Receiving objects:  47% (280/595)   Receiving objects:  48% (286/595)   Receiving objects:  49% (292/595)   Receiving objects:  50% (298/595)   Receiving objects:  51% (304/595)   Receiving objects:  52% (310/595)   Receiving objects:  53% (316/595)   Receiving objects:  54% (322/595)   Receiving objects:  55% (328/595)   Receiving objects:  56% (334/595)   Receiving objects:  57% (340/595)   Receiving objects:  58% (346/595)   Receiving objects:  59% (352/595)   Receiving objects:  60% (357/595)   Receiving objects:  61% (363/595)   Receiving objects:  62% (369/595)   Receiving objects:  63% (375/595)   Receiving objects:  64% (381/595)   Receiving objects:  65% (387/595)   Receiving objects:  66% (393/595)   Receiving objects:  67% (399/595)   Receiving objects:  68% (405/595)   Receiving objects:  69% (411/595)   Receiving objects:  70% (417/595)   Receiving objects:  71% (423/595)   Receiving objects:  72% (429/595)   remote: Total 595 (delta 284), reused 551 (delta 245), pack-reused 0[K
Receiving objects:  73% (435/595)   Receiving objects:  74% (441/595)   Receiving objects:  75% (447/595)   Receiving objects:  76% (453/595)   Receiving objects:  77% (459/595)   Receiving objects:  78% (465/595)   Receiving objects:  79% (471/595)   Receiving objects:  80% (476/595)   Receiving objects:  81% (482/595)   Receiving objects:  82% (488/595)   Receiving objects:  83% (494/595)   Receiving objects:  84% (500/595)   Receiving objects:  85% (506/595)   Receiving objects:  86% (512/595)   Receiving objects:  87% (518/595)   Receiving objects:  88% (524/595)   Receiving objects:  89% (530/595)   Receiving objects:  90% (536/595)   Receiving objects:  91% (542/595)   Receiving objects:  92% (548/595)   Receiving objects:  93% (554/595)   Receiving objects:  94% (560/595)   Receiving objects:  95% (566/595)   Receiving objects:  96% (572/595)   Receiving objects:  97% (578/595)   Receiving objects:  98% (584/595)   Receiving objects:  99% (590/595)   Receiving objects: 100% (595/595)   Receiving objects: 100% (595/595), 131.58 KiB | 21.93 MiB/s, done.
Resolving deltas:   0% (0/284)   Resolving deltas:   3% (10/284)   Resolving deltas:  16% (47/284)   Resolving deltas:  23% (68/284)   Resolving deltas:  24% (69/284)   Resolving deltas:  26% (76/284)   Resolving deltas:  27% (78/284)   Resolving deltas:  28% (82/284)   Resolving deltas:  33% (95/284)   Resolving deltas:  34% (98/284)   Resolving deltas:  36% (105/284)   Resolving deltas:  37% (107/284)   Resolving deltas:  39% (113/284)   Resolving deltas:  40% (115/284)   Resolving deltas:  41% (119/284)   Resolving deltas:  43% (123/284)   Resolving deltas:  44% (126/284)   Resolving deltas:  45% (128/284)   Resolving deltas:  53% (152/284)   Resolving deltas:  55% (159/284)   Resolving deltas:  56% (161/284)   Resolving deltas:  59% (168/284)   Resolving deltas:  65% (187/284)   Resolving deltas:  69% (197/284)   Resolving deltas:  70% (199/284)   Resolving deltas:  71% (202/284)   Resolving deltas:  72% (205/284)   Resolving deltas:  73% (209/284)   Resolving deltas:  74% (211/284)   Resolving deltas:  75% (215/284)   Resolving deltas:  76% (216/284)   Resolving deltas:  77% (219/284)   Resolving deltas:  82% (235/284)   Resolving deltas:  83% (237/284)   Resolving deltas:  84% (239/284)   Resolving deltas:  86% (247/284)   Resolving deltas:  88% (251/284)   Resolving deltas:  89% (254/284)   Resolving deltas:  91% (261/284)   Resolving deltas:  93% (265/284)   Resolving deltas:  94% (268/284)   Resolving deltas:  95% (271/284)   Resolving deltas:  98% (280/284)   Resolving deltas: 100% (284/284)   Resolving deltas: 100% (284/284), done.

travis_time:end:0d57a154:start=1517081060106004366,finish=1517081060396280366,duration=290276000[0K$ cd jkenlooper/chill
$ git checkout -qf 8939441b940bfd536ee46d21b73540d480ab87d3
travis_fold:end:git.checkout[0Ktravis_time:start:006d0e00[0K$ source ~/virtualenv/python2.7/bin/activate

travis_time:end:006d0e00:start=1517081064582258679,finish=1517081064590157847,duration=7899168[0K$ python --version
Python 2.7.14
$ pip --version
pip 9.0.1 from /home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages (python 2.7)
travis_fold:start:install[0Ktravis_time:start:13a13548[0K$ pip install .
Processing /home/travis/build/jkenlooper/chill
Requirement already satisfied: setuptools in /home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages (from chill==0.3.3)
Collecting docutils (from chill==0.3.3)
  Downloading docutils-0.14-py2-none-any.whl (543kB)
[?25l[K    1% |▋                               | 10kB 37.3MB/s eta 0:00:01[K    3% |█▏                              | 20kB 26.1MB/s eta 0:00:01[K    5% |█▉                              | 30kB 18.9MB/s eta 0:00:01[K    7% |██▍                             | 40kB 11.5MB/s eta 0:00:01[K    9% |███                             | 51kB 10.4MB/s eta 0:00:01[K    11% |███▋                            | 61kB 12.1MB/s eta 0:00:01[K    13% |████▏                           | 71kB 10.9MB/s eta 0:00:01[K    15% |████▉                           | 81kB 10.5MB/s eta 0:00:01[K    16% |█████▍                          | 92kB 11.5MB/s eta 0:00:01[K    18% |██████                          | 102kB 12.1MB/s eta 0:00:01[K    20% |██████▋                         | 112kB 12.2MB/s eta 0:00:01[K    22% |███████▎                        | 122kB 10.6MB/s eta 0:00:01[K    24% |███████▉                        | 133kB 10.6MB/s eta 0:00:01[K    26% |████████▍                       | 143kB 12.9MB/s eta 0:00:01[K    28% |█████████                       | 153kB 14.3MB/s eta 0:00:01[K    30% |█████████▋                      | 163kB 11.9MB/s eta 0:00:01[K    32% |██████████▎                     | 174kB 13.9MB/s eta 0:00:01[K    33% |██████████▉                     | 184kB 15.8MB/s eta 0:00:01[K    35% |██████���████▌                    | 194kB 15.7MB/s eta 0:00:01[K    37% |████████████                    | 204kB 16.3MB/s eta 0:00:01[K    39% |████████████▋                   | 215kB 14.1MB/s eta 0:00:01[K    41% |█████████████▎                  | 225kB 18.0MB/s eta 0:00:01[K    43% |█████████████▉                  | 235kB 20.2MB/s eta 0:00:01[K    45% |██████████████▌                 | 245kB 18.4MB/s eta 0:00:01[K    47% |███████████████                 | 256kB 19.8MB/s eta 0:00:01[K    48% |███████████████▊                | 266kB 24.6MB/s eta 0:00:01[K    50% |████████████████▎               | 276kB 24.8MB/s eta 0:00:01[K    52% |████████████████▉               | 286kB 23.3MB/s eta 0:00:01[K    54% |█████████████████▌              | 296kB 21.1MB/s eta 0:00:01[K    56% |██████████████████              | 307kB 21.4MB/s eta 0:00:01[K    58% |██████████████████▊             | 317kB 25.1MB/s eta 0:00:01[K    60% |███████████████████▎            | 327kB 21.6MB/s eta 0:00:01[K    62% |███████████████████▉            | 337kB 21.9MB/s eta 0:00:01[K    64% |████████████████████▌           | 348kB 22.3MB/s eta 0:00:01[K    65% |█████████████████████           | 358kB 22.3MB/s eta 0:00:01[K    67% |█████████████████████▊          | 368kB 24.4MB/s eta 0:00:01[K    69% |██████████████████████▎         | 378kB 21.6MB/s eta 0:00:01[K    71% |███████████████████████         | 389kB 23.7MB/s eta 0:00:01[K    73% |███████████████████████▌        | 399kB 26.2MB/s eta 0:00:01[K    75% |████████████████████████        | 409kB 23.8MB/s eta 0:00:01[K    77% |████████████████████████▊       | 419kB 25.7MB/s eta 0:00:01[K    79% |█████████████████████████▎      | 430kB 28.3MB/s eta 0:00:01[K    80% |██████████████████████████      | 440kB 27.9MB/s eta 0:00:01[K    82% |██████████████████████████▌     | 450kB 30.6MB/s eta 0:00:01[K    84% |███████████████████████████▏    | 460kB 30.3MB/s eta 0:00:01[K    86% |███████████████████████████▊    | 471kB 30.9MB/s eta 0:00:01[K    88% |████████████████████████████▎   | 481kB 34.5MB/s eta 0:00:01[K    90% |███████████���█████████████████   | 491kB 34.5MB/s eta 0:00:01[K    92% |█████████████████████████████▌  | 501kB 36.0MB/s eta 0:00:01[K    94% |██████████████████████████████▏ | 512kB 34.4MB/s eta 0:00:01[K    96% |██████████████████████████████▊ | 522kB 34.7MB/s eta 0:00:01[K    97% |███████████████████████████████▍| 532kB 38.5MB/s eta 0:00:01[K    99% |████████████████████████████████| 542kB 39.4MB/s eta 0:00:01[K    100% |████████████████████████████████| 552kB 2.6MB/s 
[?25hCollecting Flask==0.10.1 (from chill==0.3.3)
  Downloading Flask-0.10.1.tar.gz (544kB)
[?25l[K    1% |▋                               | 10kB 50.2MB/s eta 0:00:01[K    3% |█▏                              | 20kB 40.6MB/s eta 0:00:01[K    5% |█▉                              | 30kB 44.0MB/s eta 0:00:01[K    7% |██▍                             | 40kB 44.0MB/s eta 0:00:01[K    9% |███                             | 51kB 43.4MB/s eta 0:00:01[K    11% |███▋                            | 61kB 45.0MB/s eta 0:00:01[K    13% |████▏                           | 71kB 43.5MB/s eta 0:00:01[K    15% |████▉                           | 81kB 43.8MB/s eta 0:00:01[K    16% |█████▍                          | 92kB 45.0MB/s eta 0:00:01[K    18% |██████                          | 102kB 44.9MB/s eta 0:00:01[K    20% |██████▋                         | 112kB 45.4MB/s eta 0:00:01[K    22% |███████▎                        | 122kB 46.1MB/s eta 0:00:01[K    24% |███████▉                        | 133kB 45.3MB/s eta 0:00:01[K    26% |████████▍                       | 143kB 46.3MB/s eta 0:00:01[K    28% |█████████                       | 153kB 46.6MB/s eta 0:00:01[K    30% |█████████▋                      | 163kB 45.2MB/s eta 0:00:01[K    31% |██████████▎                     | 174kB 47.7MB/s eta 0:00:01[K    33% |██████████▉                     | 184kB 47.4MB/s eta 0:00:01[K    35% |███████████▍                    | 194kB 47.4MB/s eta 0:00:01[K    37% |████████████                    | 204kB 47.3MB/s eta 0:00:01[K    39% |████████████▋                   | 215kB 46.3MB/s eta 0:00:01[K    41% |█████████████▎                  | 225kB 48.0MB/s eta 0:00:01[K    43% |█████████████▉                  | 235kB 47.7MB/s eta 0:00:01[K    45% |██████████████▌                 | 245kB 46.6MB/s eta 0:00:01[K    47% |███████████████                 | 256kB 46.2MB/s eta 0:00:01[K    48% |███████████████▋                | 266kB 45.4MB/s eta 0:00:01[K    50% |████████████████▎               | 276kB 44.3MB/s eta 0:00:01[K    52% |████████████████▉               | 286kB 44.8MB/s eta 0:00:01[K    54% |█████████████████▌              | 296kB 43.6MB/s eta 0:00:01[K    56% |██████████████████              | 307kB 45.2MB/s eta 0:00:01[K    58% |██████████████████▋             | 317kB 45.2MB/s eta 0:00:01[K    60% |███████████████████▎            | 327kB 45.0MB/s eta 0:00:01[K    62% |███████████████████▉            | 337kB 47.0MB/s eta 0:00:01[K    63% |████████████████████▌           | 348kB 47.4MB/s eta 0:00:01[K    65% |█████████████████████           | 358kB 49.8MB/s eta 0:00:01[K    67% |█████████████████████▊          | 368kB 51.9MB/s eta 0:00:01[K    69% |██████████████████████▎         | 378kB 52.8MB/s eta 0:00:01[K    71% |██████████████████████▉         | 389kB 54.6MB/s eta 0:00:01[K    73% |███████████████████████▌        | 399kB 56.2MB/s eta 0:00:01[K    75% |████████████████████████        | 409kB 55.3MB/s eta 0:00:01[K    77% |███████████���████████████▊       | 419kB 57.8MB/s eta 0:00:01[K    79% |█████████████████████████▎      | 430kB 58.1MB/s eta 0:00:01[K    80% |██████████████████████████      | 440kB 58.2MB/s eta 0:00:01[K    82% |██████████████████████████▌     | 450kB 59.2MB/s eta 0:00:01[K    84% |███████████████████████████     | 460kB 56.5MB/s eta 0:00:01[K    86% |███████████████████████████▊    | 471kB 58.1MB/s eta 0:00:01[K    88% |████████████████████████████▎   | 481kB 58.2MB/s eta 0:00:01[K    90% |█████████████████████████████   | 491kB 57.2MB/s eta 0:00:01[K    92% |█████████████████████████████▌  | 501kB 58.5MB/s eta 0:00:01[K    94% |██████████████████████████████  | 512kB 58.4MB/s eta 0:00:01[K    95% |██████████████████████████████▊ | 522kB 58.4MB/s eta 0:00:01[K    97% |███████████████████████████████▎| 532kB 58.4MB/s eta 0:00:01[K    99% |████████████████████████████████| 542kB 57.6MB/s eta 0:00:01[K    100% |████████████████████████████████| 552kB 2.6MB/s 
[?25hCollecting Jinja2 (from chill==0.3.3)
  Downloading Jinja2-2.10-py2.py3-none-any.whl (126kB)
[?25l[K    8% |██▋                             | 10kB 43.0MB/s eta 0:00:01[K    16% |█████▏                          | 20kB 34.7MB/s eta 0:00:01[K    24% |███████▉                        | 30kB 38.3MB/s eta 0:00:01[K    32% |██████████▍                     | 40kB 39.6MB/s eta 0:00:01[K    40% |█████████████                   | 51kB 39.6MB/s eta 0:00:01[K    48% |███████████████▋                | 61kB 41.5MB/s eta 0:00:01[K    56% |██████████████████▏             | 71kB 42.6MB/s eta 0:00:01[K    64% |████████████████████▊           | 81kB 43.4MB/s eta 0:00:01[K    72% |███████████████████████▍        | 92kB 44.7MB/s eta 0:00:01[K    81% |██████████████████████████      | 102kB 45.3MB/s eta 0:00:01[K    89% |████████████████████████████▌   | 112kB 47.1MB/s eta 0:00:01[K    97% |███████████████████████████████▏| 122kB 50.4MB/s eta 0:00:01[K    100% |████████████████████████████████| 133kB 9.6MB/s 
[?25hCollecting Flask-Cache (from chill==0.3.3)
  Downloading Flask-Cache-0.13.1.tar.gz (45kB)
[?25l[K    22% |███████▏                        | 10kB 55.1MB/s eta 0:00:01[K    44% |██████████████▎                 | 20kB 46.7MB/s eta 0:00:01[K    67% |█████████████████████▌          | 30kB 50.7MB/s eta 0:00:01[K    89% |████████████████████████████▋   | 40kB 46.2MB/s eta 0:00:01[K    100% |████████████████████████████████| 51kB 10.5MB/s 
[?25hCollecting Frozen-Flask (from chill==0.3.3)
  Downloading Frozen_Flask-0.15-py2.py3-none-any.whl
Collecting Flask-Markdown (from chill==0.3.3)
  Downloading Flask-Markdown-0.3.tar.gz (165kB)
[?25l[K    6% |██                              | 10kB 54.2MB/s eta 0:00:01[K    12% |████                            | 20kB 44.7MB/s eta 0:00:01[K    18% |██████                          | 30kB 48.8MB/s eta 0:00:01[K    24% |████████                        | 40kB 48.9MB/s eta 0:00:01[K    30% |█████████▉                      | 51kB 47.2MB/s eta 0:00:01[K    37% |███████████▉                    | 61kB 46.8MB/s eta 0:00:01[K    43% |█████████████▉                  | 71kB 44.8MB/s eta 0:00:01[K    49% |███████████████▉                | 81kB 44.0MB/s eta 0:00:01[K    55% |█████████████████▉              | 92kB 43.3MB/s eta 0:00:01[K    61% |███████████████████▊            | 102kB 42.9MB/s eta 0:00:01[K    67% |█████████████████████▊          | 112kB 42.1MB/s eta 0:00:01[K    74% |███████████████████████▊        | 122kB 42.0MB/s eta 0:00:01[K    80% |█████████████████████████▊      | 133kB 40.2MB/s eta 0:00:01[K    86% |███████████████████████████▊    | 143kB 40.1MB/s eta 0:00:01[K    92% |██���██████████████████████████▋  | 153kB 40.4MB/s eta 0:00:01[K    98% |███████████████████████████████▋| 163kB 40.9MB/s eta 0:00:01[K    100% |████████████████████████████████| 174kB 7.3MB/s 
[?25hCollecting psycopg2 (from chill==0.3.3)
  Downloading psycopg2-2.7.3.2-cp27-cp27mu-manylinux1_x86_64.whl (2.7MB)
[?25l[K    0% |▏                               | 10kB 52.8MB/s eta 0:00:01[K    0% |▎                               | 20kB 43.8MB/s eta 0:00:01[K    1% |▍                               | 30kB 48.3MB/s eta 0:00:01[K    1% |▌                               | 40kB 48.9MB/s eta 0:00:01[K    1% |▋                               | 51kB 49.4MB/s eta 0:00:01[K    2% |▊                               | 61kB 51.2MB/s eta 0:00:01[K    2% |▉                               | 71kB 51.2MB/s eta 0:00:01[K    3% |█                               | 81kB 51.2MB/s eta 0:00:01[K    3% |█                               | 92kB 52.4MB/s eta 0:00:01[K    3% |█▎                              | 102kB 52.5MB/s eta 0:00:01[K    4% |█▍                              | 112kB 53.6MB/s eta 0:00:01[K    4% |█▌                              | 122kB 56.0MB/s eta 0:00:01[K    5% |█▋                              | 133kB 55.3MB/s eta 0:00:01[K    5% |█▊                              | 143kB 56.5MB/s eta 0:00:01[K    5% |█▉                              | 153kB 56.1MB/s eta 0:00:01[K    6% |██                              | 163kB 54.6MB/s eta 0:00:01[K    6% |██                              | 174kB 54.0MB/s eta 0:00:01[K    6% |██▏                             | 184kB 54.1MB/s eta 0:00:01[K    7% |██▍                             | 194kB 54.3MB/s eta 0:00:01[K    7% |██▌                             | 204kB 53.6MB/s eta 0:00:01[K    8% |██▋                             | 215kB 51.6MB/s eta 0:00:01[K    8% |██▊                             | 225kB 52.6MB/s eta 0:00:01[K    8% |██▉                             | 235kB 51.9MB/s eta 0:00:01[K    9% |███                             | 245kB 51.1MB/s eta 0:00:01[K    9% |███                             | 256kB 52.7MB/s eta 0:00:01[K    10% |███▏                            | 266kB 52.6MB/s eta 0:00:01[K    10% |███▎                            | 276kB 54.6MB/s eta 0:00:01[K    10% |███▌                            | 286kB 54.1MB/s eta 0:00:01[K    11% |███▋                            | 296kB 53.1MB/s eta 0:00:01[K    11% |███▊                            | 307kB 54.7MB/s eta 0:00:01[K    11% |███▉                            | 317kB 55.1MB/s eta 0:00:01[K    12% |████                            | 327kB 53.4MB/s eta 0:00:01[K    12% |████                            | 337kB 55.3MB/s eta 0:00:01[K    13% |████▏                           | 348kB 55.3MB/s eta 0:00:01[K    13% |████▎                           | 358kB 55.3MB/s eta 0:00:01[K    13% |████▍                           | 368kB 55.5MB/s eta 0:00:01[K    14% |████▋                           | 378kB 53.9MB/s eta 0:00:01[K    14% |████▊                           | 389kB 53.3MB/s eta 0:00:01[K    15% |████▉                           | 399kB 52.7MB/s eta 0:00:01[K    15% |█████                           | 409kB 51.8MB/s eta 0:00:01[K    15% |█████                           | 419kB 52.9MB/s eta 0:00:01[K    16% |█████▏                          | 430kB 50.4MB/s eta 0:00:01[K    16% |█████▎                          | 440kB 48.9MB/s eta 0:00:01[K    16% |█████▍                          | 450kB 46.7MB/s eta 0:00:01[K    17% |█████▌                          | 460kB 44.0MB/s eta 0:00:01[K    17% |█████▊                          | 471kB 44.2MB/s eta 0:00:01[K    18% |█████▉                          | 481kB 43.8MB/s eta 0:00:01[K    18% |██████                          | 491kB 44.1MB/s eta 0:00:01[K    18% |██████                          | 501kB 44.7MB/s eta 0:00:01[K    19% |██████▏                         | 512kB 43.8MB/s eta 0:00:01[K    19% |██████▎                         | 522kB 43.4MB/s eta 0:00:01[K    20% |██████▍                         | 532kB 44.3MB/s eta 0:00:01[K    20% |██████▌                         | 542kB 44.3MB/s eta 0:00:01[K    20% |██████▋                         | 552kB 46.4MB/s eta 0:00:01[K    21% |██████▉                         | 563kB 45.5MB/s eta 0:00:01[K    21% |███████                         | 573kB 44.7MB/s eta 0:00:01[K    21% |███████                         | 583kB 45.7MB/s eta 0:00:01[K    22% |███████▏                        | 593kB 45.1MB/s eta 0:00:01[K    22% |███████▎                        | 604kB 45.1MB/s eta 0:00:01[K    23% |███████▍                        | 614kB 45.8MB/s eta 0:00:01[K    23% |███████▌                        | 624kB 45.0MB/s eta 0:00:01[K    23% |███████▋                        | 634kB 46.5MB/s eta 0:00:01[K    24% |███████▊                        | 645kB 46.0MB/s eta 0:00:01[K    24% |███████▉                        | 655kB 45.2MB/s eta 0:00:01[K    25% |████████                        | 665kB 48.5MB/s eta 0:00:01[K    25% |████████▏                       | 675kB 49.1MB/s eta 0:00:01[K    25% |████████▎                       | 686kB 49.3MB/s eta 0:00:01[K    26% |████████▍                       | 696kB 49.7MB/s eta 0:00:01[K    26% |████████▌                       | 706kB 48.3MB/s eta 0:00:01[K    26% |████████▋                       | 716kB 48.9MB/s eta 0:00:01[K    27% |████████▊                       | 727kB 49.2MB/s eta 0:00:01[K    27% |████████▉                       | 737kB 47.7MB/s eta 0:00:01[K    28% |█████████                       | 747kB 49.1MB/s eta 0:00:01[K    28% |█████████▏                      | 757kB 47.5MB/s eta 0:00:01[K    28% |█████████▎                      | 768kB 47.3MB/s eta 0:00:01[K    29% |█████████▍                      | 778kB 46.5MB/s eta 0:00:01[K    29% |█████████▌                      | 788kB 45.6MB/s eta 0:00:01[K    30% |█████████▋                      | 798kB 46.7MB/s eta 0:00:01[K    30% |█████████▊                      | 808kB 46.6MB/s eta 0:00:01[K    30% |█████████▉                      | 819kB 45.5MB/s eta 0:00:01[K    31% |██████████                      | 829kB 46.6MB/s eta 0:00:01[K    31% |██████████                      | 839kB 46.6MB/s eta 0:00:01[K    31% |██████████▎                     | 849kB 46.7MB/s eta 0:00:01[K    32% |██████████▍                     | 860kB 48.3MB/s eta 0:00:01[K    32% |██████████▌                     | 870kB 47.6MB/s eta 0:00:01[K    33% |██████████▋                     | 880kB 49.2MB/s eta 0:00:01[K    33% |██████████▊                     | 890kB 48.8MB/s eta 0:00:01[K    33% |██████████▉                     | 901kB 47.8MB/s eta 0:00:01[K    34% |███████████                     | 911kB 49.4MB/s eta 0:00:01[K    34% |███████████                     | 921kB 49.7MB/s eta 0:00:01[K    35% |███████████▏                    | 931kB 49.8MB/s eta 0:00:01[K    35% |███████████▍                    | 942kB 50.0MB/s eta 0:00:01[K    35% |███████████▌                    | 952kB 47.7MB/s eta 0:00:01[K    36% |███████████▋                    | 962kB 48.9MB/s eta 0:00:01[K    36% |███████████▊                    | 972kB 48.4MB/s eta 0:00:01[K    36% |██████████���▉                    | 983kB 47.2MB/s eta 0:00:01[K    37% |████████████                    | 993kB 48.5MB/s eta 0:00:01[K    37% |████████████                    | 1.0MB 48.0MB/s eta 0:00:01[K    38% |████████████▏                   | 1.0MB 47.9MB/s eta 0:00:01[K    38% |████████████▎                   | 1.0MB 47.4MB/s eta 0:00:01[K    38% |████████████▌                   | 1.0MB 46.5MB/s eta 0:00:01[K    39% |████████████▋                   | 1.0MB 47.3MB/s eta 0:00:01[K    39% |████████████▊                   | 1.1MB 46.6MB/s eta 0:00:01[K    40% |████████████▉                   | 1.1MB 44.7MB/s eta 0:00:01[K    40% |█████████████                   | 1.1MB 45.0MB/s eta 0:00:01[K    40% |█████████████                   | 1.1MB 44.6MB/s eta 0:00:01[K    41% |█████████████▏                  | 1.1MB 44.5MB/s eta 0:00:01[K    41% |█████████████▎                  | 1.1MB 44.4MB/s eta 0:00:01[K    41% |█████████████▍                  | 1.1MB 43.7MB/s eta 0:00:01[K    42% |█████████████▋                  | 1.1MB 45.3MB/s eta 0:00:01[K    42% |█████████████▊                  | 1.1MB 43.7MB/s eta 0:00:01[K    43% |█████████████▉                  | 1.1MB 43.3MB/s eta 0:00:01[K    43% |██████████████                  | 1.2MB 46.2MB/s eta 0:00:01[K    43% |██████████████                  | 1.2MB 47.5MB/s eta 0:00:01[K    44% |██████████████▏                 | 1.2MB 49.1MB/s eta 0:00:01[K    44% |██████████████▎                 | 1.2MB 50.0MB/s eta 0:00:01[K    45% |██████████████▍                 | 1.2MB 49.8MB/s eta 0:00:01[K    45% |██████████████▌                 | 1.2MB 52.0MB/s eta 0:00:01[K    45% |██████████████▋                 | 1.2MB 52.0MB/s eta 0:00:01[K    46% |██████████████▉                 | 1.2MB 50.7MB/s eta 0:00:01[K    46% |███████████████                 | 1.2MB 54.6MB/s eta 0:00:01[K    46% |███████████████                 | 1.2MB 55.3MB/s eta 0:00:01[K    47% |███████████████▏                | 1.3MB 55.5MB/s eta 0:00:01[K    47% |███████████████▎                | 1.3MB 55.2MB/s eta 0:00:01[K    48% |███████████████▍                | 1.3MB 53.6MB/s eta 0:00:01[K    48% |███████████████▌                | 1.3MB 55.3MB/s eta 0:00:01[K    48% |███████████████▋                | 1.3MB 55.4MB/s eta 0:00:01[K    49% |███████████████▊                | 1.3MB 54.3MB/s eta 0:00:01[K    49% |████████████████                | 1.3MB 56.2MB/s eta 0:00:01[K    50% |████████████████                | 1.3MB 55.9MB/s eta 0:00:01[K    50% |████████████████▏               | 1.3MB 53.8MB/s eta 0:00:01[K    50% |████████████████▎               | 1.4MB 52.9MB/s eta 0:00:01[K    51% |████████████████▍               | 1.4MB 51.2MB/s eta 0:00:01[K    51% |████████████████▌               | 1.4MB 53.0MB/s eta 0:00:01[K    51% |████████████████▋               | 1.4MB 53.0MB/s eta 0:00:01[K    52% |████████████████▊               | 1.4MB 51.6MB/s eta 0:00:01[K    52% |████████████████▉               | 1.4MB 52.5MB/s eta 0:00:01[K    53% |█████████████████               | 1.4MB 52.1MB/s eta 0:00:01[K    53% |█████████████████▏              | 1.4MB 52.0MB/s eta 0:00:01[K    53% |█████████████████▎              | 1.4MB 52.1MB/s eta 0:00:01[K    54% |█████████████████▍              | 1.4MB 52.5MB/s eta 0:00:01[K    54% |█████████████████▌              | 1.5MB 54.3MB/s eta 0:00:01[K    55% |█████████████████▋              | 1.5MB 54.6MB/s eta 0:00:01[K    55% |███████████���█████▊              | 1.5MB 52.9MB/s eta 0:00:01[K    55% |█████████████████▉              | 1.5MB 54.5MB/s eta 0:00:01[K    56% |██████████████████              | 1.5MB 54.4MB/s eta 0:00:01[K    56% |██████████████████▏             | 1.5MB 54.5MB/s eta 0:00:01[K    56% |██████████████████▎             | 1.5MB 54.5MB/s eta 0:00:01[K    57% |██████████████████▍             | 1.5MB 53.5MB/s eta 0:00:01[K    57% |██████████████████▌             | 1.5MB 55.3MB/s eta 0:00:01[K    58% |██████████████████▋             | 1.5MB 56.0MB/s eta 0:00:01[K    58% |██████████████████▊             | 1.6MB 51.8MB/s eta 0:00:01[K    58% |██████████████████▉             | 1.6MB 53.2MB/s eta 0:00:01[K    59% |███████████████████             | 1.6MB 53.2MB/s eta 0:00:01[K    59% |███████████████████             | 1.6MB 53.0MB/s eta 0:00:01[K    60% |███████████████████▎            | 1.6MB 53.4MB/s eta 0:00:01[K    60% |███████████████████▍            | 1.6MB 52.4MB/s eta 0:00:01[K    60% |███████████████████▌            | 1.6MB 53.8MB/s eta 0:00:01[K    61% |███████���███████████▋            | 1.6MB 54.0MB/s eta 0:00:01[K    61% |███████████████████▊            | 1.6MB 51.8MB/s eta 0:00:01[K    62% |███████████████████▉            | 1.6MB 52.7MB/s eta 0:00:01[K    62% |████████████████████            | 1.7MB 55.3MB/s eta 0:00:01[K    62% |████████████████████            | 1.7MB 55.4MB/s eta 0:00:01[K    63% |████████████████████▏           | 1.7MB 55.4MB/s eta 0:00:01[K    63% |████████████████████▍           | 1.7MB 54.5MB/s eta 0:00:01[K    63% |████████████████████▌           | 1.7MB 55.9MB/s eta 0:00:01[K    64% |████████████████████▋           | 1.7MB 55.4MB/s eta 0:00:01[K    64% |████████████████████▊           | 1.7MB 54.2MB/s eta 0:00:01[K    65% |████████████████████▉           | 1.7MB 55.2MB/s eta 0:00:01[K    65% |█████████████████████           | 1.7MB 55.6MB/s eta 0:00:01[K    65% |█████████████████████           | 1.8MB 55.7MB/s eta 0:00:01[K    66% |█████████████████████▏          | 1.8MB 55.8MB/s eta 0:00:01[K    66% |█████████████████████▎          | 1.8MB 52.1MB/s eta 0:00:01[K    67% |█████████████████████▍          | 1.8MB 53.5MB/s eta 0:00:01[K    67% |█████████████████████▋          | 1.8MB 52.8MB/s eta 0:00:01[K    67% |█████████████████████▊          | 1.8MB 51.3MB/s eta 0:00:01[K    68% |█████████████████████▉          | 1.8MB 52.7MB/s eta 0:00:01[K    68% |██████████████████████          | 1.8MB 52.2MB/s eta 0:00:01[K    68% |██████████████████████          | 1.8MB 52.2MB/s eta 0:00:01[K    69% |██████████████████████▏         | 1.8MB 52.4MB/s eta 0:00:01[K    69% |██████████████████████▎         | 1.9MB 51.3MB/s eta 0:00:01[K    70% |██████████████████████▍         | 1.9MB 52.7MB/s eta 0:00:01[K    70% |██████████████████████▌         | 1.9MB 54.9MB/s eta 0:00:01[K    70% |██████████████████████▊         | 1.9MB 53.9MB/s eta 0:00:01[K    71% |██████████████████████▉         | 1.9MB 55.7MB/s eta 0:00:01[K    71% |███████████████████████         | 1.9MB 55.6MB/s eta 0:00:01[K    72% |███████████████████████         | 1.9MB 55.7MB/s eta 0:00:01[K    72% |███████████████████████▏        | 1.9MB 55.5MB/s eta 0:00:01[K    72% |███████████████████████▎        | 1.9MB 54.4MB/s eta 0:00:01[K    73% |███████████████████████▍        | 1.9MB 56.1MB/s eta 0:00:01[K    73% |███████████████████████▌        | 2.0MB 56.4MB/s eta 0:00:01[K    73% |███████████████████████▋        | 2.0MB 54.7MB/s eta 0:00:01[K    74% |███████████████████████▉        | 2.0MB 56.2MB/s eta 0:00:01[K    74% |████████████████████████        | 2.0MB 54.0MB/s eta 0:00:01[K    75% |████████████████████████        | 2.0MB 53.9MB/s eta 0:00:01[K    75% |████████████████████████▏       | 2.0MB 54.0MB/s eta 0:00:01[K    75% |████████████████████████▎       | 2.0MB 52.4MB/s eta 0:00:01[K    76% |████████████████████████▍       | 2.0MB 54.1MB/s eta 0:00:01[K    76% |████████████████████████▌       | 2.0MB 54.0MB/s eta 0:00:01[K    77% |████████████████████████▋       | 2.0MB 52.5MB/s eta 0:00:01[K    77% |████████���███████████████▊       | 2.1MB 53.4MB/s eta 0:00:01[K    77% |█████████████████████████       | 2.1MB 53.3MB/s eta 0:00:01[K    78% |█████████████████████████       | 2.1MB 53.4MB/s eta 0:00:01[K    78% |█████████████████████████▏      | 2.1MB 55.5MB/s eta 0:00:01[K    78% |█████████████████████████▎      | 2.1MB 54.0MB/s eta 0:00:01[K    79% |█████████████████████████▍      | 2.1MB 55.2MB/s eta 0:00:01[K    79% |█████████████████████████▌      | 2.1MB 52.5MB/s eta 0:00:01[K    80% |█████████████████████████▋      | 2.1MB 48.9MB/s eta 0:00:01[K    80% |█████████████████████████▊      | 2.1MB 48.4MB/s eta 0:00:01[K    80% |█████████████████████████▉      | 2.2MB 48.0MB/s eta 0:00:01[K    81% |██████████████████████████      | 2.2MB 46.8MB/s eta 0:00:01[K    81% |██████████████████████████▏     | 2.2MB 46.5MB/s eta 0:00:01[K    82% |██████████████████████████▎     | 2.2MB 43.8MB/s eta 0:00:01[K    82% |██████████████████���███████▍     | 2.2MB 44.3MB/s eta 0:00:01[K    82% |██████████████████████████▌     | 2.2MB 44.6MB/s eta 0:00:01[K    83% |██████████████████████████▋     | 2.2MB 44.1MB/s eta 0:00:01[K    83% |██████████████████████████▊     | 2.2MB 47.1MB/s eta 0:00:01[K    83% |██████████████████████████▉     | 2.2MB 49.3MB/s eta 0:00:01[K    84% |███████████████████████████     | 2.2MB 49.7MB/s eta 0:00:01[K    84% |███████████████████████████▏    | 2.3MB 50.4MB/s eta 0:00:01[K    85% |███████████████████████████▎    | 2.3MB 50.7MB/s eta 0:00:01[K    85% |███████████████████████████▍    | 2.3MB 52.7MB/s eta 0:00:01[K    85% |███████████████████████████▌    | 2.3MB 55.7MB/s eta 0:00:01[K    86% |███████████████████████████▋    | 2.3MB 54.9MB/s eta 0:00:01[K    86% |███████████████████████████▊    | 2.3MB 56.0MB/s eta 0:00:01[K    87% |███████████████████████████▉    | 2.3MB 56.0MB/s eta 0:00:01[K    87% |██████████████���█████████████    | 2.3MB 56.2MB/s eta 0:00:01[K    87% |████████████████████████████    | 2.3MB 56.6MB/s eta 0:00:01[K    88% |████████████████████████████▏   | 2.3MB 56.2MB/s eta 0:00:01[K    88% |████████████████████████████▍   | 2.4MB 57.5MB/s eta 0:00:01[K    88% |████████████████████████████▌   | 2.4MB 57.7MB/s eta 0:00:01[K    89% |████████████████████████████▋   | 2.4MB 56.4MB/s eta 0:00:01[K    89% |████████████████████████████▊   | 2.4MB 57.3MB/s eta 0:00:01[K    90% |████████████████████████████▉   | 2.4MB 57.4MB/s eta 0:00:01[K    90% |█████████████████████████████   | 2.4MB 55.7MB/s eta 0:00:01[K    90% |█████████████████████████████   | 2.4MB 55.6MB/s eta 0:00:01[K    91% |█████████████████████████████▏  | 2.4MB 54.5MB/s eta 0:00:01[K    91% |█████████████████████████████▎  | 2.4MB 55.5MB/s eta 0:00:01[K    92% |█████████████████████████████▌  | 2.4MB 56.2MB/s eta 0:00:01[K    92% |█████████████████████████████▋  | 2.5MB 55.2MB/s eta 0:00:01[K    92% |█████████████████████████████▊  | 2.5MB 56.4MB/s eta 0:00:01[K    93% |█████████████████████████████▉  | 2.5MB 56.3MB/s eta 0:00:01[K    93% |██████████████████████████████  | 2.5MB 56.5MB/s eta 0:00:01[K    93% |██████████████████████████████  | 2.5MB 56.6MB/s eta 0:00:01[K    94% |██████████████████████████████▏ | 2.5MB 56.8MB/s eta 0:00:01[K    94% |██████████████████████████████▎ | 2.5MB 58.1MB/s eta 0:00:01[K    95% |██████████████████████████████▍ | 2.5MB 58.0MB/s eta 0:00:01[K    95% |██████████████████████████████▋ | 2.5MB 56.5MB/s eta 0:00:01[K    95% |██████████████████████████████▊ | 2.5MB 57.8MB/s eta 0:00:01[K    96% |██████████████████████████████▉ | 2.6MB 57.7MB/s eta 0:00:01[K    96% |███████████████████████████████ | 2.6MB 57.7MB/s eta 0:00:01[K    97% |███████████���███████████████████ | 2.6MB 57.8MB/s eta 0:00:01[K    97% |███████████████████████████████▏| 2.6MB 56.2MB/s eta 0:00:01[K    97% |███████████████████████████████▎| 2.6MB 57.3MB/s eta 0:00:01[K    98% |███████████████████████████████▍| 2.6MB 57.5MB/s eta 0:00:01[K    98% |███████████████████████████████▌| 2.6MB 55.5MB/s eta 0:00:01[K    98% |███████████████████████████████▊| 2.6MB 55.0MB/s eta 0:00:01[K    99% |███████████████████████████████▉| 2.6MB 55.3MB/s eta 0:00:01[K    99% |████████████████████████████████| 2.7MB 55.3MB/s eta 0:00:01[K    100% |████████████████████████████████| 2.7MB 505kB/s 
[?25hCollecting sqlalchemy (from chill==0.3.3)
  Downloading SQLAlchemy-1.2.2.tar.gz (5.5MB)
[?25l[K    0% |                                | 10kB 50.7MB/s eta 0:00:01[K    0% |▏                               | 20kB 43.4MB/s eta 0:00:01[K    0% |▏                               | 30kB 45.8MB/s eta 0:00:01[K    0% |▎                               | 40kB 45.0MB/s eta 0:00:01[K    0% |▎                               | 51kB 43.9MB/s eta 0:00:01[K    1% |▍                               | 61kB 45.4MB/s eta 0:00:01[K    1% |▍                               | 71kB 43.1MB/s eta 0:00:01[K    1% |▌                               | 81kB 44.9MB/s eta 0:00:01[K    1% |▌                               | 92kB 45.3MB/s eta 0:00:01[K    1% |▋                               | 102kB 45.0MB/s eta 0:00:01[K    2% |▋                               | 112kB 45.9MB/s eta 0:00:01[K    2% |▊                               | 122kB 46.2MB/s eta 0:00:01[K    2% |▉                               | 133kB 45.1MB/s eta 0:00:01[K    2% |▉                               | 143kB 46.8MB/s eta 0:00:01[K    2% |█                               | 153kB 47.7MB/s eta 0:00:01[K    3% |█                               | 163kB 47.5MB/s eta 0:00:01[K    3% |█                               | 174kB 50.0MB/s eta 0:00:01[K    3% |█                               | 184kB 48.3MB/s eta 0:00:01[K    3% |█▏                              | 194kB 49.7MB/s eta 0:00:01[K    3% |█▏                              | 204kB 49.1MB/s eta 0:00:01[K    3% |█▎                              | 215kB 47.5MB/s eta 0:00:01[K    4% |█▎                              | 225kB 49.8MB/s eta 0:00:01[K    4% |█▍                              | 235kB 50.2MB/s eta 0:00:01[K    4% |█▍                              | 245kB 49.4MB/s eta 0:00:01[K    4% |█▌                              | 256kB 48.9MB/s eta 0:00:01[K    4% |█▋                              | 266kB 47.7MB/s eta 0:00:01[K    5% |█▋                              | 276kB 48.8MB/s eta 0:00:01[K    5% |█▊                              | 286kB 48.4MB/s eta 0:00:01[K    5% |█▊                              | 296kB 46.1MB/s eta 0:00:01[K    5% |█▉                              | 307kB 48.4MB/s eta 0:00:01[K    5% |█▉                              | 317kB 49.4MB/s eta 0:00:01[K    6% |██                              | 327kB 48.5MB/s eta 0:00:01[K    6% |██                              | 337kB 49.0MB/s eta 0:00:01[K    6% |██                              | 348kB 47.0MB/s eta 0:00:01[K    6% |██                              | 358kB 47.1MB/s eta 0:00:01[K    6% |██▏                             | 368kB 46.2MB/s eta 0:00:01[K    6% |██▏                             | 378kB 43.4MB/s eta 0:00:01[K    7% |██▎                             | 389kB 44.9MB/s eta 0:00:01[K    7% |██▍                             | 399kB 46.2MB/s eta 0:00:01[K    7% |██▍                             | 409kB 45.9MB/s eta 0:00:01[K    7% |██▌                             | 419kB 45.4MB/s eta 0:00:01[K    7% |██▌                             | 430kB 45.6MB/s eta 0:00:01[K    8% |██▋                             | 440kB 46.9MB/s eta 0:00:01[K    8% |██▋                             | 450kB 48.2MB/s eta 0:00:01[K    8% |██▊                             | 460kB 48.8MB/s eta 0:00:01[K    8% |██▊                             | 471kB 52.2MB/s eta 0:00:01[K    8% |██▉                             | 481kB 55.3MB/s eta 0:00:01[K    9% |██▉                             | 491kB 56.0MB/s eta 0:00:01[K    9% |███                             | 501kB 55.9MB/s eta 0:00:01[K    9% |███                             | 512kB 54.7MB/s eta 0:00:01[K    9% |███                             | 522kB 56.5MB/s eta 0:00:01[K    9% |███▏                            | 532kB 56.5MB/s eta 0:00:01[K    9% |███▏                            | 542kB 55.4MB/s eta 0:00:01[K    10% |███▎                            | 552kB 57.5MB/s eta 0:00:01[K    10% |███▎                            | 563kB 57.7MB/s eta 0:00:01[K    10% |███▍                            | 573kB 57.8MB/s eta 0:00:01[K    10% |███▍                            | 583kB 57.4MB/s eta 0:00:01[K    10% |███▌                            | 593kB 55.6MB/s eta 0:00:01[K    11% |███▌                            | 604kB 57.1MB/s eta 0:00:01[K    11% |███▋                            | 614kB 57.2MB/s eta 0:00:01[K    11% |███▋                            | 624kB 56.1MB/s eta 0:00:01[K    11% |███▊                            | 634kB 57.4MB/s eta 0:00:01[K    11% |███▉                            | 645kB 56.5MB/s eta 0:00:01[K    12% |███▉                            | 655kB 56.6MB/s eta 0:00:01[K    12% |████                            | 665kB 56.8MB/s eta 0:00:01[K    12% |████                            | 675kB 54.5MB/s eta 0:00:01[K    12% |████                            | 686kB 55.8MB/s eta 0:00:01[K    12% |████                            | 696kB 56.1MB/s eta 0:00:01[K    12% |████▏                           | 706kB 54.9MB/s eta 0:00:01[K    13% |████▏                           | 716kB 56.6MB/s eta 0:00:01[K    13% |████▎                           | 727kB 56.0MB/s eta 0:00:01[K    13% |████▎                           | 737kB 55.9MB/s eta 0:00:01[K    13% |████▍                           | 747kB 56.4MB/s eta 0:00:01[K    13% |████▍                           | 757kB 54.6MB/s eta 0:00:01[K    14% |████▌                           | 768kB 56.0MB/s eta 0:00:01[K    14% |████▋                           | 778kB 57.3MB/s eta 0:00:01[K    14% |████▋                           | 788kB 55.2MB/s eta 0:00:01[K    14% |████▊                           | 798kB 56.8MB/s eta 0:00:01[K    14% |████▊                           | 808kB 56.4MB/s eta 0:00:01[K    15% |████▉                           | 819kB 56.3MB/s eta 0:00:01[K    15% |████▉                           | 829kB 56.2MB/s eta 0:00:01[K    15% |█████                           | 839kB 55.1MB/s eta 0:00:01[K    15% |█████                           | 849kB 56.6MB/s eta 0:00:01[K    15% |█████                           | 860kB 57.4MB/s eta 0:00:01[K    15% |█████                           | 870kB 55.4MB/s eta 0:00:01[K    16% |█████▏                          | 880kB 56.4MB/s eta 0:00:01[K    16% |█████▏                          | 890kB 56.8MB/s eta 0:00:01[K    16% |█████▎                          | 901kB 55.6MB/s eta 0:00:01[K    16% |█████▍                          | 911kB 55.5MB/s eta 0:00:01[K    16% |█████▍                          | 921kB 54.4MB/s eta 0:00:01[K    17% |█████▌                          | 931kB 56.1MB/s eta 0:00:01[K    17% |█████▌                          | 942kB 55.4MB/s eta 0:00:01[K    17% |█████▋                          | 952kB 53.6MB/s eta 0:00:01[K    17% |█████▋                          | 962kB 54.5MB/s eta 0:00:01[K    17% |█████▊                          | 972kB 54.4MB/s eta 0:00:01[K    18% |█████▊                          | 983kB 54.4MB/s eta 0:00:01[K    18% |█████▉                          | 993kB 54.6MB/s eta 0:00:01[K    18% |█████▉                          | 1.0MB 54.6MB/s eta 0:00:01[K    18% |██████                          | 1.0MB 56.3MB/s eta 0:00:01[K    18% |██████                          | 1.0MB 55.6MB/s eta 0:00:01[K    18% |██████                          | 1.0MB 54.6MB/s eta 0:00:01[K    19% |██████▏                         | 1.0MB 56.4MB/s eta 0:00:01[K    19% |██████▏                         | 1.1MB 56.5MB/s eta 0:00:01[K    19% |██████▎                         | 1.1MB 56.6MB/s eta 0:00:01[K    19% |██████▎                         | 1.1MB 57.3MB/s eta 0:00:01[K    19% |██████▍                         | 1.1MB 55.4MB/s eta 0:00:01[K    20% |██████▍                         | 1.1MB 57.0MB/s eta 0:00:01[K    20% |██████▌                         | 1.1MB 56.5MB/s eta 0:00:01[K    20% |██████▌                         | 1.1MB 53.7MB/s eta 0:00:01[K    20% |██████▋                         | 1.1MB 55.4MB/s eta 0:00:01[K    20% |██████▋                         | 1.1MB 54.9MB/s eta 0:00:01[K    21% |██████▊                         | 1.1MB 54.9MB/s eta 0:00:01[K    21% |██████▉                         | 1.2MB 55.3MB/s eta 0:00:01[K    21% |██████▉                         | 1.2MB 54.2MB/s eta 0:00:01[K    21% |███████                         | 1.2MB 55.5MB/s eta 0:00:01[K    21% |███████                         | 1.2MB 55.7MB/s eta 0:00:01[K    21% |███████                         | 1.2MB 54.2MB/s eta 0:00:01[K    22% |███████                         | 1.2MB 55.8MB/s eta 0:00:01[K    22% |███████▏                        | 1.2MB 57.5MB/s eta 0:00:01[K    22% |███████▏                        | 1.2MB 57.6MB/s eta 0:00:01[K    22% |███████▎                        | 1.2MB 58.0MB/s eta 0:00:01[K    22% |███████▎                        | 1.2MB 56.6MB/s eta 0:00:01[K    23% |███████▍                        | 1.3MB 58.1MB/s eta 0:00:01[K    23% |███████▍                        | 1.3MB 57.5MB/s eta 0:00:01[K    23% |███████▌                        | 1.3MB 56.3MB/s eta 0:00:01[K    23% |███████▋                        | 1.3MB 58.2MB/s eta 0:00:01[K    23% |███████▋                        | 1.3MB 58.2MB/s eta 0:00:01[K    24% |███████▊                        | 1.3MB 58.3MB/s eta 0:00:01[K    24% |███████▊                        | 1.3MB 57.7MB/s eta 0:00:01[K    24% |███████▉                        | 1.3MB 56.4MB/s eta 0:00:01[K    24% |███████▉                        | 1.3MB 57.9MB/s eta 0:00:01[K    24% |████████                        | 1.4MB 56.2MB/s eta 0:00:01[K    24% |████████                        | 1.4MB 54.5MB/s eta 0:00:01[K    25% |████████                        | 1.4MB 56.2MB/s eta 0:00:01[K    25% |████████                        | 1.4MB 56.1MB/s eta 0:00:01[K    25% |████████▏                       | 1.4MB 56.0MB/s eta 0:00:01[K    25% |████████▏                       | 1.4MB 56.0MB/s eta 0:00:01[K    25% |████████▎                       | 1.4MB 54.8MB/s eta 0:00:01[K    26% |████████▍                       | 1.4MB 56.5MB/s eta 0:00:01[K    26% |████████▍                       | 1.4MB 56.6MB/s eta 0:00:01[K    26% |���███████▌                       | 1.4MB 54.6MB/s eta 0:00:01[K    26% |████████▌                       | 1.5MB 57.4MB/s eta 0:00:01[K    26% |████████▋                       | 1.5MB 56.9MB/s eta 0:00:01[K    27% |████████▋                       | 1.5MB 56.3MB/s eta 0:00:01[K    27% |████████▊                       | 1.5MB 55.6MB/s eta 0:00:01[K    27% |████████▊                       | 1.5MB 54.4MB/s eta 0:00:01[K    27% |████████▉                       | 1.5MB 56.0MB/s eta 0:00:01[K    27% |████████▉                       | 1.5MB 55.8MB/s eta 0:00:01[K    27% |█████████                       | 1.5MB 54.1MB/s eta 0:00:01[K    28% |█████████                       | 1.5MB 55.2MB/s eta 0:00:01[K    28% |█████████                       | 1.5MB 56.0MB/s eta 0:00:01[K    28% |█████████▏                      | 1.6MB 56.1MB/s eta 0:00:01[K    28% |█████████▏                      | 1.6MB 57.1MB/s eta 0:00:01[K    28% |█████████▎                      | 1.6MB 54.5MB/s eta 0:00:01[K    29% |█████████▎                      | 1.6MB 56.4MB/s eta 0:00:01[K    29% |█████████▍                      | 1.6MB 56.0MB/s eta 0:00:01[K    29% |█████████▍                      | 1.6MB 54.7MB/s eta 0:00:01[K    29% |█████████▌                      | 1.6MB 56.0MB/s eta 0:00:01[K    29% |█████████▌                      | 1.6MB 55.9MB/s eta 0:00:01[K    30% |█████████▋                      | 1.6MB 55.9MB/s eta 0:00:01[K    30% |█████████▋                      | 1.6MB 56.3MB/s eta 0:00:01[K    30% |█████████▊                      | 1.7MB 54.7MB/s eta 0:00:01[K    30% |█████████▉                      | 1.7MB 56.0MB/s eta 0:00:01[K    30% |█████████▉                      | 1.7MB 57.3MB/s eta 0:00:01[K    30% |██████████                      | 1.7MB 55.4MB/s eta 0:00:01[K    31% |██████████                      | 1.7MB 57.0MB/s eta 0:00:01[K    31% |██████████                      | 1.7MB 56.6MB/s eta 0:00:01[K    31% |██████████                      | 1.7MB 56.6MB/s eta 0:00:01[K    31% |██████████▏                     | 1.7MB 57.1MB/s eta 0:00:01[K    31% |██████████▏                     | 1.7MB 55.8MB/s eta 0:00:01[K    32% |██████████▎                     | 1.8MB 56.7MB/s eta 0:00:01[K    32% |██████████▎                     | 1.8MB 56.7MB/s eta 0:00:01[K    32% |██████████▍                     | 1.8MB 54.9MB/s eta 0:00:01[K    32% |██████████▍                     | 1.8MB 56.7MB/s eta 0:00:01[K    32% |██████████▌                     | 1.8MB 56.2MB/s eta 0:00:01[K    33% |██████████▋                     | 1.8MB 56.2MB/s eta 0:00:01[K    33% |██████████▋                     | 1.8MB 56.5MB/s eta 0:00:01[K    33% |██████████▊                     | 1.8MB 55.3MB/s eta 0:00:01[K    33% |██████████▊                     | 1.8MB 56.7MB/s eta 0:00:01[K    33% |██████████▉                     | 1.8MB 56.9MB/s eta 0:00:01[K    33% |██████████▉                     | 1.9MB 55.7MB/s eta 0:00:01[K    34% |███████████                     | 1.9MB 57.3MB/s eta 0:00:01[K    34% |███████████                     | 1.9MB 57.4MB/s eta 0:00:01[K    34% |███████████                     | 1.9MB 57.4MB/s eta 0:00:01[K    34% |███████████                     | 1.9MB 58.5MB/s eta 0:00:01[K    34% |███████████▏                    | 1.9MB 57.1MB/s eta 0:00:01[K    35% |███████████▎                    | 1.9MB 58.8MB/s eta 0:00:01[K    35% |███████████▎                    | 1.9MB 58.1MB/s eta 0:00:01[K    35% |███████████▍                    | 1.9MB 56.8MB/s eta 0:00:01[K    35% |███████████▍                    | 1.9MB 57.9MB/s eta 0:00:01[K    35% |███████████▌                    | 2.0MB 57.4MB/s eta 0:00:01[K    36% |███████████▌                    | 2.0MB 57.3MB/s eta 0:00:01[K    36% |███████████▋                    | 2.0MB 57.8MB/s eta 0:00:01[K    36% |███████████▋                    | 2.0MB 56.5MB/s eta 0:00:01[K    36% |███████████▊                    | 2.0MB 57.9MB/s eta 0:00:01[K    36% |███████████▊                    | 2.0MB 57.4MB/s eta 0:00:01[K    36% |███████████▉                    | 2.0MB 55.5MB/s eta 0:00:01[K    37% |███████████▉                    | 2.0MB 56.0MB/s eta 0:00:01[K    37% |████████████                    | 2.0MB 55.4MB/s eta 0:00:01[K    37% |████████████                    | 2.0MB 55.3MB/s eta 0:00:01[K    37% |████████████                    | 2.1MB 55.7MB/s eta 0:00:01[K    37% |████████████▏                   | 2.1MB 53.9MB/s eta 0:00:01[K    38% |████████████▏                   | 2.1MB 55.0MB/s eta 0:00:01[K    38% |████████████▎                   | 2.1MB 54.4MB/s eta 0:00:01[K    38% |████████████▎                   | 2.1MB 53.3MB/s eta 0:00:01[K    38% |████████████▍                   | 2.1MB 55.2MB/s eta 0:00:01[K    38% |████████████▍                   | 2.1MB 52.7MB/s eta 0:00:01[K    39% |████████████▌                   | 2.1MB 52.0MB/s eta 0:00:01[K    39% |████████████▌                   | 2.1MB 50.4MB/s eta 0:00:01[K    39% |████████████▋                   | 2.2MB 47.7MB/s eta 0:00:01[K    39% |████████████▋                   | 2.2MB 47.6MB/s eta 0:00:01[K    39% |████████████▊                   | 2.2MB 46.7MB/s eta 0:00:01[K    39% |████████████▉                   | 2.2MB 45.6MB/s eta 0:00:01[K    40% |████████████▉                   | 2.2MB 46.7MB/s eta 0:00:01[K    40% |█████████████                   | 2.2MB 46.6MB/s eta 0:00:01[K    40% |█████████████                   | 2.2MB 46.5MB/s eta 0:00:01[K    40% |█████████████                   | 2.2MB 47.6MB/s eta 0:00:01[K    40% |█████████████                   | 2.2MB 48.2MB/s eta 0:00:01[K    41% |█████████████▏                  | 2.2MB 51.0MB/s eta 0:00:01[K    41% |█████████████▏                  | 2.3MB 52.9MB/s eta 0:00:01[K    41% |█████████████▎                  | 2.3MB 52.6MB/s eta 0:00:01[K    41% |█████████████▎                  | 2.3MB 55.4MB/s eta 0:00:01[K    41% |█████████████▍                  | 2.3MB 56.1MB/s eta 0:00:01[K    42% |█████████████▍                  | 2.3MB 56.4MB/s eta 0:00:01[K    42% |█████████████▌                  | 2.3MB 55.9MB/s eta 0:00:01[K    42% |█████████████▋                  | 2.3MB 54.2MB/s eta 0:00:01[K    42% |█████████████▋                  | 2.3MB 57.2MB/s eta 0:00:01[K    42% |█████████████▊                  | 2.3MB 56.8MB/s eta 0:00:01[K    42% |█████████████▊                  | 2.3MB 54.9MB/s eta 0:00:01[K    43% |█████████████▉                  | 2.4MB 56.1MB/s eta 0:00:01[K    43% |█████████████▉                  | 2.4MB 57.0MB/s eta 0:00:01[K    43% |██████████████                  | 2.4MB 57.0MB/s eta 0:00:01[K    43% |██████████████                  | 2.4MB 56.7MB/s eta 0:00:01[K    43% |██████████████                  | 2.4MB 54.6MB/s eta 0:00:01[K    44% |██████████████                  | 2.4MB 56.2MB/s eta 0:00:01[K    44% |██████████████▏                 | 2.4MB 56.4MB/s eta 0:00:01[K    44% |██████████████▎                 | 2.4MB 54.6MB/s eta 0:00:01[K    44% |██████████████▎                 | 2.4MB 56.2MB/s eta 0:00:01[K    44% |██████████████▍                 | 2.4MB 55.5MB/s eta 0:00:01[K    45% |██████████████▍                 | 2.5MB 55.5MB/s eta 0:00:01[K    45% |██████████████▌                 | 2.5MB 55.0MB/s eta 0:00:01[K    45% |██████████████▌                 | 2.5MB 53.4MB/s eta 0:00:01[K    45% |██████████████▋                 | 2.5MB 54.6MB/s eta 0:00:01[K    45% |██████████████▋                 | 2.5MB 55.6MB/s eta 0:00:01[K    45% |██████████████▊                 | 2.5MB 54.0MB/s eta 0:00:01[K    46% |██████████████▊                 | 2.5MB 55.5MB/s eta 0:00:01[K    46% |██████████████▉                 | 2.5MB 56.3MB/s eta 0:00:01[K    46% |██████████████▉                 | 2.5MB 56.4MB/s eta 0:00:01[K    46% |███████████████                 | 2.5MB 57.2MB/s eta 0:00:01[K    46% |███████████████                 | 2.6MB 55.6MB/s eta 0:00:01[K    47% |███████████████                 | 2.6MB 57.2MB/s eta 0:00:01[K    47% |███████████████▏                | 2.6MB 57.4MB/s eta 0:00:01[K    47% |███████████████▏                | 2.6MB 55.5MB/s eta 0:00:01[K    47% |███████████████▎                | 2.6MB 56.5MB/s eta 0:00:01[K    47% |███████████████▎                | 2.6MB 57.1MB/s eta 0:00:01[K    48% |███████████████▍                | 2.6MB 57.0MB/s eta 0:00:01[K    48% |███████████████▍                | 2.6MB 56.4MB/s eta 0:00:01[K    48% |███████████████▌                | 2.6MB 55.3MB/s eta 0:00:01[K    48% |█████████████���█▌                | 2.7MB 57.1MB/s eta 0:00:01[K    48% |███████████████▋                | 2.7MB 57.1MB/s eta 0:00:01[K    48% |███████████████▋                | 2.7MB 54.2MB/s eta 0:00:01[K    49% |███████████████▊                | 2.7MB 55.8MB/s eta 0:00:01[K    49% |███████████████▉                | 2.7MB 56.6MB/s eta 0:00:01[K    49% |███████████████▉                | 2.7MB 56.8MB/s eta 0:00:01[K    49% |████████████████                | 2.7MB 56.4MB/s eta 0:00:01[K    49% |████████████████                | 2.7MB 54.8MB/s eta 0:00:01[K    50% |████████████████                | 2.7MB 56.3MB/s eta 0:00:01[K    50% |████████████████                | 2.7MB 55.5MB/s eta 0:00:01[K    50% |████████████████▏               | 2.8MB 53.7MB/s eta 0:00:01[K    50% |████████████████▏               | 2.8MB 55.3MB/s eta 0:00:01[K    50% |████████████████▎               | 2.8MB 57.0MB/s eta 0:00:01[K    51% |████████████████▎               | 2.8MB 56.6MB/s eta 0:00:01[K    51% |████████████████▍               | 2.8MB 55.5MB/s eta 0:00:01[K    51% |████████████████▍               | 2.8MB 54.2MB/s eta 0:00:01[K    51% |���███████████████▌               | 2.8MB 54.5MB/s eta 0:00:01[K    51% |████████████████▋               | 2.8MB 54.9MB/s eta 0:00:01[K    51% |████████████████▋               | 2.8MB 53.3MB/s eta 0:00:01[K    52% |████████████████▊               | 2.8MB 55.1MB/s eta 0:00:01[K    52% |████████████████▊               | 2.9MB 54.9MB/s eta 0:00:01[K    52% |████████████████▉               | 2.9MB 55.0MB/s eta 0:00:01[K    52% |████████████████▉               | 2.9MB 54.6MB/s eta 0:00:01[K    52% |█████████████████               | 2.9MB 52.4MB/s eta 0:00:01[K    53% |█████████████████               | 2.9MB 54.1MB/s eta 0:00:01[K    53% |█████████████████               | 2.9MB 53.7MB/s eta 0:00:01[K    53% |█████████████████               | 2.9MB 53.8MB/s eta 0:00:01[K    53% |█████████████████▏              | 2.9MB 55.1MB/s eta 0:00:01[K    53% |█████████████████▎              | 2.9MB 55.2MB/s eta 0:00:01[K    54% |█████████████████▎              | 2.9MB 55.2MB/s eta 0:00:01[K    54% |█████████████████▍              | 3.0MB 55.9MB/s eta 0:00:01[K    54% |█████████████████▍              | 3.0MB 54.8MB/s eta 0:00:01[K    54% |█████████████████▌              | 3.0MB 56.3MB/s eta 0:00:01[K    54% |█████████████████▌              | 3.0MB 57.3MB/s eta 0:00:01[K    54% |█████████████████▋              | 3.0MB 55.7MB/s eta 0:00:01[K    55% |█████████████████▋              | 3.0MB 57.4MB/s eta 0:00:01[K    55% |█████████████████▊              | 3.0MB 56.9MB/s eta 0:00:01[K    55% |█████████████████▊              | 3.0MB 56.8MB/s eta 0:00:01[K    55% |█████████████████▉              | 3.0MB 57.2MB/s eta 0:00:01[K    55% |█████████████████▉              | 3.1MB 56.0MB/s eta 0:00:01[K    56% |██████████████████              | 3.1MB 57.2MB/s eta 0:00:01[K    56% |██████████████████              | 3.1MB 56.7MB/s eta 0:00:01[K    56% |██████████████████              | 3.1MB 55.0MB/s eta 0:00:01[K    56% |██████████████████▏             | 3.1MB 56.8MB/s eta 0:00:01[K    56% |██████████████████▏             | 3.1MB 57.0MB/s eta 0:00:01[K    57% |██████████████████▎             | 3.1MB 55.9MB/s eta 0:00:01[K    57% |██████████████████▎             | 3.1MB 56.2MB/s eta 0:00:01[K    57% |██████████████████▍             | 3.1MB 55.0MB/s eta 0:00:01[K    57% |██████████████████▍             | 3.1MB 56.3MB/s eta 0:00:01[K    57% |██████████████████▌             | 3.2MB 56.4MB/s eta 0:00:01[K    57% |██████████████████▌             | 3.2MB 54.8MB/s eta 0:00:01[K    58% |██████████████████▋             | 3.2MB 56.3MB/s eta 0:00:01[K    58% |██████████████████▋             | 3.2MB 56.2MB/s eta 0:00:01[K    58% |██████████████████▊             | 3.2MB 56.2MB/s eta 0:00:01[K    58% |██████████████████▉             | 3.2MB 56.5MB/s eta 0:00:01[K    58% |██████████████████▉             | 3.2MB 56.3MB/s eta 0:00:01[K    59% |███████████████████             | 3.2MB 57.7MB/s eta 0:00:01[K    59% |███████████████████             | 3.2MB 57.9MB/s eta 0:00:01[K    59% |███████████████████             | 3.2MB 56.1MB/s eta 0:00:01[K    59% |███████████████████             | 3.3MB 57.1MB/s eta 0:00:01[K    59% |███████████████████▏            | 3.3MB 57.3MB/s eta 0:00:01[K    60% |█████████████���█████▏            | 3.3MB 57.4MB/s eta 0:00:01[K    60% |███████████████████▎            | 3.3MB 58.5MB/s eta 0:00:01[K    60% |███████████████████▎            | 3.3MB 57.3MB/s eta 0:00:01[K    60% |███████████████████▍            | 3.3MB 58.7MB/s eta 0:00:01[K    60% |███████████████████▍            | 3.3MB 58.3MB/s eta 0:00:01[K    60% |███████████████████▌            | 3.3MB 57.0MB/s eta 0:00:01[K    61% |███████████████████▋            | 3.3MB 58.1MB/s eta 0:00:01[K    61% |███████████████████▋            | 3.3MB 56.7MB/s eta 0:00:01[K    61% |███████████████████▊            | 3.4MB 56.9MB/s eta 0:00:01[K    61% |███████████████████▊            | 3.4MB 57.6MB/s eta 0:00:01[K    61% |███████████████████▉            | 3.4MB 56.3MB/s eta 0:00:01[K    62% |███████████████████▉            | 3.4MB 57.2MB/s eta 0:00:01[K    62% |████████████████████            | 3.4MB 56.4MB/s eta 0:00:01[K    62% |████████████████████            | 3.4MB 54.7MB/s eta 0:00:01[K    62% |████████████████████            | 3.4MB 56.3MB/s eta 0:00:01[K    62% |████████████████████            | 3.4MB 54.3MB/s eta 0:00:01[K    63% |████████████████████▏           | 3.4MB 52.5MB/s eta 0:00:01[K    63% |████████████████████▎           | 3.5MB 51.8MB/s eta 0:00:01[K    63% |████████████████████▎           | 3.5MB 47.8MB/s eta 0:00:01[K    63% |████████████████████▍           | 3.5MB 47.7MB/s eta 0:00:01[K    63% |████████████████████▍           | 3.5MB 47.2MB/s eta 0:00:01[K    63% |████████████████████▌           | 3.5MB 45.3MB/s eta 0:00:01[K    64% |████████████████████▌           | 3.5MB 46.5MB/s eta 0:00:01[K    64% |████████████████████▋           | 3.5MB 46.2MB/s eta 0:00:01[K    64% |████████████████████▋           | 3.5MB 46.2MB/s eta 0:00:01[K    64% |████████████████████▊           | 3.5MB 47.9MB/s eta 0:00:01[K    64% |████████████████████▊           | 3.5MB 46.9MB/s eta 0:00:01[K    65% |████████████████████▉           | 3.6MB 49.7MB/s eta 0:00:01[K    65% |████████████████████▉           | 3.6MB 52.3MB/s eta 0:00:01[K    65% |██████████████���██████           | 3.6MB 52.2MB/s eta 0:00:01[K    65% |█████████████████████           | 3.6MB 54.0MB/s eta 0:00:01[K    65% |█████████████████████           | 3.6MB 54.9MB/s eta 0:00:01[K    66% |█████████████████████▏          | 3.6MB 55.0MB/s eta 0:00:01[K    66% |█████████████████████▏          | 3.6MB 55.6MB/s eta 0:00:01[K    66% |█████████████████████▎          | 3.6MB 53.9MB/s eta 0:00:01[K    66% |█████████████████████▎          | 3.6MB 54.8MB/s eta 0:00:01[K    66% |█████████████████████▍          | 3.6MB 56.4MB/s eta 0:00:01[K    66% |█████████████████████▍          | 3.7MB 54.6MB/s eta 0:00:01[K    67% |█████████████████████▌          | 3.7MB 56.5MB/s eta 0:00:01[K    67% |█████████████████████▌          | 3.7MB 56.5MB/s eta 0:00:01[K    67% |█████████████████████▋          | 3.7MB 56.5MB/s eta 0:00:01[K    67% |█████████████████████▋          | 3.7MB 56.8MB/s eta 0:00:01[K    67% |█████████████████████▊          | 3.7MB 54.8MB/s eta 0:00:01[K    68% |█████████████████████���          | 3.7MB 56.2MB/s eta 0:00:01[K    68% |█████████████████████▉          | 3.7MB 56.2MB/s eta 0:00:01[K    68% |██████████████████████          | 3.7MB 55.0MB/s eta 0:00:01[K    68% |██████████████████████          | 3.7MB 56.6MB/s eta 0:00:01[K    68% |██████████████████████          | 3.8MB 57.4MB/s eta 0:00:01[K    69% |██████████████████████          | 3.8MB 56.3MB/s eta 0:00:01[K    69% |██████████████████████▏         | 3.8MB 56.2MB/s eta 0:00:01[K    69% |██████████████████████▏         | 3.8MB 54.5MB/s eta 0:00:01[K    69% |██████████████████████▎         | 3.8MB 56.0MB/s eta 0:00:01[K    69% |██████████████████████▎         | 3.8MB 57.0MB/s eta 0:00:01[K    69% |██████████████████████▍         | 3.8MB 55.3MB/s eta 0:00:01[K    70% |██████████████████████▌         | 3.8MB 57.0MB/s eta 0:00:01[K    70% |██████████████████████▌         | 3.8MB 56.5MB/s eta 0:00:01[K    70% |██████████████████████▋         | 3.9MB 56.6MB/s eta 0:00:01[K    70% |██████████████████████▋         | 3.9MB 55.9MB/s eta 0:00:01[K    70% |██████████████████████▊         | 3.9MB 55.8MB/s eta 0:00:01[K    71% |██████████████████████▊         | 3.9MB 57.2MB/s eta 0:00:01[K    71% |██████████████████████▉         | 3.9MB 57.3MB/s eta 0:00:01[K    71% |██████████████████████▉         | 3.9MB 55.6MB/s eta 0:00:01[K    71% |███████████████████████         | 3.9MB 56.6MB/s eta 0:00:01[K    71% |███████████████████████         | 3.9MB 56.7MB/s eta 0:00:01[K    72% |███████████████████████         | 3.9MB 56.9MB/s eta 0:00:01[K    72% |███████████████████████         | 3.9MB 57.1MB/s eta 0:00:01[K    72% |███████████████████████▏        | 4.0MB 55.8MB/s eta 0:00:01[K    72% |███████████████████████▎        | 4.0MB 57.6MB/s eta 0:00:01[K    72% |███████████████████████▎        | 4.0MB 57.0MB/s eta 0:00:01[K    72% |███████████████████████▍        | 4.0MB 55.2MB/s eta 0:00:01[K    73% |███████████████████████▍        | 4.0MB 56.1MB/s eta 0:00:01[K    73% |█████████████���█████████▌        | 4.0MB 56.1MB/s eta 0:00:01[K    73% |███████████████████████▌        | 4.0MB 56.0MB/s eta 0:00:01[K    73% |███████████████████████▋        | 4.0MB 56.0MB/s eta 0:00:01[K    73% |███████████████████████▋        | 4.0MB 54.2MB/s eta 0:00:01[K    74% |███████████████████████▊        | 4.0MB 54.6MB/s eta 0:00:01[K    74% |███████████████████████▊        | 4.1MB 53.2MB/s eta 0:00:01[K    74% |███████████████████████▉        | 4.1MB 50.5MB/s eta 0:00:01[K    74% |███████████████████████▉        | 4.1MB 50.8MB/s eta 0:00:01[K    74% |████████████████████████        | 4.1MB 49.7MB/s eta 0:00:01[K    75% |████████████████████████        | 4.1MB 49.4MB/s eta 0:00:01[K    75% |████████████████████████        | 4.1MB 48.9MB/s eta 0:00:01[K    75% |████████████████████████▏       | 4.1MB 46.9MB/s eta 0:00:01[K    75% |████████████████████████▏       | 4.1MB 47.4MB/s eta 0:00:01[K    75% |████████████████████████▎       | 4.1MB 47.2MB/s eta 0:00:01[K    75% |████████████████████████▎       | 4.1MB 46.0MB/s eta 0:00:01[K    76% |████████████████████████▍       | 4.2MB 47.2MB/s eta 0:00:01[K    76% |████████████████████████▍       | 4.2MB 47.6MB/s eta 0:00:01[K    76% |████████████████████████▌       | 4.2MB 47.9MB/s eta 0:00:01[K    76% |████████████████████████▌       | 4.2MB 47.8MB/s eta 0:00:01[K    76% |████████████████████████▋       | 4.2MB 47.1MB/s eta 0:00:01[K    77% |████████████████████████▋       | 4.2MB 48.1MB/s eta 0:00:01[K    77% |████████████████████████▊       | 4.2MB 48.8MB/s eta 0:00:01[K    77% |████████████████████████▉       | 4.2MB 47.5MB/s eta 0:00:01[K    77% |████████████████████████▉       | 4.2MB 48.5MB/s eta 0:00:01[K    77% |█████████████████████████       | 4.2MB 48.4MB/s eta 0:00:01[K    78% |█████████████████████████       | 4.3MB 48.5MB/s eta 0:00:01[K    78% |█████████████████████████       | 4.3MB 48.8MB/s eta 0:00:01[K    78% |███████████████���█████████       | 4.3MB 47.6MB/s eta 0:00:01[K    78% |█████████████████████████▏      | 4.3MB 49.4MB/s eta 0:00:01[K    78% |█████████████████████████▏      | 4.3MB 49.2MB/s eta 0:00:01[K    78% |█████████████████████████▎      | 4.3MB 48.0MB/s eta 0:00:01[K    79% |█████████████████████████▎      | 4.3MB 48.8MB/s eta 0:00:01[K    79% |█████████████████████████▍      | 4.3MB 49.3MB/s eta 0:00:01[K    79% |█████████████████████████▌      | 4.3MB 49.1MB/s eta 0:00:01[K    79% |█████████████████████████▌      | 4.4MB 49.7MB/s eta 0:00:01[K    79% |█████████████████████████▋      | 4.4MB 48.2MB/s eta 0:00:01[K    80% |█████████████████████████▋      | 4.4MB 49.2MB/s eta 0:00:01[K    80% |█████████████████████████▊      | 4.4MB 49.0MB/s eta 0:00:01[K    80% |█████████████████████████▊      | 4.4MB 47.6MB/s eta 0:00:01[K    80% |█████████████████████████▉      | 4.4MB 48.8MB/s eta 0:00:01[K    80% |█████████████████████████���      | 4.4MB 48.8MB/s eta 0:00:01[K    81% |██████████████████████████      | 4.4MB 48.9MB/s eta 0:00:01[K    81% |██████████████████████████      | 4.4MB 49.0MB/s eta 0:00:01[K    81% |██████████████████████████      | 4.4MB 48.3MB/s eta 0:00:01[K    81% |██████████████████████████      | 4.5MB 49.3MB/s eta 0:00:01[K    81% |██████████████████████████▏     | 4.5MB 49.1MB/s eta 0:00:01[K    81% |██████████████████████████▎     | 4.5MB 48.2MB/s eta 0:00:01[K    82% |██████████████████████████▎     | 4.5MB 49.7MB/s eta 0:00:01[K    82% |██████████████████████████▍     | 4.5MB 49.7MB/s eta 0:00:01[K    82% |██████████████████████████▍     | 4.5MB 49.7MB/s eta 0:00:01[K    82% |██████████████████████████▌     | 4.5MB 50.4MB/s eta 0:00:01[K    82% |██████████████████████████▌     | 4.5MB 49.4MB/s eta 0:00:01[K    83% |██████████████████████████▋     | 4.5MB 50.1MB/s eta 0:00:01[K    83% |██████████████████████████▋     | 4.5MB 49.5MB/s eta 0:00:01[K    83% |██████████████████████████▊     | 4.6MB 48.5MB/s eta 0:00:01[K    83% |██████████████████████████▊     | 4.6MB 50.2MB/s eta 0:00:01[K    83% |██████████████████████████▉     | 4.6MB 49.4MB/s eta 0:00:01[K    84% |██████████████████████████▉     | 4.6MB 49.2MB/s eta 0:00:01[K    84% |███████████████████████████     | 4.6MB 49.1MB/s eta 0:00:01[K    84% |███████████████████████████     | 4.6MB 47.7MB/s eta 0:00:01[K    84% |███████████████████████████     | 4.6MB 48.3MB/s eta 0:00:01[K    84% |███████████████████████████▏    | 4.6MB 47.8MB/s eta 0:00:01[K    84% |███████████████████████████▏    | 4.6MB 46.3MB/s eta 0:00:01[K    85% |███████████████████████████▎    | 4.6MB 47.6MB/s eta 0:00:01[K    85% |███████████████████████████▎    | 4.7MB 47.2MB/s eta 0:00:01[K    85% |███████████████████████████▍    | 4.7MB 47.2MB/s eta 0:00:01[K    85% |███████████████████████████▍    | 4.7MB 47.7MB/s eta 0:00:01[K    85% |███████████████████████████▌    | 4.7MB 46.7MB/s eta 0:00:01[K    86% |███████████████████████████▌    | 4.7MB 48.3MB/s eta 0:00:01[K    86% |███████████████████████████▋    | 4.7MB 48.2MB/s eta 0:00:01[K    86% |███████████████████████████▋    | 4.7MB 46.9MB/s eta 0:00:01[K    86% |███████████████████████████▊    | 4.7MB 48.2MB/s eta 0:00:01[K    86% |███████████████████████████▉    | 4.7MB 48.6MB/s eta 0:00:01[K    87% |███████████████████████████▉    | 4.8MB 48.6MB/s eta 0:00:01[K    87% |████████████████████████████    | 4.8MB 48.7MB/s eta 0:00:01[K    87% |████████████████████████████    | 4.8MB 46.3MB/s eta 0:00:01[K    87% |████████████████████████████    | 4.8MB 47.3MB/s eta 0:00:01[K    87% |████████████████████████████    | 4.8MB 47.2MB/s eta 0:00:01[K    87% |████████████████████████████▏   | 4.8MB 46.0MB/s eta 0:00:01[K    88% |██████████████████���█████████▏   | 4.8MB 47.2MB/s eta 0:00:01[K    88% |████████████████████████████▎   | 4.8MB 47.7MB/s eta 0:00:01[K    88% |████████████████████████████▎   | 4.8MB 47.7MB/s eta 0:00:01[K    88% |████████████████████████████▍   | 4.8MB 48.2MB/s eta 0:00:01[K    88% |████████████████████████████▌   | 4.9MB 47.4MB/s eta 0:00:01[K    89% |████████████████████████████▌   | 4.9MB 48.6MB/s eta 0:00:01[K    89% |████████████████████████████▋   | 4.9MB 49.7MB/s eta 0:00:01[K    89% |████████████████████████████▋   | 4.9MB 48.7MB/s eta 0:00:01[K    89% |████████████████████████████▊   | 4.9MB 50.1MB/s eta 0:00:01[K    89% |████████████████████████████▊   | 4.9MB 50.0MB/s eta 0:00:01[K    90% |████████████████████████████▉   | 4.9MB 50.1MB/s eta 0:00:01[K    90% |████████████████████████████▉   | 4.9MB 50.0MB/s eta 0:00:01[K    90% |█████████████████████████████   | 4.9MB 49.1MB/s eta 0:00:01[K    90% |█���███████████████████████████   | 4.9MB 49.9MB/s eta 0:00:01[K    90% |█████████████████████████████   | 5.0MB 49.9MB/s eta 0:00:01[K    90% |█████████████████████████████   | 5.0MB 48.3MB/s eta 0:00:01[K    91% |█████████████████████████████▏  | 5.0MB 49.6MB/s eta 0:00:01[K    91% |█████████████████████████████▎  | 5.0MB 49.3MB/s eta 0:00:01[K    91% |█████████████████████████████▎  | 5.0MB 49.4MB/s eta 0:00:01[K    91% |█████████████████████████████▍  | 5.0MB 50.0MB/s eta 0:00:01[K    91% |█████████████████████████████▍  | 5.0MB 49.2MB/s eta 0:00:01[K    92% |█████████████████████████████▌  | 5.0MB 50.2MB/s eta 0:00:01[K    92% |█████████████████████████████▌  | 5.0MB 50.3MB/s eta 0:00:01[K    92% |█████████████████████████████▋  | 5.0MB 49.0MB/s eta 0:00:01[K    92% |█████████████████████████████▋  | 5.1MB 49.9MB/s eta 0:00:01[K    92% |██████████████████████���██████▊  | 5.1MB 50.5MB/s eta 0:00:01[K    93% |█████████████████████████████▊  | 5.1MB 50.8MB/s eta 0:00:01[K    93% |█████████████████████████████▉  | 5.1MB 51.5MB/s eta 0:00:01[K    93% |█████████████████████████████▉  | 5.1MB 50.1MB/s eta 0:00:01[K    93% |██████████████████████████████  | 5.1MB 50.7MB/s eta 0:00:01[K    93% |██████████████████████████████  | 5.1MB 50.6MB/s eta 0:00:01[K    93% |██████████████████████████████  | 5.1MB 49.5MB/s eta 0:00:01[K    94% |██████████████████████████████▏ | 5.1MB 49.2MB/s eta 0:00:01[K    94% |██████████████████████████████▏ | 5.2MB 48.0MB/s eta 0:00:01[K    94% |██████████████████████████████▎ | 5.2MB 46.1MB/s eta 0:00:01[K    94% |██████████████████████████████▎ | 5.2MB 46.1MB/s eta 0:00:01[K    94% |██████████████████████████████▍ | 5.2MB 45.2MB/s eta 0:00:01[K    95% |██████████████████████████████▍ | 5.2MB 45.7MB/s eta 0:00:01[K    95% |██████████████████████████████▌ | 5.2MB 46.1MB/s eta 0:00:01[K    95% |██████████████████████████████▌ | 5.2MB 45.4MB/s eta 0:00:01[K    95% |██████████████████████████████▋ | 5.2MB 46.2MB/s eta 0:00:01[K    95% |██████████████████████████████▋ | 5.2MB 46.2MB/s eta 0:00:01[K    96% |██████████████████████████████▊ | 5.2MB 47.2MB/s eta 0:00:01[K    96% |██████████████████████████████▉ | 5.3MB 48.8MB/s eta 0:00:01[K    96% |██████████████████████████████▉ | 5.3MB 50.1MB/s eta 0:00:01[K    96% |███████████████████████████████ | 5.3MB 51.2MB/s eta 0:00:01[K    96% |███████████████████████████████ | 5.3MB 51.3MB/s eta 0:00:01[K    96% |███████████████████████████████ | 5.3MB 50.0MB/s eta 0:00:01[K    97% |███████████████████████████████ | 5.3MB 50.9MB/s eta 0:00:01[K    97% |███████████████████████████████▏| 5.3MB 50.9MB/s eta 0:00:01[K    97% |███���███████████████████████████▏| 5.3MB 51.0MB/s eta 0:00:01[K    97% |███████████████████████████████▎| 5.3MB 51.4MB/s eta 0:00:01[K    97% |███████████████████████████████▎| 5.3MB 49.6MB/s eta 0:00:01[K    98% |███████████████████████████████▍| 5.4MB 49.4MB/s eta 0:00:01[K    98% |███████████████████████████████▌| 5.4MB 49.4MB/s eta 0:00:01[K    98% |███████████████████████████████▌| 5.4MB 48.4MB/s eta 0:00:01[K    98% |███████████████████████████████▋| 5.4MB 49.4MB/s eta 0:00:01[K    98% |███████████████████████████████▋| 5.4MB 49.7MB/s eta 0:00:01[K    99% |███████████████████████████████▊| 5.4MB 49.8MB/s eta 0:00:01[K    99% |███████████████████████████████▊| 5.4MB 50.0MB/s eta 0:00:01[K    99% |███████████████████████████████▉| 5.4MB 49.2MB/s eta 0:00:01[K    99% |███████████████████████████████▉| 5.4MB 49.9MB/s eta 0:00:01[K    99% |██████���█████████████████████████| 5.4MB 50.9MB/s eta 0:00:01[K    99% |████████████████████████████████| 5.5MB 51.2MB/s eta 0:00:01[K    100% |████████████████████████████████| 5.5MB 275kB/s 
[?25hCollecting records (from chill==0.3.3)
  Downloading records-0.5.2-py2.py3-none-any.whl
Collecting PyYAML (from chill==0.3.3)
  Downloading PyYAML-3.12.tar.gz (253kB)
[?25l[K    4% |█▎                              | 10kB 40.0MB/s eta 0:00:01[K    8% |██▋                             | 20kB 37.4MB/s eta 0:00:01[K    12% |███▉                            | 30kB 38.9MB/s eta 0:00:01[K    16% |█████▏                          | 40kB 41.0MB/s eta 0:00:01[K    20% |██████▌                         | 51kB 42.0MB/s eta 0:00:01[K    24% |███████▊                        | 61kB 44.6MB/s eta 0:00:01[K    28% |█████████                       | 71kB 45.1MB/s eta 0:00:01[K    32% |██████████▍                     | 81kB 44.4MB/s eta 0:00:01[K    36% |███████████▋                    | 92kB 46.1MB/s eta 0:00:01[K    40% |█████████████                   | 102kB 46.8MB/s eta 0:00:01[K    44% |██████████████▎                 | 112kB 49.1MB/s eta 0:00:01[K    48% |███████████████▌                | 122kB 51.7MB/s eta 0:00:01[K    52% |████████████████▉               | 133kB 53.1MB/s eta 0:00:01[K    56% |██████████████████▏             | 143kB 54.8MB/s eta 0:00:01[K    60% |███████████████████▍            | 153kB 55.8MB/s eta 0:00:01[K    64% |██████████████████���█▊           | 163kB 55.0MB/s eta 0:00:01[K    68% |██████████████████████          | 174kB 57.0MB/s eta 0:00:01[K    72% |███████████████████████▎        | 184kB 59.3MB/s eta 0:00:01[K    76% |████████████████████████▋       | 194kB 59.5MB/s eta 0:00:01[K    80% |██████████████████████████      | 204kB 59.6MB/s eta 0:00:01[K    84% |███████████████████████████▏    | 215kB 58.3MB/s eta 0:00:01[K    89% |████████████████████████████▌   | 225kB 59.6MB/s eta 0:00:01[K    93% |█████████████████████████████▉  | 235kB 59.7MB/s eta 0:00:01[K    97% |███████████████████████████████ | 245kB 58.8MB/s eta 0:00:01[K    100% |████████████████████████████████| 256kB 5.4MB/s 
[?25hCollecting gevent (from chill==0.3.3)
  Downloading gevent-1.2.2-cp27-cp27mu-manylinux1_x86_64.whl (1.6MB)
[?25l[K    0% |▏                               | 10kB 48.1MB/s eta 0:00:01[K    1% |▍                               | 20kB 43.1MB/s eta 0:00:01[K    1% |▋                               | 30kB 46.4MB/s eta 0:00:01[K    2% |▉                               | 40kB 45.0MB/s eta 0:00:01[K    3% |█                               | 51kB 43.1MB/s eta 0:00:01[K    3% |█▏                              | 61kB 44.8MB/s eta 0:00:01[K    4% |█▍                              | 71kB 44.5MB/s eta 0:00:01[K    5% |█▋                              | 81kB 44.3MB/s eta 0:00:01[K    5% |█▉                              | 92kB 45.4MB/s eta 0:00:01[K    6% |██                              | 102kB 45.2MB/s eta 0:00:01[K    6% |██▏                             | 112kB 45.8MB/s eta 0:00:01[K    7% |██▍                             | 122kB 46.3MB/s eta 0:00:01[K    8% |██▋                             | 133kB 45.6MB/s eta 0:00:01[K    8% |██▉                             | 143kB 47.0MB/s eta 0:00:01[K    9% |███                             | 153kB 47.9MB/s eta 0:00:01[K    10% |███▎                            | 163kB 47.2MB/s eta 0:00:01[K    10% |███▍                            | 174kB 48.3MB/s eta 0:00:01[K    11% |███▋                            | 184kB 47.7MB/s eta 0:00:01[K    11% |███▉                            | 194kB 47.3MB/s eta 0:00:01[K    12% |████                            | 204kB 46.4MB/s eta 0:00:01[K    13% |████▎                           | 215kB 44.6MB/s eta 0:00:01[K    13% |████▍                           | 225kB 45.2MB/s eta 0:00:01[K    14% |████▋                           | 235kB 44.4MB/s eta 0:00:01[K    15% |████▉                           | 245kB 43.5MB/s eta 0:00:01[K    15% |█████                           | 256kB 44.2MB/s eta 0:00:01[K    16% |█████▎                          | 266kB 43.7MB/s eta 0:00:01[K    17% |█████▌                          | 276kB 43.6MB/s eta 0:00:01[K    17% |█████▋                          | 286kB 43.7MB/s eta 0:00:01[K    18% |█████▉                          | 296kB 43.1MB/s eta 0:00:01[K    18% |██████                          | 307kB 44.5MB/s eta 0:00:01[K    19% |██████▎                         | 317kB 45.2MB/s eta 0:00:01[K    20% |██████▌                         | 327kB 44.3MB/s eta 0:00:01[K    20% |██████▋                         | 337kB 45.6MB/s eta 0:00:01[K    21% |██████▉                         | 348kB 45.2MB/s eta 0:00:01[K    22% |███████                         | 358kB 45.3MB/s eta 0:00:01[K    22% |███████▎                        | 368kB 45.7MB/s eta 0:00:01[K    23% |███████▌                        | 378kB 44.6MB/s eta 0:00:01[K    23% |███████▊                        | 389kB 45.8MB/s eta 0:00:01[K    24% |███████▉                        | 399kB 45.5MB/s eta 0:00:01[K    25% |████████                        | 409kB 44.5MB/s eta 0:00:01[K    25% |████████▎                       | 419kB 45.1MB/s eta 0:00:01[K    26% |████████▌                       | 430kB 45.2MB/s eta 0:00:01[K    27% |████████▊                       | 440kB 45.6MB/s eta 0:00:01[K    27% |████████▉                       | 450kB 45.8MB/s eta 0:00:01[K    28% |█████████                       | 460kB 45.0MB/s eta 0:00:01[K    29% |█████████▎                      | 471kB 45.9MB/s eta 0:00:01[K    29% |█████████▌                      | 481kB 46.4MB/s eta 0:00:01[K    30% |█████████▊                      | 491kB 46.0MB/s eta 0:00:01[K    30% |██████████                      | 501kB 47.6MB/s eta 0:00:01[K    31% |██████████                      | 512kB 47.7MB/s eta 0:00:01[K    32% |██████████▎                     | 522kB 48.4MB/s eta 0:00:01[K    32% |██████████▌                     | 532kB 48.8MB/s eta 0:00:01[K    33% |██████████▊                     | 542kB 47.3MB/s eta 0:00:01[K    34% |███████████                     | 552kB 48.6MB/s eta 0:00:01[K    34% |███████████                     | 563kB 49.1MB/s eta 0:00:01[K    35% |███████████▎                    | 573kB 48.3MB/s eta 0:00:01[K    35% |███████████▌                    | 583kB 49.3MB/s eta 0:00:01[K    36% |████████���██▊                    | 593kB 49.0MB/s eta 0:00:01[K    37% |████████████                    | 604kB 48.8MB/s eta 0:00:01[K    37% |████████████▏                   | 614kB 47.9MB/s eta 0:00:01[K    38% |████████████▎                   | 624kB 46.2MB/s eta 0:00:01[K    39% |████████████▌                   | 634kB 47.2MB/s eta 0:00:01[K    39% |████████████▊                   | 645kB 47.5MB/s eta 0:00:01[K    40% |█████████████                   | 655kB 46.5MB/s eta 0:00:01[K    41% |█████████████▏                  | 665kB 47.2MB/s eta 0:00:01[K    41% |█████████████▎                  | 675kB 46.8MB/s eta 0:00:01[K    42% |█████████████▌                  | 686kB 46.9MB/s eta 0:00:01[K    42% |█████████████▊                  | 696kB 46.8MB/s eta 0:00:01[K    43% |██████████████                  | 706kB 45.7MB/s eta 0:00:01[K    44% |██████████████▏                 | 716kB 48.0MB/s eta 0:00:01[K    44% |██████████████▎                 | 727kB 48.6MB/s eta 0:00:01[K    45% |██████████████▌                 | 737kB 46.9MB/s eta 0:00:01[K    46% |██████████████▊                 | 747kB 47.1MB/s eta 0:00:01[K    46% |███████████████                 | 757kB 45.6MB/s eta 0:00:01[K    47% |███████████████▏                | 768kB 45.2MB/s eta 0:00:01[K    47% |███████████████▍                | 778kB 45.4MB/s eta 0:00:01[K    48% |███████████████▌                | 788kB 43.4MB/s eta 0:00:01[K    49% |███████████████▊                | 798kB 44.3MB/s eta 0:00:01[K    49% |████████████████                | 808kB 44.2MB/s eta 0:00:01[K    50% |████████████████▏               | 819kB 43.2MB/s eta 0:00:01[K    51% |████████████████▍               | 829kB 44.5MB/s eta 0:00:01[K    51% |████████████████▌               | 839kB 45.0MB/s eta 0:00:01[K    52% |████████████████▊               | 849kB 46.1MB/s eta 0:00:01[K    52% |█████████████████               | 860kB 47.5MB/s eta 0:00:01[K    53% |█████████████████▏              | 870kB 46.7MB/s eta 0:00:01[K    54% |█████████████████▍              | 880kB 47.7MB/s eta 0:00:01[K    54% |█████████████████▋              | 890kB 48.6MB/s eta 0:00:01[K    55% |█████████████████▊              | 901kB 47.7MB/s eta 0:00:01[K    56% |██████████████████              | 911kB 49.2MB/s eta 0:00:01[K    56% |█████���████████████▏             | 921kB 49.2MB/s eta 0:00:01[K    57% |██████████████████▍             | 931kB 48.8MB/s eta 0:00:01[K    58% |██████████████████▋             | 942kB 48.3MB/s eta 0:00:01[K    58% |██████████████████▊             | 952kB 46.9MB/s eta 0:00:01[K    59% |███████████████████             | 962kB 48.7MB/s eta 0:00:01[K    59% |███████████████████▏            | 972kB 49.8MB/s eta 0:00:01[K    60% |███████████████████▍            | 983kB 47.6MB/s eta 0:00:01[K    61% |███████████████████▋            | 993kB 49.6MB/s eta 0:00:01[K    61% |███████████████████▉            | 1.0MB 49.9MB/s eta 0:00:01[K    62% |████████████████████            | 1.0MB 50.3MB/s eta 0:00:01[K    63% |████████████████████▏           | 1.0MB 50.3MB/s eta 0:00:01[K    63% |████████████████████▍           | 1.0MB 49.6MB/s eta 0:00:01[K    64% |████████████████████▋           | 1.0MB 51.8MB/s eta 0:00:01[K    64% |████████████████████▉           | 1.1MB 52.3MB/s eta 0:00:01[K    65% |█████████████████████           | 1.1MB 51.1MB/s eta 0:00:01[K    66% |█████████████████████▏          | 1.1MB 52.1MB/s eta 0:00:01[K    66% |█████████████████████▍          | 1.1MB 53.8MB/s eta 0:00:01[K    67% |█████████████████████▋          | 1.1MB 53.2MB/s eta 0:00:01[K    68% |█████████████████████▉          | 1.1MB 53.8MB/s eta 0:00:01[K    68% |██████████████████████          | 1.1MB 53.0MB/s eta 0:00:01[K    69% |██████████████████████▏         | 1.1MB 55.1MB/s eta 0:00:01[K    70% |██████████████████████▍         | 1.1MB 55.8MB/s eta 0:00:01[K    70% |██████████████████████▋         | 1.1MB 54.8MB/s eta 0:00:01[K    71% |██████████████████████▉         | 1.2MB 56.7MB/s eta 0:00:01[K    71% |███████████████████████         | 1.2MB 57.1MB/s eta 0:00:01[K    72% |███████████████████████▏        | 1.2MB 57.1MB/s eta 0:00:01[K    73% |███████████████████████▍        | 1.2MB 57.7MB/s eta 0:00:01[K    73% |███████████████████████▋        | 1.2MB 56.7MB/s eta 0:00:01[K    74% |███████████████████████▉        | 1.2MB 57.0MB/s eta 0:00:01[K    75% |████████████████████████        | 1.2MB 57.0MB/s eta 0:00:01[K    75% |████████████████████████▎       | 1.2MB 55.9MB/s eta 0:00:01[K    76% |████████████████████████▍       | 1.2MB 57.1MB/s eta 0:00:01[K    76% |████████████████████████▋       | 1.2MB 56.0MB/s eta 0:00:01[K    77% |████████████████████████▉       | 1.3MB 56.0MB/s eta 0:00:01[K    78% |█████████████████████████       | 1.3MB 55.9MB/s eta 0:00:01[K    78% |█████████████████████████▎      | 1.3MB 54.7MB/s eta 0:00:01[K    79% |█████████████████████████▍      | 1.3MB 55.9MB/s eta 0:00:01[K    80% |█████████████████████████▋      | 1.3MB 56.7MB/s eta 0:00:01[K    80% |█████████████████████████▉      | 1.3MB 56.3MB/s eta 0:00:01[K    81% |██████████████████████████      | 1.3MB 57.4MB/s eta 0:00:01[K    82% |██████████████████████████▎     | 1.3MB 57.4MB/s eta 0:00:01[K    82% |██████████████████████████▍     | 1.3MB 57.4MB/s eta 0:00:01[K    83% |���█████████████████████████▋     | 1.4MB 58.7MB/s eta 0:00:01[K    83% |██████████████████████████▉     | 1.4MB 57.5MB/s eta 0:00:01[K    84% |███████████████████████████     | 1.4MB 58.7MB/s eta 0:00:01[K    85% |███████████████████████████▎    | 1.4MB 58.7MB/s eta 0:00:01[K    85% |███████████████████████████▌    | 1.4MB 54.8MB/s eta 0:00:01[K    86% |███████████████████████████▋    | 1.4MB 53.9MB/s eta 0:00:01[K    87% |███████████████████████████▉    | 1.4MB 50.3MB/s eta 0:00:01[K    87% |████████████████████████████    | 1.4MB 49.4MB/s eta 0:00:01[K    88% |████████████████████████████▎   | 1.4MB 49.1MB/s eta 0:00:01[K    88% |████████████████████████████▌   | 1.4MB 47.8MB/s eta 0:00:01[K    89% |████████████████████████████▋   | 1.5MB 48.6MB/s eta 0:00:01[K    90% |████████████████████████████▉   | 1.5MB 47.5MB/s eta 0:00:01[K    90% |█████████████████████████████   | 1.5MB 45.9MB/s eta 0:00:01[K    91% |█████████████████████████████▎  | 1.5MB 46.4MB/s eta 0:00:01[K    92% |█████████████████████████████▌  | 1.5MB 48.2MB/s eta 0:00:01[K    92% |█████████████████████████████▊  | 1.5MB 48.7MB/s eta 0:00:01[K    93% |█████████████████████████████▉  | 1.5MB 52.1MB/s eta 0:00:01[K    93% |██████████████████████████████  | 1.5MB 50.8MB/s eta 0:00:01[K    94% |██████████████████████████████▎ | 1.5MB 51.5MB/s eta 0:00:01[K    95% |██████████████████████████████▌ | 1.5MB 51.2MB/s eta 0:00:01[K    95% |██████████████████████████████▊ | 1.6MB 49.4MB/s eta 0:00:01[K    96% |██████████████████████████████▉ | 1.6MB 50.2MB/s eta 0:00:01[K    97% |███████████████████████████████ | 1.6MB 50.0MB/s eta 0:00:01[K    97% |███████████████████████████████▎| 1.6MB 49.1MB/s eta 0:00:01[K    98% |███████████████████████████████▌| 1.6MB 48.2MB/s eta 0:00:01[K    99% |████���██████████████████████████▊| 1.6MB 47.2MB/s eta 0:00:01[K    99% |████████████████████████████████| 1.6MB 46.4MB/s eta 0:00:01[K    100% |████████████████████████████████| 1.6MB 952kB/s 
[?25hCollecting docopt (from chill==0.3.3)
  Downloading docopt-0.6.2.tar.gz
Collecting pyselect (from chill==0.3.3)
  Downloading pyselect-0.2.0-py2.py3-none-any.whl
Collecting MarkupSafe (from chill==0.3.3)
  Downloading MarkupSafe-1.0.tar.gz
Collecting Werkzeug>=0.7 (from Flask==0.10.1->chill==0.3.3)
  Downloading Werkzeug-0.14.1-py2.py3-none-any.whl (322kB)
[?25l[K    3% |█                               | 10kB 41.9MB/s eta 0:00:01[K    6% |██                              | 20kB 38.8MB/s eta 0:00:01[K    9% |███                             | 30kB 37.6MB/s eta 0:00:01[K    12% |████                            | 40kB 39.1MB/s eta 0:00:01[K    15% |█████                           | 51kB 39.5MB/s eta 0:00:01[K    19% |██████                          | 61kB 41.6MB/s eta 0:00:01[K    22% |███████                         | 71kB 41.9MB/s eta 0:00:01[K    25% |████████▏                       | 81kB 42.2MB/s eta 0:00:01[K    28% |█████████▏                      | 92kB 42.6MB/s eta 0:00:01[K    31% |██████████▏                     | 102kB 42.7MB/s eta 0:00:01[K    34% |███████████▏                    | 112kB 44.0MB/s eta 0:00:01[K    38% |████████████▏                   | 122kB 45.0MB/s eta 0:00:01[K    41% |█████████████▏                  | 133kB 46.6MB/s eta 0:00:01[K    44% |██████████████▏                 | 143kB 47.5MB/s eta 0:00:01[K    47% |███████████████▎                | 153kB 48.3MB/s eta 0:00:01[K    50% |████████████████▎               | 163kB 47.2MB/s eta 0:00:01[K    53% |█████████████████▎              | 174kB 48.7MB/s eta 0:00:01[K    57% |██████████████████▎             | 184kB 48.8MB/s eta 0:00:01[K    60% |███████████████████▎            | 194kB 50.1MB/s eta 0:00:01[K    63% |████████████████████▎           | 204kB 50.4MB/s eta 0:00:01[K    66% |█████████████████████▎          | 215kB 49.5MB/s eta 0:00:01[K    69% |██████████████████████▎         | 225kB 49.7MB/s eta 0:00:01[K    72% |███████████████████████▍        | 235kB 49.4MB/s eta 0:00:01[K    76% |████████████████████████▍       | 245kB 48.9MB/s eta 0:00:01[K    79% |█████████████████████████▍      | 256kB 49.4MB/s eta 0:00:01[K    82% |██████████████████████████▍     | 266kB 49.9MB/s eta 0:00:01[K    85% |███████████████████████████▍    | 276kB 49.4MB/s eta 0:00:01[K    88% |████████████████████████████▍   | 286kB 49.6MB/s eta 0:00:01[K    91% |█████████████████████████████▍  | 296kB 48.3MB/s eta 0:00:01[K    95% |██████████████████████████████▌ | 307kB 49.5MB/s eta 0:00:01[K    98% |███████████████████████████████▌| 317kB 49.3MB/s eta 0:00:01[K    100% |████████████████████████████████| 327kB 4.2MB/s 
[?25hCollecting itsdangerous>=0.21 (from Flask==0.10.1->chill==0.3.3)
  Downloading itsdangerous-0.24.tar.gz (46kB)
[?25l[K    22% |███████                         | 10kB 49.9MB/s eta 0:00:01[K    44% |██████████████                  | 20kB 42.2MB/s eta 0:00:01[K    66% |█████████████████████▏          | 30kB 45.3MB/s eta 0:00:01[K    88% |████████████████████████████▏   | 40kB 45.5MB/s eta 0:00:01[K    100% |████████████████████████████████| 51kB 10.5MB/s 
[?25hCollecting markdown (from Flask-Markdown->chill==0.3.3)
  Downloading Markdown-2.6.11-py2.py3-none-any.whl (78kB)
[?25l[K    13% |████▏                           | 10kB 42.5MB/s eta 0:00:01[K    26% |████████▍                       | 20kB 38.9MB/s eta 0:00:01[K    39% |████████████▌                   | 30kB 42.4MB/s eta 0:00:01[K    52% |████████████████▊               | 40kB 42.4MB/s eta 0:00:01[K    65% |█████████████████████           | 51kB 42.7MB/s eta 0:00:01[K    78% |█████████████████████████       | 61kB 44.1MB/s eta 0:00:01[K    91% |█████████████████████████████▎  | 71kB 43.8MB/s eta 0:00:01[K    100% |████████████████████████████████| 81kB 11.0MB/s 
[?25hCollecting tablib (from records->chill==0.3.3)
  Downloading tablib-0.12.1.tar.gz (63kB)
[?25l[K    16% |█████▏                          | 10kB 44.5MB/s eta 0:00:01[K    32% |██████████▍                     | 20kB 39.9MB/s eta 0:00:01[K    48% |███████████████▌                | 30kB 43.5MB/s eta 0:00:01[K    64% |████████████████████▊           | 40kB 43.8MB/s eta 0:00:01[K    80% |█████████████████████████▉      | 51kB 43.7MB/s eta 0:00:01[K    96% |███████���███████████████████████ | 61kB 45.3MB/s eta 0:00:01[K    100% |████████████████████████████████| 71kB 11.8MB/s 
[?25hCollecting greenlet>=0.4.10 (from gevent->chill==0.3.3)
  Downloading greenlet-0.4.12-cp27-cp27mu-manylinux1_x86_64.whl (41kB)
[?25l[K    24% |████████                        | 10kB 47.0MB/s eta 0:00:01[K    49% |███████████████▉                | 20kB 42.2MB/s eta 0:00:01[K    74% |███████████████████████▉        | 30kB 45.4MB/s eta 0:00:01[K    99% |███████████████████████████████▊| 40kB 45.7MB/s eta 0:00:01[K    100% |████████████████████████████████| 51kB 11.9MB/s 
[?25hCollecting odfpy (from tablib->records->chill==0.3.3)
  Downloading odfpy-1.3.6.tar.gz (691kB)
[?25l[K    1% |▌                               | 10kB 49.0MB/s eta 0:00:01[K    2% |█                               | 20kB 42.0MB/s eta 0:00:01[K    4% |█▍                              | 30kB 45.1MB/s eta 0:00:01[K    5% |██                              | 40kB 44.0MB/s eta 0:00:01[K    7% |██▍                             | 51kB 43.5MB/s eta 0:00:01[K    8% |██▉                             | 61kB 44.5MB/s eta 0:00:01[K    10% |███▎                            | 71kB 44.1MB/s eta 0:00:01[K    11% |███▉                            | 81kB 43.5MB/s eta 0:00:01[K    13% |████▎                           | 92kB 44.3MB/s eta 0:00:01[K    14% |████▊                           | 102kB 43.6MB/s eta 0:00:01[K    16% |█████▏                          | 112kB 44.0MB/s eta 0:00:01[K    17% |█████▊                          | 122kB 45.1MB/s eta 0:00:01[K    19% |██████▏                         | 133kB 44.1MB/s eta 0:00:01[K    20% |██████▋                         | 143kB 45.4MB/s eta 0:00:01[K    22% |███████▏                        | 153kB 45.7MB/s eta 0:00:01[K    23% |███████▋                        | 163kB 45.2MB/s eta 0:00:01[K    25% |████████                        | 174kB 46.4MB/s eta 0:00:01[K    26% |████████▌                       | 184kB 47.3MB/s eta 0:00:01[K    28% |█████████                       | 194kB 47.6MB/s eta 0:00:01[K    29% |█████████▌                      | 204kB 48.2MB/s eta 0:00:01[K    31% |██████████                      | 215kB 47.1MB/s eta 0:00:01[K    32% |██████████▍                     | 225kB 47.6MB/s eta 0:00:01[K    34% |███████████                     | 235kB 46.7MB/s eta 0:00:01[K    35% |███████████▍                    | 245kB 45.4MB/s eta 0:00:01[K    37% |███████████▉                    | 256kB 46.3MB/s eta 0:00:01[K    38% |████████████▎                   | 266kB 45.1MB/s eta 0:00:01[K    40% |████████████▉                   | 276kB 44.9MB/s eta 0:00:01[K    41% |█████████████▎                  | 286kB 44.5MB/s eta 0:00:01[K    42% |█████████████▊                  | 296kB 43.6MB/s eta 0:00:01[K    44% |██████████████▎                 | 307kB 44.4MB/s eta 0:00:01[K    45% |██████████████▊                 | 317kB 44.6MB/s eta 0:00:01[K    47% |███████████████▏                | 327kB 43.9MB/s eta 0:00:01[K    48% |███████████████▋                | 337kB 45.5MB/s eta 0:00:01[K    50% |████████████████▏               | 348kB 45.4MB/s eta 0:00:01[K    51% |████████████████▋               | 358kB 45.4MB/s eta 0:00:01[K    53% |█████████████████               | 368kB 46.4MB/s eta 0:00:01[K    54% |█████████████████▌              | 378kB 45.8MB/s eta 0:00:01[K    56% |██████████████████              | 389kB 46.8MB/s eta 0:00:01[K    57% |██████████████████▌             | 399kB 46.6MB/s eta 0:00:01[K    59% |███████████████████             | 409kB 45.8MB/s eta 0:00:01[K    60% |███████████████████▍            | 419kB 46.5MB/s eta 0:00:01[K    62% |████████████████████            | 430kB 46.6MB/s eta 0:00:01[K    63% |████████████████████▍           | 440kB 46.8MB/s eta 0:00:01[K    65% |████████████████████▉           | 450kB 46.9MB/s eta 0:00:01[K    66% |█████████████████████▍          | 460kB 45.9MB/s eta 0:00:01[K    68% |█████████████████████▉          | 471kB 46.5MB/s eta 0:00:01[K    69% |██████████████████████▎         | 481kB 46.7MB/s eta 0:00:01[K    71% |██████████████████████▊         | 491kB 45.6MB/s eta 0:00:01[K    72% |███████████████████████▎        | 501kB 46.5MB/s eta 0:00:01[K    74% |███████████████████████▊        | 512kB 46.7MB/s eta 0:00:01[K    75% |████████████████████████▏       | 522kB 46.6MB/s eta 0:00:01[K    77% |████████████████████████▋       | 532kB 46.6MB/s eta 0:00:01[K    78% |█████████████████████████▏      | 542kB 45.8MB/s eta 0:00:01[K    80% |█████████████████████████▋      | 552kB 46.9MB/s eta 0:00:01[K    81% |██████████████████████████      | 563kB 47.2MB/s eta 0:00:01[K    82% |██████████████████████████▌     | 573kB 46.5MB/s eta 0:00:01[K    84% |███████████████████████████     | 583kB 47.3MB/s eta 0:00:01[K    85% |██████���████████████████████▌    | 593kB 47.4MB/s eta 0:00:01[K    87% |████████████████████████████    | 604kB 47.4MB/s eta 0:00:01[K    88% |████████████████████████████▌   | 614kB 46.9MB/s eta 0:00:01[K    90% |█████████████████████████████   | 624kB 46.0MB/s eta 0:00:01[K    91% |█████████████████████████████▍  | 634kB 46.4MB/s eta 0:00:01[K    93% |█████████████████████████████▉  | 645kB 46.4MB/s eta 0:00:01[K    94% |██████████████████████████████▍ | 655kB 45.5MB/s eta 0:00:01[K    96% |██████████████████████████████▉ | 665kB 46.0MB/s eta 0:00:01[K    97% |███████████████████████████████▎| 675kB 46.2MB/s eta 0:00:01[K    99% |███████████████████████████████▊| 686kB 46.1MB/s eta 0:00:01[K    100% |████████████████████████████████| 696kB 2.1MB/s 
[?25hCollecting openpyxl (from tablib->records->chill==0.3.3)
  Downloading openpyxl-2.5.0.tar.gz (169kB)
[?25l[K    6% |██                              | 10kB 40.8MB/s eta 0:00:01[K    12% |███▉                            | 20kB 37.2MB/s eta 0:00:01[K    18% |█████▉                          | 30kB 40.2MB/s eta 0:00:01[K    24% |███████▊                        | 40kB 40.6MB/s eta 0:00:01[K    30% |█████████▊                      | 51kB 40.7MB/s eta 0:00:01[K    36% |███████████▋                    | 61kB 41.0MB/s eta 0:00:01[K    42% |█████████████▌                  | 71kB 41.1MB/s eta 0:00:01[K    48% |███████████████▌                | 81kB 41.1MB/s eta 0:00:01[K    54% |█████████████████▍              | 92kB 41.9MB/s eta 0:00:01[K    60% |███████████████████▍            | 102kB 42.0MB/s eta 0:00:01[K    66% |█████████████████████▎          | 112kB 43.5MB/s eta 0:00:01[K    72% |███████████████████████▏        | 122kB 44.7MB/s eta 0:00:01[K    78% |█████████████████████████▏      | 133kB 44.3MB/s eta 0:00:01[K    84% |███████████████████████████     | 143kB 45.3MB/s eta 0:00:01[K    90% |█████████████████████████████   | 153kB 46.5MB/s eta 0:00:01[K    96% |███████████████████████████████ | 163kB 47.2MB/s eta 0:00:01[K    100% |████████████████████████████████| 174kB 7.4MB/s 
[?25hCollecting unicodecsv (from tablib->records->chill==0.3.3)
  Downloading unicodecsv-0.14.1.tar.gz
Collecting xlrd (from tablib->records->chill==0.3.3)
  Downloading xlrd-1.1.0-py2.py3-none-any.whl (108kB)
[?25l[K    9% |███                             | 10kB 44.9MB/s eta 0:00:01[K    18% |██████                          | 20kB 38.7MB/s eta 0:00:01[K    28% |█████████                       | 30kB 40.7MB/s eta 0:00:01[K    37% |████████████                    | 40kB 40.9MB/s eta 0:00:01[K    47% |███████████████                 | 51kB 41.4MB/s eta 0:00:01[K    56% |██████████████████              | 61kB 43.0MB/s eta 0:00:01[K    65% |█████████████████████           | 71kB 42.8MB/s eta 0:00:01[K    75% |████████████████████████        | 81kB 43.0MB/s eta 0:00:01[K    84% |███████████████████████████     | 92kB 44.3MB/s eta 0:00:01[K    94% |██████████████████████████████  | 102kB 44.5MB/s eta 0:00:01[K    100% |████████████████████████████████| 112kB 9.6MB/s 
[?25hCollecting xlwt (from tablib->records->chill==0.3.3)
  Downloading xlwt-1.3.0-py2.py3-none-any.whl (99kB)
[?25l[K    10% |███▎                            | 10kB 55.9MB/s eta 0:00:01[K    20% |██████▌                         | 20kB 44.3MB/s eta 0:00:01[K    30% |█████████▉                      | 30kB 47.2MB/s eta 0:00:01[K    40% |█████████████                   | 40kB 47.1MB/s eta 0:00:01[K    51% |████████████████▍               | 51kB 47.1MB/s eta 0:00:01[K    61% |███████████████████▋            | 61kB 48.2MB/s eta 0:00:01[K    71% |███████████████████████         | 71kB 47.1MB/s eta 0:00:01[K    81% |██████████████████████████▏     | 81kB 47.0MB/s eta 0:00:01[K    92% |█████████████████████████████▌  | 92kB 47.7MB/s eta 0:00:01[K    100% |████████████████████████████████| 102kB 11.6MB/s 
[?25hCollecting jdcal (from openpyxl->tablib->records->chill==0.3.3)
  Downloading jdcal-1.3.tar.gz
Collecting et_xmlfile (from openpyxl->tablib->records->chill==0.3.3)
  Downloading et_xmlfile-1.0.1.tar.gz
Building wheels for collected packages: Flask, Flask-Cache, Flask-Markdown, sqlalchemy, PyYAML, docopt, MarkupSafe, itsdangerous, tablib, odfpy, openpyxl, unicodecsv, jdcal, et-xmlfile
  Running setup.py bdist_wheel for Flask ... [?25l- \ done
[?25h  Stored in directory: /home/travis/.cache/pip/wheels/b6/09/65/5fcf16f74f334a215447c26769e291c41883862fe0dc7c1430
  Running setup.py bdist_wheel for Flask-Cache ... [?25l- done
[?25h  Stored in directory: /home/travis/.cache/pip/wheels/d3/ea/07/db4bcd93163f4ac63974a7ce7aa15df9d45cdc9864c8232f9c
  Running setup.py bdist_wheel for Flask-Markdown ... [?25l- done
[?25h  Stored in directory: /home/travis/.cache/pip/wheels/47/8c/67/c57881a2c372806653d41bc447123fdf6a6b2278edd052f5b5
  Running setup.py bdist_wheel for sqlalchemy ... [?25l- \ | / - \ | done
[?25h  Stored in directory: /home/travis/.cache/pip/wheels/1a/82/00/91a123a38de796ba3e559f837be5ac5d429afe5c7cd3ef2220
  Running setup.py bdist_wheel for PyYAML ... [?25l- \ | / - done
[?25h  Stored in directory: /home/travis/.cache/pip/wheels/2c/f7/79/13f3a12cd723892437c0cfbde1230ab4d82947ff7b3839a4fc
  Running setup.py bdist_wheel for docopt ... [?25l- done
[?25h  Stored in directory: /home/travis/.cache/pip/wheels/b2/16/5f/c33a2bb5f2dce71205f8e65cbfd05647d79d441282be31fd82
  Running setup.py bdist_wheel for MarkupSafe ... [?25l- \ done
[?25h  Stored in directory: /home/travis/.cache/pip/wheels/88/a7/30/e39a54a87bcbe25308fa3ca64e8ddc75d9b3e5afa21ee32d57
  Running setup.py bdist_wheel for itsdangerous ... [?25l- done
[?25h  Stored in directory: /home/travis/.cache/pip/wheels/fc/a8/66/24d655233c757e178d45dea2de22a04c6d92766abfb741129a
  Running setup.py bdist_wheel for tablib ... [?25l- done
[?25h  Stored in directory: /home/travis/.cache/pip/wheels/77/f4/ae/9413f885030d2b283e34278004aba422c1261f02cafe3f5b74
  Running setup.py bdist_wheel for odfpy ... [?25l- \ done
[?25h  Stored in directory: /home/travis/.cache/pip/wheels/43/b2/d4/5121ca81ef956a1b05b8ff8ee4c95044fa7ff48fedcdd43762
  Running setup.py bdist_wheel for openpyxl ... [?25l- \ done
[?25h  Stored in directory: /home/travis/.cache/pip/wheels/a7/88/96/29c1f91ba5a9b94dfc39a9f6f72d0eb92d6f0d917cf2341a3f
  Running setup.py bdist_wheel for unicodecsv ... [?25l- done
[?25h  Stored in directory: /home/travis/.cache/pip/wheels/97/e2/16/219fa93b83edaff912b6805cfa19d0597e21f8d353f3e2d22f
  Running setup.py bdist_wheel for jdcal ... [?25l- done
[?25h  Stored in directory: /home/travis/.cache/pip/wheels/0f/63/92/19ac65ed64189de4d662f269d39dd08a887258842ad2f29549
  Running setup.py bdist_wheel for et-xmlfile ... [?25l- done
[?25h  Stored in directory: /home/travis/.cache/pip/wheels/99/f6/53/5e18f3ff4ce36c990fa90ebdf2b80cd9b44dc461f750a1a77c
Successfully built Flask Flask-Cache Flask-Markdown sqlalchemy PyYAML docopt MarkupSafe itsdangerous tablib odfpy openpyxl unicodecsv jdcal et-xmlfile
Installing collected packages: docutils, Werkzeug, MarkupSafe, Jinja2, itsdangerous, Flask, Flask-Cache, Frozen-Flask, markdown, Flask-Markdown, psycopg2, sqlalchemy, docopt, odfpy, jdcal, et-xmlfile, openpyxl, unicodecsv, xlrd, xlwt, PyYAML, tablib, records, greenlet, gevent, pyselect, chill
  Running setup.py install for chill ... [?25l- done
[?25hSuccessfully installed Flask-0.10.1 Flask-Cache-0.13.1 Flask-Markdown-0.3 Frozen-Flask-0.15 Jinja2-2.10 MarkupSafe-1.0 PyYAML-3.12 Werkzeug-0.14.1 chill-0.3.3 docopt-0.6.2 docutils-0.14 et-xmlfile-1.0.1 gevent-1.2.2 greenlet-0.4.12 itsdangerous-0.24 jdcal-1.3 markdown-2.6.11 odfpy-1.3.6 openpyxl-2.5.0 psycopg2-2.7.3.2 pyselect-0.2.0 records-0.5.2 sqlalchemy-1.2.2 tablib-0.12.1 unicodecsv-0.14.1 xlrd-1.1.0 xlwt-1.3.0

travis_time:end:13a13548:start=1517081065094227032,finish=1517081092167167890,duration=27072940858[0Ktravis_fold:end:install[0Ktravis_time:start:0580d62d[0K$ python src/chill/tests.py
2018-01-27 19:24:52,426 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,426 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,427 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,427 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,429 INFO sqlalchemy.engine.base.Engine create table Chill (
    version integer
);

2018-01-27 19:24:52,429 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,446 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,447 INFO sqlalchemy.engine.base.Engine create table Query (
    id integer primary key,
    name varchar(255) not null
);

2018-01-27 19:24:52,447 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,450 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,451 INFO sqlalchemy.engine.base.Engine create table Template (
    id integer primary key,
    name varchar(255) unique not null
);

2018-01-27 19:24:52,451 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,454 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,455 INFO sqlalchemy.engine.base.Engine create table Node (
    id integer primary key,
    name varchar(255),
    value text,
    template integer,
    query integer,
    foreign key ( template ) references Template ( id ) on delete set null,
    foreign key ( query ) references Query ( id ) on delete set null
    );

2018-01-27 19:24:52,455 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,458 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,459 INFO sqlalchemy.engine.base.Engine create table Node_Node (
    node_id integer,
    target_node_id integer,
    foreign key ( node_id ) references Node ( id ) on delete cascade,
    foreign key ( target_node_id ) references Node ( id ) on delete cascade
);

2018-01-27 19:24:52,459 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,467 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,467 INFO sqlalchemy.engine.base.Engine create table Route (
    id integer primary key,
    path text not null,
    node_id integer,
    weight integer default 0,
    method varchar(10) default 'GET',
    foreign key ( node_id ) references Node ( id ) on delete set null
);

2018-01-27 19:24:52,467 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,472 INFO sqlalchemy.engine.base.Engine COMMIT
E2018-01-27 19:24:52,480 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,480 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,481 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,481 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,481 INFO sqlalchemy.engine.base.Engine create table Chill (
    version integer
);

2018-01-27 19:24:52,481 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,486 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,487 INFO sqlalchemy.engine.base.Engine create table Query (
    id integer primary key,
    name varchar(255) not null
);

2018-01-27 19:24:52,487 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,496 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,496 INFO sqlalchemy.engine.base.Engine create table Template (
    id integer primary key,
    name varchar(255) unique not null
);

2018-01-27 19:24:52,496 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,501 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,502 INFO sqlalchemy.engine.base.Engine create table Node (
    id integer primary key,
    name varchar(255),
    value text,
    template integer,
    query integer,
    foreign key ( template ) references Template ( id ) on delete set null,
    foreign key ( query ) references Query ( id ) on delete set null
    );

2018-01-27 19:24:52,502 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,508 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,509 INFO sqlalchemy.engine.base.Engine create table Node_Node (
    node_id integer,
    target_node_id integer,
    foreign key ( node_id ) references Node ( id ) on delete cascade,
    foreign key ( target_node_id ) references Node ( id ) on delete cascade
);

2018-01-27 19:24:52,509 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,517 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,517 INFO sqlalchemy.engine.base.Engine create table Route (
    id integer primary key,
    path text not null,
    node_id integer,
    weight integer default 0,
    method varchar(10) default 'GET',
    foreign key ( node_id ) references Node ( id ) on delete set null
);

2018-01-27 19:24:52,518 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,522 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,524 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,524 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,524 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,524 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,525 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:52,525 INFO sqlalchemy.engine.base.Engine ('simplefilename', 'imasimplefile.md')
2018-01-27 19:24:52,525 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,532 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,532 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,532 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,533 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,533 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:52,533 INFO sqlalchemy.engine.base.Engine ('apage', None)
2018-01-27 19:24:52,534 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,540 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,540 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,540 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,540 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,541 INFO sqlalchemy.engine.base.Engine select * from Query where name is ?;

2018-01-27 19:24:52,541 INFO sqlalchemy.engine.base.Engine ('select_link_node_from_node.sql',)
2018-01-27 19:24:52,542 INFO sqlalchemy.engine.base.Engine insert into Query (name) values (?);

2018-01-27 19:24:52,542 INFO sqlalchemy.engine.base.Engine ('select_link_node_from_node.sql',)
2018-01-27 19:24:52,542 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,546 INFO sqlalchemy.engine.base.Engine update Node set query = ? where id is ?;

2018-01-27 19:24:52,546 INFO sqlalchemy.engine.base.Engine (1, 2)
2018-01-27 19:24:52,546 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,551 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,551 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,552 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,552 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,553 INFO sqlalchemy.engine.base.Engine insert or replace into Node_Node (node_id, target_node_id) values (?, ?);

2018-01-27 19:24:52,553 INFO sqlalchemy.engine.base.Engine (2, 1)
2018-01-27 19:24:52,553 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,558 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,558 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,558 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,559 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,559 INFO sqlalchemy.engine.base.Engine insert into Route (path, node_id, weight, method)
  values (?, ?, ?, ?);

2018-01-27 19:24:52,559 INFO sqlalchemy.engine.base.Engine ('/a/', 2, None, 'GET')
2018-01-27 19:24:52,560 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,564 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,564 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,564 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,565 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,565 INFO sqlalchemy.engine.base.Engine insert or ignore into Template (name) values (?);

2018-01-27 19:24:52,566 INFO sqlalchemy.engine.base.Engine ('template.html',)
2018-01-27 19:24:52,566 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,570 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Template as t where t.name is ?;

2018-01-27 19:24:52,570 INFO sqlalchemy.engine.base.Engine ('template.html',)
2018-01-27 19:24:52,571 INFO sqlalchemy.engine.base.Engine update Node set template = ? where id is ?;

2018-01-27 19:24:52,571 INFO sqlalchemy.engine.base.Engine (1, 2)
2018-01-27 19:24:52,571 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,577 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,577 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,578 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,578 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,580 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:52,580 INFO sqlalchemy.engine.base.Engine (u'/a/', 'GET')
2018-01-27 19:24:52,581 INFO sqlalchemy.engine.base.Engine select q.id, q.name from Node as n
join Query as q on q.id = n.query
where n.id is ?;

2018-01-27 19:24:52,581 INFO sqlalchemy.engine.base.Engine (2,)
2018-01-27 19:24:52,582 INFO sqlalchemy.engine.base.Engine select ln.id as node_id, ln.name, ln.value from Node as n
join Node_Node as nn on (n.id = nn.node_id)
join Node as ln on (nn.target_node_id = ln.id)
where n.id = ?;

2018-01-27 19:24:52,582 INFO sqlalchemy.engine.base.Engine (2,)
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:74]:
result query: [u'node_id', u'name', u'value']
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:118]:
results: [([(1, u'simplefilename', u'imasimplefile.md')], [u'node_id', u'name', u'value'])]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:126]:
sub: (1, u'simplefilename', u'imasimplefile.md')
--------------------------------------------------------------------------------
2018-01-27 19:24:52,584 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:52,584 INFO sqlalchemy.engine.base.Engine (1,)
2018-01-27 19:24:52,585 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:52,585 INFO sqlalchemy.engine.base.Engine (2,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: 
          <h1>Heading</h1>
<h2>Sub-heading</h2>
<h3>Another deeper heading</h3>
<p>Paragraphs are separated
by a blank line.</p>
<p>Leave 2 spaces at the end of a line to do a
line break</p>
<p>Text attributes <em>italic</em>, <strong>bold</strong>,
onospace
A <a href="http://example.com">link</a>.</p>
<p>Shopping list:</p>
<ul>
<li>apples</li>
<li>oranges</li>
<li>pears</li>
</ul>
<p>Numbered list:</p>
<ol>
<li>apples</li>
<li>oranges</li>
<li>pears</li>
</ol>
<p>The rain---not the reign---in
Spain.</p>
          
--------------------------------------------------------------------------------
.2018-01-27 19:24:52,602 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,602 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,602 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,602 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,603 INFO sqlalchemy.engine.base.Engine create table Chill (
    version integer
);

2018-01-27 19:24:52,603 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,607 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,608 INFO sqlalchemy.engine.base.Engine create table Query (
    id integer primary key,
    name varchar(255) not null
);

2018-01-27 19:24:52,608 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,612 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,613 INFO sqlalchemy.engine.base.Engine create table Template (
    id integer primary key,
    name varchar(255) unique not null
);

2018-01-27 19:24:52,613 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,616 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,617 INFO sqlalchemy.engine.base.Engine create table Node (
    id integer primary key,
    name varchar(255),
    value text,
    template integer,
    query integer,
    foreign key ( template ) references Template ( id ) on delete set null,
    foreign key ( query ) references Query ( id ) on delete set null
    );

2018-01-27 19:24:52,617 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,622 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,623 INFO sqlalchemy.engine.base.Engine create table Node_Node (
    node_id integer,
    target_node_id integer,
    foreign key ( node_id ) references Node ( id ) on delete cascade,
    foreign key ( target_node_id ) references Node ( id ) on delete cascade
);

2018-01-27 19:24:52,623 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,631 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,632 INFO sqlalchemy.engine.base.Engine create table Route (
    id integer primary key,
    path text not null,
    node_id integer,
    weight integer default 0,
    method varchar(10) default 'GET',
    foreign key ( node_id ) references Node ( id ) on delete set null
);

2018-01-27 19:24:52,632 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,639 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,641 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,641 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,641 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,641 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,642 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:52,642 INFO sqlalchemy.engine.base.Engine ('simplefilename', 'imasimplefile.txt')
2018-01-27 19:24:52,643 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,650 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,650 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,650 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,650 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,651 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:52,651 INFO sqlalchemy.engine.base.Engine ('apage', None)
2018-01-27 19:24:52,652 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,659 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,659 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,659 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,660 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,660 INFO sqlalchemy.engine.base.Engine select * from Query where name is ?;

2018-01-27 19:24:52,661 INFO sqlalchemy.engine.base.Engine ('select_link_node_from_node.sql',)
2018-01-27 19:24:52,662 INFO sqlalchemy.engine.base.Engine insert into Query (name) values (?);

2018-01-27 19:24:52,662 INFO sqlalchemy.engine.base.Engine ('select_link_node_from_node.sql',)
2018-01-27 19:24:52,662 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,668 INFO sqlalchemy.engine.base.Engine update Node set query = ? where id is ?;

2018-01-27 19:24:52,668 INFO sqlalchemy.engine.base.Engine (1, 2)
2018-01-27 19:24:52,668 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,674 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,674 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,675 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,675 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,676 INFO sqlalchemy.engine.base.Engine insert or replace into Node_Node (node_id, target_node_id) values (?, ?);

2018-01-27 19:24:52,676 INFO sqlalchemy.engine.base.Engine (2, 1)
2018-01-27 19:24:52,676 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,683 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,684 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,684 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,684 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,685 INFO sqlalchemy.engine.base.Engine insert into Route (path, node_id, weight, method)
  values (?, ?, ?, ?);

2018-01-27 19:24:52,685 INFO sqlalchemy.engine.base.Engine ('/a/', 2, None, 'GET')
2018-01-27 19:24:52,685 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,696 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,696 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,697 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,697 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,697 INFO sqlalchemy.engine.base.Engine insert or ignore into Template (name) values (?);

2018-01-27 19:24:52,697 INFO sqlalchemy.engine.base.Engine ('template.html',)
2018-01-27 19:24:52,698 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,711 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Template as t where t.name is ?;

2018-01-27 19:24:52,712 INFO sqlalchemy.engine.base.Engine ('template.html',)
2018-01-27 19:24:52,712 INFO sqlalchemy.engine.base.Engine update Node set template = ? where id is ?;

2018-01-27 19:24:52,713 INFO sqlalchemy.engine.base.Engine (1, 2)
2018-01-27 19:24:52,713 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,721 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,721 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,721 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,722 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,722 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:52,723 INFO sqlalchemy.engine.base.Engine (u'/a/', 'GET')
2018-01-27 19:24:52,724 INFO sqlalchemy.engine.base.Engine select q.id, q.name from Node as n
join Query as q on q.id = n.query
where n.id is ?;

2018-01-27 19:24:52,724 INFO sqlalchemy.engine.base.Engine (2,)
2018-01-27 19:24:52,725 INFO sqlalchemy.engine.base.Engine select ln.id as node_id, ln.name, ln.value from Node as n
join Node_Node as nn on (n.id = nn.node_id)
join Node as ln on (nn.target_node_id = ln.id)
where n.id = ?;

2018-01-27 19:24:52,725 INFO sqlalchemy.engine.base.Engine (2,)
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:74]:
result query: [u'node_id', u'name', u'value']
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:118]:
results: [([(1, u'simplefilename', u'imasimplefile.txt')], [u'node_id', u'name', u'value'])]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:126]:
sub: (1, u'simplefilename', u'imasimplefile.txt')
--------------------------------------------------------------------------------
2018-01-27 19:24:52,726 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:52,727 INFO sqlalchemy.engine.base.Engine (1,)
2018-01-27 19:24:52,727 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:52,727 INFO sqlalchemy.engine.base.Engine (2,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: 
          <h1>template</h1>
          imasimplefile.txt
          <br>
          
          Hello, this is just a file.
          
          
--------------------------------------------------------------------------------
.2018-01-27 19:24:52,736 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,736 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,736 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,736 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,737 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:52,737 INFO sqlalchemy.engine.base.Engine ('/', 'GET')
2018-01-27 19:24:52,737 INFO sqlalchemy.engine.base.Engine ROLLBACK
--------------------------------------------------------------------------------
ERROR in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:77]:
DatabaseError: (sqlite3.OperationalError) no such table: Node [SQL: u'select n.name, n.value, n.id, r.node_id, r.path from Node as n\njoin Route as r on r.node_id = n.id\nwhere r.path = ? and r.method = ?;\n'] [parameters: ('/', 'GET')] (Background on this error at: http://sqlalche.me/e/e3q8)
--------------------------------------------------------------------------------
2018-01-27 19:24:52,738 INFO sqlalchemy.engine.base.Engine select path as rule, weight, node_id from Route where rule like '%<%>%'
order by weight desc;

2018-01-27 19:24:52,738 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,738 INFO sqlalchemy.engine.base.Engine ROLLBACK
--------------------------------------------------------------------------------
ERROR in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:38]:
OperationalError: (sqlite3.OperationalError) no such table: Route [SQL: u"select path as rule, weight, node_id from Route where rule like '%<%>%'\norder by weight desc;\n"] (Background on this error at: http://sqlalche.me/e/e3q8)
--------------------------------------------------------------------------------
2018-01-27 19:24:52,741 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,741 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,742 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,742 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,742 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:52,743 INFO sqlalchemy.engine.base.Engine ('/', 'GET')
2018-01-27 19:24:52,743 INFO sqlalchemy.engine.base.Engine ROLLBACK
--------------------------------------------------------------------------------
ERROR in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:77]:
DatabaseError: (sqlite3.OperationalError) no such table: Node [SQL: u'select n.name, n.value, n.id, r.node_id, r.path from Node as n\njoin Route as r on r.node_id = n.id\nwhere r.path = ? and r.method = ?;\n'] [parameters: ('/', 'GET')] (Background on this error at: http://sqlalche.me/e/e3q8)
--------------------------------------------------------------------------------
2018-01-27 19:24:52,744 INFO sqlalchemy.engine.base.Engine select path as rule, weight, node_id from Route where rule like '%<%>%'
order by weight desc;

2018-01-27 19:24:52,744 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,744 INFO sqlalchemy.engine.base.Engine ROLLBACK
--------------------------------------------------------------------------------
ERROR in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:38]:
OperationalError: (sqlite3.OperationalError) no such table: Route [SQL: u"select path as rule, weight, node_id from Route where rule like '%<%>%'\norder by weight desc;\n"] (Background on this error at: http://sqlalche.me/e/e3q8)
--------------------------------------------------------------------------------
2018-01-27 19:24:52,746 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,746 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,747 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,747 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,747 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:52,747 INFO sqlalchemy.engine.base.Engine (u'/something/', 'GET')
2018-01-27 19:24:52,748 INFO sqlalchemy.engine.base.Engine ROLLBACK
--------------------------------------------------------------------------------
ERROR in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:77]:
DatabaseError: (sqlite3.OperationalError) no such table: Node [SQL: u'select n.name, n.value, n.id, r.node_id, r.path from Node as n\njoin Route as r on r.node_id = n.id\nwhere r.path = ? and r.method = ?;\n'] [parameters: (u'/something/', 'GET')] (Background on this error at: http://sqlalche.me/e/e3q8)
--------------------------------------------------------------------------------
2018-01-27 19:24:52,748 INFO sqlalchemy.engine.base.Engine select path as rule, weight, node_id from Route where rule like '%<%>%'
order by weight desc;

2018-01-27 19:24:52,749 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,749 INFO sqlalchemy.engine.base.Engine ROLLBACK
--------------------------------------------------------------------------------
ERROR in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:38]:
OperationalError: (sqlite3.OperationalError) no such table: Route [SQL: u"select path as rule, weight, node_id from Route where rule like '%<%>%'\norder by weight desc;\n"] (Background on this error at: http://sqlalche.me/e/e3q8)
--------------------------------------------------------------------------------
2018-01-27 19:24:52,753 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,753 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,753 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,753 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,754 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:52,754 INFO sqlalchemy.engine.base.Engine (u'/something/test/', 'GET')
2018-01-27 19:24:52,754 INFO sqlalchemy.engine.base.Engine ROLLBACK
--------------------------------------------------------------------------------
ERROR in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:77]:
DatabaseError: (sqlite3.OperationalError) no such table: Node [SQL: u'select n.name, n.value, n.id, r.node_id, r.path from Node as n\njoin Route as r on r.node_id = n.id\nwhere r.path = ? and r.method = ?;\n'] [parameters: (u'/something/test/', 'GET')] (Background on this error at: http://sqlalche.me/e/e3q8)
--------------------------------------------------------------------------------
2018-01-27 19:24:52,755 INFO sqlalchemy.engine.base.Engine select path as rule, weight, node_id from Route where rule like '%<%>%'
order by weight desc;

2018-01-27 19:24:52,755 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,755 INFO sqlalchemy.engine.base.Engine ROLLBACK
--------------------------------------------------------------------------------
ERROR in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:38]:
OperationalError: (sqlite3.OperationalError) no such table: Route [SQL: u"select path as rule, weight, node_id from Route where rule like '%<%>%'\norder by weight desc;\n"] (Background on this error at: http://sqlalche.me/e/e3q8)
--------------------------------------------------------------------------------
2018-01-27 19:24:52,759 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,759 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,759 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,759 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,760 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:52,760 INFO sqlalchemy.engine.base.Engine (u'/something/nothing/', 'GET')
2018-01-27 19:24:52,760 INFO sqlalchemy.engine.base.Engine ROLLBACK
--------------------------------------------------------------------------------
ERROR in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:77]:
DatabaseError: (sqlite3.OperationalError) no such table: Node [SQL: u'select n.name, n.value, n.id, r.node_id, r.path from Node as n\njoin Route as r on r.node_id = n.id\nwhere r.path = ? and r.method = ?;\n'] [parameters: (u'/something/nothing/', 'GET')] (Background on this error at: http://sqlalche.me/e/e3q8)
--------------------------------------------------------------------------------
2018-01-27 19:24:52,761 INFO sqlalchemy.engine.base.Engine select path as rule, weight, node_id from Route where rule like '%<%>%'
order by weight desc;

2018-01-27 19:24:52,761 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,761 INFO sqlalchemy.engine.base.Engine ROLLBACK
--------------------------------------------------------------------------------
ERROR in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:38]:
OperationalError: (sqlite3.OperationalError) no such table: Route [SQL: u"select path as rule, weight, node_id from Route where rule like '%<%>%'\norder by weight desc;\n"] (Background on this error at: http://sqlalche.me/e/e3q8)
--------------------------------------------------------------------------------
.2018-01-27 19:24:52,768 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,768 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,769 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,769 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,769 INFO sqlalchemy.engine.base.Engine create table Chill (
    version integer
);

2018-01-27 19:24:52,770 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,774 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,775 INFO sqlalchemy.engine.base.Engine create table Query (
    id integer primary key,
    name varchar(255) not null
);

2018-01-27 19:24:52,775 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,781 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,782 INFO sqlalchemy.engine.base.Engine create table Template (
    id integer primary key,
    name varchar(255) unique not null
);

2018-01-27 19:24:52,782 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,787 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,787 INFO sqlalchemy.engine.base.Engine create table Node (
    id integer primary key,
    name varchar(255),
    value text,
    template integer,
    query integer,
    foreign key ( template ) references Template ( id ) on delete set null,
    foreign key ( query ) references Query ( id ) on delete set null
    );

2018-01-27 19:24:52,787 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,791 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,791 INFO sqlalchemy.engine.base.Engine create table Node_Node (
    node_id integer,
    target_node_id integer,
    foreign key ( node_id ) references Node ( id ) on delete cascade,
    foreign key ( target_node_id ) references Node ( id ) on delete cascade
);

2018-01-27 19:24:52,791 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,795 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,795 INFO sqlalchemy.engine.base.Engine create table Route (
    id integer primary key,
    path text not null,
    node_id integer,
    weight integer default 0,
    method varchar(10) default 'GET',
    foreign key ( node_id ) references Node ( id ) on delete set null
);

2018-01-27 19:24:52,796 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,799 INFO sqlalchemy.engine.base.Engine COMMIT
E2018-01-27 19:24:52,806 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,807 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,807 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,807 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,808 INFO sqlalchemy.engine.base.Engine create table Chill (
    version integer
);

2018-01-27 19:24:52,808 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,812 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,813 INFO sqlalchemy.engine.base.Engine create table Query (
    id integer primary key,
    name varchar(255) not null
);

2018-01-27 19:24:52,813 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,817 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,818 INFO sqlalchemy.engine.base.Engine create table Template (
    id integer primary key,
    name varchar(255) unique not null
);

2018-01-27 19:24:52,818 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,823 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,824 INFO sqlalchemy.engine.base.Engine create table Node (
    id integer primary key,
    name varchar(255),
    value text,
    template integer,
    query integer,
    foreign key ( template ) references Template ( id ) on delete set null,
    foreign key ( query ) references Query ( id ) on delete set null
    );

2018-01-27 19:24:52,824 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,828 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,829 INFO sqlalchemy.engine.base.Engine create table Node_Node (
    node_id integer,
    target_node_id integer,
    foreign key ( node_id ) references Node ( id ) on delete cascade,
    foreign key ( target_node_id ) references Node ( id ) on delete cascade
);

2018-01-27 19:24:52,829 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,833 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,834 INFO sqlalchemy.engine.base.Engine create table Route (
    id integer primary key,
    path text not null,
    node_id integer,
    weight integer default 0,
    method varchar(10) default 'GET',
    foreign key ( node_id ) references Node ( id ) on delete set null
);

2018-01-27 19:24:52,834 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,837 INFO sqlalchemy.engine.base.Engine COMMIT
E2018-01-27 19:24:52,844 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,844 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,844 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,845 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,845 INFO sqlalchemy.engine.base.Engine create table Chill (
    version integer
);

2018-01-27 19:24:52,845 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,851 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,851 INFO sqlalchemy.engine.base.Engine create table Query (
    id integer primary key,
    name varchar(255) not null
);

2018-01-27 19:24:52,851 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,855 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,855 INFO sqlalchemy.engine.base.Engine create table Template (
    id integer primary key,
    name varchar(255) unique not null
);

2018-01-27 19:24:52,855 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,861 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,862 INFO sqlalchemy.engine.base.Engine create table Node (
    id integer primary key,
    name varchar(255),
    value text,
    template integer,
    query integer,
    foreign key ( template ) references Template ( id ) on delete set null,
    foreign key ( query ) references Query ( id ) on delete set null
    );

2018-01-27 19:24:52,862 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,869 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,869 INFO sqlalchemy.engine.base.Engine create table Node_Node (
    node_id integer,
    target_node_id integer,
    foreign key ( node_id ) references Node ( id ) on delete cascade,
    foreign key ( target_node_id ) references Node ( id ) on delete cascade
);

2018-01-27 19:24:52,870 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,874 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,874 INFO sqlalchemy.engine.base.Engine create table Route (
    id integer primary key,
    path text not null,
    node_id integer,
    weight integer default 0,
    method varchar(10) default 'GET',
    foreign key ( node_id ) references Node ( id ) on delete set null
);

2018-01-27 19:24:52,875 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,880 INFO sqlalchemy.engine.base.Engine COMMIT
E2018-01-27 19:24:52,889 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,889 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,890 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,890 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,891 INFO sqlalchemy.engine.base.Engine create table Chill (
    version integer
);

2018-01-27 19:24:52,891 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,895 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,896 INFO sqlalchemy.engine.base.Engine create table Query (
    id integer primary key,
    name varchar(255) not null
);

2018-01-27 19:24:52,896 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,899 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,900 INFO sqlalchemy.engine.base.Engine create table Template (
    id integer primary key,
    name varchar(255) unique not null
);

2018-01-27 19:24:52,900 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,906 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,906 INFO sqlalchemy.engine.base.Engine create table Node (
    id integer primary key,
    name varchar(255),
    value text,
    template integer,
    query integer,
    foreign key ( template ) references Template ( id ) on delete set null,
    foreign key ( query ) references Query ( id ) on delete set null
    );

2018-01-27 19:24:52,906 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,910 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,911 INFO sqlalchemy.engine.base.Engine create table Node_Node (
    node_id integer,
    target_node_id integer,
    foreign key ( node_id ) references Node ( id ) on delete cascade,
    foreign key ( target_node_id ) references Node ( id ) on delete cascade
);

2018-01-27 19:24:52,911 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,916 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,917 INFO sqlalchemy.engine.base.Engine create table Route (
    id integer primary key,
    path text not null,
    node_id integer,
    weight integer default 0,
    method varchar(10) default 'GET',
    foreign key ( node_id ) references Node ( id ) on delete set null
);

2018-01-27 19:24:52,917 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,921 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,922 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,922 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,922 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,923 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,924 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:52,924 INFO sqlalchemy.engine.base.Engine ('empty', None)
2018-01-27 19:24:52,924 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,929 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,929 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,930 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,930 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,931 INFO sqlalchemy.engine.base.Engine insert into Route (path, node_id, weight, method)
  values (?, ?, ?, ?);

2018-01-27 19:24:52,931 INFO sqlalchemy.engine.base.Engine ('/empty/', 1, None, 'GET')
2018-01-27 19:24:52,931 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,939 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,940 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,940 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,940 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,941 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:52,941 INFO sqlalchemy.engine.base.Engine (u'/empty/', 'GET')
2018-01-27 19:24:52,943 INFO sqlalchemy.engine.base.Engine select q.id, q.name from Node as n
join Query as q on q.id = n.query
where n.id is ?;

2018-01-27 19:24:52,943 INFO sqlalchemy.engine.base.Engine (1,)
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:118]:
results: []
--------------------------------------------------------------------------------
2018-01-27 19:24:52,944 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:52,944 INFO sqlalchemy.engine.base.Engine (1,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: None
--------------------------------------------------------------------------------
.2018-01-27 19:24:52,952 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,952 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,953 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,953 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,954 INFO sqlalchemy.engine.base.Engine create table Chill (
    version integer
);

2018-01-27 19:24:52,954 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,957 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,958 INFO sqlalchemy.engine.base.Engine create table Query (
    id integer primary key,
    name varchar(255) not null
);

2018-01-27 19:24:52,958 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,962 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,963 INFO sqlalchemy.engine.base.Engine create table Template (
    id integer primary key,
    name varchar(255) unique not null
);

2018-01-27 19:24:52,963 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,967 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,968 INFO sqlalchemy.engine.base.Engine create table Node (
    id integer primary key,
    name varchar(255),
    value text,
    template integer,
    query integer,
    foreign key ( template ) references Template ( id ) on delete set null,
    foreign key ( query ) references Query ( id ) on delete set null
    );

2018-01-27 19:24:52,968 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,972 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,972 INFO sqlalchemy.engine.base.Engine create table Node_Node (
    node_id integer,
    target_node_id integer,
    foreign key ( node_id ) references Node ( id ) on delete cascade,
    foreign key ( target_node_id ) references Node ( id ) on delete cascade
);

2018-01-27 19:24:52,972 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,976 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,977 INFO sqlalchemy.engine.base.Engine create table Route (
    id integer primary key,
    path text not null,
    node_id integer,
    weight integer default 0,
    method varchar(10) default 'GET',
    foreign key ( node_id ) references Node ( id ) on delete set null
);

2018-01-27 19:24:52,977 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,981 INFO sqlalchemy.engine.base.Engine COMMIT
E2018-01-27 19:24:52,989 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,989 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,989 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:52,989 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,991 INFO sqlalchemy.engine.base.Engine create table Chill (
    version integer
);

2018-01-27 19:24:52,991 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:52,994 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:52,996 INFO sqlalchemy.engine.base.Engine create table Query (
    id integer primary key,
    name varchar(255) not null
);

2018-01-27 19:24:52,996 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,004 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,005 INFO sqlalchemy.engine.base.Engine create table Template (
    id integer primary key,
    name varchar(255) unique not null
);

2018-01-27 19:24:53,005 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,009 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,009 INFO sqlalchemy.engine.base.Engine create table Node (
    id integer primary key,
    name varchar(255),
    value text,
    template integer,
    query integer,
    foreign key ( template ) references Template ( id ) on delete set null,
    foreign key ( query ) references Query ( id ) on delete set null
    );

2018-01-27 19:24:53,009 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,016 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,017 INFO sqlalchemy.engine.base.Engine create table Node_Node (
    node_id integer,
    target_node_id integer,
    foreign key ( node_id ) references Node ( id ) on delete cascade,
    foreign key ( target_node_id ) references Node ( id ) on delete cascade
);

2018-01-27 19:24:53,017 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,026 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,027 INFO sqlalchemy.engine.base.Engine create table Route (
    id integer primary key,
    path text not null,
    node_id integer,
    weight integer default 0,
    method varchar(10) default 'GET',
    foreign key ( node_id ) references Node ( id ) on delete set null
);

2018-01-27 19:24:53,027 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,035 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,036 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,037 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,037 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,037 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,038 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:53,038 INFO sqlalchemy.engine.base.Engine ('simple', None)
2018-01-27 19:24:53,038 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,046 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,046 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,046 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,046 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,047 INFO sqlalchemy.engine.base.Engine select * from Query where name is ?;

2018-01-27 19:24:53,047 INFO sqlalchemy.engine.base.Engine ('simple.sql',)
2018-01-27 19:24:53,048 INFO sqlalchemy.engine.base.Engine insert into Query (name) values (?);

2018-01-27 19:24:53,049 INFO sqlalchemy.engine.base.Engine ('simple.sql',)
2018-01-27 19:24:53,049 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,057 INFO sqlalchemy.engine.base.Engine update Node set query = ? where id is ?;

2018-01-27 19:24:53,058 INFO sqlalchemy.engine.base.Engine (1, 1)
2018-01-27 19:24:53,058 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,063 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,063 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,063 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,063 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,064 INFO sqlalchemy.engine.base.Engine insert into Route (path, node_id, weight, method)
  values (?, ?, ?, ?);

2018-01-27 19:24:53,065 INFO sqlalchemy.engine.base.Engine ('/simple/', 1, None, 'GET')
2018-01-27 19:24:53,065 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,077 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,077 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,077 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,077 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,078 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,078 INFO sqlalchemy.engine.base.Engine (u'/simple/', 'GET')
2018-01-27 19:24:53,079 INFO sqlalchemy.engine.base.Engine select q.id, q.name from Node as n
join Query as q on q.id = n.query
where n.id is ?;

2018-01-27 19:24:53,079 INFO sqlalchemy.engine.base.Engine (1,)
--------------------------------------------------------------------------------
INFO in database [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/database.py:53]:
queries file: 'simple.sql' not available. Checking file system...
--------------------------------------------------------------------------------
2018-01-27 19:24:53,080 INFO sqlalchemy.engine.base.Engine 
          select 'yup' as a, 'pretty' as b, 'darn' as c, 'simple' as d;
          
2018-01-27 19:24:53,080 INFO sqlalchemy.engine.base.Engine ()
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:74]:
result query: [u'a', u'b', u'c', u'd']
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:118]:
results: [([(u'yup', u'pretty', u'darn', u'simple')], [u'a', u'b', u'c', u'd'])]
--------------------------------------------------------------------------------
2018-01-27 19:24:53,081 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:53,082 INFO sqlalchemy.engine.base.Engine (1,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: (u'yup', u'pretty', u'darn', u'simple')
--------------------------------------------------------------------------------
E2018-01-27 19:24:53,095 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,096 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,096 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,096 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,097 INFO sqlalchemy.engine.base.Engine create table Chill (
    version integer
);

2018-01-27 19:24:53,097 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,108 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,108 INFO sqlalchemy.engine.base.Engine create table Query (
    id integer primary key,
    name varchar(255) not null
);

2018-01-27 19:24:53,108 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,113 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,114 INFO sqlalchemy.engine.base.Engine create table Template (
    id integer primary key,
    name varchar(255) unique not null
);

2018-01-27 19:24:53,114 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,117 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,118 INFO sqlalchemy.engine.base.Engine create table Node (
    id integer primary key,
    name varchar(255),
    value text,
    template integer,
    query integer,
    foreign key ( template ) references Template ( id ) on delete set null,
    foreign key ( query ) references Query ( id ) on delete set null
    );

2018-01-27 19:24:53,118 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,122 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,123 INFO sqlalchemy.engine.base.Engine create table Node_Node (
    node_id integer,
    target_node_id integer,
    foreign key ( node_id ) references Node ( id ) on delete cascade,
    foreign key ( target_node_id ) references Node ( id ) on delete cascade
);

2018-01-27 19:24:53,123 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,127 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,127 INFO sqlalchemy.engine.base.Engine create table Route (
    id integer primary key,
    path text not null,
    node_id integer,
    weight integer default 0,
    method varchar(10) default 'GET',
    foreign key ( node_id ) references Node ( id ) on delete set null
);

2018-01-27 19:24:53,128 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,132 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,134 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,134 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,134 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,134 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,135 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:53,135 INFO sqlalchemy.engine.base.Engine ('fruit', 'fruit')
2018-01-27 19:24:53,136 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,141 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,141 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,142 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,142 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,143 INFO sqlalchemy.engine.base.Engine insert into Route (path, node_id, weight, method)
  values (?, ?, ?, ?);

2018-01-27 19:24:53,143 INFO sqlalchemy.engine.base.Engine ('/fruit/<anything>/', 1, None, 'GET')
2018-01-27 19:24:53,144 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,150 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,150 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,150 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,150 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,152 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:53,152 INFO sqlalchemy.engine.base.Engine ('vegetables', 'vegetables')
2018-01-27 19:24:53,152 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,158 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,158 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,160 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,160 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,162 INFO sqlalchemy.engine.base.Engine insert into Route (path, node_id, weight, method)
  values (?, ?, ?, ?);

2018-01-27 19:24:53,162 INFO sqlalchemy.engine.base.Engine ('/vegetables/<anything>/', 2, None, 'GET')
2018-01-27 19:24:53,162 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,170 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,170 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,171 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,171 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,172 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,172 INFO sqlalchemy.engine.base.Engine (u'/fruit/', 'GET')
2018-01-27 19:24:53,174 INFO sqlalchemy.engine.base.Engine select path as rule, weight, node_id from Route where rule like '%<%>%'
order by weight desc;

2018-01-27 19:24:53,174 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,178 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,178 INFO sqlalchemy.engine.base.Engine (u'/fruit/pear/', 'GET')
2018-01-27 19:24:53,179 INFO sqlalchemy.engine.base.Engine select path as rule, weight, node_id from Route where rule like '%<%>%'
order by weight desc;

2018-01-27 19:24:53,179 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,180 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,180 INFO sqlalchemy.engine.base.Engine ('/fruit/<anything>/', 'GET')
2018-01-27 19:24:53,182 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:53,182 INFO sqlalchemy.engine.base.Engine (1,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: fruit
--------------------------------------------------------------------------------
2018-01-27 19:24:53,187 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,187 INFO sqlalchemy.engine.base.Engine (u'/vegetables/', 'GET')
2018-01-27 19:24:53,188 INFO sqlalchemy.engine.base.Engine select path as rule, weight, node_id from Route where rule like '%<%>%'
order by weight desc;

2018-01-27 19:24:53,188 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,191 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,191 INFO sqlalchemy.engine.base.Engine (u'/vegetables/pear/', 'GET')
2018-01-27 19:24:53,192 INFO sqlalchemy.engine.base.Engine select path as rule, weight, node_id from Route where rule like '%<%>%'
order by weight desc;

2018-01-27 19:24:53,192 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,193 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,193 INFO sqlalchemy.engine.base.Engine ('/vegetables/<anything>/', 'GET')
2018-01-27 19:24:53,194 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:53,194 INFO sqlalchemy.engine.base.Engine (2,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: vegetables
--------------------------------------------------------------------------------
.2018-01-27 19:24:53,202 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,202 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,202 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,202 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,203 INFO sqlalchemy.engine.base.Engine create table Chill (
    version integer
);

2018-01-27 19:24:53,203 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,209 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,210 INFO sqlalchemy.engine.base.Engine create table Query (
    id integer primary key,
    name varchar(255) not null
);

2018-01-27 19:24:53,210 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,216 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,217 INFO sqlalchemy.engine.base.Engine create table Template (
    id integer primary key,
    name varchar(255) unique not null
);

2018-01-27 19:24:53,217 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,223 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,224 INFO sqlalchemy.engine.base.Engine create table Node (
    id integer primary key,
    name varchar(255),
    value text,
    template integer,
    query integer,
    foreign key ( template ) references Template ( id ) on delete set null,
    foreign key ( query ) references Query ( id ) on delete set null
    );

2018-01-27 19:24:53,224 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,233 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,234 INFO sqlalchemy.engine.base.Engine create table Node_Node (
    node_id integer,
    target_node_id integer,
    foreign key ( node_id ) references Node ( id ) on delete cascade,
    foreign key ( target_node_id ) references Node ( id ) on delete cascade
);

2018-01-27 19:24:53,234 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,242 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,242 INFO sqlalchemy.engine.base.Engine create table Route (
    id integer primary key,
    path text not null,
    node_id integer,
    weight integer default 0,
    method varchar(10) default 'GET',
    foreign key ( node_id ) references Node ( id ) on delete set null
);

2018-01-27 19:24:53,242 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,246 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,247 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,247 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,248 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,248 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,249 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:53,249 INFO sqlalchemy.engine.base.Engine ('top', 'hello')
2018-01-27 19:24:53,249 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,256 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,256 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,256 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,257 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,258 INFO sqlalchemy.engine.base.Engine insert into Route (path, node_id, weight, method)
  values (?, ?, ?, ?);

2018-01-27 19:24:53,258 INFO sqlalchemy.engine.base.Engine ('/', 1, None, 'GET')
2018-01-27 19:24:53,258 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,266 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,266 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,266 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,266 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,267 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:53,267 INFO sqlalchemy.engine.base.Engine ('one', '1')
2018-01-27 19:24:53,268 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,273 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,273 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,273 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,274 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,275 INFO sqlalchemy.engine.base.Engine insert into Route (path, node_id, weight, method)
  values (?, ?, ?, ?);

2018-01-27 19:24:53,275 INFO sqlalchemy.engine.base.Engine ('/one/', 2, None, 'GET')
2018-01-27 19:24:53,275 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,280 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,280 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,281 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,281 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,282 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:53,282 INFO sqlalchemy.engine.base.Engine ('two', '2')
2018-01-27 19:24:53,283 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,288 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,288 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,288 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,288 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,289 INFO sqlalchemy.engine.base.Engine insert into Route (path, node_id, weight, method)
  values (?, ?, ?, ?);

2018-01-27 19:24:53,289 INFO sqlalchemy.engine.base.Engine ('/one/two/', 3, None, 'GET')
2018-01-27 19:24:53,290 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,295 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,295 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,296 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,296 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,297 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:53,297 INFO sqlalchemy.engine.base.Engine ('three', '3')
2018-01-27 19:24:53,297 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,303 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,303 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,303 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,303 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,305 INFO sqlalchemy.engine.base.Engine insert into Route (path, node_id, weight, method)
  values (?, ?, ?, ?);

2018-01-27 19:24:53,305 INFO sqlalchemy.engine.base.Engine ('/one/two/three/', 4, None, 'GET')
2018-01-27 19:24:53,306 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,311 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,311 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,311 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,312 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,313 INFO sqlalchemy.engine.base.Engine insert into Route (path, node_id, weight, method)
  values (?, ?, ?, ?);

2018-01-27 19:24:53,313 INFO sqlalchemy.engine.base.Engine ('/one/two/other_three/', 4, None, 'GET')
2018-01-27 19:24:53,314 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,320 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,320 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,320 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,320 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,322 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,322 INFO sqlalchemy.engine.base.Engine ('/', 'GET')
2018-01-27 19:24:53,324 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:53,324 INFO sqlalchemy.engine.base.Engine (1,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: hello
--------------------------------------------------------------------------------
2018-01-27 19:24:53,329 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,329 INFO sqlalchemy.engine.base.Engine (u'/', 'GET')
2018-01-27 19:24:53,331 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:53,331 INFO sqlalchemy.engine.base.Engine (1,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: hello
--------------------------------------------------------------------------------
2018-01-27 19:24:53,335 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,335 INFO sqlalchemy.engine.base.Engine ('/', 'GET')
2018-01-27 19:24:53,337 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:53,337 INFO sqlalchemy.engine.base.Engine (1,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: hello
--------------------------------------------------------------------------------
2018-01-27 19:24:53,342 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,342 INFO sqlalchemy.engine.base.Engine ('/', 'GET')
2018-01-27 19:24:53,344 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:53,344 INFO sqlalchemy.engine.base.Engine (1,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: hello
--------------------------------------------------------------------------------
2018-01-27 19:24:53,350 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,350 INFO sqlalchemy.engine.base.Engine (u'/one/', 'GET')
2018-01-27 19:24:53,351 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:53,352 INFO sqlalchemy.engine.base.Engine (2,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: 1
--------------------------------------------------------------------------------
2018-01-27 19:24:53,355 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,355 INFO sqlalchemy.engine.base.Engine (u'/one/', 'GET')
2018-01-27 19:24:53,357 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:53,357 INFO sqlalchemy.engine.base.Engine (2,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: 1
--------------------------------------------------------------------------------
2018-01-27 19:24:53,362 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,362 INFO sqlalchemy.engine.base.Engine (u'/one/', 'GET')
2018-01-27 19:24:53,364 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:53,364 INFO sqlalchemy.engine.base.Engine (2,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: 1
--------------------------------------------------------------------------------
2018-01-27 19:24:53,367 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,367 INFO sqlalchemy.engine.base.Engine (u'/one/', 'GET')
2018-01-27 19:24:53,368 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:53,368 INFO sqlalchemy.engine.base.Engine (2,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: 1
--------------------------------------------------------------------------------
2018-01-27 19:24:53,374 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,374 INFO sqlalchemy.engine.base.Engine (u'/one/two/', 'GET')
2018-01-27 19:24:53,376 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:53,376 INFO sqlalchemy.engine.base.Engine (3,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: 2
--------------------------------------------------------------------------------
2018-01-27 19:24:53,381 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,381 INFO sqlalchemy.engine.base.Engine (u'/one/two/', 'GET')
2018-01-27 19:24:53,383 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:53,383 INFO sqlalchemy.engine.base.Engine (3,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: 2
--------------------------------------------------------------------------------
2018-01-27 19:24:53,389 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,389 INFO sqlalchemy.engine.base.Engine (u'/one/two/', 'GET')
2018-01-27 19:24:53,390 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:53,391 INFO sqlalchemy.engine.base.Engine (3,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: 2
--------------------------------------------------------------------------------
2018-01-27 19:24:53,394 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,394 INFO sqlalchemy.engine.base.Engine (u'/one/two/', 'GET')
2018-01-27 19:24:53,396 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:53,396 INFO sqlalchemy.engine.base.Engine (3,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: 2
--------------------------------------------------------------------------------
2018-01-27 19:24:53,399 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,399 INFO sqlalchemy.engine.base.Engine (u'/one/two/', 'GET')
2018-01-27 19:24:53,401 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:53,401 INFO sqlalchemy.engine.base.Engine (3,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: 2
--------------------------------------------------------------------------------
2018-01-27 19:24:53,406 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,406 INFO sqlalchemy.engine.base.Engine (u'/one/two/three/', 'GET')
2018-01-27 19:24:53,408 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:53,408 INFO sqlalchemy.engine.base.Engine (4,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: 3
--------------------------------------------------------------------------------
2018-01-27 19:24:53,413 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,413 INFO sqlalchemy.engine.base.Engine (u'/one/two/other_three/', 'GET')
2018-01-27 19:24:53,414 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:53,414 INFO sqlalchemy.engine.base.Engine (4,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: 3
--------------------------------------------------------------------------------
2018-01-27 19:24:53,417 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,418 INFO sqlalchemy.engine.base.Engine (u'/one/two/other_three/', 'GET')
2018-01-27 19:24:53,419 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:53,419 INFO sqlalchemy.engine.base.Engine (4,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: 3
--------------------------------------------------------------------------------
2018-01-27 19:24:53,422 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,422 INFO sqlalchemy.engine.base.Engine (u'/one/two/other_three/', 'GET')
2018-01-27 19:24:53,423 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:53,423 INFO sqlalchemy.engine.base.Engine (4,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: 3
--------------------------------------------------------------------------------
2018-01-27 19:24:53,428 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,428 INFO sqlalchemy.engine.base.Engine (u'/one/two/other_three/nothing/', 'GET')
2018-01-27 19:24:53,430 INFO sqlalchemy.engine.base.Engine select path as rule, weight, node_id from Route where rule like '%<%>%'
order by weight desc;

2018-01-27 19:24:53,430 INFO sqlalchemy.engine.base.Engine ()
.2018-01-27 19:24:53,439 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,439 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,440 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,440 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,441 INFO sqlalchemy.engine.base.Engine create table Chill (
    version integer
);

2018-01-27 19:24:53,441 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,445 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,446 INFO sqlalchemy.engine.base.Engine create table Query (
    id integer primary key,
    name varchar(255) not null
);

2018-01-27 19:24:53,446 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,449 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,451 INFO sqlalchemy.engine.base.Engine create table Template (
    id integer primary key,
    name varchar(255) unique not null
);

2018-01-27 19:24:53,451 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,455 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,456 INFO sqlalchemy.engine.base.Engine create table Node (
    id integer primary key,
    name varchar(255),
    value text,
    template integer,
    query integer,
    foreign key ( template ) references Template ( id ) on delete set null,
    foreign key ( query ) references Query ( id ) on delete set null
    );

2018-01-27 19:24:53,456 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,473 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,475 INFO sqlalchemy.engine.base.Engine create table Node_Node (
    node_id integer,
    target_node_id integer,
    foreign key ( node_id ) references Node ( id ) on delete cascade,
    foreign key ( target_node_id ) references Node ( id ) on delete cascade
);

2018-01-27 19:24:53,475 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,481 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,482 INFO sqlalchemy.engine.base.Engine create table Route (
    id integer primary key,
    path text not null,
    node_id integer,
    weight integer default 0,
    method varchar(10) default 'GET',
    foreign key ( node_id ) references Node ( id ) on delete set null
);

2018-01-27 19:24:53,482 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,486 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,488 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,488 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,489 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,489 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,490 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:53,490 INFO sqlalchemy.engine.base.Engine ('top', 'hello')
2018-01-27 19:24:53,490 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,496 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,496 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,497 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,497 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,498 INFO sqlalchemy.engine.base.Engine insert into Route (path, node_id, weight, method)
  values (?, ?, ?, ?);

2018-01-27 19:24:53,498 INFO sqlalchemy.engine.base.Engine ('/<int:count>/', 1, None, 'GET')
2018-01-27 19:24:53,498 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,505 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,505 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,505 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,505 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,507 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,507 INFO sqlalchemy.engine.base.Engine ('/', 'GET')
2018-01-27 19:24:53,509 INFO sqlalchemy.engine.base.Engine select path as rule, weight, node_id from Route where rule like '%<%>%'
order by weight desc;

2018-01-27 19:24:53,509 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,515 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,515 INFO sqlalchemy.engine.base.Engine (u'/1/', 'GET')
2018-01-27 19:24:53,517 INFO sqlalchemy.engine.base.Engine select path as rule, weight, node_id from Route where rule like '%<%>%'
order by weight desc;

2018-01-27 19:24:53,517 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,519 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,519 INFO sqlalchemy.engine.base.Engine ('/<int:count>/', 'GET')
2018-01-27 19:24:53,521 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:53,521 INFO sqlalchemy.engine.base.Engine (1,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: hello
--------------------------------------------------------------------------------
2018-01-27 19:24:53,524 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,524 INFO sqlalchemy.engine.base.Engine (u'/1/', 'GET')
2018-01-27 19:24:53,526 INFO sqlalchemy.engine.base.Engine select path as rule, weight, node_id from Route where rule like '%<%>%'
order by weight desc;

2018-01-27 19:24:53,526 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,528 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,528 INFO sqlalchemy.engine.base.Engine ('/<int:count>/', 'GET')
2018-01-27 19:24:53,530 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:53,530 INFO sqlalchemy.engine.base.Engine (1,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: hello
--------------------------------------------------------------------------------
2018-01-27 19:24:53,533 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,533 INFO sqlalchemy.engine.base.Engine (u'/1/', 'GET')
2018-01-27 19:24:53,535 INFO sqlalchemy.engine.base.Engine select path as rule, weight, node_id from Route where rule like '%<%>%'
order by weight desc;

2018-01-27 19:24:53,535 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,536 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,536 INFO sqlalchemy.engine.base.Engine ('/<int:count>/', 'GET')
2018-01-27 19:24:53,538 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:53,538 INFO sqlalchemy.engine.base.Engine (1,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: hello
--------------------------------------------------------------------------------
2018-01-27 19:24:53,542 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,542 INFO sqlalchemy.engine.base.Engine (u'/1/', 'GET')
2018-01-27 19:24:53,543 INFO sqlalchemy.engine.base.Engine select path as rule, weight, node_id from Route where rule like '%<%>%'
order by weight desc;

2018-01-27 19:24:53,544 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,545 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,545 INFO sqlalchemy.engine.base.Engine ('/<int:count>/', 'GET')
2018-01-27 19:24:53,547 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:53,547 INFO sqlalchemy.engine.base.Engine (1,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: hello
--------------------------------------------------------------------------------
2018-01-27 19:24:53,553 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,553 INFO sqlalchemy.engine.base.Engine (u'/1/index.html/not/', 'GET')
2018-01-27 19:24:53,555 INFO sqlalchemy.engine.base.Engine select path as rule, weight, node_id from Route where rule like '%<%>%'
order by weight desc;

2018-01-27 19:24:53,555 INFO sqlalchemy.engine.base.Engine ()
.2018-01-27 19:24:53,561 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,561 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,562 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,562 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,563 INFO sqlalchemy.engine.base.Engine create table Chill (
    version integer
);

2018-01-27 19:24:53,563 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,567 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,569 INFO sqlalchemy.engine.base.Engine create table Query (
    id integer primary key,
    name varchar(255) not null
);

2018-01-27 19:24:53,569 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,573 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,574 INFO sqlalchemy.engine.base.Engine create table Template (
    id integer primary key,
    name varchar(255) unique not null
);

2018-01-27 19:24:53,574 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,578 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,580 INFO sqlalchemy.engine.base.Engine create table Node (
    id integer primary key,
    name varchar(255),
    value text,
    template integer,
    query integer,
    foreign key ( template ) references Template ( id ) on delete set null,
    foreign key ( query ) references Query ( id ) on delete set null
    );

2018-01-27 19:24:53,580 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,584 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,585 INFO sqlalchemy.engine.base.Engine create table Node_Node (
    node_id integer,
    target_node_id integer,
    foreign key ( node_id ) references Node ( id ) on delete cascade,
    foreign key ( target_node_id ) references Node ( id ) on delete cascade
);

2018-01-27 19:24:53,585 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,588 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,590 INFO sqlalchemy.engine.base.Engine create table Route (
    id integer primary key,
    path text not null,
    node_id integer,
    weight integer default 0,
    method varchar(10) default 'GET',
    foreign key ( node_id ) references Node ( id ) on delete set null
);

2018-01-27 19:24:53,590 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,595 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,597 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,597 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,597 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,597 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,599 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:53,599 INFO sqlalchemy.engine.base.Engine ('a', 'a')
2018-01-27 19:24:53,600 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,604 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,605 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,605 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,605 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,606 INFO sqlalchemy.engine.base.Engine insert into Route (path, node_id, weight, method)
  values (?, ?, ?, ?);

2018-01-27 19:24:53,606 INFO sqlalchemy.engine.base.Engine ('/<path:anything>/', 1, 1, 'GET')
2018-01-27 19:24:53,606 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,611 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,611 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,611 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,612 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,613 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:53,613 INFO sqlalchemy.engine.base.Engine ('aardvark', 'aardvark')
2018-01-27 19:24:53,614 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,621 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,621 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,621 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,622 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,623 INFO sqlalchemy.engine.base.Engine insert into Route (path, node_id, weight, method)
  values (?, ?, ?, ?);

2018-01-27 19:24:53,623 INFO sqlalchemy.engine.base.Engine ('/animals/<anything>/', 2, 1, 'GET')
2018-01-27 19:24:53,624 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,629 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,629 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,629 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,629 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,630 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:53,630 INFO sqlalchemy.engine.base.Engine ('b', 'b')
2018-01-27 19:24:53,631 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,637 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,637 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,638 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,638 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,639 INFO sqlalchemy.engine.base.Engine insert into Route (path, node_id, weight, method)
  values (?, ?, ?, ?);

2018-01-27 19:24:53,639 INFO sqlalchemy.engine.base.Engine ('/<path:something>/', 3, 2, 'GET')
2018-01-27 19:24:53,639 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,648 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,648 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,648 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,648 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,649 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,649 INFO sqlalchemy.engine.base.Engine (u'/apple/', 'GET')
2018-01-27 19:24:53,651 INFO sqlalchemy.engine.base.Engine select path as rule, weight, node_id from Route where rule like '%<%>%'
order by weight desc;

2018-01-27 19:24:53,651 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,653 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,653 INFO sqlalchemy.engine.base.Engine ('/<path:something>/', 'GET')
2018-01-27 19:24:53,655 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:53,655 INFO sqlalchemy.engine.base.Engine (3,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: b
--------------------------------------------------------------------------------
2018-01-27 19:24:53,660 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,661 INFO sqlalchemy.engine.base.Engine (u'/animals/ape/', 'GET')
2018-01-27 19:24:53,662 INFO sqlalchemy.engine.base.Engine select path as rule, weight, node_id from Route where rule like '%<%>%'
order by weight desc;

2018-01-27 19:24:53,662 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,663 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,664 INFO sqlalchemy.engine.base.Engine ('/animals/<anything>/', 'GET')
2018-01-27 19:24:53,665 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:53,665 INFO sqlalchemy.engine.base.Engine (2,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: aardvark
--------------------------------------------------------------------------------
2018-01-27 19:24:53,669 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,669 INFO sqlalchemy.engine.base.Engine (u'/animals/ape/1/', 'GET')
2018-01-27 19:24:53,671 INFO sqlalchemy.engine.base.Engine select path as rule, weight, node_id from Route where rule like '%<%>%'
order by weight desc;

2018-01-27 19:24:53,671 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,672 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,672 INFO sqlalchemy.engine.base.Engine ('/<path:something>/', 'GET')
2018-01-27 19:24:53,674 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:53,674 INFO sqlalchemy.engine.base.Engine (3,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: b
--------------------------------------------------------------------------------
2018-01-27 19:24:53,678 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,678 INFO sqlalchemy.engine.base.Engine (u'/vegetables/', 'GET')
2018-01-27 19:24:53,679 INFO sqlalchemy.engine.base.Engine select path as rule, weight, node_id from Route where rule like '%<%>%'
order by weight desc;

2018-01-27 19:24:53,679 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,681 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,681 INFO sqlalchemy.engine.base.Engine ('/<path:something>/', 'GET')
2018-01-27 19:24:53,682 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:53,682 INFO sqlalchemy.engine.base.Engine (3,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: b
--------------------------------------------------------------------------------
2018-01-27 19:24:53,685 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,685 INFO sqlalchemy.engine.base.Engine (u'/vegetables/pear/', 'GET')
2018-01-27 19:24:53,686 INFO sqlalchemy.engine.base.Engine select path as rule, weight, node_id from Route where rule like '%<%>%'
order by weight desc;

2018-01-27 19:24:53,686 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,688 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:53,688 INFO sqlalchemy.engine.base.Engine ('/<path:something>/', 'GET')
2018-01-27 19:24:53,689 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:53,689 INFO sqlalchemy.engine.base.Engine (3,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: b
--------------------------------------------------------------------------------
.2018-01-27 19:24:53,698 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,698 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,698 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,699 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,700 INFO sqlalchemy.engine.base.Engine create table Chill (
    version integer
);

2018-01-27 19:24:53,700 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,708 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,709 INFO sqlalchemy.engine.base.Engine create table Query (
    id integer primary key,
    name varchar(255) not null
);

2018-01-27 19:24:53,709 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,714 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,715 INFO sqlalchemy.engine.base.Engine create table Template (
    id integer primary key,
    name varchar(255) unique not null
);

2018-01-27 19:24:53,715 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,719 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,720 INFO sqlalchemy.engine.base.Engine create table Node (
    id integer primary key,
    name varchar(255),
    value text,
    template integer,
    query integer,
    foreign key ( template ) references Template ( id ) on delete set null,
    foreign key ( query ) references Query ( id ) on delete set null
    );

2018-01-27 19:24:53,720 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,723 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,724 INFO sqlalchemy.engine.base.Engine create table Node_Node (
    node_id integer,
    target_node_id integer,
    foreign key ( node_id ) references Node ( id ) on delete cascade,
    foreign key ( target_node_id ) references Node ( id ) on delete cascade
);

2018-01-27 19:24:53,725 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,729 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,730 INFO sqlalchemy.engine.base.Engine create table Route (
    id integer primary key,
    path text not null,
    node_id integer,
    weight integer default 0,
    method varchar(10) default 'GET',
    foreign key ( node_id ) references Node ( id ) on delete set null
);

2018-01-27 19:24:53,730 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,736 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,738 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,739 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,739 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,739 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,740 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:53,740 INFO sqlalchemy.engine.base.Engine ('a', None)
2018-01-27 19:24:53,741 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,746 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,746 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,746 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,747 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,748 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:53,748 INFO sqlalchemy.engine.base.Engine ('b', None)
2018-01-27 19:24:53,748 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,753 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,753 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,753 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,753 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,754 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:53,754 INFO sqlalchemy.engine.base.Engine ('c', 'c')
2018-01-27 19:24:53,755 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,759 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,759 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,759 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,759 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,761 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:53,761 INFO sqlalchemy.engine.base.Engine ('d', 'd')
2018-01-27 19:24:53,761 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,766 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,766 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,766 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,766 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,767 INFO sqlalchemy.engine.base.Engine select * from Query where name is ?;

2018-01-27 19:24:53,767 INFO sqlalchemy.engine.base.Engine ('select_link_node_from_node.sql',)
2018-01-27 19:24:53,769 INFO sqlalchemy.engine.base.Engine insert into Query (name) values (?);

2018-01-27 19:24:53,769 INFO sqlalchemy.engine.base.Engine ('select_link_node_from_node.sql',)
2018-01-27 19:24:53,769 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,774 INFO sqlalchemy.engine.base.Engine update Node set query = ? where id is ?;

2018-01-27 19:24:53,774 INFO sqlalchemy.engine.base.Engine (1, 1)
2018-01-27 19:24:53,774 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,780 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,780 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,780 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,780 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,781 INFO sqlalchemy.engine.base.Engine insert or replace into Node_Node (node_id, target_node_id) values (?, ?);

2018-01-27 19:24:53,781 INFO sqlalchemy.engine.base.Engine (1, 3)
2018-01-27 19:24:53,782 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,787 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,788 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,788 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,788 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,789 INFO sqlalchemy.engine.base.Engine select * from Query where name is ?;

2018-01-27 19:24:53,789 INFO sqlalchemy.engine.base.Engine ('select_link_node_from_node.sql',)
2018-01-27 19:24:53,790 INFO sqlalchemy.engine.base.Engine update Node set query = ? where id is ?;

2018-01-27 19:24:53,790 INFO sqlalchemy.engine.base.Engine (1, 1)
2018-01-27 19:24:53,791 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,798 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,798 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,798 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,799 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,800 INFO sqlalchemy.engine.base.Engine insert or replace into Node_Node (node_id, target_node_id) values (?, ?);

2018-01-27 19:24:53,800 INFO sqlalchemy.engine.base.Engine (1, 4)
2018-01-27 19:24:53,800 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,809 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,809 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,810 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,810 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,811 INFO sqlalchemy.engine.base.Engine select * from Query where name is ?;

2018-01-27 19:24:53,811 INFO sqlalchemy.engine.base.Engine ('select_link_node_from_node.sql',)
2018-01-27 19:24:53,813 INFO sqlalchemy.engine.base.Engine update Node set query = ? where id is ?;

2018-01-27 19:24:53,813 INFO sqlalchemy.engine.base.Engine (1, 2)
2018-01-27 19:24:53,813 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,820 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,820 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,821 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,821 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,822 INFO sqlalchemy.engine.base.Engine insert or replace into Node_Node (node_id, target_node_id) values (?, ?);

2018-01-27 19:24:53,822 INFO sqlalchemy.engine.base.Engine (2, 3)
2018-01-27 19:24:53,822 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,829 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,829 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,829 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,829 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,831 INFO sqlalchemy.engine.base.Engine select ln.id as node_id, ln.name, ln.value from Node as n
join Node_Node as nn on (n.id = nn.node_id)
join Node as ln on (nn.target_node_id = ln.id)
where n.id = ?;

2018-01-27 19:24:53,831 INFO sqlalchemy.engine.base.Engine (1,)
2018-01-27 19:24:53,833 INFO sqlalchemy.engine.base.Engine select ln.id as node_id, ln.name, ln.value from Node as n
join Node_Node as nn on (n.id = nn.node_id)
join Node as ln on (nn.target_node_id = ln.id)
where n.id = ?;

2018-01-27 19:24:53,833 INFO sqlalchemy.engine.base.Engine (2,)
2018-01-27 19:24:53,835 INFO sqlalchemy.engine.base.Engine delete from Node where id = ?;

2018-01-27 19:24:53,835 INFO sqlalchemy.engine.base.Engine (1,)
2018-01-27 19:24:53,835 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,839 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id as node_id from Node as n
where n.id = ?;

2018-01-27 19:24:53,840 INFO sqlalchemy.engine.base.Engine (1,)
2018-01-27 19:24:53,841 INFO sqlalchemy.engine.base.Engine select ln.id as node_id, ln.name, ln.value from Node as n
join Node_Node as nn on (n.id = nn.node_id)
join Node as ln on (nn.target_node_id = ln.id)
where n.id = ?;

2018-01-27 19:24:53,841 INFO sqlalchemy.engine.base.Engine (1,)
2018-01-27 19:24:53,843 INFO sqlalchemy.engine.base.Engine select * from Node_Node where node_id = ?;

2018-01-27 19:24:53,843 INFO sqlalchemy.engine.base.Engine (1,)
.2018-01-27 19:24:53,850 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,850 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,851 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,851 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,852 INFO sqlalchemy.engine.base.Engine create table Chill (
    version integer
);

2018-01-27 19:24:53,853 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,856 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,857 INFO sqlalchemy.engine.base.Engine create table Query (
    id integer primary key,
    name varchar(255) not null
);

2018-01-27 19:24:53,857 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,862 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,863 INFO sqlalchemy.engine.base.Engine create table Template (
    id integer primary key,
    name varchar(255) unique not null
);

2018-01-27 19:24:53,864 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,871 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,872 INFO sqlalchemy.engine.base.Engine create table Node (
    id integer primary key,
    name varchar(255),
    value text,
    template integer,
    query integer,
    foreign key ( template ) references Template ( id ) on delete set null,
    foreign key ( query ) references Query ( id ) on delete set null
    );

2018-01-27 19:24:53,872 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,876 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,877 INFO sqlalchemy.engine.base.Engine create table Node_Node (
    node_id integer,
    target_node_id integer,
    foreign key ( node_id ) references Node ( id ) on delete cascade,
    foreign key ( target_node_id ) references Node ( id ) on delete cascade
);

2018-01-27 19:24:53,877 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,882 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,883 INFO sqlalchemy.engine.base.Engine create table Route (
    id integer primary key,
    path text not null,
    node_id integer,
    weight integer default 0,
    method varchar(10) default 'GET',
    foreign key ( node_id ) references Node ( id ) on delete set null
);

2018-01-27 19:24:53,883 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,887 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,889 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,889 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,889 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,889 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,891 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:53,891 INFO sqlalchemy.engine.base.Engine ('a', 'apple')
2018-01-27 19:24:53,891 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,896 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id as node_id from Node as n
where n.id = ?;

2018-01-27 19:24:53,896 INFO sqlalchemy.engine.base.Engine (1,)
2018-01-27 19:24:53,898 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,898 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,898 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,898 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,899 INFO sqlalchemy.engine.base.Engine delete from Node where id = ?;

2018-01-27 19:24:53,899 INFO sqlalchemy.engine.base.Engine (1,)
2018-01-27 19:24:53,900 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,904 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id as node_id from Node as n
where n.id = ?;

2018-01-27 19:24:53,904 INFO sqlalchemy.engine.base.Engine (1,)
.2018-01-27 19:24:53,911 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,911 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,911 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,911 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,912 INFO sqlalchemy.engine.base.Engine create table Chill (
    version integer
);

2018-01-27 19:24:53,912 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,916 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,917 INFO sqlalchemy.engine.base.Engine create table Query (
    id integer primary key,
    name varchar(255) not null
);

2018-01-27 19:24:53,917 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,921 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,922 INFO sqlalchemy.engine.base.Engine create table Template (
    id integer primary key,
    name varchar(255) unique not null
);

2018-01-27 19:24:53,922 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,927 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,928 INFO sqlalchemy.engine.base.Engine create table Node (
    id integer primary key,
    name varchar(255),
    value text,
    template integer,
    query integer,
    foreign key ( template ) references Template ( id ) on delete set null,
    foreign key ( query ) references Query ( id ) on delete set null
    );

2018-01-27 19:24:53,929 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,932 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,934 INFO sqlalchemy.engine.base.Engine create table Node_Node (
    node_id integer,
    target_node_id integer,
    foreign key ( node_id ) references Node ( id ) on delete cascade,
    foreign key ( target_node_id ) references Node ( id ) on delete cascade
);

2018-01-27 19:24:53,934 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,937 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,938 INFO sqlalchemy.engine.base.Engine create table Route (
    id integer primary key,
    path text not null,
    node_id integer,
    weight integer default 0,
    method varchar(10) default 'GET',
    foreign key ( node_id ) references Node ( id ) on delete set null
);

2018-01-27 19:24:53,938 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,942 INFO sqlalchemy.engine.base.Engine COMMIT
E2018-01-27 19:24:53,948 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,948 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,948 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,948 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,949 INFO sqlalchemy.engine.base.Engine create table Chill (
    version integer
);

2018-01-27 19:24:53,949 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,952 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,954 INFO sqlalchemy.engine.base.Engine create table Query (
    id integer primary key,
    name varchar(255) not null
);

2018-01-27 19:24:53,954 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,958 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,959 INFO sqlalchemy.engine.base.Engine create table Template (
    id integer primary key,
    name varchar(255) unique not null
);

2018-01-27 19:24:53,959 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,964 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,965 INFO sqlalchemy.engine.base.Engine create table Node (
    id integer primary key,
    name varchar(255),
    value text,
    template integer,
    query integer,
    foreign key ( template ) references Template ( id ) on delete set null,
    foreign key ( query ) references Query ( id ) on delete set null
    );

2018-01-27 19:24:53,965 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,970 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,971 INFO sqlalchemy.engine.base.Engine create table Node_Node (
    node_id integer,
    target_node_id integer,
    foreign key ( node_id ) references Node ( id ) on delete cascade,
    foreign key ( target_node_id ) references Node ( id ) on delete cascade
);

2018-01-27 19:24:53,971 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,977 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:53,978 INFO sqlalchemy.engine.base.Engine create table Route (
    id integer primary key,
    path text not null,
    node_id integer,
    weight integer default 0,
    method varchar(10) default 'GET',
    foreign key ( node_id ) references Node ( id ) on delete set null
);

2018-01-27 19:24:53,978 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,984 INFO sqlalchemy.engine.base.Engine COMMIT
E2018-01-27 19:24:53,993 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,993 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,993 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:53,993 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:53,995 INFO sqlalchemy.engine.base.Engine create table Chill (
    version integer
);

2018-01-27 19:24:53,995 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,000 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,002 INFO sqlalchemy.engine.base.Engine create table Query (
    id integer primary key,
    name varchar(255) not null
);

2018-01-27 19:24:54,002 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,007 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,008 INFO sqlalchemy.engine.base.Engine create table Template (
    id integer primary key,
    name varchar(255) unique not null
);

2018-01-27 19:24:54,008 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,013 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,015 INFO sqlalchemy.engine.base.Engine create table Node (
    id integer primary key,
    name varchar(255),
    value text,
    template integer,
    query integer,
    foreign key ( template ) references Template ( id ) on delete set null,
    foreign key ( query ) references Query ( id ) on delete set null
    );

2018-01-27 19:24:54,015 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,019 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,020 INFO sqlalchemy.engine.base.Engine create table Node_Node (
    node_id integer,
    target_node_id integer,
    foreign key ( node_id ) references Node ( id ) on delete cascade,
    foreign key ( target_node_id ) references Node ( id ) on delete cascade
);

2018-01-27 19:24:54,020 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,024 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,026 INFO sqlalchemy.engine.base.Engine create table Route (
    id integer primary key,
    path text not null,
    node_id integer,
    weight integer default 0,
    method varchar(10) default 'GET',
    foreign key ( node_id ) references Node ( id ) on delete set null
);

2018-01-27 19:24:54,026 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,030 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,032 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,032 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,032 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,033 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,034 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:54,035 INFO sqlalchemy.engine.base.Engine ('a', None)
2018-01-27 19:24:54,035 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,039 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,039 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,040 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,040 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,041 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:54,041 INFO sqlalchemy.engine.base.Engine ('b', None)
2018-01-27 19:24:54,042 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,048 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,048 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,048 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,048 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,050 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:54,050 INFO sqlalchemy.engine.base.Engine ('c', 'c')
2018-01-27 19:24:54,050 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,055 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,055 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,056 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,056 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,057 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:54,057 INFO sqlalchemy.engine.base.Engine ('d', 'd')
2018-01-27 19:24:54,058 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,063 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,063 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,064 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,064 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,065 INFO sqlalchemy.engine.base.Engine select * from Query where name is ?;

2018-01-27 19:24:54,066 INFO sqlalchemy.engine.base.Engine ('select_link_node_from_node.sql',)
2018-01-27 19:24:54,067 INFO sqlalchemy.engine.base.Engine insert into Query (name) values (?);

2018-01-27 19:24:54,067 INFO sqlalchemy.engine.base.Engine ('select_link_node_from_node.sql',)
2018-01-27 19:24:54,067 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,071 INFO sqlalchemy.engine.base.Engine update Node set query = ? where id is ?;

2018-01-27 19:24:54,071 INFO sqlalchemy.engine.base.Engine (1, 1)
2018-01-27 19:24:54,072 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,078 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,078 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,078 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,078 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,080 INFO sqlalchemy.engine.base.Engine insert or replace into Node_Node (node_id, target_node_id) values (?, ?);

2018-01-27 19:24:54,080 INFO sqlalchemy.engine.base.Engine (1, 3)
2018-01-27 19:24:54,081 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,085 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,086 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,086 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,087 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,088 INFO sqlalchemy.engine.base.Engine select * from Query where name is ?;

2018-01-27 19:24:54,088 INFO sqlalchemy.engine.base.Engine ('select_link_node_from_node.sql',)
2018-01-27 19:24:54,090 INFO sqlalchemy.engine.base.Engine update Node set query = ? where id is ?;

2018-01-27 19:24:54,090 INFO sqlalchemy.engine.base.Engine (1, 1)
2018-01-27 19:24:54,090 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,095 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,095 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,096 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,096 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,097 INFO sqlalchemy.engine.base.Engine insert or replace into Node_Node (node_id, target_node_id) values (?, ?);

2018-01-27 19:24:54,097 INFO sqlalchemy.engine.base.Engine (1, 4)
2018-01-27 19:24:54,097 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,104 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,104 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,104 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,104 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,105 INFO sqlalchemy.engine.base.Engine select * from Query where name is ?;

2018-01-27 19:24:54,105 INFO sqlalchemy.engine.base.Engine ('select_link_node_from_node.sql',)
2018-01-27 19:24:54,107 INFO sqlalchemy.engine.base.Engine update Node set query = ? where id is ?;

2018-01-27 19:24:54,107 INFO sqlalchemy.engine.base.Engine (1, 2)
2018-01-27 19:24:54,108 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,113 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,114 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,114 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,114 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,115 INFO sqlalchemy.engine.base.Engine insert or replace into Node_Node (node_id, target_node_id) values (?, ?);

2018-01-27 19:24:54,115 INFO sqlalchemy.engine.base.Engine (2, 3)
2018-01-27 19:24:54,116 INFO sqlalchemy.engine.base.Engine COMMIT
E2018-01-27 19:24:54,128 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,128 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,128 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,128 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,130 INFO sqlalchemy.engine.base.Engine create table Chill (
    version integer
);

2018-01-27 19:24:54,130 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,135 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,136 INFO sqlalchemy.engine.base.Engine create table Query (
    id integer primary key,
    name varchar(255) not null
);

2018-01-27 19:24:54,136 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,142 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,143 INFO sqlalchemy.engine.base.Engine create table Template (
    id integer primary key,
    name varchar(255) unique not null
);

2018-01-27 19:24:54,143 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,148 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,149 INFO sqlalchemy.engine.base.Engine create table Node (
    id integer primary key,
    name varchar(255),
    value text,
    template integer,
    query integer,
    foreign key ( template ) references Template ( id ) on delete set null,
    foreign key ( query ) references Query ( id ) on delete set null
    );

2018-01-27 19:24:54,150 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,154 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,155 INFO sqlalchemy.engine.base.Engine create table Node_Node (
    node_id integer,
    target_node_id integer,
    foreign key ( node_id ) references Node ( id ) on delete cascade,
    foreign key ( target_node_id ) references Node ( id ) on delete cascade
);

2018-01-27 19:24:54,155 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,159 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,160 INFO sqlalchemy.engine.base.Engine create table Route (
    id integer primary key,
    path text not null,
    node_id integer,
    weight integer default 0,
    method varchar(10) default 'GET',
    foreign key ( node_id ) references Node ( id ) on delete set null
);

2018-01-27 19:24:54,160 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,166 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,168 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,168 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,168 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,168 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,170 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:54,170 INFO sqlalchemy.engine.base.Engine ('page', None)
2018-01-27 19:24:54,171 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,175 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,175 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,176 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,176 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,177 INFO sqlalchemy.engine.base.Engine insert into Route (path, node_id, weight, method)
  values (?, ?, ?, ?);

2018-01-27 19:24:54,177 INFO sqlalchemy.engine.base.Engine ('/page/<pagename>/', 1, None, 'GET')
2018-01-27 19:24:54,178 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,182 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,182 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,183 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,183 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,184 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:54,184 INFO sqlalchemy.engine.base.Engine ('pagenames', None)
2018-01-27 19:24:54,184 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,191 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,191 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,191 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,191 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,192 INFO sqlalchemy.engine.base.Engine select * from Query where name is ?;

2018-01-27 19:24:54,193 INFO sqlalchemy.engine.base.Engine ('select_link_node_from_node.sql',)
2018-01-27 19:24:54,194 INFO sqlalchemy.engine.base.Engine insert into Query (name) values (?);

2018-01-27 19:24:54,194 INFO sqlalchemy.engine.base.Engine ('select_link_node_from_node.sql',)
2018-01-27 19:24:54,195 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,200 INFO sqlalchemy.engine.base.Engine update Node set query = ? where id is ?;

2018-01-27 19:24:54,200 INFO sqlalchemy.engine.base.Engine (1, 1)
2018-01-27 19:24:54,200 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,206 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,206 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,206 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,206 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,208 INFO sqlalchemy.engine.base.Engine insert or replace into Node_Node (node_id, target_node_id) values (?, ?);

2018-01-27 19:24:54,208 INFO sqlalchemy.engine.base.Engine (1, 2)
2018-01-27 19:24:54,208 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,213 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,213 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,214 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,214 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,216 INFO sqlalchemy.engine.base.Engine select * from Query where name is ?;

2018-01-27 19:24:54,216 INFO sqlalchemy.engine.base.Engine ('select_pagenames.sql',)
2018-01-27 19:24:54,218 INFO sqlalchemy.engine.base.Engine insert into Query (name) values (?);

2018-01-27 19:24:54,218 INFO sqlalchemy.engine.base.Engine ('select_pagenames.sql',)
2018-01-27 19:24:54,218 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,224 INFO sqlalchemy.engine.base.Engine update Node set query = ? where id is ?;

2018-01-27 19:24:54,224 INFO sqlalchemy.engine.base.Engine (2, 2)
2018-01-27 19:24:54,224 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,231 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,231 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,231 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,232 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,234 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:54,234 INFO sqlalchemy.engine.base.Engine (u'/page/cucumber/', 'GET')
2018-01-27 19:24:54,236 INFO sqlalchemy.engine.base.Engine select path as rule, weight, node_id from Route where rule like '%<%>%'
order by weight desc;

2018-01-27 19:24:54,236 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,239 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:54,239 INFO sqlalchemy.engine.base.Engine ('/page/<pagename>/', 'GET')
2018-01-27 19:24:54,242 INFO sqlalchemy.engine.base.Engine select q.id, q.name from Node as n
join Query as q on q.id = n.query
where n.id is ?;

2018-01-27 19:24:54,242 INFO sqlalchemy.engine.base.Engine (1,)
2018-01-27 19:24:54,244 INFO sqlalchemy.engine.base.Engine select ln.id as node_id, ln.name, ln.value from Node as n
join Node_Node as nn on (n.id = nn.node_id)
join Node as ln on (nn.target_node_id = ln.id)
where n.id = ?;

2018-01-27 19:24:54,244 INFO sqlalchemy.engine.base.Engine (1,)
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:74]:
result query: [u'node_id', u'name', u'value']
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:118]:
results: [([(2, u'pagenames', None)], [u'node_id', u'name', u'value'])]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:126]:
sub: (2, u'pagenames', None)
--------------------------------------------------------------------------------
2018-01-27 19:24:54,246 INFO sqlalchemy.engine.base.Engine select q.id, q.name from Node as n
join Query as q on q.id = n.query
where n.id is ?;

2018-01-27 19:24:54,246 INFO sqlalchemy.engine.base.Engine (2,)
--------------------------------------------------------------------------------
INFO in database [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/database.py:53]:
queries file: 'select_pagenames.sql' not available. Checking file system...
--------------------------------------------------------------------------------
2018-01-27 19:24:54,248 INFO sqlalchemy.engine.base.Engine 
          select 'yup' as test where ? in ('apple', 'pear', 'grapes');
          
2018-01-27 19:24:54,248 INFO sqlalchemy.engine.base.Engine (u'cucumber',)
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:74]:
result query: [u'test']
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:118]:
results: [([], [u'test'])]
--------------------------------------------------------------------------------
2018-01-27 19:24:54,250 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:54,250 INFO sqlalchemy.engine.base.Engine (2,)
2018-01-27 19:24:54,252 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:54,252 INFO sqlalchemy.engine.base.Engine (1,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: {u'pagenames': []}
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
DEBUG in tests [src/chill/tests.py:327]:
test: {
  "pagenames": []
}
--------------------------------------------------------------------------------
2018-01-27 19:24:54,256 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:54,256 INFO sqlalchemy.engine.base.Engine (u'/page/pear/', 'GET')
2018-01-27 19:24:54,258 INFO sqlalchemy.engine.base.Engine select path as rule, weight, node_id from Route where rule like '%<%>%'
order by weight desc;

2018-01-27 19:24:54,258 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,261 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:54,261 INFO sqlalchemy.engine.base.Engine ('/page/<pagename>/', 'GET')
2018-01-27 19:24:54,263 INFO sqlalchemy.engine.base.Engine select q.id, q.name from Node as n
join Query as q on q.id = n.query
where n.id is ?;

2018-01-27 19:24:54,263 INFO sqlalchemy.engine.base.Engine (1,)
2018-01-27 19:24:54,265 INFO sqlalchemy.engine.base.Engine select ln.id as node_id, ln.name, ln.value from Node as n
join Node_Node as nn on (n.id = nn.node_id)
join Node as ln on (nn.target_node_id = ln.id)
where n.id = ?;

2018-01-27 19:24:54,265 INFO sqlalchemy.engine.base.Engine (1,)
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:74]:
result query: [u'node_id', u'name', u'value']
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:118]:
results: [([(2, u'pagenames', None)], [u'node_id', u'name', u'value'])]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:126]:
sub: (2, u'pagenames', None)
--------------------------------------------------------------------------------
2018-01-27 19:24:54,267 INFO sqlalchemy.engine.base.Engine select q.id, q.name from Node as n
join Query as q on q.id = n.query
where n.id is ?;

2018-01-27 19:24:54,268 INFO sqlalchemy.engine.base.Engine (2,)
--------------------------------------------------------------------------------
INFO in database [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/database.py:53]:
queries file: 'select_pagenames.sql' not available. Checking file system...
--------------------------------------------------------------------------------
2018-01-27 19:24:54,270 INFO sqlalchemy.engine.base.Engine 
          select 'yup' as test where ? in ('apple', 'pear', 'grapes');
          
2018-01-27 19:24:54,270 INFO sqlalchemy.engine.base.Engine (u'pear',)
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:74]:
result query: [u'test']
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:118]:
results: [([(u'yup',)], [u'test'])]
--------------------------------------------------------------------------------
2018-01-27 19:24:54,272 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:54,272 INFO sqlalchemy.engine.base.Engine (2,)
2018-01-27 19:24:54,274 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:54,274 INFO sqlalchemy.engine.base.Engine (1,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: {u'pagenames': (u'yup',)}
--------------------------------------------------------------------------------
E2018-01-27 19:24:54,283 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,284 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,284 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,284 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,286 INFO sqlalchemy.engine.base.Engine create table Chill (
    version integer
);

2018-01-27 19:24:54,286 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,290 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,291 INFO sqlalchemy.engine.base.Engine create table Query (
    id integer primary key,
    name varchar(255) not null
);

2018-01-27 19:24:54,291 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,295 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,296 INFO sqlalchemy.engine.base.Engine create table Template (
    id integer primary key,
    name varchar(255) unique not null
);

2018-01-27 19:24:54,296 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,302 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,303 INFO sqlalchemy.engine.base.Engine create table Node (
    id integer primary key,
    name varchar(255),
    value text,
    template integer,
    query integer,
    foreign key ( template ) references Template ( id ) on delete set null,
    foreign key ( query ) references Query ( id ) on delete set null
    );

2018-01-27 19:24:54,303 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,311 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,313 INFO sqlalchemy.engine.base.Engine create table Node_Node (
    node_id integer,
    target_node_id integer,
    foreign key ( node_id ) references Node ( id ) on delete cascade,
    foreign key ( target_node_id ) references Node ( id ) on delete cascade
);

2018-01-27 19:24:54,313 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,319 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,321 INFO sqlalchemy.engine.base.Engine create table Route (
    id integer primary key,
    path text not null,
    node_id integer,
    weight integer default 0,
    method varchar(10) default 'GET',
    foreign key ( node_id ) references Node ( id ) on delete set null
);

2018-01-27 19:24:54,321 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,327 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,328 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,328 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,329 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,329 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,330 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:54,330 INFO sqlalchemy.engine.base.Engine ('page', None)
2018-01-27 19:24:54,330 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,340 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,340 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,340 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,341 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,343 INFO sqlalchemy.engine.base.Engine insert into Route (path, node_id, weight, method)
  values (?, ?, ?, ?);

2018-01-27 19:24:54,343 INFO sqlalchemy.engine.base.Engine ('/page/', 1, None, 'GET')
2018-01-27 19:24:54,343 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,349 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,350 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,350 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,350 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,352 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:54,352 INFO sqlalchemy.engine.base.Engine ('llama', None)
2018-01-27 19:24:54,352 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,359 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,359 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,359 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,360 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,362 INFO sqlalchemy.engine.base.Engine select * from Query where name is ?;

2018-01-27 19:24:54,362 INFO sqlalchemy.engine.base.Engine ('select_link_node_from_node.sql',)
2018-01-27 19:24:54,365 INFO sqlalchemy.engine.base.Engine insert into Query (name) values (?);

2018-01-27 19:24:54,365 INFO sqlalchemy.engine.base.Engine ('select_link_node_from_node.sql',)
2018-01-27 19:24:54,365 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,370 INFO sqlalchemy.engine.base.Engine update Node set query = ? where id is ?;

2018-01-27 19:24:54,370 INFO sqlalchemy.engine.base.Engine (1, 1)
2018-01-27 19:24:54,371 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,377 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,378 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,378 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,378 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,379 INFO sqlalchemy.engine.base.Engine insert or replace into Node_Node (node_id, target_node_id) values (?, ?);

2018-01-27 19:24:54,379 INFO sqlalchemy.engine.base.Engine (1, 2)
2018-01-27 19:24:54,380 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,385 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,385 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,385 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,385 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,387 INFO sqlalchemy.engine.base.Engine select * from Query where name is ?;

2018-01-27 19:24:54,387 INFO sqlalchemy.engine.base.Engine ('select_llama.sql',)
2018-01-27 19:24:54,390 INFO sqlalchemy.engine.base.Engine insert into Query (name) values (?);

2018-01-27 19:24:54,390 INFO sqlalchemy.engine.base.Engine ('select_llama.sql',)
2018-01-27 19:24:54,390 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,395 INFO sqlalchemy.engine.base.Engine update Node set query = ? where id is ?;

2018-01-27 19:24:54,396 INFO sqlalchemy.engine.base.Engine (2, 2)
2018-01-27 19:24:54,396 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,402 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,402 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,402 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,402 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,404 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:54,404 INFO sqlalchemy.engine.base.Engine (u'/page/', 'GET')
2018-01-27 19:24:54,407 INFO sqlalchemy.engine.base.Engine select q.id, q.name from Node as n
join Query as q on q.id = n.query
where n.id is ?;

2018-01-27 19:24:54,407 INFO sqlalchemy.engine.base.Engine (1,)
2018-01-27 19:24:54,409 INFO sqlalchemy.engine.base.Engine select ln.id as node_id, ln.name, ln.value from Node as n
join Node_Node as nn on (n.id = nn.node_id)
join Node as ln on (nn.target_node_id = ln.id)
where n.id = ?;

2018-01-27 19:24:54,409 INFO sqlalchemy.engine.base.Engine (1,)
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:74]:
result query: [u'node_id', u'name', u'value']
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:118]:
results: [([(2, u'llama', None)], [u'node_id', u'name', u'value'])]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:126]:
sub: (2, u'llama', None)
--------------------------------------------------------------------------------
2018-01-27 19:24:54,412 INFO sqlalchemy.engine.base.Engine select q.id, q.name from Node as n
join Query as q on q.id = n.query
where n.id is ?;

2018-01-27 19:24:54,412 INFO sqlalchemy.engine.base.Engine (2,)
--------------------------------------------------------------------------------
INFO in database [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/database.py:53]:
queries file: 'select_llama.sql' not available. Checking file system...
--------------------------------------------------------------------------------
2018-01-27 19:24:54,414 INFO sqlalchemy.engine.base.Engine 
          select ? as llama;
          
2018-01-27 19:24:54,414 INFO sqlalchemy.engine.base.Engine (u'chuck',)
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:74]:
result query: [u'llama']
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:118]:
results: [([(u'chuck',)], [u'llama'])]
--------------------------------------------------------------------------------
2018-01-27 19:24:54,416 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:54,416 INFO sqlalchemy.engine.base.Engine (2,)
2018-01-27 19:24:54,418 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:54,419 INFO sqlalchemy.engine.base.Engine (1,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: {u'llama': (u'chuck',)}
--------------------------------------------------------------------------------
E2018-01-27 19:24:54,428 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,428 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,428 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,428 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,430 INFO sqlalchemy.engine.base.Engine create table Chill (
    version integer
);

2018-01-27 19:24:54,430 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,434 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,435 INFO sqlalchemy.engine.base.Engine create table Query (
    id integer primary key,
    name varchar(255) not null
);

2018-01-27 19:24:54,436 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,439 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,440 INFO sqlalchemy.engine.base.Engine create table Template (
    id integer primary key,
    name varchar(255) unique not null
);

2018-01-27 19:24:54,440 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,444 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,445 INFO sqlalchemy.engine.base.Engine create table Node (
    id integer primary key,
    name varchar(255),
    value text,
    template integer,
    query integer,
    foreign key ( template ) references Template ( id ) on delete set null,
    foreign key ( query ) references Query ( id ) on delete set null
    );

2018-01-27 19:24:54,445 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,449 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,452 INFO sqlalchemy.engine.base.Engine create table Node_Node (
    node_id integer,
    target_node_id integer,
    foreign key ( node_id ) references Node ( id ) on delete cascade,
    foreign key ( target_node_id ) references Node ( id ) on delete cascade
);

2018-01-27 19:24:54,452 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,456 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,458 INFO sqlalchemy.engine.base.Engine create table Route (
    id integer primary key,
    path text not null,
    node_id integer,
    weight integer default 0,
    method varchar(10) default 'GET',
    foreign key ( node_id ) references Node ( id ) on delete set null
);

2018-01-27 19:24:54,458 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,461 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,463 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,464 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,464 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,464 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,468 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:54,468 INFO sqlalchemy.engine.base.Engine ('page', None)
2018-01-27 19:24:54,469 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,477 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,477 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,478 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,478 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,479 INFO sqlalchemy.engine.base.Engine insert into Route (path, node_id, weight, method)
  values (?, ?, ?, ?);

2018-01-27 19:24:54,479 INFO sqlalchemy.engine.base.Engine ('/page/', 1, None, 'GET')
2018-01-27 19:24:54,479 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,486 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,486 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,487 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,487 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,488 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:54,488 INFO sqlalchemy.engine.base.Engine ('llama', None)
2018-01-27 19:24:54,488 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,494 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,494 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,494 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,494 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,497 INFO sqlalchemy.engine.base.Engine select * from Query where name is ?;

2018-01-27 19:24:54,497 INFO sqlalchemy.engine.base.Engine ('select_link_node_from_node.sql',)
2018-01-27 19:24:54,500 INFO sqlalchemy.engine.base.Engine insert into Query (name) values (?);

2018-01-27 19:24:54,500 INFO sqlalchemy.engine.base.Engine ('select_link_node_from_node.sql',)
2018-01-27 19:24:54,500 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,507 INFO sqlalchemy.engine.base.Engine update Node set query = ? where id is ?;

2018-01-27 19:24:54,507 INFO sqlalchemy.engine.base.Engine (1, 1)
2018-01-27 19:24:54,508 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,515 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,515 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,515 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,515 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,518 INFO sqlalchemy.engine.base.Engine insert or replace into Node_Node (node_id, target_node_id) values (?, ?);

2018-01-27 19:24:54,518 INFO sqlalchemy.engine.base.Engine (1, 2)
2018-01-27 19:24:54,519 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,524 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,524 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,524 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,525 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,528 INFO sqlalchemy.engine.base.Engine select * from Query where name is ?;

2018-01-27 19:24:54,528 INFO sqlalchemy.engine.base.Engine ('select_llama.sql',)
2018-01-27 19:24:54,530 INFO sqlalchemy.engine.base.Engine insert into Query (name) values (?);

2018-01-27 19:24:54,531 INFO sqlalchemy.engine.base.Engine ('select_llama.sql',)
2018-01-27 19:24:54,531 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,536 INFO sqlalchemy.engine.base.Engine update Node set query = ? where id is ?;

2018-01-27 19:24:54,537 INFO sqlalchemy.engine.base.Engine (2, 2)
2018-01-27 19:24:54,537 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,544 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,544 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,544 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,544 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,545 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:54,545 INFO sqlalchemy.engine.base.Engine (u'/page/', 'GET')
2018-01-27 19:24:54,547 INFO sqlalchemy.engine.base.Engine select q.id, q.name from Node as n
join Query as q on q.id = n.query
where n.id is ?;

2018-01-27 19:24:54,547 INFO sqlalchemy.engine.base.Engine (1,)
2018-01-27 19:24:54,549 INFO sqlalchemy.engine.base.Engine select ln.id as node_id, ln.name, ln.value from Node as n
join Node_Node as nn on (n.id = nn.node_id)
join Node as ln on (nn.target_node_id = ln.id)
where n.id = ?;

2018-01-27 19:24:54,550 INFO sqlalchemy.engine.base.Engine (1,)
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:74]:
result query: [u'node_id', u'name', u'value']
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:118]:
results: [([(2, u'llama', None)], [u'node_id', u'name', u'value'])]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:126]:
sub: (2, u'llama', None)
--------------------------------------------------------------------------------
2018-01-27 19:24:54,552 INFO sqlalchemy.engine.base.Engine select q.id, q.name from Node as n
join Query as q on q.id = n.query
where n.id is ?;

2018-01-27 19:24:54,553 INFO sqlalchemy.engine.base.Engine (2,)
--------------------------------------------------------------------------------
INFO in database [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/database.py:53]:
queries file: 'select_llama.sql' not available. Checking file system...
--------------------------------------------------------------------------------
2018-01-27 19:24:54,555 INFO sqlalchemy.engine.base.Engine 
          select ? as llama;
          
2018-01-27 19:24:54,555 INFO sqlalchemy.engine.base.Engine (u'chuck',)
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:74]:
result query: [u'llama']
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:118]:
results: [([(u'chuck',)], [u'llama'])]
--------------------------------------------------------------------------------
2018-01-27 19:24:54,558 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:54,558 INFO sqlalchemy.engine.base.Engine (2,)
2018-01-27 19:24:54,560 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:54,560 INFO sqlalchemy.engine.base.Engine (1,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: {u'llama': (u'chuck',)}
--------------------------------------------------------------------------------
E2018-01-27 19:24:54,567 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,567 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,567 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,567 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,569 INFO sqlalchemy.engine.base.Engine create table Chill (
    version integer
);

2018-01-27 19:24:54,569 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,572 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,574 INFO sqlalchemy.engine.base.Engine create table Query (
    id integer primary key,
    name varchar(255) not null
);

2018-01-27 19:24:54,574 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,577 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,580 INFO sqlalchemy.engine.base.Engine create table Template (
    id integer primary key,
    name varchar(255) unique not null
);

2018-01-27 19:24:54,580 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,583 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,585 INFO sqlalchemy.engine.base.Engine create table Node (
    id integer primary key,
    name varchar(255),
    value text,
    template integer,
    query integer,
    foreign key ( template ) references Template ( id ) on delete set null,
    foreign key ( query ) references Query ( id ) on delete set null
    );

2018-01-27 19:24:54,585 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,588 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,590 INFO sqlalchemy.engine.base.Engine create table Node_Node (
    node_id integer,
    target_node_id integer,
    foreign key ( node_id ) references Node ( id ) on delete cascade,
    foreign key ( target_node_id ) references Node ( id ) on delete cascade
);

2018-01-27 19:24:54,591 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,594 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,597 INFO sqlalchemy.engine.base.Engine create table Route (
    id integer primary key,
    path text not null,
    node_id integer,
    weight integer default 0,
    method varchar(10) default 'GET',
    foreign key ( node_id ) references Node ( id ) on delete set null
);

2018-01-27 19:24:54,597 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,602 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,603 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,603 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,604 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,604 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,605 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:54,605 INFO sqlalchemy.engine.base.Engine ('simple', 'test')
2018-01-27 19:24:54,606 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,610 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,610 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,610 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,610 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,612 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id as node_id from Node as n
where n.id = ?;

2018-01-27 19:24:54,612 INFO sqlalchemy.engine.base.Engine (1,)
.2018-01-27 19:24:54,618 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,618 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,618 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,618 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,620 INFO sqlalchemy.engine.base.Engine create table Chill (
    version integer
);

2018-01-27 19:24:54,620 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,623 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,626 INFO sqlalchemy.engine.base.Engine create table Query (
    id integer primary key,
    name varchar(255) not null
);

2018-01-27 19:24:54,626 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,629 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,630 INFO sqlalchemy.engine.base.Engine create table Template (
    id integer primary key,
    name varchar(255) unique not null
);

2018-01-27 19:24:54,630 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,633 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,634 INFO sqlalchemy.engine.base.Engine create table Node (
    id integer primary key,
    name varchar(255),
    value text,
    template integer,
    query integer,
    foreign key ( template ) references Template ( id ) on delete set null,
    foreign key ( query ) references Query ( id ) on delete set null
    );

2018-01-27 19:24:54,635 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,638 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,640 INFO sqlalchemy.engine.base.Engine create table Node_Node (
    node_id integer,
    target_node_id integer,
    foreign key ( node_id ) references Node ( id ) on delete cascade,
    foreign key ( target_node_id ) references Node ( id ) on delete cascade
);

2018-01-27 19:24:54,640 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,643 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,646 INFO sqlalchemy.engine.base.Engine create table Route (
    id integer primary key,
    path text not null,
    node_id integer,
    weight integer default 0,
    method varchar(10) default 'GET',
    foreign key ( node_id ) references Node ( id ) on delete set null
);

2018-01-27 19:24:54,646 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,649 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,651 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,651 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,651 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,651 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,653 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:54,653 INFO sqlalchemy.engine.base.Engine ('a', None)
2018-01-27 19:24:54,653 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,658 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,658 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,658 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,659 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,661 INFO sqlalchemy.engine.base.Engine insert or ignore into Template (name) values (?);

2018-01-27 19:24:54,661 INFO sqlalchemy.engine.base.Engine ('template_a.html',)
2018-01-27 19:24:54,662 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,667 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Template as t where t.name is ?;

2018-01-27 19:24:54,667 INFO sqlalchemy.engine.base.Engine ('template_a.html',)
2018-01-27 19:24:54,670 INFO sqlalchemy.engine.base.Engine update Node set template = ? where id is ?;

2018-01-27 19:24:54,671 INFO sqlalchemy.engine.base.Engine (1, 1)
2018-01-27 19:24:54,671 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,676 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,676 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,677 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,677 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,680 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:54,680 INFO sqlalchemy.engine.base.Engine ('aa', None)
2018-01-27 19:24:54,680 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,685 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,686 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,686 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,686 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,689 INFO sqlalchemy.engine.base.Engine insert or ignore into Template (name) values (?);

2018-01-27 19:24:54,689 INFO sqlalchemy.engine.base.Engine ('template_a.html',)
2018-01-27 19:24:54,690 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,693 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Template as t where t.name is ?;

2018-01-27 19:24:54,693 INFO sqlalchemy.engine.base.Engine ('template_a.html',)
2018-01-27 19:24:54,696 INFO sqlalchemy.engine.base.Engine update Node set template = ? where id is ?;

2018-01-27 19:24:54,696 INFO sqlalchemy.engine.base.Engine (1, 2)
2018-01-27 19:24:54,696 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,702 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,702 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,702 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,702 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,705 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:54,705 INFO sqlalchemy.engine.base.Engine ('b', None)
2018-01-27 19:24:54,706 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,711 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,711 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,712 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,712 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,715 INFO sqlalchemy.engine.base.Engine insert or ignore into Template (name) values (?);

2018-01-27 19:24:54,715 INFO sqlalchemy.engine.base.Engine ('template_b.html',)
2018-01-27 19:24:54,715 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,720 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Template as t where t.name is ?;

2018-01-27 19:24:54,720 INFO sqlalchemy.engine.base.Engine ('template_b.html',)
2018-01-27 19:24:54,721 INFO sqlalchemy.engine.base.Engine update Node set template = ? where id is ?;

2018-01-27 19:24:54,721 INFO sqlalchemy.engine.base.Engine (2, 3)
2018-01-27 19:24:54,722 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,727 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,727 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,727 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,728 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,730 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:54,730 INFO sqlalchemy.engine.base.Engine ('c', None)
2018-01-27 19:24:54,731 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,736 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,736 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,737 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,737 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,740 INFO sqlalchemy.engine.base.Engine insert or ignore into Template (name) values (?);

2018-01-27 19:24:54,740 INFO sqlalchemy.engine.base.Engine ('template_c.html',)
2018-01-27 19:24:54,741 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,745 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Template as t where t.name is ?;

2018-01-27 19:24:54,745 INFO sqlalchemy.engine.base.Engine ('template_c.html',)
2018-01-27 19:24:54,746 INFO sqlalchemy.engine.base.Engine update Node set template = ? where id is ?;

2018-01-27 19:24:54,747 INFO sqlalchemy.engine.base.Engine (3, 4)
2018-01-27 19:24:54,747 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,752 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,752 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,752 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,752 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,753 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:54,753 INFO sqlalchemy.engine.base.Engine (1,)
2018-01-27 19:24:54,755 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:54,755 INFO sqlalchemy.engine.base.Engine (2,)
2018-01-27 19:24:54,756 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,756 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,757 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,757 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,758 INFO sqlalchemy.engine.base.Engine insert or ignore into Template (name) values (?);

2018-01-27 19:24:54,758 INFO sqlalchemy.engine.base.Engine ('template_over_a.html',)
2018-01-27 19:24:54,759 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,765 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Template as t where t.name is ?;

2018-01-27 19:24:54,765 INFO sqlalchemy.engine.base.Engine ('template_over_a.html',)
2018-01-27 19:24:54,768 INFO sqlalchemy.engine.base.Engine update Node set template = ? where id is ?;

2018-01-27 19:24:54,768 INFO sqlalchemy.engine.base.Engine (4, 1)
2018-01-27 19:24:54,769 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,775 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:54,775 INFO sqlalchemy.engine.base.Engine (1,)
2018-01-27 19:24:54,778 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:54,778 INFO sqlalchemy.engine.base.Engine (2,)
.2018-01-27 19:24:54,788 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,788 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,789 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,789 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,792 INFO sqlalchemy.engine.base.Engine create table Chill (
    version integer
);

2018-01-27 19:24:54,792 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,795 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,798 INFO sqlalchemy.engine.base.Engine create table Query (
    id integer primary key,
    name varchar(255) not null
);

2018-01-27 19:24:54,798 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,801 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,803 INFO sqlalchemy.engine.base.Engine create table Template (
    id integer primary key,
    name varchar(255) unique not null
);

2018-01-27 19:24:54,803 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,806 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,809 INFO sqlalchemy.engine.base.Engine create table Node (
    id integer primary key,
    name varchar(255),
    value text,
    template integer,
    query integer,
    foreign key ( template ) references Template ( id ) on delete set null,
    foreign key ( query ) references Query ( id ) on delete set null
    );

2018-01-27 19:24:54,809 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,812 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,814 INFO sqlalchemy.engine.base.Engine create table Node_Node (
    node_id integer,
    target_node_id integer,
    foreign key ( node_id ) references Node ( id ) on delete cascade,
    foreign key ( target_node_id ) references Node ( id ) on delete cascade
);

2018-01-27 19:24:54,814 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,817 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,818 INFO sqlalchemy.engine.base.Engine create table Route (
    id integer primary key,
    path text not null,
    node_id integer,
    weight integer default 0,
    method varchar(10) default 'GET',
    foreign key ( node_id ) references Node ( id ) on delete set null
);

2018-01-27 19:24:54,818 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,822 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,824 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,824 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,824 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,825 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,827 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:54,828 INFO sqlalchemy.engine.base.Engine ('a', None)
2018-01-27 19:24:54,828 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,833 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,833 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,834 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,834 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,837 INFO sqlalchemy.engine.base.Engine insert into Route (path, node_id, weight, method)
  values (?, ?, ?, ?);

2018-01-27 19:24:54,837 INFO sqlalchemy.engine.base.Engine ('/', 1, None, 'GET')
2018-01-27 19:24:54,837 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,844 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,844 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,845 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,845 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,848 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:54,848 INFO sqlalchemy.engine.base.Engine ('content', u'\xc0\u0440p\u013a\xe8')
2018-01-27 19:24:54,848 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,856 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,856 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,856 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,856 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,858 INFO sqlalchemy.engine.base.Engine select * from Query where name is ?;

2018-01-27 19:24:54,859 INFO sqlalchemy.engine.base.Engine ('select_link_node_from_node.sql',)
2018-01-27 19:24:54,860 INFO sqlalchemy.engine.base.Engine insert into Query (name) values (?);

2018-01-27 19:24:54,860 INFO sqlalchemy.engine.base.Engine ('select_link_node_from_node.sql',)
2018-01-27 19:24:54,861 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,865 INFO sqlalchemy.engine.base.Engine update Node set query = ? where id is ?;

2018-01-27 19:24:54,865 INFO sqlalchemy.engine.base.Engine (1, 1)
2018-01-27 19:24:54,865 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,870 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,870 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,870 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,870 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,872 INFO sqlalchemy.engine.base.Engine insert or replace into Node_Node (node_id, target_node_id) values (?, ?);

2018-01-27 19:24:54,872 INFO sqlalchemy.engine.base.Engine (1, 2)
2018-01-27 19:24:54,872 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,878 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,878 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,879 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,879 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,881 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:54,882 INFO sqlalchemy.engine.base.Engine ('/', 'GET')
2018-01-27 19:24:54,885 INFO sqlalchemy.engine.base.Engine select q.id, q.name from Node as n
join Query as q on q.id = n.query
where n.id is ?;

2018-01-27 19:24:54,885 INFO sqlalchemy.engine.base.Engine (1,)
2018-01-27 19:24:54,887 INFO sqlalchemy.engine.base.Engine select ln.id as node_id, ln.name, ln.value from Node as n
join Node_Node as nn on (n.id = nn.node_id)
join Node as ln on (nn.target_node_id = ln.id)
where n.id = ?;

2018-01-27 19:24:54,887 INFO sqlalchemy.engine.base.Engine (1,)
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:74]:
result query: [u'node_id', u'name', u'value']
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:118]:
results: [([(2, u'content', u'\xc0\u0440p\u013a\xe8')], [u'node_id', u'name', u'value'])]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:126]:
sub: (2, u'content', u'\xc0\u0440p\u013a\xe8')
--------------------------------------------------------------------------------
2018-01-27 19:24:54,889 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:54,889 INFO sqlalchemy.engine.base.Engine (2,)
2018-01-27 19:24:54,891 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:54,891 INFO sqlalchemy.engine.base.Engine (1,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: {u'content': u'\xc0\u0440p\u013a\xe8'}
--------------------------------------------------------------------------------
.2018-01-27 19:24:54,898 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,898 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,898 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,898 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,900 INFO sqlalchemy.engine.base.Engine create table Chill (
    version integer
);

2018-01-27 19:24:54,900 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,903 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,906 INFO sqlalchemy.engine.base.Engine create table Query (
    id integer primary key,
    name varchar(255) not null
);

2018-01-27 19:24:54,906 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,909 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,911 INFO sqlalchemy.engine.base.Engine create table Template (
    id integer primary key,
    name varchar(255) unique not null
);

2018-01-27 19:24:54,911 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,914 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,915 INFO sqlalchemy.engine.base.Engine create table Node (
    id integer primary key,
    name varchar(255),
    value text,
    template integer,
    query integer,
    foreign key ( template ) references Template ( id ) on delete set null,
    foreign key ( query ) references Query ( id ) on delete set null
    );

2018-01-27 19:24:54,916 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,919 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,921 INFO sqlalchemy.engine.base.Engine create table Node_Node (
    node_id integer,
    target_node_id integer,
    foreign key ( node_id ) references Node ( id ) on delete cascade,
    foreign key ( target_node_id ) references Node ( id ) on delete cascade
);

2018-01-27 19:24:54,922 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,925 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,926 INFO sqlalchemy.engine.base.Engine create table Route (
    id integer primary key,
    path text not null,
    node_id integer,
    weight integer default 0,
    method varchar(10) default 'GET',
    foreign key ( node_id ) references Node ( id ) on delete set null
);

2018-01-27 19:24:54,926 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,931 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,933 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,933 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,934 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,934 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,937 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:54,937 INFO sqlalchemy.engine.base.Engine ('a', None)
2018-01-27 19:24:54,938 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,942 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,942 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,943 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,943 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,944 INFO sqlalchemy.engine.base.Engine insert into Route (path, node_id, weight, method)
  values (?, ?, ?, ?);

2018-01-27 19:24:54,944 INFO sqlalchemy.engine.base.Engine ('/', 1, None, 'GET')
2018-01-27 19:24:54,945 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,954 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,954 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,955 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,955 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,956 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:54,957 INFO sqlalchemy.engine.base.Engine ('content', 'apple')
2018-01-27 19:24:54,957 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,961 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,961 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,961 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,961 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,963 INFO sqlalchemy.engine.base.Engine select * from Query where name is ?;

2018-01-27 19:24:54,963 INFO sqlalchemy.engine.base.Engine ('select_link_node_from_node.sql',)
2018-01-27 19:24:54,965 INFO sqlalchemy.engine.base.Engine insert into Query (name) values (?);

2018-01-27 19:24:54,965 INFO sqlalchemy.engine.base.Engine ('select_link_node_from_node.sql',)
2018-01-27 19:24:54,965 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,969 INFO sqlalchemy.engine.base.Engine update Node set query = ? where id is ?;

2018-01-27 19:24:54,970 INFO sqlalchemy.engine.base.Engine (1, 1)
2018-01-27 19:24:54,970 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,974 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,974 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,974 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,974 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,976 INFO sqlalchemy.engine.base.Engine insert or replace into Node_Node (node_id, target_node_id) values (?, ?);

2018-01-27 19:24:54,976 INFO sqlalchemy.engine.base.Engine (1, 2)
2018-01-27 19:24:54,976 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:54,981 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,981 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,981 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:54,981 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:54,983 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:54,983 INFO sqlalchemy.engine.base.Engine ('/', 'GET')
2018-01-27 19:24:54,985 INFO sqlalchemy.engine.base.Engine select q.id, q.name from Node as n
join Query as q on q.id = n.query
where n.id is ?;

2018-01-27 19:24:54,985 INFO sqlalchemy.engine.base.Engine (1,)
2018-01-27 19:24:54,987 INFO sqlalchemy.engine.base.Engine select ln.id as node_id, ln.name, ln.value from Node as n
join Node_Node as nn on (n.id = nn.node_id)
join Node as ln on (nn.target_node_id = ln.id)
where n.id = ?;

2018-01-27 19:24:54,987 INFO sqlalchemy.engine.base.Engine (1,)
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:74]:
result query: [u'node_id', u'name', u'value']
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:118]:
results: [([(2, u'content', u'apple')], [u'node_id', u'name', u'value'])]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:126]:
sub: (2, u'content', u'apple')
--------------------------------------------------------------------------------
2018-01-27 19:24:54,990 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:54,990 INFO sqlalchemy.engine.base.Engine (2,)
2018-01-27 19:24:54,993 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:54,993 INFO sqlalchemy.engine.base.Engine (1,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: {u'content': u'apple'}
--------------------------------------------------------------------------------
.2018-01-27 19:24:55,001 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,001 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,001 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,001 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,002 INFO sqlalchemy.engine.base.Engine create table Chill (
    version integer
);

2018-01-27 19:24:55,003 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,006 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,009 INFO sqlalchemy.engine.base.Engine create table Query (
    id integer primary key,
    name varchar(255) not null
);

2018-01-27 19:24:55,009 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,012 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,015 INFO sqlalchemy.engine.base.Engine create table Template (
    id integer primary key,
    name varchar(255) unique not null
);

2018-01-27 19:24:55,015 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,018 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,020 INFO sqlalchemy.engine.base.Engine create table Node (
    id integer primary key,
    name varchar(255),
    value text,
    template integer,
    query integer,
    foreign key ( template ) references Template ( id ) on delete set null,
    foreign key ( query ) references Query ( id ) on delete set null
    );

2018-01-27 19:24:55,020 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,023 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,024 INFO sqlalchemy.engine.base.Engine create table Node_Node (
    node_id integer,
    target_node_id integer,
    foreign key ( node_id ) references Node ( id ) on delete cascade,
    foreign key ( target_node_id ) references Node ( id ) on delete cascade
);

2018-01-27 19:24:55,024 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,027 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,029 INFO sqlalchemy.engine.base.Engine create table Route (
    id integer primary key,
    path text not null,
    node_id integer,
    weight integer default 0,
    method varchar(10) default 'GET',
    foreign key ( node_id ) references Node ( id ) on delete set null
);

2018-01-27 19:24:55,029 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,032 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,034 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,034 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,035 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,035 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,038 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:55,038 INFO sqlalchemy.engine.base.Engine ('page', None)
2018-01-27 19:24:55,038 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,042 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,042 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,043 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,043 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,044 INFO sqlalchemy.engine.base.Engine insert into Route (path, node_id, weight, method)
  values (?, ?, ?, ?);

2018-01-27 19:24:55,044 INFO sqlalchemy.engine.base.Engine ('/', 1, None, 'GET')
2018-01-27 19:24:55,045 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,050 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,050 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,051 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,051 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,054 INFO sqlalchemy.engine.base.Engine insert or ignore into Template (name) values (?);

2018-01-27 19:24:55,054 INFO sqlalchemy.engine.base.Engine ('simple.html',)
2018-01-27 19:24:55,055 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,061 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Template as t where t.name is ?;

2018-01-27 19:24:55,061 INFO sqlalchemy.engine.base.Engine ('simple.html',)
2018-01-27 19:24:55,065 INFO sqlalchemy.engine.base.Engine update Node set template = ? where id is ?;

2018-01-27 19:24:55,065 INFO sqlalchemy.engine.base.Engine (1, 1)
2018-01-27 19:24:55,066 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,071 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,071 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,071 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,072 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,075 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:55,075 INFO sqlalchemy.engine.base.Engine ('acat', 'a page for cat')
2018-01-27 19:24:55,076 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,081 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,081 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,081 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,081 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,084 INFO sqlalchemy.engine.base.Engine insert into Route (path, node_id, weight, method)
  values (?, ?, ?, ?);

2018-01-27 19:24:55,085 INFO sqlalchemy.engine.base.Engine ('/cat/', 2, None, 'GET')
2018-01-27 19:24:55,085 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,091 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,091 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,092 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,092 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,095 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:55,095 INFO sqlalchemy.engine.base.Engine ('cat', "something link for cat page that does exist = '[chill page_uri cat ]' link for dog that does not exist = '[chill page_uri dog]'")
2018-01-27 19:24:55,096 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,101 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,101 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,102 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,102 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,106 INFO sqlalchemy.engine.base.Engine select * from Query where name is ?;

2018-01-27 19:24:55,106 INFO sqlalchemy.engine.base.Engine ('select_link_node_from_node.sql',)
2018-01-27 19:24:55,110 INFO sqlalchemy.engine.base.Engine insert into Query (name) values (?);

2018-01-27 19:24:55,110 INFO sqlalchemy.engine.base.Engine ('select_link_node_from_node.sql',)
2018-01-27 19:24:55,111 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,119 INFO sqlalchemy.engine.base.Engine update Node set query = ? where id is ?;

2018-01-27 19:24:55,119 INFO sqlalchemy.engine.base.Engine (1, 1)
2018-01-27 19:24:55,120 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,125 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,125 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,126 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,126 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,129 INFO sqlalchemy.engine.base.Engine insert or replace into Node_Node (node_id, target_node_id) values (?, ?);

2018-01-27 19:24:55,129 INFO sqlalchemy.engine.base.Engine (1, 3)
2018-01-27 19:24:55,130 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,137 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,137 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,137 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,137 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,141 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:55,141 INFO sqlalchemy.engine.base.Engine ('/', 'GET')
2018-01-27 19:24:55,143 INFO sqlalchemy.engine.base.Engine select q.id, q.name from Node as n
join Query as q on q.id = n.query
where n.id is ?;

2018-01-27 19:24:55,144 INFO sqlalchemy.engine.base.Engine (1,)
2018-01-27 19:24:55,146 INFO sqlalchemy.engine.base.Engine select ln.id as node_id, ln.name, ln.value from Node as n
join Node_Node as nn on (n.id = nn.node_id)
join Node as ln on (nn.target_node_id = ln.id)
where n.id = ?;

2018-01-27 19:24:55,146 INFO sqlalchemy.engine.base.Engine (1,)
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:74]:
result query: [u'node_id', u'name', u'value']
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:118]:
results: [([(3, u'cat', u"something link for cat page that does exist = '[chill page_uri cat ]' link for dog that does not exist = '[chill page_uri dog]'")], [u'node_id', u'name', u'value'])]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:126]:
sub: (3, u'cat', u"something link for cat page that does exist = '[chill page_uri cat ]' link for dog that does not exist = '[chill page_uri dog]'")
--------------------------------------------------------------------------------
2018-01-27 19:24:55,149 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:55,149 INFO sqlalchemy.engine.base.Engine (3,)
2018-01-27 19:24:55,151 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:55,151 INFO sqlalchemy.engine.base.Engine (1,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: 
          <!doctype html>
          <html><head><title>test</title></head>
          <body>
          <div>
          something link for cat page that does exist = '/cat/' link for dog that does not exist = '/dog/'
          </div>
          </body>
          </html>
          
--------------------------------------------------------------------------------
2018-01-27 19:24:55,158 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:55,158 INFO sqlalchemy.engine.base.Engine (u'/cat/', 'GET')
2018-01-27 19:24:55,161 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:55,161 INFO sqlalchemy.engine.base.Engine (2,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: a page for cat
--------------------------------------------------------------------------------
2018-01-27 19:24:55,165 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:55,165 INFO sqlalchemy.engine.base.Engine (u'/dog/', 'GET')
2018-01-27 19:24:55,167 INFO sqlalchemy.engine.base.Engine select path as rule, weight, node_id from Route where rule like '%<%>%'
order by weight desc;

2018-01-27 19:24:55,167 INFO sqlalchemy.engine.base.Engine ()
.2018-01-27 19:24:55,189 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,189 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,189 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,190 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,192 INFO sqlalchemy.engine.base.Engine create table Chill (
    version integer
);

2018-01-27 19:24:55,192 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,198 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,200 INFO sqlalchemy.engine.base.Engine create table Query (
    id integer primary key,
    name varchar(255) not null
);

2018-01-27 19:24:55,200 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,203 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,205 INFO sqlalchemy.engine.base.Engine create table Template (
    id integer primary key,
    name varchar(255) unique not null
);

2018-01-27 19:24:55,205 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,212 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,215 INFO sqlalchemy.engine.base.Engine create table Node (
    id integer primary key,
    name varchar(255),
    value text,
    template integer,
    query integer,
    foreign key ( template ) references Template ( id ) on delete set null,
    foreign key ( query ) references Query ( id ) on delete set null
    );

2018-01-27 19:24:55,215 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,219 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,222 INFO sqlalchemy.engine.base.Engine create table Node_Node (
    node_id integer,
    target_node_id integer,
    foreign key ( node_id ) references Node ( id ) on delete cascade,
    foreign key ( target_node_id ) references Node ( id ) on delete cascade
);

2018-01-27 19:24:55,222 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,227 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,229 INFO sqlalchemy.engine.base.Engine create table Route (
    id integer primary key,
    path text not null,
    node_id integer,
    weight integer default 0,
    method varchar(10) default 'GET',
    foreign key ( node_id ) references Node ( id ) on delete set null
);

2018-01-27 19:24:55,229 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,236 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,238 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,238 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,238 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,239 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,241 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:55,241 INFO sqlalchemy.engine.base.Engine ('page', None)
2018-01-27 19:24:55,242 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,248 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,248 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,249 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,249 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,252 INFO sqlalchemy.engine.base.Engine insert into Route (path, node_id, weight, method)
  values (?, ?, ?, ?);

2018-01-27 19:24:55,252 INFO sqlalchemy.engine.base.Engine ('/', 1, None, 'GET')
2018-01-27 19:24:55,252 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,258 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,258 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,259 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,259 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,261 INFO sqlalchemy.engine.base.Engine insert or ignore into Template (name) values (?);

2018-01-27 19:24:55,261 INFO sqlalchemy.engine.base.Engine ('simple.html',)
2018-01-27 19:24:55,261 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,269 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Template as t where t.name is ?;

2018-01-27 19:24:55,269 INFO sqlalchemy.engine.base.Engine ('simple.html',)
2018-01-27 19:24:55,272 INFO sqlalchemy.engine.base.Engine update Node set template = ? where id is ?;

2018-01-27 19:24:55,272 INFO sqlalchemy.engine.base.Engine (1, 1)
2018-01-27 19:24:55,272 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,278 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,279 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,279 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,279 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,282 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:55,282 INFO sqlalchemy.engine.base.Engine ('acat', "<img alt='a picture of a cat'/>")
2018-01-27 19:24:55,283 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,288 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,288 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,289 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,289 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,292 INFO sqlalchemy.engine.base.Engine insert into Route (path, node_id, weight, method)
  values (?, ?, ?, ?);

2018-01-27 19:24:55,292 INFO sqlalchemy.engine.base.Engine ('/cat/picture/', 2, None, 'GET')
2018-01-27 19:24:55,292 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,299 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,299 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,299 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,299 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,302 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:55,302 INFO sqlalchemy.engine.base.Engine ('cat', 'something [chill route /cat/picture/ ] [blah blah[chill route /dog/pic] the end')
2018-01-27 19:24:55,302 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,308 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,308 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,308 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,308 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,311 INFO sqlalchemy.engine.base.Engine select * from Query where name is ?;

2018-01-27 19:24:55,311 INFO sqlalchemy.engine.base.Engine ('select_link_node_from_node.sql',)
2018-01-27 19:24:55,314 INFO sqlalchemy.engine.base.Engine insert into Query (name) values (?);

2018-01-27 19:24:55,314 INFO sqlalchemy.engine.base.Engine ('select_link_node_from_node.sql',)
2018-01-27 19:24:55,314 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,320 INFO sqlalchemy.engine.base.Engine update Node set query = ? where id is ?;

2018-01-27 19:24:55,320 INFO sqlalchemy.engine.base.Engine (1, 1)
2018-01-27 19:24:55,321 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,327 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,327 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,328 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,328 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,331 INFO sqlalchemy.engine.base.Engine insert or replace into Node_Node (node_id, target_node_id) values (?, ?);

2018-01-27 19:24:55,331 INFO sqlalchemy.engine.base.Engine (1, 3)
2018-01-27 19:24:55,331 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,338 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,338 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,339 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,339 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,341 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:55,341 INFO sqlalchemy.engine.base.Engine ('/', 'GET')
2018-01-27 19:24:55,344 INFO sqlalchemy.engine.base.Engine select q.id, q.name from Node as n
join Query as q on q.id = n.query
where n.id is ?;

2018-01-27 19:24:55,344 INFO sqlalchemy.engine.base.Engine (1,)
2018-01-27 19:24:55,347 INFO sqlalchemy.engine.base.Engine select ln.id as node_id, ln.name, ln.value from Node as n
join Node_Node as nn on (n.id = nn.node_id)
join Node as ln on (nn.target_node_id = ln.id)
where n.id = ?;

2018-01-27 19:24:55,347 INFO sqlalchemy.engine.base.Engine (1,)
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:74]:
result query: [u'node_id', u'name', u'value']
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:118]:
results: [([(3, u'cat', u'something [chill route /cat/picture/ ] [blah blah[chill route /dog/pic] the end')], [u'node_id', u'name', u'value'])]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:126]:
sub: (3, u'cat', u'something [chill route /cat/picture/ ] [blah blah[chill route /dog/pic] the end')
--------------------------------------------------------------------------------
2018-01-27 19:24:55,350 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:55,350 INFO sqlalchemy.engine.base.Engine (3,)
2018-01-27 19:24:55,353 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:55,353 INFO sqlalchemy.engine.base.Engine (1,)
2018-01-27 19:24:55,358 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:55,358 INFO sqlalchemy.engine.base.Engine (u'/cat/picture/', 'GET')
2018-01-27 19:24:55,361 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:55,361 INFO sqlalchemy.engine.base.Engine (2,)
2018-01-27 19:24:55,363 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:55,363 INFO sqlalchemy.engine.base.Engine (u'/dog/pic/', 'GET')
2018-01-27 19:24:55,366 INFO sqlalchemy.engine.base.Engine select path as rule, weight, node_id from Route where rule like '%<%>%'
order by weight desc;

2018-01-27 19:24:55,366 INFO sqlalchemy.engine.base.Engine ()
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: 
          <!doctype html>
          <html><head><title>test</title></head>
          <body>
          <div>
          something <img alt='a picture of a cat'/> [blah blah<!-- 404 '/dog/pic' --> the end
          </div>
          </body>
          </html>
          
--------------------------------------------------------------------------------
2018-01-27 19:24:55,371 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:55,371 INFO sqlalchemy.engine.base.Engine (u'/cat/picture/', 'GET')
2018-01-27 19:24:55,374 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:55,374 INFO sqlalchemy.engine.base.Engine (2,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: <img alt='a picture of a cat'/>
--------------------------------------------------------------------------------
.2018-01-27 19:24:55,383 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,383 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,383 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,384 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,386 INFO sqlalchemy.engine.base.Engine create table Chill (
    version integer
);

2018-01-27 19:24:55,386 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,390 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,393 INFO sqlalchemy.engine.base.Engine create table Query (
    id integer primary key,
    name varchar(255) not null
);

2018-01-27 19:24:55,393 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,396 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,399 INFO sqlalchemy.engine.base.Engine create table Template (
    id integer primary key,
    name varchar(255) unique not null
);

2018-01-27 19:24:55,399 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,403 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,404 INFO sqlalchemy.engine.base.Engine create table Node (
    id integer primary key,
    name varchar(255),
    value text,
    template integer,
    query integer,
    foreign key ( template ) references Template ( id ) on delete set null,
    foreign key ( query ) references Query ( id ) on delete set null
    );

2018-01-27 19:24:55,404 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,408 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,410 INFO sqlalchemy.engine.base.Engine create table Node_Node (
    node_id integer,
    target_node_id integer,
    foreign key ( node_id ) references Node ( id ) on delete cascade,
    foreign key ( target_node_id ) references Node ( id ) on delete cascade
);

2018-01-27 19:24:55,410 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,416 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,418 INFO sqlalchemy.engine.base.Engine create table Route (
    id integer primary key,
    path text not null,
    node_id integer,
    weight integer default 0,
    method varchar(10) default 'GET',
    foreign key ( node_id ) references Node ( id ) on delete set null
);

2018-01-27 19:24:55,418 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,427 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,429 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,429 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,429 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,430 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,431 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:55,431 INFO sqlalchemy.engine.base.Engine ('page', None)
2018-01-27 19:24:55,432 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,438 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,438 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,438 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,439 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,441 INFO sqlalchemy.engine.base.Engine insert into Route (path, node_id, weight, method)
  values (?, ?, ?, ?);

2018-01-27 19:24:55,441 INFO sqlalchemy.engine.base.Engine ('/', 1, None, 'GET')
2018-01-27 19:24:55,442 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,449 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,449 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,449 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,449 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,451 INFO sqlalchemy.engine.base.Engine insert or ignore into Template (name) values (?);

2018-01-27 19:24:55,451 INFO sqlalchemy.engine.base.Engine ('simple.html',)
2018-01-27 19:24:55,452 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,456 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Template as t where t.name is ?;

2018-01-27 19:24:55,457 INFO sqlalchemy.engine.base.Engine ('simple.html',)
2018-01-27 19:24:55,459 INFO sqlalchemy.engine.base.Engine update Node set template = ? where id is ?;

2018-01-27 19:24:55,459 INFO sqlalchemy.engine.base.Engine (1, 1)
2018-01-27 19:24:55,460 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,467 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,467 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,467 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,467 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,470 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:55,470 INFO sqlalchemy.engine.base.Engine ('acat', u'\xc0\u0440p\u013a\xe8')
2018-01-27 19:24:55,470 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,475 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,475 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,475 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,475 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,478 INFO sqlalchemy.engine.base.Engine insert into Route (path, node_id, weight, method)
  values (?, ?, ?, ?);

2018-01-27 19:24:55,478 INFO sqlalchemy.engine.base.Engine ('/cat/picture/', 2, None, 'GET')
2018-01-27 19:24:55,479 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,483 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,484 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,484 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,484 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,486 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:55,486 INFO sqlalchemy.engine.base.Engine ('cat', 'something [chill route /cat/picture/ ] [blah blah[chill route /dog/pic] the end')
2018-01-27 19:24:55,487 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,493 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,493 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,493 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,494 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,496 INFO sqlalchemy.engine.base.Engine select * from Query where name is ?;

2018-01-27 19:24:55,496 INFO sqlalchemy.engine.base.Engine ('select_link_node_from_node.sql',)
2018-01-27 19:24:55,499 INFO sqlalchemy.engine.base.Engine insert into Query (name) values (?);

2018-01-27 19:24:55,499 INFO sqlalchemy.engine.base.Engine ('select_link_node_from_node.sql',)
2018-01-27 19:24:55,499 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,506 INFO sqlalchemy.engine.base.Engine update Node set query = ? where id is ?;

2018-01-27 19:24:55,506 INFO sqlalchemy.engine.base.Engine (1, 1)
2018-01-27 19:24:55,506 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,511 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,511 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,512 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,512 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,514 INFO sqlalchemy.engine.base.Engine insert or replace into Node_Node (node_id, target_node_id) values (?, ?);

2018-01-27 19:24:55,514 INFO sqlalchemy.engine.base.Engine (1, 3)
2018-01-27 19:24:55,515 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,520 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,520 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,521 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,521 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,523 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:55,523 INFO sqlalchemy.engine.base.Engine ('/', 'GET')
2018-01-27 19:24:55,526 INFO sqlalchemy.engine.base.Engine select q.id, q.name from Node as n
join Query as q on q.id = n.query
where n.id is ?;

2018-01-27 19:24:55,526 INFO sqlalchemy.engine.base.Engine (1,)
2018-01-27 19:24:55,529 INFO sqlalchemy.engine.base.Engine select ln.id as node_id, ln.name, ln.value from Node as n
join Node_Node as nn on (n.id = nn.node_id)
join Node as ln on (nn.target_node_id = ln.id)
where n.id = ?;

2018-01-27 19:24:55,530 INFO sqlalchemy.engine.base.Engine (1,)
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:74]:
result query: [u'node_id', u'name', u'value']
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:118]:
results: [([(3, u'cat', u'something [chill route /cat/picture/ ] [blah blah[chill route /dog/pic] the end')], [u'node_id', u'name', u'value'])]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:126]:
sub: (3, u'cat', u'something [chill route /cat/picture/ ] [blah blah[chill route /dog/pic] the end')
--------------------------------------------------------------------------------
2018-01-27 19:24:55,533 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:55,533 INFO sqlalchemy.engine.base.Engine (3,)
2018-01-27 19:24:55,535 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:55,535 INFO sqlalchemy.engine.base.Engine (1,)
2018-01-27 19:24:55,540 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:55,540 INFO sqlalchemy.engine.base.Engine (u'/cat/picture/', 'GET')
2018-01-27 19:24:55,543 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:55,543 INFO sqlalchemy.engine.base.Engine (2,)
2018-01-27 19:24:55,546 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:55,546 INFO sqlalchemy.engine.base.Engine (u'/dog/pic/', 'GET')
2018-01-27 19:24:55,549 INFO sqlalchemy.engine.base.Engine select path as rule, weight, node_id from Route where rule like '%<%>%'
order by weight desc;

2018-01-27 19:24:55,549 INFO sqlalchemy.engine.base.Engine ()
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: 
          <!doctype html>
          <html><head><title>test</title></head>
          <body>
          <div>
          something Àрpĺè [blah blah<!-- 404 '/dog/pic' --> the end
          </div>
          </body>
          </html>
          
--------------------------------------------------------------------------------
2018-01-27 19:24:55,554 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:55,554 INFO sqlalchemy.engine.base.Engine (u'/cat/picture/', 'GET')
2018-01-27 19:24:55,557 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:55,557 INFO sqlalchemy.engine.base.Engine (2,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: Àрpĺè
--------------------------------------------------------------------------------
.2018-01-27 19:24:55,566 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,566 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,566 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,566 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,568 INFO sqlalchemy.engine.base.Engine create table Chill (
    version integer
);

2018-01-27 19:24:55,568 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,573 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,575 INFO sqlalchemy.engine.base.Engine create table Query (
    id integer primary key,
    name varchar(255) not null
);

2018-01-27 19:24:55,575 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,579 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,581 INFO sqlalchemy.engine.base.Engine create table Template (
    id integer primary key,
    name varchar(255) unique not null
);

2018-01-27 19:24:55,581 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,585 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,587 INFO sqlalchemy.engine.base.Engine create table Node (
    id integer primary key,
    name varchar(255),
    value text,
    template integer,
    query integer,
    foreign key ( template ) references Template ( id ) on delete set null,
    foreign key ( query ) references Query ( id ) on delete set null
    );

2018-01-27 19:24:55,587 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,591 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,594 INFO sqlalchemy.engine.base.Engine create table Node_Node (
    node_id integer,
    target_node_id integer,
    foreign key ( node_id ) references Node ( id ) on delete cascade,
    foreign key ( target_node_id ) references Node ( id ) on delete cascade
);

2018-01-27 19:24:55,594 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,597 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,600 INFO sqlalchemy.engine.base.Engine create table Route (
    id integer primary key,
    path text not null,
    node_id integer,
    weight integer default 0,
    method varchar(10) default 'GET',
    foreign key ( node_id ) references Node ( id ) on delete set null
);

2018-01-27 19:24:55,600 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,605 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,607 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,607 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,607 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,607 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,610 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?)
2018-01-27 19:24:55,610 INFO sqlalchemy.engine.base.Engine ('bill', '?')
2018-01-27 19:24:55,611 INFO sqlalchemy.engine.base.Engine COMMIT
.2018-01-27 19:24:55,625 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,625 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,626 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,626 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,629 INFO sqlalchemy.engine.base.Engine create table Chill (
    version integer
);

2018-01-27 19:24:55,629 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,637 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,640 INFO sqlalchemy.engine.base.Engine create table Query (
    id integer primary key,
    name varchar(255) not null
);

2018-01-27 19:24:55,640 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,643 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,646 INFO sqlalchemy.engine.base.Engine create table Template (
    id integer primary key,
    name varchar(255) unique not null
);

2018-01-27 19:24:55,646 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,649 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,651 INFO sqlalchemy.engine.base.Engine create table Node (
    id integer primary key,
    name varchar(255),
    value text,
    template integer,
    query integer,
    foreign key ( template ) references Template ( id ) on delete set null,
    foreign key ( query ) references Query ( id ) on delete set null
    );

2018-01-27 19:24:55,651 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,658 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,660 INFO sqlalchemy.engine.base.Engine create table Node_Node (
    node_id integer,
    target_node_id integer,
    foreign key ( node_id ) references Node ( id ) on delete cascade,
    foreign key ( target_node_id ) references Node ( id ) on delete cascade
);

2018-01-27 19:24:55,660 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,666 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,669 INFO sqlalchemy.engine.base.Engine create table Route (
    id integer primary key,
    path text not null,
    node_id integer,
    weight integer default 0,
    method varchar(10) default 'GET',
    foreign key ( node_id ) references Node ( id ) on delete set null
);

2018-01-27 19:24:55,669 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,672 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,674 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,674 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,675 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,675 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,677 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:55,677 INFO sqlalchemy.engine.base.Engine ('a', None)
2018-01-27 19:24:55,678 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,684 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,684 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,685 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,685 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,686 INFO sqlalchemy.engine.base.Engine insert into Route (path, node_id, weight, method)
  values (?, ?, ?, ?);

2018-01-27 19:24:55,686 INFO sqlalchemy.engine.base.Engine ('/a/<llama_name>/', 1, None, 'GET')
2018-01-27 19:24:55,687 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,691 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,691 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,692 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,692 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,694 INFO sqlalchemy.engine.base.Engine select * from Query where name is ?;

2018-01-27 19:24:55,694 INFO sqlalchemy.engine.base.Engine ('select_llama.sql',)
2018-01-27 19:24:55,696 INFO sqlalchemy.engine.base.Engine insert into Query (name) values (?);

2018-01-27 19:24:55,696 INFO sqlalchemy.engine.base.Engine ('select_llama.sql',)
2018-01-27 19:24:55,697 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,702 INFO sqlalchemy.engine.base.Engine update Node set query = ? where id is ?;

2018-01-27 19:24:55,703 INFO sqlalchemy.engine.base.Engine (1, 1)
2018-01-27 19:24:55,703 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,708 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,708 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,708 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,708 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,711 INFO sqlalchemy.engine.base.Engine insert or ignore into Template (name) values (?);

2018-01-27 19:24:55,711 INFO sqlalchemy.engine.base.Engine ('llama.html',)
2018-01-27 19:24:55,712 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,717 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Template as t where t.name is ?;

2018-01-27 19:24:55,717 INFO sqlalchemy.engine.base.Engine ('llama.html',)
2018-01-27 19:24:55,720 INFO sqlalchemy.engine.base.Engine update Node set template = ? where id is ?;

2018-01-27 19:24:55,720 INFO sqlalchemy.engine.base.Engine (1, 1)
2018-01-27 19:24:55,721 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,727 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,728 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,728 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,728 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,731 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:55,731 INFO sqlalchemy.engine.base.Engine (u'/a/chuck/', 'GET')
2018-01-27 19:24:55,734 INFO sqlalchemy.engine.base.Engine select path as rule, weight, node_id from Route where rule like '%<%>%'
order by weight desc;

2018-01-27 19:24:55,734 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,738 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:55,738 INFO sqlalchemy.engine.base.Engine ('/a/<llama_name>/', 'GET')
2018-01-27 19:24:55,741 INFO sqlalchemy.engine.base.Engine select q.id, q.name from Node as n
join Query as q on q.id = n.query
where n.id is ?;

2018-01-27 19:24:55,741 INFO sqlalchemy.engine.base.Engine (1,)
--------------------------------------------------------------------------------
INFO in database [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/database.py:53]:
queries file: 'select_llama.sql' not available. Checking file system...
--------------------------------------------------------------------------------
2018-01-27 19:24:55,745 INFO sqlalchemy.engine.base.Engine 
          select ? as llama_name;
          
2018-01-27 19:24:55,745 INFO sqlalchemy.engine.base.Engine (u'chuck',)
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:74]:
result query: [u'llama_name']
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:118]:
results: [([(u'chuck',)], [u'llama_name'])]
--------------------------------------------------------------------------------
2018-01-27 19:24:55,748 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:55,748 INFO sqlalchemy.engine.base.Engine (1,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: 
          <!doctype html>
          <html><head><title>llama</title></head>
          <body>
          <h1>template for llama_name</h1>
          
          </body>
          </html>
          
--------------------------------------------------------------------------------
F2018-01-27 19:24:55,759 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,759 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,760 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,760 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,762 INFO sqlalchemy.engine.base.Engine create table Chill (
    version integer
);

2018-01-27 19:24:55,762 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,766 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,769 INFO sqlalchemy.engine.base.Engine create table Query (
    id integer primary key,
    name varchar(255) not null
);

2018-01-27 19:24:55,769 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,773 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,776 INFO sqlalchemy.engine.base.Engine create table Template (
    id integer primary key,
    name varchar(255) unique not null
);

2018-01-27 19:24:55,776 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,782 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,784 INFO sqlalchemy.engine.base.Engine create table Node (
    id integer primary key,
    name varchar(255),
    value text,
    template integer,
    query integer,
    foreign key ( template ) references Template ( id ) on delete set null,
    foreign key ( query ) references Query ( id ) on delete set null
    );

2018-01-27 19:24:55,784 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,788 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,790 INFO sqlalchemy.engine.base.Engine create table Node_Node (
    node_id integer,
    target_node_id integer,
    foreign key ( node_id ) references Node ( id ) on delete cascade,
    foreign key ( target_node_id ) references Node ( id ) on delete cascade
);

2018-01-27 19:24:55,790 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,795 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,797 INFO sqlalchemy.engine.base.Engine create table Route (
    id integer primary key,
    path text not null,
    node_id integer,
    weight integer default 0,
    method varchar(10) default 'GET',
    foreign key ( node_id ) references Node ( id ) on delete set null
);

2018-01-27 19:24:55,797 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,801 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,802 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,802 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,803 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,803 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,805 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:55,805 INFO sqlalchemy.engine.base.Engine ('test one', 'testing one')
2018-01-27 19:24:55,806 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,813 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,813 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,814 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,814 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,816 INFO sqlalchemy.engine.base.Engine insert into Route (path, node_id, weight, method)
  values (?, ?, ?, ?);

2018-01-27 19:24:55,816 INFO sqlalchemy.engine.base.Engine ('/test/1/', 1, None, 'GET')
2018-01-27 19:24:55,816 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,820 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,821 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,821 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,821 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,823 INFO sqlalchemy.engine.base.Engine insert or ignore into Template (name) values (?);

2018-01-27 19:24:55,823 INFO sqlalchemy.engine.base.Engine ('template_a.html',)
2018-01-27 19:24:55,823 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,828 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Template as t where t.name is ?;

2018-01-27 19:24:55,828 INFO sqlalchemy.engine.base.Engine ('template_a.html',)
2018-01-27 19:24:55,830 INFO sqlalchemy.engine.base.Engine update Node set template = ? where id is ?;

2018-01-27 19:24:55,830 INFO sqlalchemy.engine.base.Engine (1, 1)
2018-01-27 19:24:55,831 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,839 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,839 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,839 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,839 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,841 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:55,841 INFO sqlalchemy.engine.base.Engine (u'/test/1/', 'GET')
2018-01-27 19:24:55,844 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:55,844 INFO sqlalchemy.engine.base.Engine (1,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: 
          
          <!doctype html>
          <html><head><title>test</title></head>
          <body>
          <div>
          <h1>template_a</h1>
          testing one
          </div>
          </body>
          </html>
          
--------------------------------------------------------------------------------
2018-01-27 19:24:55,850 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,850 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,850 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,850 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,852 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:55,852 INFO sqlalchemy.engine.base.Engine ('a', 'apple')
2018-01-27 19:24:55,852 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,859 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,859 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,859 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,860 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,862 INFO sqlalchemy.engine.base.Engine insert into Route (path, node_id, weight, method)
  values (?, ?, ?, ?);

2018-01-27 19:24:55,862 INFO sqlalchemy.engine.base.Engine ('/fruit/a/', 2, None, 'GET')
2018-01-27 19:24:55,863 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,871 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,871 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,872 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,872 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,875 INFO sqlalchemy.engine.base.Engine insert or ignore into Template (name) values (?);

2018-01-27 19:24:55,875 INFO sqlalchemy.engine.base.Engine ('template_a.html',)
2018-01-27 19:24:55,875 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,877 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Template as t where t.name is ?;

2018-01-27 19:24:55,878 INFO sqlalchemy.engine.base.Engine ('template_a.html',)
2018-01-27 19:24:55,881 INFO sqlalchemy.engine.base.Engine update Node set template = ? where id is ?;

2018-01-27 19:24:55,881 INFO sqlalchemy.engine.base.Engine (1, 2)
2018-01-27 19:24:55,881 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,895 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:55,895 INFO sqlalchemy.engine.base.Engine (u'/fruit/a/', 'GET')
2018-01-27 19:24:55,898 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:55,898 INFO sqlalchemy.engine.base.Engine (2,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: 
          
          <!doctype html>
          <html><head><title>test</title></head>
          <body>
          <div>
          <h1>template_a</h1>
          apple
          </div>
          </body>
          </html>
          
--------------------------------------------------------------------------------
2018-01-27 19:24:55,901 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,901 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,902 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,902 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,904 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:55,904 INFO sqlalchemy.engine.base.Engine ('b', 'banana')
2018-01-27 19:24:55,905 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,911 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,911 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,911 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,911 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,914 INFO sqlalchemy.engine.base.Engine insert or ignore into Template (name) values (?);

2018-01-27 19:24:55,914 INFO sqlalchemy.engine.base.Engine ('template_b.html',)
2018-01-27 19:24:55,914 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,922 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Template as t where t.name is ?;

2018-01-27 19:24:55,923 INFO sqlalchemy.engine.base.Engine ('template_b.html',)
2018-01-27 19:24:55,925 INFO sqlalchemy.engine.base.Engine update Node set template = ? where id is ?;

2018-01-27 19:24:55,925 INFO sqlalchemy.engine.base.Engine (2, 3)
2018-01-27 19:24:55,925 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,930 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,930 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,931 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,931 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,934 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:55,934 INFO sqlalchemy.engine.base.Engine ('orange', 'orange')
2018-01-27 19:24:55,934 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,941 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,941 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,941 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,941 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,944 INFO sqlalchemy.engine.base.Engine insert or ignore into Template (name) values (?);

2018-01-27 19:24:55,944 INFO sqlalchemy.engine.base.Engine ('template_b.html',)
2018-01-27 19:24:55,945 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,948 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Template as t where t.name is ?;

2018-01-27 19:24:55,948 INFO sqlalchemy.engine.base.Engine ('template_b.html',)
2018-01-27 19:24:55,951 INFO sqlalchemy.engine.base.Engine update Node set template = ? where id is ?;

2018-01-27 19:24:55,951 INFO sqlalchemy.engine.base.Engine (2, 4)
2018-01-27 19:24:55,951 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,957 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,957 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,957 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,957 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,960 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:55,961 INFO sqlalchemy.engine.base.Engine ('eggplant', 'eggplant')
2018-01-27 19:24:55,961 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,968 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,969 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,969 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,969 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,972 INFO sqlalchemy.engine.base.Engine insert or ignore into Template (name) values (?);

2018-01-27 19:24:55,972 INFO sqlalchemy.engine.base.Engine ('template_b.html',)
2018-01-27 19:24:55,973 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,975 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Template as t where t.name is ?;

2018-01-27 19:24:55,975 INFO sqlalchemy.engine.base.Engine ('template_b.html',)
2018-01-27 19:24:55,978 INFO sqlalchemy.engine.base.Engine update Node set template = ? where id is ?;

2018-01-27 19:24:55,978 INFO sqlalchemy.engine.base.Engine (2, 5)
2018-01-27 19:24:55,979 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,984 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,984 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,984 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:55,985 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:55,987 INFO sqlalchemy.engine.base.Engine insert or ignore into Template (name) values (?);

2018-01-27 19:24:55,987 INFO sqlalchemy.engine.base.Engine ('template_b.html',)
2018-01-27 19:24:55,988 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:55,990 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Template as t where t.name is ?;

2018-01-27 19:24:55,991 INFO sqlalchemy.engine.base.Engine ('template_b.html',)
2018-01-27 19:24:55,994 INFO sqlalchemy.engine.base.Engine update Node set template = ? where id is ?;

2018-01-27 19:24:55,994 INFO sqlalchemy.engine.base.Engine (2, 2)
2018-01-27 19:24:55,994 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:56,004 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:56,004 INFO sqlalchemy.engine.base.Engine (u'/fruit/a/', 'GET')
2018-01-27 19:24:56,008 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:56,008 INFO sqlalchemy.engine.base.Engine (2,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: 
          
          <!doctype html>
          <html><head><title>test</title></head>
          <body>
          <div>
          <h1>template_b</h1>
          apple
          </div>
          </body>
          </html>
          
--------------------------------------------------------------------------------
.2018-01-27 19:24:56,020 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:56,020 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:56,020 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:56,021 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:56,023 INFO sqlalchemy.engine.base.Engine create table Chill (
    version integer
);

2018-01-27 19:24:56,023 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:56,027 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:56,030 INFO sqlalchemy.engine.base.Engine create table Query (
    id integer primary key,
    name varchar(255) not null
);

2018-01-27 19:24:56,030 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:56,034 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:56,035 INFO sqlalchemy.engine.base.Engine create table Template (
    id integer primary key,
    name varchar(255) unique not null
);

2018-01-27 19:24:56,035 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:56,040 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:56,042 INFO sqlalchemy.engine.base.Engine create table Node (
    id integer primary key,
    name varchar(255),
    value text,
    template integer,
    query integer,
    foreign key ( template ) references Template ( id ) on delete set null,
    foreign key ( query ) references Query ( id ) on delete set null
    );

2018-01-27 19:24:56,042 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:56,049 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:56,052 INFO sqlalchemy.engine.base.Engine create table Node_Node (
    node_id integer,
    target_node_id integer,
    foreign key ( node_id ) references Node ( id ) on delete cascade,
    foreign key ( target_node_id ) references Node ( id ) on delete cascade
);

2018-01-27 19:24:56,052 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:56,057 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:56,059 INFO sqlalchemy.engine.base.Engine create table Route (
    id integer primary key,
    path text not null,
    node_id integer,
    weight integer default 0,
    method varchar(10) default 'GET',
    foreign key ( node_id ) references Node ( id ) on delete set null
);

2018-01-27 19:24:56,059 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:56,065 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:56,067 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:56,067 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:56,067 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:56,067 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:56,070 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:56,070 INFO sqlalchemy.engine.base.Engine ('page', None)
2018-01-27 19:24:56,070 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:56,079 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:56,080 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:56,080 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:56,080 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:56,082 INFO sqlalchemy.engine.base.Engine insert into Route (path, node_id, weight, method)
  values (?, ?, ?, ?);

2018-01-27 19:24:56,082 INFO sqlalchemy.engine.base.Engine ('/test/1/', 1, None, 'GET')
2018-01-27 19:24:56,082 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:56,087 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:56,087 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:56,088 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:56,088 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:56,090 INFO sqlalchemy.engine.base.Engine insert or ignore into Template (name) values (?);

2018-01-27 19:24:56,090 INFO sqlalchemy.engine.base.Engine ('template_unicode.html',)
2018-01-27 19:24:56,090 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:56,095 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Template as t where t.name is ?;

2018-01-27 19:24:56,096 INFO sqlalchemy.engine.base.Engine ('template_unicode.html',)
2018-01-27 19:24:56,098 INFO sqlalchemy.engine.base.Engine update Node set template = ? where id is ?;

2018-01-27 19:24:56,099 INFO sqlalchemy.engine.base.Engine (1, 1)
2018-01-27 19:24:56,099 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:56,104 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:56,104 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:56,105 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:56,105 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:56,107 INFO sqlalchemy.engine.base.Engine insert into Node (name, value) values (?, ?);

2018-01-27 19:24:56,107 INFO sqlalchemy.engine.base.Engine ('isit', u'\xc0\u0440p\u013a\xe8')
2018-01-27 19:24:56,108 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:56,113 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:56,114 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:56,114 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:56,114 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:56,116 INFO sqlalchemy.engine.base.Engine insert or ignore into Template (name) values (?);

2018-01-27 19:24:56,117 INFO sqlalchemy.engine.base.Engine ('isit.html',)
2018-01-27 19:24:56,117 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:56,123 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Template as t where t.name is ?;

2018-01-27 19:24:56,123 INFO sqlalchemy.engine.base.Engine ('isit.html',)
2018-01-27 19:24:56,125 INFO sqlalchemy.engine.base.Engine update Node set template = ? where id is ?;

2018-01-27 19:24:56,125 INFO sqlalchemy.engine.base.Engine (2, 2)
2018-01-27 19:24:56,126 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:56,130 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:56,130 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:56,131 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:56,131 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:56,133 INFO sqlalchemy.engine.base.Engine select * from Query where name is ?;

2018-01-27 19:24:56,133 INFO sqlalchemy.engine.base.Engine ('select_link_node_from_node.sql',)
2018-01-27 19:24:56,136 INFO sqlalchemy.engine.base.Engine insert into Query (name) values (?);

2018-01-27 19:24:56,136 INFO sqlalchemy.engine.base.Engine ('select_link_node_from_node.sql',)
2018-01-27 19:24:56,136 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:56,142 INFO sqlalchemy.engine.base.Engine update Node set query = ? where id is ?;

2018-01-27 19:24:56,142 INFO sqlalchemy.engine.base.Engine (1, 1)
2018-01-27 19:24:56,143 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:56,147 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:56,147 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:56,148 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:56,148 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:56,150 INFO sqlalchemy.engine.base.Engine insert or replace into Node_Node (node_id, target_node_id) values (?, ?);

2018-01-27 19:24:56,150 INFO sqlalchemy.engine.base.Engine (1, 2)
2018-01-27 19:24:56,150 INFO sqlalchemy.engine.base.Engine COMMIT
2018-01-27 19:24:56,156 INFO sqlalchemy.engine.base.Engine SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:56,156 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:56,156 INFO sqlalchemy.engine.base.Engine SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1
2018-01-27 19:24:56,156 INFO sqlalchemy.engine.base.Engine ()
2018-01-27 19:24:56,159 INFO sqlalchemy.engine.base.Engine select n.name, n.value, n.id, r.node_id, r.path from Node as n
join Route as r on r.node_id = n.id
where r.path = ? and r.method = ?;

2018-01-27 19:24:56,159 INFO sqlalchemy.engine.base.Engine (u'/test/1/', 'GET')
2018-01-27 19:24:56,162 INFO sqlalchemy.engine.base.Engine select q.id, q.name from Node as n
join Query as q on q.id = n.query
where n.id is ?;

2018-01-27 19:24:56,162 INFO sqlalchemy.engine.base.Engine (1,)
2018-01-27 19:24:56,165 INFO sqlalchemy.engine.base.Engine select ln.id as node_id, ln.name, ln.value from Node as n
join Node_Node as nn on (n.id = nn.node_id)
join Node as ln on (nn.target_node_id = ln.id)
where n.id = ?;

2018-01-27 19:24:56,165 INFO sqlalchemy.engine.base.Engine (1,)
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:74]:
result query: [u'node_id', u'name', u'value']
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:118]:
results: [([(2, u'isit', u'\xc0\u0440p\u013a\xe8')], [u'node_id', u'name', u'value'])]
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
DEBUG in api [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/api.py:126]:
sub: (2, u'isit', u'\xc0\u0440p\u013a\xe8')
--------------------------------------------------------------------------------
2018-01-27 19:24:56,169 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:56,169 INFO sqlalchemy.engine.base.Engine (2,)
2018-01-27 19:24:56,174 INFO sqlalchemy.engine.base.Engine select t.id, t.name from Node as n
join Template as t on t.id = n.template
where n.id is ?;

2018-01-27 19:24:56,174 INFO sqlalchemy.engine.base.Engine (1,)
--------------------------------------------------------------------------------
DEBUG in public [/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py:145]:
rendered: 
          <h1>template_unicode</h1>
          
            <div>template with a unicode Àрpĺè</div>
          
          
--------------------------------------------------------------------------------
.
======================================================================
ERROR: test_a (__main__.DeleteMethod)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "src/chill/tests.py", line 1200, in test_a
    db.db.execute("""
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/werkzeug/local.py", line 347, in __getattr__
    return getattr(self._get_current_object(), name)
AttributeError: 'Engine' object has no attribute 'db'

======================================================================
ERROR: test_a (__main__.PatchMethod)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "src/chill/tests.py", line 1148, in test_a
    db.db.execute("""
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/werkzeug/local.py", line 347, in __getattr__
    return getattr(self._get_current_object(), name)
AttributeError: 'Engine' object has no attribute 'db'

======================================================================
ERROR: test_a (__main__.PostMethod)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "src/chill/tests.py", line 1039, in test_a
    db.db.execute("""
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/werkzeug/local.py", line 347, in __getattr__
    return getattr(self._get_current_object(), name)
AttributeError: 'Engine' object has no attribute 'db'

======================================================================
ERROR: test_a (__main__.PutMethod)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "src/chill/tests.py", line 1100, in test_a
    db.db.execute("""
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/werkzeug/local.py", line 347, in __getattr__
    return getattr(self._get_current_object(), name)
AttributeError: 'Engine' object has no attribute 'db'

======================================================================
ERROR: test_rules (__main__.Query)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "src/chill/tests.py", line 599, in test_rules
    trans = db.transaction()
TypeError: transaction() takes at least 2 arguments (1 given)

======================================================================
ERROR: test_simple (__main__.Query)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "src/chill/tests.py", line 539, in test_simple
    rv = c.get('/simple', follow_redirects=True)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/werkzeug/test.py", line 830, in get
    return self.open(*args, **kw)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/testing.py", line 108, in open
    follow_redirects=follow_redirects)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/werkzeug/test.py", line 819, in open
    buffered=buffered)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/werkzeug/test.py", line 758, in resolve_redirect
    buffered=buffered, method=method)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/testing.py", line 108, in open
    follow_redirects=follow_redirects)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/werkzeug/test.py", line 803, in open
    response = self.run_wsgi_app(environ, buffered=buffered)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/werkzeug/test.py", line 716, in run_wsgi_app
    rv = run_wsgi_app(self.application, environ, buffered=buffered)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/werkzeug/test.py", line 923, in run_wsgi_app
    app_rv = app(environ, start_response)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/app.py", line 1836, in __call__
    return self.wsgi_app(environ, start_response)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/app.py", line 1820, in wsgi_app
    response = self.make_response(self.handle_exception(e))
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/app.py", line 1403, in handle_exception
    reraise(exc_type, exc_value, tb)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/app.py", line 1817, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/app.py", line 1477, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/app.py", line 1381, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/app.py", line 1475, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/app.py", line 1461, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/views.py", line 84, in view
    return self.dispatch_request(*args, **kwargs)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/views.py", line 149, in dispatch_request
    return meth(*args, **kwargs)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask_cache/__init__.py", line 297, in decorated_function
    rv = f(*args, **kwargs)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py", line 149, in get
    return encoder.encode(rendered)
  File "/opt/python/2.7.14/lib/python2.7/json/encoder.py", line 209, in encode
    chunks = list(chunks)
  File "/opt/python/2.7.14/lib/python2.7/json/encoder.py", line 442, in _iterencode
    o = _default(o)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/json.py", line 83, in default
    return _json.JSONEncoder.default(self, o)
  File "/opt/python/2.7.14/lib/python2.7/json/encoder.py", line 184, in default
    raise TypeError(repr(o) + " is not JSON serializable")
TypeError: (u'yup', u'pretty', u'darn', u'simple') is not JSON serializable

======================================================================
ERROR: test_insert_one_node (__main__.SQL)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "src/chill/tests.py", line 212, in test_insert_one_node
    trans = db.transaction()
TypeError: transaction() takes at least 2 arguments (1 given)

======================================================================
ERROR: test_insert_one_node_with_unicode (__main__.SQL)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "src/chill/tests.py", line 230, in test_insert_one_node_with_unicode
    trans = db.transaction()
TypeError: transaction() takes at least 2 arguments (1 given)

======================================================================
ERROR: test_link (__main__.SQL)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "src/chill/tests.py", line 259, in test_link
    result = db.query(fetch_query_string('select_link_node_from_node.sql'), fetchall=True, **{'node_id': a_id})
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/werkzeug/local.py", line 347, in __getattr__
    return getattr(self._get_current_object(), name)
AttributeError: 'Engine' object has no attribute 'query'

======================================================================
ERROR: test_noderequest (__main__.SQL)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "src/chill/tests.py", line 330, in test_noderequest
    rv = c.get('/page/pear/', follow_redirects=True)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/werkzeug/test.py", line 830, in get
    return self.open(*args, **kw)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/testing.py", line 108, in open
    follow_redirects=follow_redirects)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/werkzeug/test.py", line 803, in open
    response = self.run_wsgi_app(environ, buffered=buffered)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/werkzeug/test.py", line 716, in run_wsgi_app
    rv = run_wsgi_app(self.application, environ, buffered=buffered)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/werkzeug/test.py", line 923, in run_wsgi_app
    app_rv = app(environ, start_response)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/app.py", line 1836, in __call__
    return self.wsgi_app(environ, start_response)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/app.py", line 1820, in wsgi_app
    response = self.make_response(self.handle_exception(e))
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/app.py", line 1403, in handle_exception
    reraise(exc_type, exc_value, tb)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/app.py", line 1817, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/app.py", line 1477, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/app.py", line 1381, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/app.py", line 1475, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/app.py", line 1461, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/views.py", line 84, in view
    return self.dispatch_request(*args, **kwargs)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/views.py", line 149, in dispatch_request
    return meth(*args, **kwargs)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask_cache/__init__.py", line 297, in decorated_function
    rv = f(*args, **kwargs)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py", line 149, in get
    return encoder.encode(rendered)
  File "/opt/python/2.7.14/lib/python2.7/json/encoder.py", line 209, in encode
    chunks = list(chunks)
  File "/opt/python/2.7.14/lib/python2.7/json/encoder.py", line 434, in _iterencode
    for chunk in _iterencode_dict(o, _current_indent_level):
  File "/opt/python/2.7.14/lib/python2.7/json/encoder.py", line 408, in _iterencode_dict
    for chunk in chunks:
  File "/opt/python/2.7.14/lib/python2.7/json/encoder.py", line 442, in _iterencode
    o = _default(o)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/json.py", line 83, in default
    return _json.JSONEncoder.default(self, o)
  File "/opt/python/2.7.14/lib/python2.7/json/encoder.py", line 184, in default
    raise TypeError(repr(o) + " is not JSON serializable")
TypeError: (u'yup',) is not JSON serializable

======================================================================
ERROR: test_noderequest_args (__main__.SQL)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "src/chill/tests.py", line 354, in test_noderequest_args
    rv = c.get('/page/?llama=chuck', follow_redirects=True)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/werkzeug/test.py", line 830, in get
    return self.open(*args, **kw)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/testing.py", line 108, in open
    follow_redirects=follow_redirects)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/werkzeug/test.py", line 803, in open
    response = self.run_wsgi_app(environ, buffered=buffered)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/werkzeug/test.py", line 716, in run_wsgi_app
    rv = run_wsgi_app(self.application, environ, buffered=buffered)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/werkzeug/test.py", line 923, in run_wsgi_app
    app_rv = app(environ, start_response)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/app.py", line 1836, in __call__
    return self.wsgi_app(environ, start_response)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/app.py", line 1820, in wsgi_app
    response = self.make_response(self.handle_exception(e))
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/app.py", line 1403, in handle_exception
    reraise(exc_type, exc_value, tb)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/app.py", line 1817, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/app.py", line 1477, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/app.py", line 1381, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/app.py", line 1475, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/app.py", line 1461, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/views.py", line 84, in view
    return self.dispatch_request(*args, **kwargs)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/views.py", line 149, in dispatch_request
    return meth(*args, **kwargs)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask_cache/__init__.py", line 297, in decorated_function
    rv = f(*args, **kwargs)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py", line 149, in get
    return encoder.encode(rendered)
  File "/opt/python/2.7.14/lib/python2.7/json/encoder.py", line 209, in encode
    chunks = list(chunks)
  File "/opt/python/2.7.14/lib/python2.7/json/encoder.py", line 434, in _iterencode
    for chunk in _iterencode_dict(o, _current_indent_level):
  File "/opt/python/2.7.14/lib/python2.7/json/encoder.py", line 408, in _iterencode_dict
    for chunk in chunks:
  File "/opt/python/2.7.14/lib/python2.7/json/encoder.py", line 442, in _iterencode
    o = _default(o)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/json.py", line 83, in default
    return _json.JSONEncoder.default(self, o)
  File "/opt/python/2.7.14/lib/python2.7/json/encoder.py", line 184, in default
    raise TypeError(repr(o) + " is not JSON serializable")
TypeError: (u'chuck',) is not JSON serializable

======================================================================
ERROR: test_noderequest_cookies (__main__.SQL)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "src/chill/tests.py", line 385, in test_noderequest_cookies
    rv = c.get('/page/', follow_redirects=True)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/werkzeug/test.py", line 830, in get
    return self.open(*args, **kw)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/testing.py", line 108, in open
    follow_redirects=follow_redirects)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/werkzeug/test.py", line 803, in open
    response = self.run_wsgi_app(environ, buffered=buffered)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/werkzeug/test.py", line 716, in run_wsgi_app
    rv = run_wsgi_app(self.application, environ, buffered=buffered)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/werkzeug/test.py", line 923, in run_wsgi_app
    app_rv = app(environ, start_response)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/app.py", line 1836, in __call__
    return self.wsgi_app(environ, start_response)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/app.py", line 1820, in wsgi_app
    response = self.make_response(self.handle_exception(e))
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/app.py", line 1403, in handle_exception
    reraise(exc_type, exc_value, tb)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/app.py", line 1817, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/app.py", line 1477, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/app.py", line 1381, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/app.py", line 1475, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/app.py", line 1461, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/views.py", line 84, in view
    return self.dispatch_request(*args, **kwargs)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/views.py", line 149, in dispatch_request
    return meth(*args, **kwargs)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask_cache/__init__.py", line 297, in decorated_function
    rv = f(*args, **kwargs)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/chill/public.py", line 149, in get
    return encoder.encode(rendered)
  File "/opt/python/2.7.14/lib/python2.7/json/encoder.py", line 209, in encode
    chunks = list(chunks)
  File "/opt/python/2.7.14/lib/python2.7/json/encoder.py", line 434, in _iterencode
    for chunk in _iterencode_dict(o, _current_indent_level):
  File "/opt/python/2.7.14/lib/python2.7/json/encoder.py", line 408, in _iterencode_dict
    for chunk in chunks:
  File "/opt/python/2.7.14/lib/python2.7/json/encoder.py", line 442, in _iterencode
    o = _default(o)
  File "/home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages/flask/json.py", line 83, in default
    return _json.JSONEncoder.default(self, o)
  File "/opt/python/2.7.14/lib/python2.7/json/encoder.py", line 184, in default
    raise TypeError(repr(o) + " is not JSON serializable")
TypeError: (u'chuck',) is not JSON serializable

======================================================================
FAIL: test_dict (__main__.Template)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "src/chill/tests.py", line 778, in test_dict
    assert 'chuck' in rv.data
AssertionError

----------------------------------------------------------------------
Ran 33 tests in 3.797s

FAILED (failures=1, errors=12)

travis_time:end:0580d62d:start=1517081092173982231,finish=1517081096216860287,duration=4042878056[0K
[31;1mThe command "python src/chill/tests.py" exited with 1.[0m

Done. Your build exited with 1.
