diff --git a/src/main/java/org/assertj/core/util/diff/PatchFailedException.java b/src/main/java/org/assertj/core/util/diff/PatchFailedException.java
index 1f6464f0ae..19ecaced98 100755
--- a/src/main/java/org/assertj/core/util/diff/PatchFailedException.java
+++ b/src/main/java/org/assertj/core/util/diff/PatchFailedException.java
@@ -20,7 +20,7 @@
  *
  * @author <a href="mailto:juanco@suigeneris.org">Juanco Anez</a>
  */
-public class PatchFailedException extends DiffException {
+public class PatchFailedException extends Exception {
     
     private static final long serialVersionUID = 1L;
     
diff --git a/src/main/java/org/assertj/core/util/diff/myers/DifferentiationFailedException.java b/src/main/java/org/assertj/core/util/diff/myers/DifferentiationFailedException.java
index c6c0173333..844b4e757f 100755
--- a/src/main/java/org/assertj/core/util/diff/myers/DifferentiationFailedException.java
+++ b/src/main/java/org/assertj/core/util/diff/myers/DifferentiationFailedException.java
@@ -67,7 +67,7 @@
  * @see MyersDiff
  * @see DiffAlgorithm
  */
-public class DifferentiationFailedException extends DiffException {
+public class DifferentiationFailedException extends Exception {
     private static final long serialVersionUID = 1L;
     
     public DifferentiationFailedException(String msg) {
diff --git a/src/test/java/org/assertj/core/util/diff/ChangeDeltaTest.java b/src/test/java/org/assertj/core/util/diff/ChangeDeltaTest.java
new file mode 100755
index 0000000000..a32700773d
--- /dev/null
+++ b/src/test/java/org/assertj/core/util/diff/ChangeDeltaTest.java
@@ -0,0 +1,38 @@
+package org.assertj.core.util.diff;
+
+import org.junit.Test;
+
+import java.util.ArrayList;
+import java.util.Arrays;
+
+import static org.assertj.core.api.Assertions.assertThat;
+
+public class ChangeDeltaTest {
+
+  @Test
+  public void testGetType() throws Exception {
+    // given
+    Chunk<String> chunk = new Chunk<>(1, new ArrayList<>());
+    Delta<String> delta = new ChangeDelta<>(chunk, chunk);
+
+    // when
+    Delta.TYPE type = delta.getType();
+
+    // then
+    assertThat(type).isEqualTo(Delta.TYPE.CHANGE);
+  }
+
+  @Test
+  public void testToString() throws Exception {
+    // given
+    Chunk<String> chunk1 = new Chunk<>(1, new ArrayList<>());
+    Chunk<String> chunk2 = new Chunk<>(2, Arrays.asList("line1", "line2"));
+    Delta<String> delta = new ChangeDelta<>(chunk1, chunk2);
+
+    // when
+    String desc = delta.toString();
+
+    // then
+    assertThat(desc).isEqualTo("[ChangeDelta, position: 1, lines: [] to [line1, line2]]");
+  }
+}
\ No newline at end of file
diff --git a/src/test/java/org/assertj/core/util/diff/DeleteDeltaTest.java b/src/test/java/org/assertj/core/util/diff/DeleteDeltaTest.java
new file mode 100755
index 0000000000..8a98eeb634
--- /dev/null
+++ b/src/test/java/org/assertj/core/util/diff/DeleteDeltaTest.java
@@ -0,0 +1,38 @@
+package org.assertj.core.util.diff;
+
+import org.junit.Test;
+
+import java.util.ArrayList;
+import java.util.Arrays;
+
+import static org.assertj.core.api.Assertions.assertThat;
+
+public class DeleteDeltaTest {
+
+  @Test
+  public void testGetType() throws Exception {
+    // given
+    Chunk<String> chunk = new Chunk<>(1, new ArrayList<>());
+    Delta<String> delta = new DeleteDelta<>(chunk, chunk);
+
+    // when
+    Delta.TYPE type = delta.getType();
+
+    // then
+    assertThat(type).isEqualTo(Delta.TYPE.DELETE);
+  }
+
+  @Test
+  public void testToString() throws Exception {
+    // given
+    Chunk<String> chunk1 = new Chunk<>(1, Arrays.asList("line1", "line2"));
+    Chunk<String> chunk2 = new Chunk<>(2, new ArrayList<>());
+    Delta<String> delta = new DeleteDelta<>(chunk1, chunk2);
+
+    // when
+    String desc = delta.toString();
+
+    // then
+    assertThat(desc).isEqualTo("[DeleteDelta, position: 1, lines: [line1, line2]]");
+  }
+}
\ No newline at end of file
diff --git a/src/test/java/org/assertj/core/util/diff/InsertDeltaTest.java b/src/test/java/org/assertj/core/util/diff/InsertDeltaTest.java
new file mode 100755
index 0000000000..e8925f4bbe
--- /dev/null
+++ b/src/test/java/org/assertj/core/util/diff/InsertDeltaTest.java
@@ -0,0 +1,38 @@
+package org.assertj.core.util.diff;
+
+import org.junit.Test;
+
+import java.util.ArrayList;
+import java.util.Arrays;
+
+import static org.assertj.core.api.Assertions.assertThat;
+
+public class InsertDeltaTest {
+
+  @Test
+  public void testGetType() throws Exception {
+    // given
+    Chunk<String> chunk = new Chunk<>(1, new ArrayList<>());
+    Delta<String> delta = new InsertDelta<>(chunk, chunk);
+
+    // when
+    Delta.TYPE type = delta.getType();
+
+    // then
+    assertThat(type).isEqualTo(Delta.TYPE.INSERT);
+  }
+
+  @Test
+  public void testToString() throws Exception {
+    // given
+    Chunk<String> chunk1 = new Chunk<>(1, new ArrayList<>());
+    Chunk<String> chunk2 = new Chunk<>(2, Arrays.asList("line1", "line2"));
+    Delta<String> delta = new InsertDelta<>(chunk1, chunk2);
+
+    // when
+    String desc = delta.toString();
+
+    // then
+    assertThat(desc).isEqualTo("[InsertDelta, position: 1, lines: [line1, line2]]");
+  }
+}
\ No newline at end of file
