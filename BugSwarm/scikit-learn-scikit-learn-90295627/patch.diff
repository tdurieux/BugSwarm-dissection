diff --git a/doc/modules/linear_model.rst b/doc/modules/linear_model.rst
index 6c36873d21..3e39c3e438 100755
--- a/doc/modules/linear_model.rst
+++ b/doc/modules/linear_model.rst
@@ -1161,7 +1161,6 @@ This way, we can solve the XOR problem with a linear classifier::
            [ 1.,  0.,  1.,  0.],
            [ 1.,  1.,  0.,  0.],
            [ 1.,  1.,  1.,  1.]])
-    >>> clf = Perceptron(fit_intercept=False, tol=0, max_iter=10,
-    shuffle=False).fit(X, y)
+    >>> clf = Perceptron(fit_intercept=False, tol=0, max_iter=10, shuffle=False).fit(X, y)
     >>> clf.score(X, y)
     1.0
diff --git a/doc/modules/model_evaluation.rst b/doc/modules/model_evaluation.rst
index d7361127d9..d311e60c9f 100755
--- a/doc/modules/model_evaluation.rst
+++ b/doc/modules/model_evaluation.rst
@@ -1405,7 +1405,7 @@ Dummy estimators
 
 When doing supervised learning, a simple sanity check consists of comparing
 one's estimator against simple rules of thumb. :class:`DummyClassifier`
-implements three such simple strategies for classification:
+implements several such simple strategies for classification:
 
 - ``stratified`` generates random predictions by respecting the training
   set class distribution.
