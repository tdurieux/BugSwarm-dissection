diff --git a/BaragonData/src/main/java/com/hubspot/baragon/data/BaragonLoadBalancerDatastore.java b/BaragonData/src/main/java/com/hubspot/baragon/data/BaragonLoadBalancerDatastore.java
index 2e8b4dee21..152abe006a 100755
--- a/BaragonData/src/main/java/com/hubspot/baragon/data/BaragonLoadBalancerDatastore.java
+++ b/BaragonData/src/main/java/com/hubspot/baragon/data/BaragonLoadBalancerDatastore.java
@@ -208,7 +208,7 @@ public void setLastRequestId(String loadBalancerGroup, String requestId) {
   }
 
   public int setTargetCount(String group, Integer count) {
-    writeToZk(String.format(LOAD_BALANCER_TARGET_COUNT_FORMAT, group), count);
+    writeToZk(String.format(LOAD_BALANCER_TARGET_COUNT_FORMAT, group), count.toString());
     return count;
   }
 
diff --git a/BaragonService/src/main/java/com/hubspot/baragon/service/resources/LoadBalancerResource.java b/BaragonService/src/main/java/com/hubspot/baragon/service/resources/LoadBalancerResource.java
index a7dbfb4739..21bfcf719d 100755
--- a/BaragonService/src/main/java/com/hubspot/baragon/service/resources/LoadBalancerResource.java
+++ b/BaragonService/src/main/java/com/hubspot/baragon/service/resources/LoadBalancerResource.java
@@ -24,7 +24,6 @@
 import com.hubspot.baragon.models.BaragonKnownAgentMetadata;
 import com.hubspot.baragon.models.BaragonService;
 import com.hubspot.baragon.service.config.BaragonConfiguration;
-import com.sun.javaws.exceptions.InvalidArgumentException;
 
 @Path("/load-balancer")
 @Produces(MediaType.APPLICATION_JSON)
@@ -78,6 +77,7 @@ public Integer setTargetCount(@PathParam("clusterName") String clusterName, @Que
   }
 
   @GET
+  @NoAuth
   @Path("/{clusterName}/count")
   public Integer getTargetCount(@PathParam("clusterName") String clusterName) {
     return loadBalancerDatastore.getTargetCount(clusterName).or(configuration.getDefaultTargetAgentCount());
diff --git a/BaragonUI/app/controllers/GroupDetail.coffee b/BaragonUI/app/controllers/GroupDetail.coffee
index edd6089375..d526e17c14 100755
--- a/BaragonUI/app/controllers/GroupDetail.coffee
+++ b/BaragonUI/app/controllers/GroupDetail.coffee
@@ -4,6 +4,7 @@ GroupDetailView = require '../views/groupDetail'
 
 BasePathsList = require '../models/BasePathsList'
 Group = require '../models/Group'
+TargetCount = require '../models/TargetCount'
 
 Agents = require '../collections/Agents'
 KnownAgents = require '../collections/KnownAgents'
@@ -15,6 +16,7 @@ class GroupDetailController extends Controller
 
         @models.basePaths = new BasePathsList {@groupId}
         @models.group = new Group {@groupId}
+        @models.targetCount = new TargetCount {@groupId}
         @collections.agents = new Agents [], {@groupId}
         @collections.knownAgents = new KnownAgents [], {@groupId}
 
@@ -25,6 +27,7 @@ class GroupDetailController extends Controller
                 agents: @collections.agents
                 knownAgents: @collections.knownAgents
                 groupId: @groupId
+                targetCount: @models.targetCount
 
         app.showView @view
 
@@ -34,6 +37,7 @@ class GroupDetailController extends Controller
         @models.group.fetch().error =>
             app.caughtError()
         @models.basePaths.fetch()
+        @models.targetCount.fetch()
         @collections.knownAgents.fetch()
         @collections.agents.fetch()
 
diff --git a/BaragonUI/app/models/TargetCount.coffee b/BaragonUI/app/models/TargetCount.coffee
new file mode 100755
index 0000000000..32d8331395
--- /dev/null
+++ b/BaragonUI/app/models/TargetCount.coffee
@@ -0,0 +1,39 @@
+Model = require './model'
+
+class TargetCount extends Model
+
+    url: => "#{ config.apiRoot }/load-balancer/#{@groupId}/count"
+
+    updateCountTemplate: require '../templates/vex/updateTargetCount'
+
+    initialize: ({ @groupId }) ->
+
+    parse: (data) =>
+        newData = {}
+        newData.count = data
+        return newData
+
+    updateCount: (newCount) =>
+        $.ajax
+            url: "#{ config.apiRoot }/load-balancer/#{@groupId}/count?authkey=#{ localStorage.getItem 'baragonAuthKey' }&count=#{ newCount }"
+            type: "POST"
+
+    promptUpdateTargetCount: (callback) =>
+        input = """
+                <input name="targetCount" type="text" placeholder="#{this.attributes.count}" required />
+            """
+        vex.dialog.confirm
+            message: @updateCountTemplate
+            input: input
+            buttons: [
+                $.extend {}, vex.dialog.buttons.YES,
+                    text: 'UPDATE',
+                    className: 'vex-dialog-button-primary vex-dialog-button-primary-remove'
+                vex.dialog.buttons.NO
+            ]
+            callback: (data) =>
+                return if data is false
+                @updateCount(data.targetCount).done callback
+
+
+module.exports = TargetCount
diff --git a/BaragonUI/app/templates/groupDetail.hbs b/BaragonUI/app/templates/groupDetail.hbs
index 8fa87938f2..73ba25ba0e 100755
--- a/BaragonUI/app/templates/groupDetail.hbs
+++ b/BaragonUI/app/templates/groupDetail.hbs
@@ -4,9 +4,14 @@
             <div class="col-md-4">
                 <h3>Group: {{ group.name }}</h3>
             </div>
-            <div class="col-md-4">
+            <div class="col-md-5">
                 <h3>Domain: <a href="http://{{ group.domain }}">{{ group.domain }}<a/></h3>
             </div>
+            {{#if targetCount.count}}
+                <div class="col-md-3">
+                    <h3>Target Count: {{ targetCount.count }} {{#if config.allowEdit }} <a data-action="updateTargetCount"><span class="glyphicon glyphicon-edit"></span></a>{{/if}}</h3>
+                </div>
+            {{/if}}
         </div>
     {{/if}}
     {{#if group.sources}}
diff --git a/BaragonUI/app/templates/vex/updateTargetCount.hbs b/BaragonUI/app/templates/vex/updateTargetCount.hbs
new file mode 100755
index 0000000000..bf282af52b
--- /dev/null
+++ b/BaragonUI/app/templates/vex/updateTargetCount.hbs
@@ -0,0 +1,7 @@
+<p>
+    Please specify the new target agent count
+</p>
+
+<p>
+    If <code>enforceTargetAgentCount</code> is specified in your Baragon Service config, requests will not be allowed to process if there are less agents than the target amount.
+</p>
diff --git a/BaragonUI/app/views/groupDetail.coffee b/BaragonUI/app/views/groupDetail.coffee
index f2e3a848e5..3ee89fe21d 100755
--- a/BaragonUI/app/views/groupDetail.coffee
+++ b/BaragonUI/app/views/groupDetail.coffee
@@ -14,13 +14,15 @@ class GroupDetailView extends View
         @listenTo @options.agents, 'sync', @render
         @listenTo @options.knownAgents, 'sync', @render
         @listenTo @options.basePaths, 'sync', @render
+        @listenTo @options.targetCount, 'sync', @render
 
     events: =>
         _.extend super,
-            'click [data-action="remove"]':         'removeKnownAgent'
-            'click [data-action="removeBasePath"]': 'removeBasePath'
-            'click [data-action="removeSource"]':   'removeSource'
-            'click [data-action="addSource"]':      'addSource'
+            'click [data-action="remove"]':            'removeKnownAgent'
+            'click [data-action="removeBasePath"]':    'removeBasePath'
+            'click [data-action="removeSource"]':      'removeSource'
+            'click [data-action="addSource"]':         'addSource'
+            'click [data-action="updateTargetCount"]': 'updateTargetCount'
 
     render: =>
         @$el.html @template
@@ -30,6 +32,7 @@ class GroupDetailView extends View
             agents: @options.agents.toJSON()
             config: config
             synced: @model.synced || @options.agents.synced
+            targetCount: @options.targetCount.toJSON()
 
     removeKnownAgent: (e) ->
         id = $(e.target).parents('tr').data 'agent-id'
@@ -64,5 +67,8 @@ class GroupDetailView extends View
     addSource: (e) ->
         @model.promptAddSource => @trigger 'refreshrequest'
 
+    updateTargetCount: (e) ->
+        @options.targetCount.promptUpdateTargetCount => @trigger 'refreshrequest'
+
 
 module.exports = GroupDetailView
