diff --git a/server/app/api.py b/server/app/api.py
index df66d75f05..d026db26f7 100755
--- a/server/app/api.py
+++ b/server/app/api.py
@@ -43,7 +43,7 @@
 from app.utils import paginate, filter_query, add_to_zip
 from app.utils import scores_to_gcs, subms_to_gcs, make_zip_filename, submit_to_ag
 from app.utils import add_to_grading_queues, parse_date, assign_submission, assign_staff_to_queues
-from app.utils import merge_user, backup_group_file, add_to_file_contents
+from app.utils import merge_user, backup_group_file
 from app.utils import autograde_final_subs, promote_student_backups
 
 from app.exceptions import *
diff --git a/server/app/utils.py b/server/app/utils.py
index 9363b38ab9..92e3ab0713 100755
--- a/server/app/utils.py
+++ b/server/app/utils.py
@@ -545,17 +545,25 @@ def make_zip_filename(user, now):
         filename)
     return filename+'.zip'
 
+def get_backup(obj):
+    """Get a Backup from OBJ, which must be an instance of Backup, Submission,
+    or FinalSubmission.
+    """
+    if isinstance(obj, ModelProxy.FinalSubmission):
+        return obj.submission.get().backup.get()
+    elif isinstance(obj, ModelProxy.Submission):
+        return obj.backup.get()
+    else:
+        return obj
 
 def subms_to_gcs(SearchAPI, subm, filename, data):
     """Writes all submissions for a given search query to a GCS zip file."""
     query = SearchAPI.querify(data['query'])
     with gcs_file(filename, 'application/zip') as f:
         with zf.ZipFile(f, 'w') as zipfile:
-            for submission in query:
+            for result in query:
                 try:
-                    if isinstance(submission, ModelProxy.FinalSubmission):
-                        submission = submission.submission.get()
-                    name, files = subm.data_for_zip(submission.backup.get())
+                    name, files = subm.data_for_zip(get_backup(result))
                     add_to_zip(zipfile, files, dir=name)
                 except BadValueError as e:
                     # wtf comparing exception messages?
