diff --git a/src/main/java/sic/controller/FacturaController.java b/src/main/java/sic/controller/FacturaController.java
index fabf1299a2..623b991a66 100755
--- a/src/main/java/sic/controller/FacturaController.java
+++ b/src/main/java/sic/controller/FacturaController.java
@@ -434,7 +434,7 @@ public RenglonFactura calcularRenglon(@PathVariable("id") long idProducto,
     @ResponseStatus(HttpStatus.CREATED)
     public List<FacturaVenta> dividirYGuardarFactura(@RequestParam("indices") int[] indices,
                                                      @RequestBody FacturaVenta factura) {
-        return facturaService.dividirYGuardarFactura(factura, indices);
+        return facturaService.dividirFactura(factura, indices);
     }
     
     @PostMapping("/facturas/producto/{id}/renglon")
diff --git a/src/main/java/sic/modelo/Cliente.java b/src/main/java/sic/modelo/Cliente.java
index 129b208919..da4b8e5e78 100755
--- a/src/main/java/sic/modelo/Cliente.java
+++ b/src/main/java/sic/modelo/Cliente.java
@@ -13,6 +13,7 @@
 import javax.persistence.Table;
 import javax.persistence.Temporal;
 import javax.persistence.TemporalType;
+import lombok.Builder;
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 
@@ -44,6 +45,7 @@
                     + "WHERE c.predeterminado = true AND c.eliminado = false AND c.empresa = :empresa")
 })
 @Data
+@Builder
 @EqualsAndHashCode(of = {"razonSocial", "id_Fiscal", "empresa"})
 public class Cliente implements Serializable {
 
diff --git a/src/main/java/sic/modelo/Transportista.java b/src/main/java/sic/modelo/Transportista.java
index 237bf1c42f..33391b439f 100755
--- a/src/main/java/sic/modelo/Transportista.java
+++ b/src/main/java/sic/modelo/Transportista.java
@@ -10,6 +10,7 @@
 import javax.persistence.NamedQueries;
 import javax.persistence.NamedQuery;
 import javax.persistence.Table;
+import lombok.Builder;
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 
@@ -29,6 +30,7 @@
                     + "ORDER BY t.nombre ASC")
 })
 @Data
+@Builder
 @EqualsAndHashCode(of = {"nombre", "empresa"})
 public class Transportista implements Serializable {
 
diff --git a/src/main/java/sic/modelo/Usuario.java b/src/main/java/sic/modelo/Usuario.java
index 7f5d72b2f8..58aa875eb5 100755
--- a/src/main/java/sic/modelo/Usuario.java
+++ b/src/main/java/sic/modelo/Usuario.java
@@ -8,6 +8,7 @@
 import javax.persistence.NamedQueries;
 import javax.persistence.NamedQuery;
 import javax.persistence.Table;
+import lombok.Builder;
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 
@@ -33,6 +34,7 @@
                     + "WHERE u.eliminado = false AND u.nombre = :nombre AND u.password = :password")
 })
 @Data
+@Builder
 @EqualsAndHashCode(of = {"nombre"})
 public class Usuario implements Serializable {
 
diff --git a/src/main/java/sic/service/IFacturaService.java b/src/main/java/sic/service/IFacturaService.java
index ff2b83a532..627b2a57f5 100755
--- a/src/main/java/sic/service/IFacturaService.java
+++ b/src/main/java/sic/service/IFacturaService.java
@@ -94,7 +94,7 @@
 
     byte[] getReporteFacturaVenta(Factura factura);
 
-    List<FacturaVenta> dividirYGuardarFactura(FacturaVenta factura, int[] indices);
+    List<FacturaVenta> dividirFactura(FacturaVenta factura, int[] indices);
 
     RenglonFactura getRenglonFacturaPorRenglonPedido(RenglonPedido renglon, String tipoComprobante);
 
diff --git a/src/main/java/sic/service/impl/FacturaServiceImpl.java b/src/main/java/sic/service/impl/FacturaServiceImpl.java
index 5d0a93953e..0296632012 100755
--- a/src/main/java/sic/service/impl/FacturaServiceImpl.java
+++ b/src/main/java/sic/service/impl/FacturaServiceImpl.java
@@ -746,7 +746,7 @@ public double calcularImporte(double cantidad, double precioUnitario, double des
     }
 
     @Override
-    public List<FacturaVenta> dividirYGuardarFactura(FacturaVenta factura, int[] indices) {
+    public List<FacturaVenta> dividirFactura(FacturaVenta factura, int[] indices) {
         double FacturaABC = 0;
         double FacturaX = 0;
         List<RenglonFactura> renglonesConIVA = new ArrayList<>();
@@ -836,11 +836,9 @@ public double calcularImporte(double cantidad, double precioUnitario, double des
         facturaConIVA.setEmpresa(factura.getEmpresa());
         facturaConIVA.setEliminada(factura.isEliminada());
 
-        this.guardar(facturaConIVA);
-        this.guardar(facturaSinIVA);
         List<FacturaVenta> facturas = new ArrayList<>();
-        facturas.add((FacturaVenta) this.getFacturaPorId(facturaConIVA.getId_Factura()));
-        facturas.add((FacturaVenta) this.getFacturaPorId(facturaSinIVA.getId_Factura()));
+        facturas.add(facturaConIVA);
+        facturas.add(facturaSinIVA);
         return facturas;
     }
 
diff --git a/src/main/java/sic/vista/swing/GUI_Cajas.java b/src/main/java/sic/vista/swing/GUI_Cajas.java
index fa49db6914..61b261fc9c 100755
--- a/src/main/java/sic/vista/swing/GUI_Cajas.java
+++ b/src/main/java/sic/vista/swing/GUI_Cajas.java
@@ -38,7 +38,7 @@ public GUI_Cajas() {
         initComponents();
         this.setSize(850, 600);
         this.setColumnasCaja();
-        Usuario paraMostrar = new Usuario();
+        Usuario paraMostrar = Usuario.builder().build();
         paraMostrar.setNombre("Seleccione un Usuario....");
         cmb_Usuarios.addItem(paraMostrar);
         cmb_Usuarios.setEnabled(false);
@@ -533,7 +533,7 @@ private void chk_UsuarioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FI
                 cmb_Usuarios.addItem(usuario);
             }
         } else {
-            Usuario paraMostrar = new Usuario();
+            Usuario paraMostrar = Usuario.builder().build();
             paraMostrar.setNombre("Seleccione un Usuario....");
             cmb_Usuarios.addItem(paraMostrar);
         }
diff --git a/src/main/java/sic/vista/swing/GUI_CerrarVenta.java b/src/main/java/sic/vista/swing/GUI_CerrarVenta.java
index 6ad85ff2c8..1a27bc53cf 100755
--- a/src/main/java/sic/vista/swing/GUI_CerrarVenta.java
+++ b/src/main/java/sic/vista/swing/GUI_CerrarVenta.java
@@ -243,7 +243,7 @@ private void finalizarVenta() {
                 this.lanzarReporteFactura(this.guardarFactura(factura));
                 exito = true;
             } else {
-                List<FacturaVenta> facturasDivididas = facturaService.dividirYGuardarFactura(this.construirFactura(), indicesParaDividir);
+                List<FacturaVenta> facturasDivididas = facturaService.dividirFactura(this.construirFactura(), indicesParaDividir);
                 for (Factura factura : facturasDivididas) {
                     if (facturasDivididas.size() == 2 && !factura.getRenglones().isEmpty()) {
                         if (gui_puntoDeVenta.getPedido() != null) {
diff --git a/src/main/java/sic/vista/swing/GUI_DetalleCliente.java b/src/main/java/sic/vista/swing/GUI_DetalleCliente.java
index 3073b52247..c0e78539d5 100755
--- a/src/main/java/sic/vista/swing/GUI_DetalleCliente.java
+++ b/src/main/java/sic/vista/swing/GUI_DetalleCliente.java
@@ -516,7 +516,7 @@ private void cmb_ProvinciaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-
     private void btn_GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_GuardarActionPerformed
         try {
             if (operacion == TipoDeOperacion.ALTA) {
-                this.cliente = new Cliente();
+                this.cliente = Cliente.builder().build();
                 cliente.setId_Fiscal(txt_Id_Fiscal.getText().trim());
                 cliente.setRazonSocial(txt_RazonSocial.getText().trim());
                 cliente.setNombreFantasia(txt_NombreFantasia.getText().trim());
diff --git a/src/main/java/sic/vista/swing/GUI_DetalleTransportista.java b/src/main/java/sic/vista/swing/GUI_DetalleTransportista.java
index 4d1ebfac39..6bae77ad19 100755
--- a/src/main/java/sic/vista/swing/GUI_DetalleTransportista.java
+++ b/src/main/java/sic/vista/swing/GUI_DetalleTransportista.java
@@ -370,7 +370,7 @@ private void cmb_ProvinciaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-
 	private void btn_GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_GuardarActionPerformed
             try {
                 if (operacion == TipoDeOperacion.ALTA) {
-                    Transportista transportista = new Transportista();
+                    Transportista transportista = Transportista.builder().build();
                     transportista.setNombre(txt_Nombre.getText().trim());
                     transportista.setDireccion(txt_Direccion.getText().trim());
                     transportista.setLocalidad((Localidad) cmb_Localidad.getSelectedItem());                    
diff --git a/src/main/java/sic/vista/swing/GUI_DetalleUsuario.java b/src/main/java/sic/vista/swing/GUI_DetalleUsuario.java
index 274508ce22..86077936d8 100755
--- a/src/main/java/sic/vista/swing/GUI_DetalleUsuario.java
+++ b/src/main/java/sic/vista/swing/GUI_DetalleUsuario.java
@@ -173,7 +173,7 @@ private void btn_GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-F
         try {
             if (operacion == TipoDeOperacion.ALTA) {
                 if (new String(txt_Contrasenia.getPassword()).equals(new String(txt_RepetirContrasenia.getPassword()))) {
-                    Usuario usuario = new Usuario();
+                    Usuario usuario = Usuario.builder().build();
                     usuario.setNombre(txt_Usuario.getText().trim());
                     usuario.setPassword(new String(txt_Contrasenia.getPassword()));
                     usuario.setPermisosAdministrador(chk_Administrador.isSelected());
@@ -189,7 +189,7 @@ private void btn_GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-F
 
             if (operacion == TipoDeOperacion.ACTUALIZACION) {
                 if (new String(txt_Contrasenia.getPassword()).equals(new String(txt_RepetirContrasenia.getPassword()))) {
-                    Usuario usuarioModificado = new Usuario();
+                    Usuario usuarioModificado = Usuario.builder().build();
                     usuarioModificado.setId_Usuario(usuarioModificar.getId_Usuario());
                     usuarioModificado.setNombre(txt_Usuario.getText().trim());
                     usuarioModificado.setPassword(new String(txt_Contrasenia.getPassword()));
diff --git a/src/test/java/sic/service/impl/ClienteServiceImplTest.java b/src/test/java/sic/service/impl/ClienteServiceImplTest.java
index 64ee88610e..1f92c72ab2 100755
--- a/src/test/java/sic/service/impl/ClienteServiceImplTest.java
+++ b/src/test/java/sic/service/impl/ClienteServiceImplTest.java
@@ -31,8 +31,8 @@
     public void setUp() {
         MockitoAnnotations.initMocks(this);
         empresa = Empresa.builder().build();
-        cliente = new Cliente();
-        clienteDuplicado = new Cliente();
+        cliente = Cliente.builder().build();
+        clienteDuplicado = Cliente.builder().build();
     }
 
     @Test
diff --git a/src/test/java/sic/service/impl/FacturaServiceImplTest.java b/src/test/java/sic/service/impl/FacturaServiceImplTest.java
index 877bb99165..650a2a4e90 100755
--- a/src/test/java/sic/service/impl/FacturaServiceImplTest.java
+++ b/src/test/java/sic/service/impl/FacturaServiceImplTest.java
@@ -1,6 +1,7 @@
 package sic.service.impl;
 
 import java.util.ArrayList;
+import java.util.Date;
 import java.util.List;
 import org.junit.Test;
 import static org.junit.Assert.*;
@@ -16,6 +17,8 @@
 import sic.modelo.Producto;
 import sic.modelo.Proveedor;
 import sic.modelo.RenglonFactura;
+import sic.modelo.Transportista;
+import sic.modelo.Usuario;
 import sic.repository.IFacturaRepository;
 import sic.service.IFacturaService;
 import sic.service.IProductoService;
@@ -183,7 +186,7 @@ public void shouldGetTiposFacturaWhenEmpresaNoDiscriminaIVA() {
 
     @Test
     public void shouldDividirFactura() {
-        FacturaVenta factura = Mockito.mock(FacturaVenta.class);
+//        FacturaVenta factura = Mockito.mock(FacturaVenta.class);
         RenglonFactura renglon1 = Mockito.mock(RenglonFactura.class);
         RenglonFactura renglon2 = Mockito.mock(RenglonFactura.class);
         Producto producto = Mockito.mock(Producto.class);
@@ -204,11 +207,19 @@ public void shouldDividirFactura() {
         List<RenglonFactura> renglones = new ArrayList<>();
         renglones.add(renglon1);
         renglones.add(renglon2);
-        when(factura.getRenglones()).thenReturn(renglones);
-        when(factura.getTipoFactura()).thenReturn('A');
+        FacturaVenta factura = FacturaVenta.builder()
+                               .renglones(renglones)
+                               .fecha(new Date())
+                               .transportista(Transportista.builder().nombre("demonte").build())
+                               .empresa(Empresa.builder().nombre("CocaCola").build())
+                               .cliente(Cliente.builder().nombreFantasia("Enrrique Iglesias").build())
+                               .usuario(Usuario.builder().nombre("Marian Jhons  help").build())
+                               .tipoFactura('A').build();
+//        when(factura.getRenglones()).thenReturn(renglones);
+//        when(factura.getTipoFactura()).thenReturn('A');
         int[] indices = {0, 1};
         int cantidadDeFacturasEsperadas = 2;
-        List<FacturaVenta> result = facturaService.dividirYGuardarFactura(factura, indices);
+        List<FacturaVenta> result = facturaService.dividirFactura(factura, indices);
         double cantidadRenglon1PrimeraFactura = result.get(0).getRenglones().get(0).getCantidad();
         double cantidadRenglon2PrimeraFactura = result.get(0).getRenglones().get(1).getCantidad();
         double cantidadRenglon1SegundaFactura = result.get(1).getRenglones().get(0).getCantidad();
diff --git a/src/test/java/sic/util/ValidatorTest.java b/src/test/java/sic/util/ValidatorTest.java
index 7d5c1be401..28109ae7b4 100755
--- a/src/test/java/sic/util/ValidatorTest.java
+++ b/src/test/java/sic/util/ValidatorTest.java
@@ -51,7 +51,7 @@ public void shouldEsEmailValidoWhenNoLoEs() {
     @Test
     public void shouldCompararFechasWhenFechasIguales() {
         Date fechaAnterior = new Date();
-        Date fechaSiguiente = new Date();
+        Date fechaSiguiente = fechaAnterior;
         int expResult = 0;
         int result = Validator.compararFechas(fechaAnterior, fechaSiguiente);
         assertEquals(expResult, result);
