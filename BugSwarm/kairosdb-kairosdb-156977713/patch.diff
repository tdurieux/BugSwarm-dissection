diff --git a/src/main/java/org/kairosdb/datastore/cassandra/CassandraDatastore.java b/src/main/java/org/kairosdb/datastore/cassandra/CassandraDatastore.java
index 16ebb79c85..de9b359f24 100755
--- a/src/main/java/org/kairosdb/datastore/cassandra/CassandraDatastore.java
+++ b/src/main/java/org/kairosdb/datastore/cassandra/CassandraDatastore.java
@@ -133,10 +133,11 @@ public CassandraDatastore(@Named("HOSTNAME") final String hostname,
 
 			KeyspaceDefinition keyspaceDef = m_cluster.describeKeyspace(m_keyspaceName);
 
-			if (keyspaceDef == null) {
+			if (keyspaceDef == null)
 				createSchema(m_cassandraConfiguration.getReplicationFactor());
-				//set global consistency level
-				ConfigurableConsistencyLevel confConsLevel = new ConfigurableConsistencyLevel();
+
+			//set global consistency level
+			ConfigurableConsistencyLevel confConsLevel = new ConfigurableConsistencyLevel();
 			confConsLevel.setDefaultReadConsistencyLevel(m_cassandraConfiguration.getDataReadLevel().getHectorLevel());
 			confConsLevel.setDefaultWriteConsistencyLevel(m_cassandraConfiguration.getDataWriteLevel().getHectorLevel());
 
diff --git a/src/main/java/org/kairosdb/rollup/RollUpJob.java b/src/main/java/org/kairosdb/rollup/RollUpJob.java
index 1ae116fe11..d5068bfdb1 100755
--- a/src/main/java/org/kairosdb/rollup/RollUpJob.java
+++ b/src/main/java/org/kairosdb/rollup/RollUpJob.java
@@ -5,6 +5,7 @@
 import org.kairosdb.core.aggregator.RangeAggregator;
 import org.kairosdb.core.datapoints.LongDataPointFactory;
 import org.kairosdb.core.datapoints.LongDataPointFactoryImpl;
+import org.kairosdb.core.datapoints.StringDataPointFactory;
 import org.kairosdb.core.datastore.*;
 import org.kairosdb.core.exception.DatastoreException;
 import org.kairosdb.core.http.rest.json.RelativeTime;
@@ -32,6 +33,7 @@
 	protected static final int TOO_OLD_MULTIPLIER = 4;
 	private boolean interrupted;
 	private LongDataPointFactory longDataPointFactory = new LongDataPointFactoryImpl();
+	private StringDataPointFactory stringDataPointFactory = new StringDataPointFactory();
 
 	public RollUpJob()
 	{
@@ -102,7 +104,7 @@ public void execute(JobExecutionContext jobExecutionContext) throws JobExecution
 						ThreadReporter.addTag("rollup-task", task.getName());
 						ThreadReporter.addTag("status", success ? "success" : "failure");
 						ThreadReporter.addDataPoint(ROLLUP_TIME, System.currentTimeMillis() - ThreadReporter.getReportTime());
-						ThreadReporter.submitData(longDataPointFactory, datastore);
+						ThreadReporter.submitData(longDataPointFactory, stringDataPointFactory, datastore);
 					}
 				}
 			}
diff --git a/src/test/java/org/kairosdb/rollup/RollUpJobTest.java b/src/test/java/org/kairosdb/rollup/RollUpJobTest.java
index 0fc8bad468..27f41d43ec 100755
--- a/src/test/java/org/kairosdb/rollup/RollUpJobTest.java
+++ b/src/test/java/org/kairosdb/rollup/RollUpJobTest.java
@@ -42,7 +42,7 @@ public void setup() throws ParseException, DatastoreException
 
 		testDataStore = new TestDatastore();
 		datastore = new KairosDatastore(testDataStore, new QueryQueuingManager(1, "hostname"),
-				Collections.<DataPointListener>emptyList(), new TestDataPointFactory());
+				Collections.<DataPointListener>emptyList(), new TestDataPointFactory(), false);
 	}
 
 	@Test
