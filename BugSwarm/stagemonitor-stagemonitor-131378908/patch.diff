diff --git a/stagemonitor-jdbc/src/test/java/org/stagemonitor/jdbc/ConnectionMonitoringTransformerTest.java b/stagemonitor-jdbc/src/test/java/org/stagemonitor/jdbc/ConnectionMonitoringTransformerTest.java
index 50aa2fe61a..f2d50fb5dd 100755
--- a/stagemonitor-jdbc/src/test/java/org/stagemonitor/jdbc/ConnectionMonitoringTransformerTest.java
+++ b/stagemonitor-jdbc/src/test/java/org/stagemonitor/jdbc/ConnectionMonitoringTransformerTest.java
@@ -108,8 +108,8 @@ public Object execute() throws Exception {
 		requestInformation.getRequestTraceReporterFuture().get();
 		final Map<MetricName, Timer> timers = metric2Registry.getTimers();
 		assertTrue(timers.keySet().toString(), timers.size() > 1);
-		assertNotNull(timers.keySet().toString(), timers.get(name("jdbc").tag("method", "SELECT").tag("signature", "All").build()));
-		assertNotNull(timers.keySet().toString(), timers.get(name("jdbc").tag("method", "SELECT").tag("signature", "ConnectionMonitoringTransformerTest$TestDao#executePreparedStatement").build()));
+		assertNotNull(timers.keySet().toString(), timers.get(name("external_request_response_time").type("jdbc").tag("method", "SELECT").tag("signature", "All").build()));
+		assertNotNull(timers.keySet().toString(), timers.get(name("external_request_response_time").type("jdbc").tag("method", "SELECT").tag("signature", "ConnectionMonitoringTransformerTest$TestDao#executePreparedStatement").build()));
 		final CallStackElement callStack = requestInformation.getRequestTrace().getCallStack();
 		assertEquals("testRecordSqlPreparedStatement", callStack.getSignature());
 		assertEquals("void org.stagemonitor.jdbc.ConnectionMonitoringTransformerTest$TestDao.executePreparedStatement()",
@@ -131,8 +131,8 @@ public Object execute() throws Exception {
 		final Map<MetricName, Timer> timers = metric2Registry.getTimers();
 		final String message = timers.keySet().toString();
 		assertTrue(message, timers.size() > 1);
-		assertEquals(message, 1, timers.get(name("jdbc").tag("method", "SELECT").tag("signature", "ConnectionMonitoringTransformerTest$TestDao#executeStatement").build()).getCount());
-		assertEquals(message, 1, timers.get(name("jdbc").tag("method", "SELECT").tag("signature", "All").build()).getCount());
+		assertEquals(message, 1, timers.get(name("external_request_response_time").type("jdbc").tag("method", "SELECT").tag("signature", "ConnectionMonitoringTransformerTest$TestDao#executeStatement").build()).getCount());
+		assertEquals(message, 1, timers.get(name("external_request_response_time").type("jdbc").tag("method", "SELECT").tag("signature", "All").build()).getCount());
 		final CallStackElement callStack = requestInformation.getRequestTrace().getCallStack();
 		assertEquals("testRecordSqlStatement", callStack.getSignature());
 		assertEquals("void org.stagemonitor.jdbc.ConnectionMonitoringTransformerTest$TestDao.executeStatement()",
diff --git a/stagemonitor-requestmonitor/src/test/java/org/stagemonitor/requestmonitor/reporter/ElasticsearchExternalRequestTraceReporterIntegrationTest.java b/stagemonitor-requestmonitor/src/test/java/org/stagemonitor/requestmonitor/reporter/ElasticsearchExternalRequestTraceReporterIntegrationTest.java
index 5d9fa5565c..8c6348e24c 100755
--- a/stagemonitor-requestmonitor/src/test/java/org/stagemonitor/requestmonitor/reporter/ElasticsearchExternalRequestTraceReporterIntegrationTest.java
+++ b/stagemonitor-requestmonitor/src/test/java/org/stagemonitor/requestmonitor/reporter/ElasticsearchExternalRequestTraceReporterIntegrationTest.java
@@ -59,10 +59,10 @@ public void reportRequestTrace() throws Exception {
 		final JsonNode hits = elasticsearchClient.getJson("/stagemonitor-external-requests*/_search").get("hits");
 		assertEquals(1, hits.get("total").intValue());
 		final JsonNode requestTraceJson = hits.get("hits").elements().next().get("_source");
-		assertEquals("jdbc", requestTraceJson.get("requestType").asText());
-		assertEquals("SELECT", requestTraceJson.get("requestMethod").asText());
-		assertEquals(1.0d, requestTraceJson.get("executionTime").asDouble(), 0.0000001);
+		assertEquals("jdbc", requestTraceJson.get("request_type").asText());
+		assertEquals("SELECT", requestTraceJson.get("request_method").asText());
+		assertEquals(1.0d, requestTraceJson.get("execution_time").asDouble(), 0.0000001);
 		assertEquals("SELECT * from STAGEMONITOR", requestTraceJson.get("request").asText());
-		assertEquals("ElasticsearchExternalRequestTraceReporterIntegrationTest#test", requestTraceJson.get("executedBy").asText());
+		assertEquals("ElasticsearchExternalRequestTraceReporterIntegrationTest#test", requestTraceJson.get("executed_by").asText());
 	}
 }
\ No newline at end of file
