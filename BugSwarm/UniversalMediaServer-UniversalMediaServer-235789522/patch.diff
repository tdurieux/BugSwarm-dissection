diff --git a/src/test/java/net/pms/formats/v2/AudioPropertiesTest.java b/src/test/java/net/pms/formats/v2/AudioPropertiesTest.java
index 45211384fe..3e02786657 100755
--- a/src/test/java/net/pms/formats/v2/AudioPropertiesTest.java
+++ b/src/test/java/net/pms/formats/v2/AudioPropertiesTest.java
@@ -68,8 +68,8 @@ public void testSetBitRate() {
 	public void testSetNumberOfChannels() {
 		properties.setNumberOfChannels(5);
 		assertThat(properties.getNumberOfChannels()).isEqualTo(5);
-		properties.setNumberOfChannels("2 channels / 4 channel / 3 channel");
-		assertThat(properties.getNumberOfChannels()).isEqualTo(4);
+		properties.setNumberOfChannels("8 channels / 6 channels / 2 channel");
+		assertThat(properties.getNumberOfChannels()).isEqualTo(8);
 		properties.setNumberOfChannels("0");
 		assertThat(properties.getNumberOfChannels()).isEqualTo(AudioProperties.NUMBEROFCHANNELS_DEFAULT);
 		properties.setNumberOfChannels("-3 channel");
@@ -90,7 +90,7 @@ public void testSetAudioDelay() {
 	public void testSetSampleFrequency() {
 		properties.setSampleFrequency(22050);
 		assertThat(properties.getSampleFrequency()).isEqualTo(22050);
-		properties.setSampleFrequency("22050 / 44100");
+		properties.setSampleFrequency("44100 / 22050");
 		assertThat(properties.getSampleFrequency()).isEqualTo(44100);
 		properties.setSampleFrequency("0");
 		assertThat(properties.getSampleFrequency()).isEqualTo(AudioProperties.SAMPLEFREQUENCY_DEFAULT);
@@ -102,7 +102,7 @@ public void testSetSampleFrequency() {
 	public void testSetBitsperSample() {
 		properties.setBitsperSample(24);
 		assertThat(properties.getBitsperSample()).isEqualTo(24);
-		properties.setBitsperSample("16 / 24");
+		properties.setBitsperSample("24 / 16");
 		assertThat(properties.getBitsperSample()).isEqualTo(24);
 		properties.setBitsperSample("0");
 		assertThat(properties.getBitsperSample()).isEqualTo(AudioProperties.BITSPERSAMPLE_DEFAULT);
@@ -123,10 +123,9 @@ public void testGetChannelsNumberFromLibMediaInfo_withNullEmptyOrNegativeValue()
 	public void testGetChannelsNumberFromLibMediaInfo() {
 		assertThat(AudioProperties.getChannelsNumberFromLibMediaInfo("1 channel")).isEqualTo(1);
 		assertThat(AudioProperties.getChannelsNumberFromLibMediaInfo("3 channels")).isEqualTo(3);
-		assertThat(AudioProperties.getChannelsNumberFromLibMediaInfo("   3 ch ls 21")).isEqualTo(21);
 		assertThat(AudioProperties.getChannelsNumberFromLibMediaInfo("6 channels")).isEqualTo(6);
 		assertThat(AudioProperties.getChannelsNumberFromLibMediaInfo("2 channels / 1 channel / 1 channel")).isEqualTo(2);
-		assertThat(AudioProperties.getChannelsNumberFromLibMediaInfo("2 channels / 4 channel / 3 channel")).isEqualTo(4);
+		assertThat(AudioProperties.getChannelsNumberFromLibMediaInfo("8 channels / 6 channel / 3 channel")).isEqualTo(8);
 	}
 
 	@Test
@@ -160,7 +159,7 @@ public void testGetSampleFrequencyFromLibMediaInfo() {
 		assertThat(AudioProperties.getSampleFrequencyFromLibMediaInfo("48000")).isEqualTo(48000);
 		assertThat(AudioProperties.getSampleFrequencyFromLibMediaInfo("44100 Hz")).isEqualTo(44100);
 		assertThat(AudioProperties.getSampleFrequencyFromLibMediaInfo("44100 / 22050")).isEqualTo(44100);
-		assertThat(AudioProperties.getSampleFrequencyFromLibMediaInfo("22050 / 44100 Hz")).isEqualTo(44100);
+		assertThat(AudioProperties.getSampleFrequencyFromLibMediaInfo("44100 / 22050 Hz")).isEqualTo(44100);
 		assertThat(AudioProperties.getSampleFrequencyFromLibMediaInfo("-7 kHz")).isEqualTo(AudioProperties.SAMPLEFREQUENCY_DEFAULT);
 	}
 
