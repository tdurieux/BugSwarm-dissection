diff --git a/config/checkstyle_sevntu_checks.xml b/config/checkstyle_sevntu_checks.xml
index 40a9795bc6..1ab311cd84 100755
--- a/config/checkstyle_sevntu_checks.xml
+++ b/config/checkstyle_sevntu_checks.xml
@@ -59,12 +59,24 @@
             <property name="allowRethrow" value="true"/>
         </module>
         <module name="AvoidNotShortCircuitOperatorsForBoolean"/>
+        <module name="RedundantReturn"/>
+        <module name="WhitespaceBeforeArrayInitializer"/>
+        <module name="InnerClass"/>
+        <module name="EnumValueNameCheck">
+            <property name="objFormat" value="^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$"/>
+        </module>
+        <module name="OverridableMethodInConstructor">
+            <property name="checkCloneMethod" value="true"/>
+            <property name="checkReadObjectMethod" value="true"/>
+            <property name="matchMethodsByArgCount" value="true"/>
+        </module>
         <module name="LineLengthExtended">
             <property name="max" value="100"/>
             <property name="ignoreClass" value="true"/>
             <property name="ignoreConstructor" value="true"/>
             <property name="ignoreField" value="true"/>
             <property name="ignoreMethod" value="true"/>
+            <property name="ignorePattern" value="^ *\* *[^ ]+$"/>
         </module>
     </module>
 </module>
diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/AvoidInlineConditionalsCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/AvoidInlineConditionalsCheck.java
index 89c3660ce4..b8682b9c86 100755
--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/AvoidInlineConditionalsCheck.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/AvoidInlineConditionalsCheck.java
@@ -46,7 +46,7 @@
 
     @Override
     public int[] getDefaultTokens() {
-        return new int[]{TokenTypes.QUESTION};
+        return new int[] {TokenTypes.QUESTION};
     }
 
     @Override
@@ -56,7 +56,7 @@
 
     @Override
     public int[] getAcceptableTokens() {
-        return new int[]{TokenTypes.QUESTION};
+        return new int[] {TokenTypes.QUESTION};
     }
 
     @Override
diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java
index 79ac05674e..b1d6e2bae3 100755
--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java
@@ -92,7 +92,7 @@
 
     @Override
     public int[] getDefaultTokens() {
-        return new int[]{TokenTypes.CASE_GROUP};
+        return new int[] {TokenTypes.CASE_GROUP};
     }
 
     @Override
@@ -102,7 +102,7 @@
 
     @Override
     public int[] getAcceptableTokens() {
-        return new int[]{TokenTypes.CASE_GROUP};
+        return new int[] {TokenTypes.CASE_GROUP};
     }
 
     /**
diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MissingCtorCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MissingCtorCheck.java
index 81d038364c..a9d81c8139 100755
--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MissingCtorCheck.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MissingCtorCheck.java
@@ -47,7 +47,7 @@
 
     @Override
     public int[] getDefaultTokens() {
-        return new int[]{TokenTypes.CLASS_DEF};
+        return new int[] {TokenTypes.CLASS_DEF};
     }
 
     @Override
diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MissingSwitchDefaultCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MissingSwitchDefaultCheck.java
index 2f41a1bfaa..0aba4eea40 100755
--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MissingSwitchDefaultCheck.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MissingSwitchDefaultCheck.java
@@ -54,7 +54,7 @@
 
     @Override
     public int[] getDefaultTokens() {
-        return new int[]{TokenTypes.LITERAL_SWITCH};
+        return new int[] {TokenTypes.LITERAL_SWITCH};
     }
 
     @Override
diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/OneStatementPerLineCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/OneStatementPerLineCheck.java
index 7ee458aa8d..d613fefffc 100755
--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/OneStatementPerLineCheck.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/OneStatementPerLineCheck.java
@@ -94,7 +94,7 @@
 
     @Override
     public int[] getAcceptableTokens() {
-        return new int[]{
+        return new int[] {
             TokenTypes.SEMI, TokenTypes.FOR_INIT,
             TokenTypes.FOR_ITERATOR,
         };
diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ReturnCountCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ReturnCountCheck.java
index 9e65e14c40..f4501750d4 100755
--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ReturnCountCheck.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ReturnCountCheck.java
@@ -72,9 +72,7 @@
 
     @Override
     public int[] getRequiredTokens() {
-        return new int[]{
-            TokenTypes.LITERAL_RETURN,
-        };
+        return new int[] {TokenTypes.LITERAL_RETURN};
     }
 
     @Override
diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/design/FinalClassCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/design/FinalClassCheck.java
index 682600411c..d9b6341e5f 100755
--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/design/FinalClassCheck.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/design/FinalClassCheck.java
@@ -60,7 +60,7 @@
 
     @Override
     public int[] getAcceptableTokens() {
-        return new int[]{TokenTypes.CLASS_DEF, TokenTypes.CTOR_DEF};
+        return new int[] {TokenTypes.CLASS_DEF, TokenTypes.CTOR_DEF};
     }
 
     @Override
diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java
index 05c9e32c28..e908450d03 100755
--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java
@@ -81,7 +81,7 @@
 
     @Override
     public int[] getDefaultTokens() {
-        return new int[]{
+        return new int[] {
             TokenTypes.CLASS_DEF,
             TokenTypes.INTERFACE_DEF,
             TokenTypes.METHOD_DEF,
@@ -115,7 +115,7 @@
 
     @Override
     public int[] getRequiredTokens() {
-        return new int[]{
+        return new int[] {
             TokenTypes.CLASS_DEF,
             TokenTypes.INTERFACE_DEF,
             TokenTypes.METHOD_DEF,
@@ -149,7 +149,7 @@
 
     @Override
     public int[] getAcceptableTokens() {
-        return new int[]{
+        return new int[] {
             TokenTypes.CLASS_DEF,
             TokenTypes.INTERFACE_DEF,
             TokenTypes.METHOD_DEF,
diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.java
index d8b186f52c..c74b06d559 100755
--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.java
@@ -96,17 +96,17 @@ public void setFormat(String format) {
 
     @Override
     public int[] getDefaultTokens() {
-        return new int[]{TokenTypes.CLASS_DEF};
+        return new int[] {TokenTypes.CLASS_DEF};
     }
 
     @Override
     public int[] getRequiredTokens() {
-        return new int[]{TokenTypes.CLASS_DEF};
+        return new int[] {TokenTypes.CLASS_DEF};
     }
 
     @Override
     public int[] getAcceptableTokens() {
-        return new int[]{TokenTypes.CLASS_DEF};
+        return new int[] {TokenTypes.CLASS_DEF};
     }
 
     @Override
diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/CatchParameterNameCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/CatchParameterNameCheck.java
index 5a572b34a3..3d7f53b46a 100755
--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/CatchParameterNameCheck.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/CatchParameterNameCheck.java
@@ -76,7 +76,7 @@ public CatchParameterNameCheck() {
 
     @Override
     public int[] getAcceptableTokens() {
-        return new int[]{TokenTypes.PARAMETER_DEF};
+        return new int[] {TokenTypes.PARAMETER_DEF};
     }
 
     @Override
diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeTableModel.java b/src/main/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeTableModel.java
index 523b1a2526..47f4ae17d3 100755
--- a/src/main/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeTableModel.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeTableModel.java
@@ -222,7 +222,7 @@ public void removeTreeModelListener(TreeModelListener listener) {
      * @param children An array of Object containing the inserted, removed, or changed objects.
      * @see EventListenerList
      */
-    void fireTreeStructureChanged(Object source, Object[] path,
+    final void fireTreeStructureChanged(Object source, Object[] path,
                                   int[] childIndices,
                                   Object... children) {
         // Guaranteed to return a non-null array
