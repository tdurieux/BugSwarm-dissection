diff --git a/source_en/ArchitectureInDetail/Codelist.rst b/source_en/ArchitectureInDetail/Codelist.rst
index b9c979518a..c91b490787 100755
--- a/source_en/ArchitectureInDetail/Codelist.rst
+++ b/source_en/ArchitectureInDetail/Codelist.rst
@@ -1234,8 +1234,8 @@ As a result of above settings, when characters other than M, F are stored in ``g
 
 .. tip::
 
-    ``@ExistInCodeList`` input validation supports only ``String`` or ``Character`` data types.
-    Therefore, even if the fields with ``@ExistInCodeList`` may contain integer values, they should be defined as String data type. (such as Year/Month/Day)
+    ``@ExistInCodeList`` input validation supports only the implementation class (\ ``String``\  etc) of \ ``CharSequence``\  interface or \ ``Character``\  type.
+    Therefore, even if the fields with \ ``@ExistInCodeList``\ may contain integer values, they should be defined as \ ``String``\ data type. (such as Year/Month/Day)
 
 |
 
diff --git a/source_en/ArchitectureInDetail/DoubleSubmitProtection.rst b/source_en/ArchitectureInDetail/DoubleSubmitProtection.rst
index ec8d2c0ced..a6ab47e383 100755
--- a/source_en/ArchitectureInDetail/DoubleSubmitProtection.rst
+++ b/source_en/ArchitectureInDetail/DoubleSubmitProtection.rst
@@ -741,9 +741,16 @@ The attributes that can be specified in ``@TransactionTokenCheck``\  annotation
      - value
      - | Any character string. Used as NameSpace.
      - None
-     - | value = "create"
-       | If there is only 1 argument, the "value =" part can be omitted.
+     - | \ ``value = "create"``\ 
+       | \ ``value =``\  part can be omitted if there is only one argument.
    * - (2)
+     - namespace
+     - | Any string.Used as NameSpace.
+       | It is an alias of value attribute.
+     - None
+     - | \ ``namespace = "create"``\ 
+       | Synonymous with \ ``value = "create"``\ . It is used as an alternative to value attribute since value attribute cannot be used while using  \ ``@TransactionTokenCheck``\  as a meta-annotation.
+   * - (3)
      - type
      - | **BEGIN**
        | A transaction token is created and a new transaction is started.
@@ -760,7 +767,7 @@ The attributes that can be specified in ``@TransactionTokenCheck``\  annotation
 
  .. note::
  
-    It is recommended that the value to be set in "value" attribute should be same as the config value of "value" attribute for \ ``@RequestMapping``\  annotation.
+    It is recommended that the value to be set in value attribute or namespace attribute should be same as the config value of "value" attribute for \ ``@RequestMapping``\  annotation.
 
  .. note::
  
diff --git a/source_en/ArchitectureInDetail/FileDownload.rst b/source_en/ArchitectureInDetail/FileDownload.rst
index fc7d88ed43..4bd9565185 100755
--- a/source_en/ArchitectureInDetail/FileDownload.rst
+++ b/source_en/ArchitectureInDetail/FileDownload.rst
@@ -38,7 +38,7 @@ Overview of File Download process is given below.
 | when rendering PDF files using model information.
 |
 | **For Excel files**
-| \ ``org.springframework.web.servlet.view.document.AbstractExcelView``\  class of Spring is used as a subclass
+| \ ``org.springframework.web.servlet.view.document.AbstractXlsxView``\  class of Spring is used as a subclass
 | when rendering Excel files using model information.
 |
 | For file formats other than those specified above, various types of View implementations are provided in Spring.
@@ -91,11 +91,11 @@ Implementation of Custom View
      - | In this example, this class comes under the scope of component scanning by using \ ``@Component``\  annotation.
        | It will also come under the scope of \ ``org.springframework.web.servlet.view.BeanNameViewResolver``\  which is described later.
    * - | (2)
-     - | Inherit AbstractPdfView.
+     - | Inherit \ ``AbstractPdfView``\ .
    * - | (3)
-     - | Execute buildPdfDocument method.
+     - | Execute \ ``buildPdfDocument``\  method.
 
-| AbstractPdfView uses \ `iText <http://itextpdf.com/>`_\  for PDF rendering.
+| \ ``AbstractPdfView``\  uses \ `iText <http://itextpdf.com/>`_\  for PDF rendering.
 | Therefore, it is necessary to add itext definition to pom.xml of Maven.
 
 .. code-block:: xml
@@ -149,7 +149,7 @@ Implementation of Custom View
 Definition of ViewResolver
 """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
 \ ``org.springframework.web.servlet.view.BeanNameViewResolver``\  is a class,
-that selects \ ``View``\  to be executed using bean name stored in Spring context.
+that selects View to be executed using bean name stored in Spring context.
 
 When using \ ``BeanNameViewResolver``\ , it is recommended to define such that \ ``BeanNameViewResolver``\  is executed before
 
@@ -161,7 +161,7 @@ which are generally used.
 .. note::
 
     Spring Framework provides various types of \ ``ViewResolver``\  and it allows chaining of multiple \ ``ViewResolver``\ .
-    Therefore, some unintended \ ``View``\  may get selected under certain conditions.
+    Therefore, some unintended View may get selected under certain conditions.
 
     It is possible to avoid such a situation by setting appropriate priority order in \ ``ViewResolver``\ .
     Method to set priority order differs depending on definition method of \ ``ViewResolver``\ .
@@ -223,7 +223,7 @@ which are generally used.
 Specifying View in controller
 """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
 
-| With the help of BeanNameViewResolver, by returning "samplePDFView" in Controller,
+| With the help of \ ``BeanNameViewResolver``\ , by returning "samplePDFView" in Controller,
 | a view named "samplePDFView" gets used from the BeanIDs stored in Spring Context.
 
 **Java source code**
@@ -245,7 +245,7 @@ Specifying View in controller
      - Description
    * - | (1)
      - | With "samplePdfView" as the return value of method,
-       | SamplePdfView class stored in Spring context is executed.
+       | \ ``SamplePdfView``\  class stored in Spring context is executed.
 
 | Following PDF file can be opened after executing the above procedure.
 
@@ -261,25 +261,25 @@ Specifying View in controller
 Downloading Excel files
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 | For rendering EXCEL files, it is necessary to create a class that
-| inherits \ ``org.springframework.web.servlet.view.document.AbstractExcelView``\  provided by Spring.
+| inherits \ ``org.springframework.web.servlet.view.document.AbstractXlsxView``\  provided by Spring.
 | The procedure to download an EXCEL file using controller is explained below.
 
 Implementation of Custom View
 """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
 
-**Implementation of class that inherits AbstractExcelView**
+**Implementation of class that inherits AbstractXlsxView**
 
 .. code-block:: java
 
         @Component  // (1)
-        public class SampleExcelView extends AbstractExcelView {  // (2)
+        public class SampleExcelView extends AbstractXlsxView {  // (2)
 
             @Override
             protected void buildExcelDocument(Map<String, Object> model,
-                    HSSFWorkbook workbook, HttpServletRequest request,
+                    Workbook workbook, HttpServletRequest request,
                     HttpServletResponse response) throws Exception {  // (3)
-                HSSFSheet sheet;
-                HSSFCell cell;
+                Sheet sheet;
+                Cell cell;
 
                 sheet = workbook.createSheet("Spring");
                 sheet.setDefaultColumnWidth(12);
@@ -304,11 +304,11 @@ Implementation of Custom View
      - | In this example, this class comes under the scope of component scanning by using \ ``@Component``\  annotation.
        | It will also come under the scope of \ ``org.springframework.web.servlet.view.BeanNameViewResolver``\  which is described earlier.
    * - | (2)
-     - | Inherit AbstractExcelView.
+     - | Inherit \ ``AbstractXlsxView``\ .
    * - | (3)
-     - | Execute buildExcelDocument method.
+     - | Execute \ ``buildExcelDocument``\  method.
 
-| AbstractExcelView uses \ `Apache POI <http://poi.apache.org/>`_\  to render EXCEL file.
+| \ ``AbstractXlsxView``\ uses \ `Apache POI <http://poi.apache.org/>`_\  to render EXCEL file.
 | Therefore, it is necessary to add POI definition to the pom.xml file of Maven.
 
 .. code-block:: xml
@@ -317,16 +317,18 @@ Implementation of Custom View
       <!-- omitted -->
       <dependency>
           <groupId>org.apache.poi</groupId>
-          <artifactId>poi</artifactId>
-          <version>${org.apache.poi.poi.version}</version>
+          <artifactId>poi-ooxml</artifactId>
       </dependency>
   </dependencies>
-  
-  <properties>
-      <!-- omitted -->
-      <org.apache.poi.poi.version>3.9</org.apache.poi.poi.version>
-  </properties>
+
         
+\
+    .. note::
+        <version> is omitted in the configuration example since poi-ooxml version uses details defined in Spring IO Platform.
+
+        Also, \ ``AbstractExcelView``\  uses @Deprecated annotation from Spring Framework 4.2. Hence, it is recommended to use \ ``AbstractXlsxView``\ in the same way even if you want to use a xls file.
+        For details, refer \ `AbstractExcelView - JavaDoc <https://docs.spring.io/spring/docs/4.2.4.RELEASE/javadoc-api/org/springframework/web/servlet/view/document/AbstractExcelView.html>`_\ .
+          
 
 Definition of ViewResolver
 """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
@@ -336,7 +338,7 @@ Settings are same as that for PDF file rendering. For details, refer to \ :ref:`
 Specifying View in controller
 """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
 
-| With the help of BeanNameViewResolver, by returning "sampleExcelView" in Controller, 
+| With the help of \ ``BeanNameViewResolver``\ , by returning "sampleExcelView" in Controller, 
 | a view named "sampleExcelView" gets used from the BeanIDs stored in Spring Context.
 
 **Java source**
@@ -358,7 +360,7 @@ Specifying View in controller
      - Description
    * - | (1)
      - | With "sampleExcelView"as the return value of method,
-       | SampleExcelView class stored in Spring context is executed.
+       | \ ``SampleExcelView``\  class stored in Spring context is executed.
 
 | EXCEL file can be opened as shown below after executing the above procedures.
 
@@ -373,7 +375,7 @@ Downloading arbitrary files
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 | To download files in formats other than PDF or EXCEL,
 | class that inherits \ ``org.terasoluna.gfw.web.download.AbstractFileDownloadView``\  provided by common library can be implemented.
-| Following steps should be implemented in AbstractFileDownloadView to render files in other format.
+| Following steps should be implemented in \ ``AbstractFileDownloadView``\  to render files in other format.
 
 1. Fetch InputStream in order to write to the response body.
 2. Set information in HTTP header.
@@ -419,12 +421,12 @@ Implementation of Custom View
      - | In this example, this class comes under the scope of component scanning by using \ ``@Component``\  annotation.
        | It will also come under the scope of \ ``org.springframework.web.servlet.view.BeanNameViewResolver``\  which is described earlier.
    * - | (2)
-     - | Inherit AbstractFileDownloadView.
+     - | Inherit \ ``AbstractFileDownloadView``\ .
    * - | (3)
-     - | Execute getInputStream method.
-       | InputStream to be downloaded should be returned.
+     - | Execute \ ``getInputStream``\  method.
+       | \ ``InputStream``\  to be downloaded should be returned.
    * - | (4)
-     - | Execute addResponseHeader method.
+     - | Execute \ ``addResponseHeader method``\ .
        | Set Content-Disposition or ContentType as per the file to be downloaded.
 
 Definition of ViewResolver
@@ -434,7 +436,7 @@ Settings are same as that of PDF file rendering. For details, refer to \ :ref:`v
 
 Specifying View in controller
 """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
-| With the help of BeanNameViewResolver, by returning "textFileDownloadView" in Controller, 
+| With the help of \ ``BeanNameViewResolver``\ , by returning "textFileDownloadView" in Controller, 
 | a view named "textFileDownloadView" gets used from the BeanIDs stored in Spring Context. 
 
 **Java source**
@@ -455,7 +457,7 @@ Specifying View in controller
      - Description
    * - | (1)
      - | With "textFileDownloadView"as the return value of method, 
-       | TextFileDownloadView class stored in Spring context is executed.
+       | \ ``TextFileDownloadView``\  class stored in Spring context is executed.
 
 \
 
diff --git a/source_en/ArchitectureInDetail/Internationalization.rst b/source_en/ArchitectureInDetail/Internationalization.rst
index 52e454e406..397de4aa73 100755
--- a/source_en/ArchitectureInDetail/Internationalization.rst
+++ b/source_en/ArchitectureInDetail/Internationalization.rst
@@ -37,6 +37,11 @@ The image of switching locale is as follows:
 
     For internationalization of Codelist, refer to :doc:`Codelist`.
 
+.. note::
+
+    When the error screen is to be internationalised, transition to error screen is performed by using MVC Controller of Spring.
+    If a direct transition to error screen is performed without Spring MVC, it may happen that the message is not output in intended language.
+
 .. tip::
 
     The most commonly known abbreviation of internationalization is i18n.
diff --git a/source_en/ArchitectureInDetail/Logging.rst b/source_en/ArchitectureInDetail/Logging.rst
index 370cdef5c5..00c38d2427 100755
--- a/source_en/ArchitectureInDetail/Logging.rst
+++ b/source_en/ArchitectureInDetail/Logging.rst
@@ -813,7 +813,7 @@ Example of log output
 
          .. code-block:: xml
 
-             <sec:http auto-config="true" use-expressions="true">
+             <sec:http auto-config="true">
                  <!-- omitted -->
                  <sec:custom-filter ref="userIdMDCPutFilter" after="ANONYMOUS_FILTER"/> <!-- (1) -->
                  <!-- omitted -->
diff --git a/source_en/ArchitectureInDetail/REST.rst b/source_en/ArchitectureInDetail/REST.rst
index 1baba28b2e..9294751016 100755
--- a/source_en/ArchitectureInDetail/REST.rst
+++ b/source_en/ArchitectureInDetail/REST.rst
@@ -5316,20 +5316,11 @@ prevented for RESTful Web Service requests.
     <sec:http
         pattern="/api/v1/**"
         auto-config="true"
-        use-expressions="true"
         create-session="stateless">
-        <sec:headers />
+        <sec:csrf disabled="true"/>
     </sec:http>
 
-    <sec:http auto-config="true" use-expressions="true">
-        <sec:headers>
-            <sec:cache-control />
-            <sec:content-type-options />
-            <sec:hsts />
-            <sec:frame-options />
-            <sec:xss-protection />
-        </sec:headers>
-        <sec:csrf />
+    <sec:http auto-config="true">
         <sec:access-denied-handler ref="accessDeniedHandler"/>
         <sec:custom-filter ref="userIdMDCPutFilter" after="ANONYMOUS_FILTER"/>
         <sec:session-management />
@@ -5350,7 +5341,7 @@ prevented for RESTful Web Service requests.
        | In the above example, request path starting with \ ``/api/v1/``\  is handled as the REST API request path.
        | Further, session is no longer used in Spring Security process by setting \ ``create-session``\  attribute to \ ``stateless``\ .
        |
-       | \ ``<sec: csrf>``\  element is not specified to disable the CSRF measures.
+       | Specify \ ``disabled="true"``\  in \ ``<sec:csrf>``\  element for invalidating CSRF countermeasures.
 
 |
 
diff --git a/source_en/ArchitectureInDetail/SOAP.rst b/source_en/ArchitectureInDetail/SOAP.rst
new file mode 100755
index 0000000000..a79830f19d
--- /dev/null
+++ b/source_en/ArchitectureInDetail/SOAP.rst
@@ -0,0 +1,2636 @@
+SOAP Web Service (Server/Client)
+================================================================================
+
+.. only:: html
+
+ .. contents:: Index
+    :depth: 3
+    :local:
+
+.. _SOAPOverview:
+
+Overview
+--------------------------------------------------------------------------------
+This chapter explains fundamental concepts of SOAP Web Service and development of both SOAP server and client which use JAX-WS.
+
+For basic idea of how to implement, refer
+
+* | ":ref:`SOAPHowToUse`"
+  | It explains application configuration and how to implement API for SOAP Web Service which use JAX-WS.
+
+
+
+|
+
+.. _SOAPOverviewAboutSOAPWebService:
+
+SOAP
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+| SOAP is a protocol which sends/receives XML messages between computer networks.
+| Originally, it was an abbreviation of "\ **S**\imple \ **O**\bject \ **A**\ccess \ **P**\rotocol".
+| However, now "SOAP" is not considered as an abbreviation and declared as a proper noun by W3C.
+| Specifications of SOAP1.1 and SOAP1.2 are defined by W3C.
+| For details, refer \ `W3C -SOAP Specifications- <http://www.w3.org/TR/soap/>`_\ .
+
+| How to use SOAP Web Service with the configuration given in following figure is explained in this guideline.
+| However, SOAP Web Service can also be used with a configuration different from the configuration given below. (Example: when a client is a batch etc)
+
+.. figure:: images_SOAP/SOAPServerAndClient.png
+    :alt: Server and Client for SOAP
+    :width: 100%
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - Sr. No.
+      - Description
+    * - | (1)
+      - | A Web application which communicates with another SOAP server is assumed as a client.
+        | Although it is referred as a client, precautions must be taken since it is envisaged as a Web application.
+    * - | (2)
+      - | SOAP server publishes a Web service and performs a process by receiving XML through SOAP Web Service from client. Operations like accessing database etc and performing business process are assumed.
+    * - | (3)
+      - | In SOAP Web Service, information is exchanged by using XML.
+        | Here, both SOAP server and client are assumed to be in Java, however, communication is possible in other platforms as well without any issues.
+
+
+|
+
+.. _SOAPOverviewJaxWS:
+
+JAX-WS
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+| JAX-WS is an abbreviation of "\ **J**\ava \ **A**\PI for \ **X**\ML-Based \ **W**\eb \ **S**\ervices" and is a Java standard API for handling Web service using SOAP etc.
+| Using JAX-WS,  Java object can be sent by converting the same to XML in conformance with SOAP specifications.
+| Therefore, although information is exchanged in SOAP Web Service using XML, the user can handle the data without being aware of XML structure.
+| Main Java EE servers like Oracle WebLogic Server or JBoss Enterprise Application Platform use JAX-WS implementation on server side and can easily publish Web service by using the function without adding a specific library.
+| However, since Tomcat does not implement JAX-WS, a separate JAX-WS implementation library must be added while using Tomcat.
+| For details, refer "\ :ref:`SOAPAppendixTomcatWebService`\ ".
+
+|
+
+.. _SOAPOverviewJaxWSSpring:
+
+JAX-WS linkage function of Spring Framework
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+| Spring Framework supports JAX-WS linkage function and implementation can be easily done for both SOAP server and client using this function.
+| Overview of the recommended access flow using this function is given below. Here, it is assumed that the Web application acting as a SOAP client (Fig. on the left) access SOAP server (fig. on the right).
+
+.. figure:: images_SOAP/SOAPProcessFlow.png
+    :alt: Server and Client Projects for SOAP
+    :width: 80%
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - Sr. No.
+      - Description
+    * - | (1)
+      - | [Client] Controller calls the Service.
+        | No specific changes are observed during normal calling. 
+    * - | (2)
+      - | [Client] Service calls WebService interface offered by SOAP server side.
+        | In the Fig., Service calls the WebService interface, however, WebService interface can also be called directly from Controller if required.
+    * - | (3)
+      - | [Client] If WebService interface is called, Proxy Object is called as an entity.
+        | The Proxy Object is an implementation class of WebService interface generated in \ ``org.springframework.remoting.jaxws.JaxWsPortProxyFactoryBean``\ .
+        | The implementation class is injected in the Service, Service can carry out the process using SOAP Web Service only by calling WebService interface method.
+    * - | (4)
+      - | ProxyObject calls WebService interface of SOAP server.
+        | Values are exchanged between SOAP server and client by using Domain Object.
+      
+        .. Note::
+
+            Strictly speaking, SOAP server and client communicate using XML.
+            Although Domain Object and XML are mutually converted using JAXB during sending and receiving, SOAP Web Service creator can carry out development without being aware of XML.
+        
+    * - | (5)
+      - | [Server] If WebService interface gets called, WebService implementation class is called as an entity.
+        | A WebService implementation class is provided as an implementation class of WebService interface in SOAP server.
+        | The WebService implementation class can inject the Bean of Spring DI container by \ ``@Inject``\  etc., by inheriting \ ``org.springframework.web.context.support.SpringBeanAutowiringSupport``\ .
+    * - | (6)
+      - | [Server] Call Service for carrying out business process in WebService implementation class.
+    * - | (7)
+      - | [Server] Run business process by using Repository etc in Service.
+        | No specific changes are observed during normal calling.
+
+.. note::
+
+    Although a document driven Spring Web Service which develops a Web service is provided in the Spring, it is not addressed in this guideline.
+    For details, refer \ `Spring Web Services <http://projects.spring.io/spring-ws/>`_\ .
+
+.. note::
+
+    For details of JAX-WS implementation in Spring, refer \ `Spring Framework Reference Documentation -Remoting and web services using Spring(Web services)- <http://docs.spring.io/spring/docs/4.2.4.RELEASE/spring-framework-reference/html/remoting.html#remoting-web-services>`_\ .
+
+|
+
+.. _SOAPOverviewAboutRESTfulWebServiceDevelopment:
+
+Development of Web service using JAX-WS
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+| It is recommended to develop Web service in TERASOLUNA Server Framework for Java (5.x) using JAX-WS implementation of AP server and Spring function.
+
+
+.. Note:: **Deploying to AP server**
+
+    SOAP Web Service can be implemented for SOAP server or client by deploying a WAR file created by a web project in the blank project, to AP server, similar to a normal Web application.
+
+
+|
+
+Configuration of Web service module which uses JAX-WS
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+
+When Web service using JAX-WS is to be created, it is recommended to separately add two projects given below besides the existing blank project.
+
+* model project
+* webservice project
+
+| model project stores Domain Object used in argument and return value of Web service.
+| webservice project stores an interface which calls the Web service.
+| Both the projects store only the classes that must be distributed from SOAP server to client.
+| It is recommended to use another project to clearly identify the scope of distribution.
+
+
+In this guideline, following configuration is used in the multi-projects.
+
+Although client is again assumed to be a Web application, the basic idea for calling from desktop application or command line interface remains the same.
+
+.. figure:: images_SOAP/SOAPClientAndServerProjects.png
+    :alt: Server and Client Projects for SOAP
+    :width: 80%
+
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - Sr. No.
+      - Description
+    * - | (1)
+      - | Add model project and webservice project offered by SOAP server to a conventional multi-project while creating a client.
+        | Here, it is assumed that both the server and the client are developed together.
+        | The project details are explained in "\ :ref:`SOAPHowToUseWebApplicationConstruction`\ ".
+        | Refer "\ :ref:`SOAPAppendixAddProject`\ " for how to add.
+        |
+        | When server and client are not developed separately, and model project and webservice project are not provided, or SOAP server is created in other than Java, Domain Object of model project and Web service interface in webservice project must be created on their own.
+        | Domain Object and Web service interface can be easily created from WSDL by using wsimport.
+        | For details, refer "\ :ref:`SOAPAppendixWsimport`\ ".
+    * - | (2)
+      - | Add a model project and webservice project besides a conventional multi-project while creating a SOAP server.
+        | Publish these two projects to the client.
+        | It is assumed that the model and webservice projects of the client are added in the Maven dependencies.
+
+|
+
+| As a result, project is configured as below.
+| SOAP server project configuration is as given below.
+
+.. figure:: images_SOAP/SOAPServerPackageExplorer.png
+    :alt: Package explorer for SOAP server projects
+    :width: 50%
+
+Client project configuration is as given below.
+
+.. figure:: images_SOAP/SOAPClientPackageExplorer.png
+    :alt: Package explorer for SOAP client projects
+    :width: 42%
+
+
+|
+
+URL to be published as Web service
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+
+
+
+| If SOAP Web Service is created, definition of Web service interface called WSDL（\ **W**\ eb \ **S**\ ervices \ **D**\ escription \ **L**\ anguage） is published and the client then implements SOAP Web Service based on the definition.
+| For WSDL details, refer `W3C -Web Services Description Language (WSDL)- <http://www.w3.org/TR/wsdl>`_\ .
+
+
+| Access URL, method name, argument and return value for Web service implementation are defined in WSDL.
+| If SOAP Web Service is created as per this guideline, WSDL is published under following URL.
+| The URL must be specified at the client side.
+
+* `http://AAA.BBB.CCC.DDD:XXXX/ Context route/Web service name?wsdl`
+  
+End point address defined in WSDL consists of following URL..
+
+* `http://AAA.BBB.CCC.DDD:XXXX/ Context route/Web service name`
+
+
+.. Note::
+
+    In the guideline, it is assumed that a WAR file is used for deploying a web project of multi-project configuration in AP server. In this case, [server projectName]-web basically acts as a context route. However, it must be noted that route changes depending on AP server.
+
+
+.. Note::
+
+    In this guideline, since it is assumed that SOAP server and client are together published as a Web application, WSDL URL is specified in the client. The client can also be created by providing WSDL as a file instead of URL.
+    For details, refer \ :ref:`SOAPHowToUseWebServiceClient`\ .
+
+
+.. warning::
+
+    In this guideline, AP server  (library to be used in case of Tomcat) is configured to change mapping of context route and access by following URL.
+     
+    * `http://AAA.BBB.CCC.DDD:XXXX/[server projectName]-web/ws/TodoWebService?wsdl`
+       
+    How to map Web service in URL which is not under context route differs according to AP server.
+    Refer following for details.
+
+     .. tabularcolumns:: |p{0.10\linewidth}|p{0.50\linewidth}|p{0.40\linewidth}|
+     .. list-table::
+         :header-rows: 1
+         :widths: 10 50 40
+
+         * - Sr. No.
+           - AP server name
+           - Description
+         * - | (1)
+           - | Apache Tomcat
+           - | \ :ref:`SOAPAppendixTomcatWebService`\
+         * - | (2)
+           - | Oracle WebLogic Server
+           - | TBD
+         * - | (3)
+           - | JBoss Enterprise Application Platform
+           - | TBD
+
+|
+
+.. _SOAPHowToUse:
+
+How to use
+--------------------------------------------------------------------------------
+This section specifically explains how to create SOAP Web Service.
+
+|
+
+.. _SOAPHowToUseWebApplicationConstruction:
+
+How to create SOAP server
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+
+
+Project configuration
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+
+**Dependency for each project**
+
+| model project and webservice project are added as described in "\ :ref:`SOAPOverviewAboutRESTfulWebServiceDevelopment`\ ".
+| Refer "\ :ref:`SOAPAppendixAddProject`\ " for how to add.
+| Also note that a dependency must be added to an existing project accordingly.
+
+.. figure:: images_SOAP/SOAPServerProjects.png
+    :alt: Server Projects for SOAP
+    :width: 80%
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.30\linewidth}|p{0.60\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 30 60
+
+    * - Sr. No.
+      - Project Name
+      - Description
+    * - | (1)
+      - | web project
+      - | Deploy a Web service implementation class.
+    * - | (2)
+      - | domain project
+      - | Deploy Service which is called from WebService implementation class.
+        | Repository etc are same as used in the conventional project.
+    * - | (3)
+      - | webservice project
+      - | Deploy interface of WebService to be published here.
+        | Client runs Web service using this interface.
+    * - | (4)
+      - | model project
+      - | Deploy only the class that is used in SOAP Web Service from the classes that belong to the domain layer.
+        | Input value and return results from the client use the class in the project.
+
+|
+
+Application configuration
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+
+**Default configuration while publishing Web service**
+
+| When Tomcat is to be used as AP server, "\ :ref:`SOAPAppendixTomcatWebService`\ " must be implemented.
+| Besides, since the method to publish Web service is different according to AP server, refer manual of each AP server for details.
+
+.. note::
+    AP server manual is explained below as the reference material.
+    It must be always checked that appropriate version of the manual is being referred.
+     
+    Oracle WebLogic Server 12.2.1: \ `Oracle(R) Fusion Middleware Understanding WebLogic Web Services for Oracle WebLogic Server  Features and Standards Supported by WebLogic Web Services <https://docs.oracle.com/middleware/1221/wls/WSOVR/weblogic-web-service-stand.htm#WSOVR137>`_\
+     
+    JBoss Enterprise Application Platform 6.4: \ `DEVELOPMENT GUIDE JAX-WS WEB SERVICES <https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.4/html/Development_Guide/chap-JAX-WS_Web_Services.html>`_\
+
+|
+
+**Configuration of component scan of package**
+
+\ ``[server projectName]-ws.xml``\  is created for scanning the component to be used by Web service, component scan is defined and injection in the Web service is enabled.
+
+*[server projectName]-web/src/main/resources/META-INF/spring/[server projectName]-ws.xml*
+
+.. code-block:: xml
+
+    <?xml version="1.0" encoding="UTF-8"?>
+    <beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+        xmlns:context="http://www.springframework.org/schema/context"
+        xsi:schemaLocation="
+             http://www.springframework.org/schema/beans
+             http://www.springframework.org/schema/beans/spring-beans.xsd
+             http://www.springframework.org/schema/context
+             http://www.springframework.org/schema/context/spring-context.xsd">
+        <!-- (1) -->
+        <context:component-scan base-package="com.example.ws" />
+    </beans>
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - Sr. No.
+      - Description
+    * - | (1)
+      - | Specify a package wherein the component to be used in Web service is stored.
+
+|
+
+*[server projectName]-web/src/main/webapp/WEB-INF/web.xml*
+
+.. code-block:: xml
+    :emphasize-lines: 8
+
+    <context-param>
+        <param-name>contextConfigLocation</param-name>
+        <!-- Root ApplicationContext -->
+        <!-- (1) -->
+        <param-value>
+            classpath*:META-INF/spring/applicationContext.xml
+            classpath*:META-INF/spring/spring-security.xml
+            classpath*:META-INF/spring/[server projectName]-ws.xml
+        </param-value>
+    </context-param>
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - Sr. No.
+      - Description
+    * - | (1)
+      - | Add \ ``[server projectName]-ws.xml``\  to reading target while generating a route \ ``ApplicationContext``\ .
+ 
+|
+
+**Definition for input check**
+ 
+| Following definition is added to input check for using method validation.
+| For input check details, refer \ :ref:`SOAPHowToUseServerValidation`\ .
+
+*[server projectName]-web/src/main/resources/META-INF/spring/applicationContext.xml*
+
+.. code-block:: xml
+
+    <bean class="org.springframework.validation.beanvalidation.MethodValidationPostProcessor">
+        <property name="validator" ref="validator" />
+    </bean>
+ 
+    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />
+      
+|
+
+.. _SOAPHowToUseWebServiceImpl:
+
+Web service implementation
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+Following are created.
+
+- Creating Domain Object
+- Creating WebService interface
+- Creating WebService implementation class
+
+.. figure:: images_SOAP/SOAPServerClass.png
+   :alt: Server Projects for SOAP
+   :width: 80%
+
+|
+
+**Creating Domain Object**
+
+| Domain Object used in the argument and return value of Web service is created in model project.
+| It is not specifically different from general JavaBean which implements \ ``java.io.Serializable``\  interface.
+
+*[server projectName]-model/src/main/java/com/example/domain/model/Todo.java*
+
+.. code-block:: java
+
+    package com.example.domain.model;
+
+    import java.io.Serializable;
+    import java.util.Date;
+
+    public class Todo implements Serializable {
+
+        private String todoId;
+
+        private String title;
+
+        private String description;
+
+        private boolean finished;
+
+        private Date createdAt;
+
+        // omitted setter and getter
+
+    }
+
+|
+
+**Creating WebService interface**
+
+An interface to call Web service is created in webservice project.
+
+*[server projectName]-webservice/src/main/java/com/example/ws/todo/TodoWebService.java*
+
+.. code-block:: java
+
+    package com.example.ws.todo;
+
+    import java.util.List;
+
+    import javax.jws.WebMethod;
+    import javax.jws.WebParam;
+    import javax.jws.WebResult;
+    import javax.jws.WebService;
+
+    import com.example.domain.model.Todo;
+    import com.example.ws.webfault.WebFaultException;
+
+    @WebService(targetNamespace = "http://example.com/todo") // (1)
+    public interface TodoWebService {
+
+        @WebMethod // (2)
+        @WebResult(name = "todo") // (3)
+        Todo getTodo(@WebParam(name = "todoId") /* (4) */ String todoId) throws WebFaultException;
+
+    }
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - Sr. No.
+      - Description
+    * - | (1)
+      - | WebService interface is declared by applying \ ``@WebService``\ .
+        | Although namespace is defined in the \ ``targetNamespace``\  attribute, it is recommended to match it with the package name of the Web service used for creating it.
+          
+        .. warning::
+            Value of \ ``targetNamespace``\  attribute should be unique. Therefore, it must be changed while diverting the source in the guideline.
+
+        .. Note::
+            Value of \ ``targetNamespace``\  attribute is defined in WSDL. Namespace of the Web service is determined and is used for unique identification.
+              
+    * - | (2)
+      - | Apply \ ``@WebMethod``\  to the method which is published as a Web service method.
+        | Method can be published on WSDL and used externally by applying this annotation.
+    * - | (3)
+      - | Apply \ ``@WebResult``\  to return value and specify name in \ ``name``\  attribute. It is not required in the absence of a return value.
+        | It is published as a return value on WSDL by applying this annotation.
+    * - | (4)
+      - | Apply \ ``@WebParam``\  in the argument and specify name in \ ``name``\  attribute.
+        | Argument is published on WSDL and defined as a parameter required for external calling, by applying this annotation.
+        | For details of \ ``WebFaultException``\ , refer "\ :ref:`SOAPHowToUseExceptionHandler`\ ".
+
+
+.. note:: **How to apply package name and namespace**
+
+    When the package name is in the following format
+
+      * [Domain].[Application name (System name)].ws.[Used case name]
+
+    In this guideline, it is recommended to use namespace as given below..
+
+      * http:// [Domain]/[Application name (System name)]
+      
+      
+.. note:: **Relation between namespace and package name**
+
+   When com.example is used as a domain and todo is used as an application name, Namespace is linked with Java package as below.
+
+    .. figure:: images_SOAP/SOAPURL.png
+        :alt: Server and Client Projects for SOAP
+        :width: 50%
+
+    Although it is not specified, naming of Namespace and package is summarised in \ `XML Namespace Mapping(Red Hat JBoss Fuse) <https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Fuse/6.0/html/Developing_Applications_Using_JAX-WS/files/JAXWSDataNamespaceMapping.html>`_\ .
+
+|
+
+    
+      
+**Creating WebService implementation class**
+
+Create an implementation class of WebService interface in web project.
+
+*[server projectName]-web/src/main/java/com/example/ws/todo/TodoWebServiceImpl.java*
+
+.. code-block:: java
+
+    package com.example.ws.todo;
+
+    import java.util.List;
+
+    import javax.inject.Inject;
+    import javax.jws.HandlerChain;
+    import javax.jws.WebService;
+    import javax.xml.ws.BindingType;
+    import javax.xml.ws.soap.SOAPBinding;
+
+    import org.springframework.web.context.support.SpringBeanAutowiringSupport;
+
+    import com.example.domain.model.Todo;
+    import com.example.domain.service.TodoService;
+    import com.example.ws.webfault.WebFaultException;
+    import com.example.ws.exception.WsExceptionHandler;
+    import com.example.ws.todo.TodoWebService;
+
+
+    @WebService(
+            portName = "TodoWebPort",
+            serviceName = "TodoWebService",
+            targetNamespace = "http://example.com/todo",
+            endpointInterface = "com.example.ws.todo.TodoWebService") // (1)
+    @BindingType(SOAPBinding.SOAP12HTTP_BINDING) // (2)
+    public class TodoWebServiceImpl extends SpringBeanAutowiringSupport implements TodoWebService { // (3)
+
+        @Inject // (4)
+        TodoService todoService;
+
+        @Override // (5)
+        public Todo getTodo(String todoId) throws WebFaultException {
+            return todoService.getTodo(todoId);
+        }
+
+    }
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - Sr. No.
+      - Description
+    * - | (1)
+      - | WebService implementation class is declared by applying \ ``@WebService``\ .
+        | \ ``portName``\  attribute is published as a port name on WSDL.
+        | \ ``serviceName``\  attribute is published as a service name on WSDL.
+        | \ ``targetNamespace``\  attribute is a namespace used on WSDL.
+        | \ ``endpointInterface``\  attribute defines an interface name of Web service  implemented by this class.
+
+        .. note::
+          \ ``portName``\  attribute, \ ``serviceName``\  attribute and \ ``endpointInterface``\  attribute should not be set in \ ``TodoWebService``\  interface as \ ``@WebService``\  attribute. This is because the interface corresponds to \ ``portType``\  element on WSDL and is not the element for describing Web service details.
+
+    * - | (2)
+      - | Specify binding method by applying \ ``@BindingType``\ .
+        | When \ ``SOAPBinding.SOAP12HTTP_BINDING``\  is defined, it acts as a binding in SOAP1.2.
+        | If annotation is not applied, binding in SOAP1.1 is used.
+    * - | (3)
+      - | Implement \ ``TodoWebService``\  interface created earlier.
+        | Enable DI for Spring Bean by inheriting \ ``org.springframework.web.context.support.SpringBeanAutowiringSupport``\ .
+    * - | (4)
+      - | Inject Service.
+        | Same as while calling the service in normal Controller.
+    * - | (5)
+      - | Run business process by calling Service.
+        | Same as while calling the service in normal Controller.
+
+.. note::
+    It is recommended to summarise Web service related class under ws package. This is to differentiate it from application layer class which is placed under app package.
+
+|
+
+.. _SOAPHowToUseServerValidation:
+
+Input check implementation
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+| A method validation provided by Spring is used in the input check of parameters sent by SOAP Web Service.
+| For the details of method validation, refer \ :ref:`MethodValidationOnSpringFrameworkHowToUseApplyTarget`\ .
+| Input check details are defined in Service interface as given below.
+
+*[server projectName]-domain/src/main/java/com/example/domain/service/todo/TodoService.java*
+
+.. code-block:: java
+
+    package com.example.domain.service.todo;
+
+    import java.util.List;
+
+    import javax.validation.Valid;
+    import javax.validation.constraints.NotNull;
+    import javax.validation.groups.Default;
+
+    import org.springframework.validation.annotation.Validated;
+
+    import com.example.domain.model.Todo;
+
+    @Validated // (1)
+    public interface TodoService {
+
+        Todo getTodo(@NotNull String todoId); // (2)
+
+        Todo createTodo(@Valid Todo todo); // (3)
+
+        @Validated({ Default.class, Todo.Update.class }) // (4)
+        Todo updateTodo(@Valid Todo todo);
+
+    }
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - Sr. No.
+      - Description
+    * - | (1)
+      - | Implementation class of this interface is declared as a target for input check by applying \ ``@Validated``\ .
+    * - | (2)
+      - | Apply annotation to argument itself while checking the argument.
+    * - | (3)
+      - | Apply \ ``@Valid``\  in the argument while carrying out input check of JavaBean.
+    * - | (4)
+      - | Input check can also be carried out by specifying \ ``@Validated``\  in the group and narrowing down the specific conditions.
+        | Group details are explained in the JavaBean described next.
+
+|
+
+*[server projectName]-model/src/main/java/com/example/domain/model/Todo.java*
+
+.. code-block:: java
+
+    package com.example.domain.model;
+
+    import javax.validation.constraints.NotNull;
+    import javax.validation.constraints.Null;
+    import java.io.Serializable;
+    import java.util.Date;
+
+    // (1)
+    public class Todo implements Serializable {
+
+        // (2)
+        public interface Create {
+        }
+
+        public interface Update {
+        }
+
+        @Null(groups = Create.class)
+        @NotNull(groups = Update.class)
+        private String todoId;
+
+        @NotNull
+        private String title;
+
+        private String description;
+
+        private boolean finished;
+
+        @Null(groups = Create.class)
+        private Date createdAt;
+
+        // omitted setter and getter
+    }
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - Sr. No.
+      - Description
+    * - | (1)
+      - | Define JavaBean input check in the Bean Validation.
+        | For details, refer "\ :doc:`Validation`\ ".
+    * - | (2)
+      - | Define an interface used for grouping of validation.
+
+|
+
+Security measures
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+
+**Authentication process**
+
+| How to carry out Basic authentication in Spring Security and how to authorize in Service are introduced in the guideline as the methods of authentication and authorization for SOAP.
+| WS-Security is not addressed.
+| For details of how to use, refer "\ :doc:`../Security/Authentication`\ " and "\ :doc:`../Security/Authorization`\ ".
+
+A configuration example of Spring Security carrying out Basic authentication for SOAP Web Service is shown below.
+
+*[server projectName]-web/src/main/resources/META-INF/spring/spring-security.xml*
+
+.. code-block:: xml
+
+    <sec:http pattern="/ws/**"
+              auto-config="true"
+              use-expressions="true"
+              create-session="stateless">
+       <sec:headers />
+       <sec:csrf disabled="true">
+       <!-- (1) -->
+       <sec:http-basic />
+    </sec:http>
+
+    <!-- (2) -->
+    <sec:authentication-manager>
+       <sec:authentication-provider
+           user-service-ref="sampleUserDetailsService">
+           <sec:password-encoder ref="passwordEncoder" />
+       </sec:authentication-provider>
+    </sec:authentication-manager>
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - Sr. No.
+      - Description
+    * - | (1)
+      - | Basic authentication can be carried out if \ ``sec:http-basic``\  tag is described.
+        | Authentication is carried out only for the Web service execution by using \ ``pattern``\  attribute.
+    * - | (2)
+      - | Define authentication method by using \ ``authentication-provider``\ .
+        | Actual authentication and fetching user information must be implemented by creating \ ``UserDetailsService``\ .
+        | For details, refer "\ :doc:`../Security/Authentication`\ ".
+
+|
+
+**Authorization process**
+
+| Authorization is carried out by applying annotation for each Service.
+| For details, refer access authorization of "\ :doc:`../Security/Authorization`\ (method)".
+
+*[server projectName]-web/src/main/resources/META-INF/spring/spring-security.xml*
+
+.. code-block:: xml
+
+    <sec:global-method-security pre-post-annotations="enabled" /> <!-- (1) -->
+
+.. tabularcolumns:: |p{0.30\linewidth}|p{0.70\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - Sr. No.
+      - Description
+    * - | (1)
+      - | Specify \ ``pre-post-annotations``\  attribute of \ ``<sec:global-method-security>``\  element in \ ``enabled``\ .
+
+|
+
+*[server projectName]-domain/src/main/java/com/example/domain/service/todo/TodoServiceImpl.java*
+
+.. code-block:: java
+
+    public class TodoServiceImpl implements TodoService {
+
+        // omitted
+
+        // (1)
+        @PreAuthorize("isAuthenticated()")
+        public List<Todo> getTodos() {
+            // omitted
+        }
+
+        @PreAuthorize("hasRole('ROLE_ADMIN')")
+        public Todo createTodo(Todo todo) {
+            // omitted
+        }
+
+    }
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - Sr. No.
+      - Description
+    * - | (1)
+      - | Specify \ ``org.springframework.security.access.prepost.PreAuthorize``\  annotation in the method which carries out authorization.
+
+|
+
+**CSRF measures**
+
+| SOAP Web Service should be used in the stateless communication without using a session.
+| Therefore, a configuration method wherein CSRF measures using the session are not employed is explained below.
+| For details of CSRF, refer "\ :doc:`../Security/CSRF`\ ".
+| CSRF measures are enabled in the default configuration of Blank project.
+| Therefore, CSRF measures processing is disabled for SOAP Web Service request by adding following configuration.
+
+*[server projectName]-web/src/main/resources/META-INF/spring/spring-security.xml*
+
+.. code-block:: xml
+
+    <!-- (1) -->
+    <sec:http pattern="/ws/**"
+        auto-config="true"
+        use-expressions="true"
+        create-session="stateless">
+        <sec:headers />
+        <sec:csrf disabled="true">
+    </sec:http>
+
+.. tabularcolumns:: |p{0.30\linewidth}|p{0.70\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - Sr. No.
+      - Description
+
+    * - | (1)
+      - | Add definition of Spring Security for SOAP Web Service.
+        | Specify URL pattern of request path for SOAP Web Service in \ ``pattern``\  attribute of \ ``<sec:http>``\  element.
+        | In this code example, request path starting at \ ``/ws/``\  acts as a request path for SOAP Web Service.
+        | Further, the session can no longer be used in Spring Security process by making \  ``create-session``\  attribute \ ``stateless``\ .
+        |
+        | Set \ ``disabled``\  attribute of \ ``<sec:csrf>``\  element to \ ``true``\  for disabling CSRF measures.
+
+|
+
+Implementation of exception handling
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+| An exclusive exception class must be thrown for communicating with the client when an exception occurs in SOAP server.
+| Implementation is described below.
+
+
+**Exception occurred in SOAP server**
+
+Exception occurred at SOAP server can determine the notification message to the client by using class (SOAPFault) which implements exception described henceforth.
+  
+Basically the class given below is created.
+  
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.30\linewidth}|p{0.60\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 30 60
+
+    * - Sr. No.
+      - Class Name
+      - Overview
+    * - | (1)
+      - | \ ``ErrorBean``\
+      - | A class which retains code and message of occurred exception.
+    * - | (2)
+      - | \ ``WebFaultType``\
+      - | Enum type used to determine the type of exception.
+    * - | (3)
+      - | \ ``WebFaultBean``\
+      - | A class which retains \ ``ErrorBean``\  and \ ``WebFaultType``\ . Multiple exception information can be retained by retaining \ ``ErrorBean``\  in \ ``List``\ .
+    * - | (4)
+      - | \ ``WebFaultException``\
+      - | Exception class which retains \ ``WebFaultBean``\ .
+  
+These exceptions are placed on [server projectName]-webservice since these are shared by SOAP server and client.
+
+|
+
+*[server projectName]-webservice/src/main/java/com/example/ws/webfault/ErrorBean.java*
+
+.. code-block:: java
+
+    package com.example.ws.webfault;
+
+    public class ErrorBean { // (1)
+        private String code;
+        private String message;
+        private String path;
+
+        // omitted setter and getter
+    }
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - Sr. No.
+      - Description
+    * - | (1)
+      - | Create a class which retains exception messages etc.
+
+|
+
+*[server projectName]-webservice/src/main/java/com/example/ws/webfault/WebFaultType.java*
+
+.. code-block:: java
+
+    package com.example.ws.webfault;
+
+    public enum WebFaultType { // (2)
+        AccessDeniedFault,
+        BusinessFault,
+        ResourceNotFoundFault,
+        ValidationFault,
+    }
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - Sr. No.
+      - Description
+    * - | (1)
+      - | Define an enum type used to identify type of exception.
+
+|
+
+*[server projectName]-webservice/src/main/java/com/example/ws/webfault/WebFaultBean.java*
+
+.. code-block:: java
+
+    package com.example.ws.webfault;
+
+    import java.util.ArrayList;
+    import java.util.List;
+
+    public class WebFaultBean { // (3)
+
+        private WebFaultType type;
+
+        private List<ErrorBean> errors = new ArrayList<ErrorBean>();
+
+        public WebFaultBean(WebFaultType type) {
+            this.type = type;
+        }
+
+        public void addError(String code, String message) {
+            addError(code, message, null);
+        }
+
+        public void addError(String code, String message, String path) {
+            errors.add(new ErrorBean(code, message, path));
+        }
+
+        // omitted setter and getter
+    }
+
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - Sr. No.
+      - Description
+    * - | (1)
+      - | Create a class which retains \ ``ErrorBean``\  and \ ``WebFaultType``\ .
+
+|
+
+*[server projectName]-webservice/src/main/java/com/example/ws/webfault/WebFaultException.java*
+
+.. code-block:: java
+
+    package com.example.ws.webfault;
+
+    import java.util.List;
+
+    import javax.xml.ws.WebFault;
+
+    @WebFault(name = "WebFault", targetNamespace = "http://example.com/todo") // (1)
+    public class WebFaultException extends Exception {
+        private WebFaultBean faultInfo; // (2)
+
+        public WebFaultException() {
+        }
+
+        public WebFaultException(String message, WebFaultBean faultInfo) {
+            super(message);
+            this.faultInfo = faultInfo;
+        }
+
+        public WebFaultException(String message, WebFaultBean faultInfo, Throwable e) {
+            super(message, e);
+            this.faultInfo = faultInfo;
+        }
+
+        public List<ErrorBean> getErrors() {
+            return this.faultInfo.getErrors();
+        }
+
+        public WebFaultType getType() {
+            return this.faultInfo.getType();
+        }
+        // omitted setter and getter
+    }
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - Sr. No.
+      - Description
+    * - | (1)
+      - | Declare SOAPFault by applying \ ``@WebFault``\  to Exception inheritance class.
+        | Specify \ ``name``\  attribute of SOAPFault sent to client in \ ``name``\  attribute.
+        | Specify namespace to be used in \ ``targetNamespace``\  attribute. It must be same as in Web service.
+    * - | (2)
+      - | It consists of constructor and method below, as shown in code example besides retaining the faultInfo in the field.
+
+        - Constructor wherein message string and faultInfo are considered as arguments
+        - Constructor wherein message string, faultInfo and cause exception are considered as arguments
+        - getFaultInfo method
+
+.. Note:: **Reason of inheriting Exception in WebFaultException instead of RuntimeException**
+
+    If parent class of \ ``WebFaultException``\  is set to \ ``RuntimeException``\ , exception process can be further simplified. However, parent class should not be set to \ ``RuntimeException``\ . it is also declared that it cannot be defined in \ `JSR 224: JavaTM API for XML-Based Web Services <https://jcp.org/en/jsr/detail?id=224>`_\  as well. Although, it depends on JAS-WS implementation of AP server during an actual attempt, exception class （\ ``WebFaultException``\ ) wherein \ ``@WebFault``\  is applied in the client cannot be fetched resulting in inability to fetch error types and message. Inheriting \ ``Exception``\ also results in non-implementation of exception process using AOP.
+
+.. warning:: **Constructor and field of WebFaultException**
+
+    A setter corresponding to each field and default constructor is mandatory in \ ``WebFaultException``\ . This is an internal process of client and is used while creating \ ``WebFaultException``\ . Therefore, it is also not possible to consider each field as final.
+  
+  
+|
+
+
+| This \ ``WebFaultException``\  is inherited, and types to be communicated to the client and child class are created.
+| For example, child classes are created as given below.
+
+- Business error exception
+- Input error exception
+- Resource not detected exception
+- Exclusive error exception
+- Authorization exception
+- System error exception
+
+Following is an example of business error exception.
+
+*[server projectName]-webservice/src/main/java/com/example/ws/webfault/BusinessFaultException.java*
+
+.. code-block:: java
+
+    package com.example.ws.webfault;
+
+    import javax.xml.ws.WebFault;
+
+    @WebFault(name = "BusinessFault", targetNamespace = "http://example.com/todo") // (1)
+    public class BusinessFaultException extends WebFaultException {
+
+        public BusinessFaultException(String message, WebFaultBean faultInfo) {
+            super(message, faultInfo);
+        }
+
+        public BusinessFaultException(String message, WebFaultBean faultInfo, Throwable e) {
+            super(message, faultInfo, e);
+        }
+
+    }
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - Sr. No.
+      - Description
+    * - | (1)
+      - | Inherit \ ``WebFaultException``\  and create only constructor.
+        | Field and other methods are not required to be described since parent class method is used.
+
+|
+
+**Exception handler which wraps exceptions that have occurred by SOAPFault**
+
+
+Exception handler class is created for wrapping the run-time exceptions which occur in Service by SOAPFault.
+This guideline adopts a policy wherein WebService implementation class converts and throws exceptions using this handler.
+
+Exception thrown from Service assumes the following. It should be added when required.
+
+.. tabularcolumns:: |p{0.60\linewidth}|p{0.40\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 60 40
+
+    * - Exception name
+      - Details
+    * - | \ ``org.springframework.security.access.AccessDeniedException``\		
+      - | Exception at the time of authorization error
+    * - | \ ``javax.validation.ConstraintViolationException``\
+      - | Exception at the time of input check error
+    * - | \ ``org.terasoluna.gfw.common.exception.ResourceNotFoundException``\
+      - | Exception when resource is not detected
+    * - | \ ``org.terasoluna.gfw.common.exception.BusinessException``\
+      - | Business exception
+
+
+*[server projectName]-web/src/main/java/com/example/ws/exception/WsExceptionHandler.java*
+
+.. code-block:: java
+
+    package com.example.ws.exception;
+
+    import java.util.Iterator;
+    import java.util.Locale;
+    import java.util.Set;
+
+    import javax.inject.Inject;
+    import javax.validation.ConstraintViolation;
+    import javax.validation.ConstraintViolationException;
+    import javax.validation.Path;
+
+    import org.springframework.context.MessageSource;
+    import org.springframework.security.access.AccessDeniedException;
+    import org.springframework.stereotype.Component;
+    import org.terasoluna.gfw.common.exception.BusinessException;
+    import org.terasoluna.gfw.common.exception.ExceptionCodeResolver;
+    import org.terasoluna.gfw.common.exception.ExceptionLogger;
+    import org.terasoluna.gfw.common.exception.ResourceNotFoundException;
+    import org.terasoluna.gfw.common.exception.SystemException;
+    import org.terasoluna.gfw.common.message.ResultMessage;
+    import org.terasoluna.gfw.common.message.ResultMessages;
+
+    import com.example.ws.webfault.WebFaultBean;
+    import com.example.ws.webfault.WebFaultException;
+    import com.example.ws.webfault.WebFaultType;
+
+    @Component  // (1)
+    public class WsExceptionHandler {
+
+        @Inject
+        MessageSource messageSource; // (2)
+
+        @Inject
+        ExceptionCodeResolver exceptionCodeResolver; // (3)
+
+        @Inject
+        ExceptionLogger exceptionLogger; // (4)
+
+        // (5)
+        public void translateException(Exception e) throws WebFaultException {
+            loggingException(e);
+            WebFaultBean faultInfo = null;
+
+            if (e instanceof AccessDeniedException) {
+                faultInfo = new WebFaultBean(WebFaultType.AccessDeniedFault);
+                faultInfo.addError(e.getClass().getName(), e.getMessage());
+            } else if (e instanceof ConstraintViolationException) {
+                faultInfo = new WebFaultBean(WebFaultType.ValidationFault);
+                this.addErrors(faultInfo, ((ConstraintViolationException) e).getConstraintViolations());
+            } else if (e instanceof ResourceNotFoundException) {
+                faultInfo = new WebFaultBean(WebFaultType.ResourceNotFoundFault);
+                this.addErrors(faultInfo, ((ResourceNotFoundException) e).getResultMessages());
+            } else if (e instanceof BusinessException) {
+                faultInfo = new WebFaultBean(WebFaultType.BusinessFault);
+                this.addErrors(faultInfo, ((BusinessException) e).getResultMessages());
+            } else {
+                // not translate.
+                throw new SystemException("e.ex.fw.9001", e);
+            }
+
+            throw new WebFaultException(e.getMessage(), faultInfo, e.getCause());
+        }
+
+        private void loggingException(Exception e) {
+            exceptionLogger.log(e);
+        }
+
+        private void addErrors(WebFaultBean faultInfo, Set<ConstraintViolation<?>> constraintViolations) {
+            for (ConstraintViolation<?> v : constraintViolations) {
+                Iterator<Path.Node> pathIt = v.getPropertyPath().iterator();
+                pathIt.next(); // method name node (skip)
+                Path.Node methodArgumentNameNode = pathIt.next();
+                faultInfo.addError(
+                    v.getConstraintDescriptor().getAnnotation().annotationType().getSimpleName(),
+                    v.getMessage(),
+                    pathIt.hasNext() ? pathIt.next().toString() : methodArgumentNameNode.toString());
+            }
+
+        }
+
+        private void addErrors(WebFaultBean faultInfo, ResultMessages resultMessages) {
+            Locale locale = Locale.getDefault();
+            for (ResultMessage message : resultMessages) {
+                faultInfo.addError(
+                    message.getCode(),
+                    messageSource.getMessage(message.getCode(), message.getArgs(), message.getText(), locale));
+            }
+        }
+
+    }
+
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - Sr. No.
+      - Description
+    * - | (1)
+      - | Apply \ ``@Component``\  for managing the class in DI container.
+    * - | (2)
+      - | Use \ ``MessageSource``\  to fetch the message to be output.
+    * - | (3)
+      - | Use \ ``ExceptionCodeResolverMessageSource``\  provided by common library and map exception types and exception codes.
+        | For details, refer "\ :doc:`ExceptionHandling`\ ".
+    * - | (4)
+      - | Use \ ``ExceptionLogger``\  provided by common library and output exception information in the exception.
+        | For details, refer "\ :doc:`ExceptionHandling`\ ".
+    * - | (5)
+      - | Each exception occurring in Service is wrapped in \ ``SOAPFault``\ .
+        | Refer table at the beginning for exception mapping.
+
+.. note:: **Other exception handling**
+
+    In case of other exceptions (else part of \ ``translateException``\  method described above), detailed exception details are not notified to the client and only \ ``com.sun.xml.internal.ws.fault.ServerSOAPFaultException``\  is thrown.Exception can also be wrapped like other exceptions and notified to the client side.
+
+|
+
+**Exception occurred in the Service is wrapped in Web service by calling exception handler**
+
+Exception handler is called in Web service class. Example is given below.
+
+*[server projectName]-web/src/main/java/com/example/ws/todo/TodoWebServiceImpl.java*
+
+.. code-block:: java
+
+
+    @WebService(
+            portName = "TodoWebPort",
+            serviceName = "TodoWebService",
+            targetNamespace = "http://example.com/todo",
+            endpointInterface = "com.example.ws.todo.TodoWebService")
+    @BindingType(SOAPBinding.SOAP12HTTP_BINDING)
+    public class TodoWebServiceImpl extends SpringBeanAutowiringSupport implements TodoWebService {
+        @Inject
+        TodoService todoService;
+        @Inject
+        WsExceptionHandler handler; // (1)
+
+        @Override
+        public Todo getTodo(String todoId) throws WebFaultException /* (2) */ {
+            try {
+                return todoService.getTodo(todoId);
+            } catch (RuntimeException e) {
+                handler.translateException(e); // (3)
+            }
+        }
+    }
+
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - Sr. No.
+      - Description
+    * - | (1)
+      - | Inject exception handler.
+    * - | (2)
+      - | Apply throws clause since the exception is thrown after wrapping in \ ``WebFaultException``\ .
+    * - | (3)
+      - | In case of run-time exception, delegate the process to exception handler class.
+
+|
+
+How to handle large binary data using MTOM
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+| Sending and receiving process can be carried out in SOAP by mapping Byte array while handling binary data.
+| However, while handling binary data of large volume, issues like memory exhaustion are likely to occur.
+| Accordingly, binary data can be handled as attached file in the optimised state by carrying out implementation in compliance with MTOM（Message Transmission Optimization Mechanism).
+| For detailed definition, refer `W3C -SOAP Message Transmission Optimization Mechanism- <http://www.w3.org/TR/soap12-mtom/>`_\ .
+| The method is described below.
+
+*[server projectName]-webservice/src/main/java/com/example/ws/todo/TodoWebService.java*
+
+.. code-block:: java
+
+    package com.example.ws.todo;
+
+    import java.util.List;
+
+    import javax.activation.DataHandler;
+    import javax.jws.WebMethod;
+    import javax.jws.WebParam;
+    import javax.jws.WebResult;
+    import javax.jws.WebService;
+    import javax.xml.bind.annotation.XmlMimeType;
+
+    import com.example.domain.model.Todo;
+    import com.example.ws.webfault.WebFaultException;
+
+    @WebService(targetNamespace = "http://example.com/todo")
+    public interface TodoWebService {
+
+        // omitted
+
+        @WebMethod
+        void uploadFile(@XmlMimeType("application/octet-stream") /* (1) */ DataHandler dataHandler) throws WebFaultException;
+
+    }
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - Sr. No.
+      - Description
+    * - | (1)
+      - | Apply \ ``@XmlMimeType``\  for \ ``javax.activation.DataHandler``\  which processes binary data.
+
+|
+
+*[server projectName]-web/src/main/java/com/example/ws/todo/TodoWebServiceImpl.java*
+
+.. code-block:: java
+
+    package com.example.ws.todo;
+
+    import java.io.IOException;
+    import java.io.InputStream;
+    import java.util.List;
+
+    import javax.activation.DataHandler;
+    import javax.inject.Inject;
+    import javax.jws.HandlerChain;
+    import javax.jws.WebService;
+    import javax.xml.ws.BindingType;
+    import javax.xml.ws.soap.MTOM;
+    import javax.xml.ws.soap.SOAPBinding;
+
+    import org.springframework.web.context.support.SpringBeanAutowiringSupport;
+    import org.terasoluna.gfw.common.exception.SystemException;
+
+    import com.example.domain.model.Todo;
+    import com.example.domain.service.TodoService;
+    import com.example.ws.webfault.WebFaultException;
+    import com.example.ws.exception.WsExceptionHandler;
+
+    // (1)
+    @MTOM
+    @WebService(
+            portName = "TodoWebPort",
+            serviceName = "TodoWebService",
+            targetNamespace = "http://example.com/todo",
+            endpointInterface = "com.example.ws.todo.TodoWebService")
+    @BindingType(SOAPBinding.SOAP12HTTP_BINDING)
+    public class TodoWebServiceImpl extends SpringBeanAutowiringSupport implements TodoWebService {
+
+        @Inject
+        TodoService todoService;
+
+        // omitted
+
+        @Override
+        public void uploadFile(DataHandler dataHandler) throws WebFaultException {
+
+            try (InputStream inputStream = dataHandler.getInputStream()){ // (2)
+                todoService.uploadFile(inputStream);
+            } catch (Exception e) {
+                handler.translateException(e);
+            }
+        }
+
+    }
+
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - Sr. No.
+      - Description
+    * - | (1)
+      - | Apply \ ``@MTOM``\  and declare the use of implementation in compliance with MTOM.
+    * - | (2)
+      - | Fetch \ ``java.io.InputStream``\  from \ ``javax.activation.DataHandler``\  and handle the file.
+
+|
+
+Creation of client
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+
+
+Project configuration
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+
+As described in "\ :ref:`SOAPOverviewAboutRESTfulWebServiceDevelopment`\ ", model project and webservice project are assumed to be received by SOAP server.
+
+.. figure:: images_SOAP/SOAPClientProjects.png
+    :alt: Client Projects for SOAP
+    :width: 80%
+
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.30\linewidth}|p{0.60\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 30 60
+
+    * - Sr. No.
+      - Project name
+      - Description
+    * - | (1)
+      - | web project
+      - | Create Controller.
+        | No specific change in the Controller during normal screen transition.
+    * - | (2)
+      - | domain project
+      - | Call Web service by using WebService interface which is provided in webservice project from Service class.
+    * - | (3)
+      - | webservice project
+      - | Configure data same as SOAP server.
+        | Client uses this interface to implement Web service.
+    * - | (4)
+      - | model project
+        | Configure data same as SOAP server.
+      - | Use class in the project for input value and return results passed to SOAP server.
+    * - | (5)
+      - | env project
+      - | Define a proxy class which implements WebService interface used while communicating with SOAP server.
+        | Since proxy class definition is often environment dependent, it is defined in env project.
+
+|
+
+.. _SOAPHowToUseWebServiceClient:
+
+Implementation of Web service client
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+Implement class as below.
+
+- Define a proxy class which implements WebService interface
+- Call Web service from Service class through WebService interface.
+
+.. figure:: images_SOAP/SOAPClientClass.png
+    :alt: Server Projects for SOAP
+    :width: 80%
+
+
+**Creating proxy class which implements WebService interface**
+
+Define \ ``org.springframework.remoting.jaxws.JaxWsPortProxyFactoryBean``\  generating a proxy class which implements a WebService interface.
+
+*[client projectName]-env/src/main/resources/META-INF/spring/[client projectName]-env.xml*
+
+.. code-block:: xml
+
+    <bean id="todoWebService"
+        class="org.springframework.remoting.jaxws.JaxWsPortProxyFactoryBean"><!-- (1) -->
+        <property name="serviceInterface" value="com.example.ws.todo.TodoWebService" /><!-- (2) -->
+        <!-- (3) -->
+        <property name="serviceName" value="TodoWebService" />
+        <property name="portName" value="TodoWebPort" />
+        <property name="namespaceUri" value="http://example.com/todo" />
+        <property name="wsdlDocumentResource" value="${webservice.todoWebService.wsdlDocumentResource}" /><!-- (4) -->
+    </bean>
+
+*[client projectName]-env/src/main/resources/META-INF/spring/[client projectName]-infra.properties*
+
+.. code-block:: properties
+
+    # (5)
+    webservice.todoWebService.wsdlDocumentResource=http://AAA.BBB.CCC.DDD:XXXX/[server projectName]-web/ws/TodoWebService?wsdl
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - Sr. No..
+      - Description
+    * - | (1)
+      - | Define \ ``org.springframework.remoting.jaxws.JaxWsPortProxyFactoryBean``\ .SOAP server can be accessed through proxy class generated by this class.
+    * - | (2)
+      - | Define an interface that should be implemented by Web service in \ ``serviceInterface``\  property.
+    * - | (3)
+      - | Details same as defined on the server side must be defined in \ ``serviceName``\  ,\ ``portName``\  and \ ``namespaceUri``\  property respectively.
+    * - | (4)
+      - | Specify URL of WDSL published in \ ``wsdlDocumentResource``\  property.
+        | Property key is specified since URL is described in the property file described later.
+    * - | (5)
+      - | Specify value of property key defined in \ ``[client projectName]-env.xml``\ .Describe URL of WSDL.
+
+        .. Note:: **Specify other than URL of WSDL file to wsdlDocumentResource**
+
+            In the example above, it is assumed that SOAP server publishes WSDL file. A static file can be specified as well by using \ ``classpath:``\  or \ ``file:``\  prefix. Refer \ `Spring Framework Reference Documentation -Resources(The ResourceLoader)- <http://docs.spring.io/spring/docs/current/spring-framework-reference/html/resources.html#resources-resourceloader>`_\  for strings that can be specified.
+
+
+.. Note:: **Overwriting end point address**
+
+    Access URL configuration is not required in the client since access URL at the time of executing Web service (end point address) is described in WSDL file.
+    However, when a URL not described in WSDL file is to be accessed, end point address can be overwritten by configuring \ ``endpointAddress``\  property of \ ``org.springframework.remoting.jaxws.JaxWsPortProxyFactoryBean``\ .
+    It should preferably be used while changing the environment in tests etc.
+    Configuration example is as below.
+
+    *[client projectName]-env/src/main/resources/META-INF/spring/[client projectName]-env.xml*
+
+     .. code-block:: xml
+         :emphasize-lines: 8
+
+         <bean id="todoWebService"
+             class="org.springframework.remoting.jaxws.JaxWsPortProxyFactoryBean">
+             <property name="serviceInterface" value="com.example.ws.todo.TodoWebService" />
+             <property name="serviceName" value="TodoWebService" />
+             <property name="portName" value="TodoWebPort" />
+             <property name="namespaceUri" value="http://example.com/todo" />
+             <property name="wsdlDocumentResource" value="${webservice.todoWebService.wsdlDocumentResource}" />
+             <property name="endpointAddress" value="${webservice.todoWebService.endpointAddress}" /><!-- (1) -->
+         </bean>
+
+    *[client projectName]-env/src/main/resources/META-INF/spring/[client projectName]-infra.properties*
+
+     .. code-block:: properties
+
+         # (2)
+         webservice.todoWebService.endpointAddress=http://AAA.BBB.CCC.DDD:XXXX/[server projectName]-web/ws/TodoWebService
+
+
+     .. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+     .. list-table::
+         :header-rows: 1
+         :widths: 10 90
+
+         * - Sr. No.
+           - Description
+         * - | (1)
+           - | Specify end point address.
+             | A property key is specified for describing URL in property file described later.
+         * - | (2)
+           - | Specify value of property key defined in \ ``[client projectName]-env.xml``\ . Describe end point address.
+
+|
+
+**Call Web service from Service**
+
+Inject Web service created above by Service and run Web service.
+
+
+*[client projectName]-domain/src/main/java/com/example/domain/service/todo/TodoServiceImpl.java*
+
+.. code-block:: java
+
+    package com.example.soap.domain.service.todo;
+
+    import java.util.List;
+
+    import javax.inject.Inject;
+
+    import org.springframework.stereotype.Service;
+
+    import com.example.domain.model.Todo;
+    import com.example.ws.webfault.WebFaultException;
+    import com.example.ws.todo.TodoWebService;
+
+    @Service
+    public class TodoServiceImpl implements TodoService {
+
+        @Inject
+        TodoWebService todoWebService;
+
+        @Override
+        public void createTodo(Todo todo) {
+            // (1)
+            try {
+                todoWebService.createTodo(todo);
+            } catch (WebFaultException e) {
+                // (2)
+                // handle exception…
+            }
+        }
+    }
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - Sr. No.
+      - Description
+
+    * - | (1)
+      - | Inject \ ``TodoWebService``\  and call Service to be run.
+    * - | (2)
+      - | When an exception occurs at the server side, it is wrapped in \ ``WebFaultException``\  and sent.
+        | Carry out process depending on the details.
+        | For details of exception process, refer ":ref:`SOAPHowToUseExceptionHandler`".
+
+.. note:: **Defining proxy class**
+
+    It is recommended to define proxy class in env project.
+    This is to enable changing implementation class of Web service by changing maven profile.
+    When sending destination of SOAP server for testing is to be changed or when the SOAP server is not ready,
+    the testing can be carried out without changing another source by creating a stub class.
+
+.. note:: **Fetch response information**
+
+    When the response information is to be fetched by the client for example retry, it can be fetched by casting in \ ``javax.xml.ws.BindingProvider``\  class as given below.
+
+     .. code-block:: java
+
+         BindingProvider provider = (BindingProvider) todoWebService;
+         int status = (int) provider.getResponseContext().get(MessageContext.HTTP_RESPONSE_CODE);
+
+    However, in this instance, implementation of Web service is dependent on the proxy class. Therefore, \ ``javax.xml.ws.BindingProvider``\  must be implemented  in stab even when stab is used during testing.
+    It is recommended to keep the use of this function to minimum.
+
+|
+
+
+Security measures
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+**Authentication process**
+
+When the communication is to be established with SOAP server which uses Basic authentication while using \ ``org.springframework.remoting.jaxws.JaxWsPortProxyFactoryBean``\ , authentication can be done only if user name and password are added to bean definition.
+
+*[client projectName]-env/src/main/resources/META-INF/spring/[client projectName]-env.xml*
+
+.. code-block:: xml
+    :emphasize-lines: 8-10
+
+    <bean id="todoWebService"
+        class="org.springframework.remoting.jaxws.JaxWsPortProxyFactoryBean">
+        <property name="serviceInterface" value="com.example.ws.todo.TodoWebService" />
+        <property name="serviceName" value="TodoWebService" />
+        <property name="portName" value="TodoWebPort" />
+        <property name="namespaceUri" value="http://example.com/todo" />
+        <property name="wsdlDocumentResource" value="${webservice.todoWebService.wsdlDocumentResource}" />
+        <!-- (1) -->
+        <property name="username" value="${webservice.todoWebService.username}" />
+        <property name="password" value="${webservice.todoWebService.password}" />
+    </bean>
+
+*[client projectName]-env/src/main/resources/META-INF/spring/[client projectName]-infra.properties*
+
+.. code-block:: properties
+
+    # (2)
+    webservice.todoWebService.username=testuser
+    webservice.todoWebService.password=password
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - Sr. No.
+      - Description
+    * - | (1)
+      - | Authentication information for Basic authentication can be sent by adding user name and password in bean definition of \ ``org.springframework.remoting.jaxws.JaxWsPortProxyFactoryBean``\ .
+        | It is a sample wherein user name and password are transferred to the property file.
+    * - | (2)
+      - | Specify value of property key defined in \ ``[client projectName]-env.xml``\ . Describe user name and password used for authentication.
+
+|
+
+.. _SOAPHowToUseExceptionHandler:
+
+Implementing exception handling
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+| In SOAP server, it is recommended to wrap exception in \ ``WebFaultException``\ and throw the same.
+| Client catches ``WebFaultException``\ , determines the cause for exception and carry out respective processing.
+
+.. code-block:: java
+    :emphasize-lines: 8-19
+
+    @Override
+    public void createTodo(Todo todo) {
+
+        try {
+            // (1)
+            todoWebService.createTodo(todo);
+        } catch (WebFaultException e) {
+            // (2)
+            switch (e.getFaultInfo().getType()) {
+            case ValidationFault:
+                // handle exception…
+                break;
+            case BusinessFault:
+                // handle exception…
+                break;
+            default:
+                // handle exception…
+                break;
+            }
+        }
+
+    }
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - Sr.No.
+      - Description
+    * - | (1)
+      - | Call Web service. \ ``WebFaultException``\  must be caught since throws clause is applied.
+    * - | (2)
+      - | Determine exception by \ ``faultInfo``\ type and describe respective process (sending a message to the screen, throwing an exception etc)
+
+|
+
+Timeout configuration
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+Timeout that can be specified by client is broadly classified into following two types.
+
+- Connection timeout for each SOAP server
+- Request timeout for each SOAP server
+
+| Both the configurations must be specified in the custom property of \ ``org.springframework.remoting.jaxws.JaxWsPortProxyFactoryBean``\ .
+| How to configure is as given below.
+
+*[client projectName]-env/src/main/resources/META-INF/spring/[client projectName]-env.xml*
+
+.. code-block:: xml
+    :emphasize-lines: 9-16
+
+    <bean id="todoWebService"
+        class="org.springframework.remoting.jaxws.JaxWsPortProxyFactoryBean">
+        <property name="serviceInterface" value="com.example.ws.todo.TodoWebService" />
+        <property name="serviceName" value="TodoWebService" />
+        <property name="portName" value="TodoWebPort" />
+        <property name="namespaceUri" value="http://example.com/todo" />
+        <property name="wsdlDocumentResource" value="${webservice.todoWebService.wsdlDocumentResource}" />
+        <!-- (1) -->
+        <property name="customProperties">
+            <map>
+                <!-- (2) -->
+                <entry key="com.sun.xml.internal.ws.connect.timeout" value-type="java.lang.Integer" value="${webservice.connect.timeout}"/>
+                <entry key="com.sun.xml.internal.ws.request.timeout" value-type="java.lang.Integer" value="${webservice.request.timeout}"/>
+            </map>
+        </property>
+    </bean>
+
+*[client projectName]-env/src/main/resources/META-INF/spring/[client projectName]-infra.properties*
+
+.. code-block:: properties
+
+    # (3)
+    webservice.request.timeout=3000
+    webservice.connect.timeout=3000
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - Sr. No.
+      - Description
+    * - | (1)
+      - | Define a custom property by specifying Map in \ ``customProperties``\  property.
+    * - | (2)
+      - | Define connection timeout and request timeout.
+        | It is a sample wherein the respective values are transferred to a property file.
+
+        .. warning:: **Key used for defining timeout**
+
+            It is necessary to specify a different value based on JAX-WS implementation as a key to define respective timeout.
+            For details, refer \ `JAX_WS-1166 Standardize timeout settings <https://java.net/jira/browse/JAX_WS-1166>`_\ .
+
+    * - | (3)
+      - | Specify value of property key defined in \ ``[client projectName]-env.xml``\ . Connection timeout and request timeout are described.
+
+
+|
+
+Appendix
+--------------------------------------------------------------------------------
+
+.. _SOAPAppendixAddProject:
+
+Project configuration is changed for SOAP server.
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+| It is recommended to add model project and webservice project to the blank project while creating SOAP server.
+| The method is described below.
+
+| Blank project default configuration is as below.
+| Note that, artifactId specified while creating a blank project is configured in artifactId.
+
+.. code-block:: console
+
+    artifactId
+    ├── pom.xml
+    ├── artifactId-domain
+    ├── artifactId-env
+    ├── artifactId-initdb
+    ├── artifactId-selenium
+    └── artifactId-web
+
+Project configuration is as below.
+
+.. code-block:: console
+
+    artifactId
+    ├── pom.xml
+    ├── artifactId-domain
+    ├── artifactId-env
+    ├── artifactId-initdb
+    ├── artifactId-selenium
+    ├── artifactId-web
+    ├── artifactId-model
+    └── artifactId-webservice
+
+|
+
+Changing existing project
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+
+| A simple implementation of Web application like Controller etc is included in the default state of the blank project.
+| SOAP web service can be used as it is, however, it is recommended to delete the same since it is not required.
+| For deletion target, refer ":ref:`CreateWebApplicationProjectConfigurationMulti` of :doc:`../ImplementationAtEachLayer/CreateWebApplicationProject` ".
+
+|
+
+Creating model project
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+
+model project configuration is explained.
+
+.. code-block:: console
+
+    artifactId-model
+        ├── pom.xml  ... (1)
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - | Sr. No.
+      - | Description
+    * - | (1)
+      - A POM (Project Object Model) file which defines model module configuration.
+        Following are defined in this file.
+
+        * Definition of plug-ins for dependent libraries and build
+        * Definition for creating jar file
+
+| \ ``pom.xml``\  is as shown in the image below. It must be edited when required.
+| Actually, the values specified while creating a blank project must be configured for "artifactId" and "groupId".
+
+.. code-block:: xml
+
+    <?xml version="1.0" encoding="UTF-8"?>
+    <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
+
+        <modelVersion>4.0.0</modelVersion>
+        <artifactId>artifactId-model</artifactId>
+        <packaging>jar</packaging>
+        <parent>
+            <groupId>groupId</groupId>
+            <artifactId>artifactId</artifactId>
+            <version>1.0.0-SNAPSHOT</version>
+            <relativePath>../pom.xml</relativePath>
+        </parent>
+        <dependencies>
+            <!-- == Begin TERASOLUNA == -->
+            <dependency>
+                <groupId>org.terasoluna.gfw</groupId>
+                <artifactId>terasoluna-gfw-common</artifactId>
+            </dependency>
+            <dependency>
+                <groupId>org.terasoluna.gfw</groupId>
+                <artifactId>terasoluna-gfw-jodatime</artifactId>
+            </dependency>
+            <dependency>
+                <groupId>org.terasoluna.gfw</groupId>
+                <artifactId>terasoluna-gfw-security-core</artifactId>
+            </dependency>
+
+            <dependency>
+                <groupId>org.terasoluna.gfw</groupId>
+                <artifactId>terasoluna-gfw-recommended-dependencies</artifactId>
+                <type>pom</type>
+            </dependency>
+            <!-- == End TERASOLUNA == -->
+        </dependencies>
+    </project>
+
+|
+
+Creating webservice project
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+
+webservice project configuration is explained.
+
+.. code-block:: console
+
+    artifactId-webservice
+        ├── pom.xml  ... (1)
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - | Sr. No.
+      - | Description
+    * - | (1)
+      - A POM (Project Object Model) file which defines webservice module configuration.
+        Following are defined in this file.
+
+        * Definition of plug-ins for dependent libraries and builds
+        * Definition for creating a jar file
+
+| \ ``pom.xml``\  is as shown in the image below. It must be edited when required.
+| Actually, the values specified while creating a blank project must be configured for "artifactId" and "groupId".
+
+.. code-block:: xml
+
+    <?xml version="1.0" encoding="UTF-8"?>
+    <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
+
+        <modelVersion>4.0.0</modelVersion>
+        <artifactId>artifactId-webservice</artifactId>
+        <packaging>jar</packaging>
+        <parent>
+            <groupId>groupId</groupId>
+            <artifactId>artifactId</artifactId>
+            <version>1.0.0-SNAPSHOT</version>
+            <relativePath>../pom.xml</relativePath>
+        </parent>
+        <dependencies>
+            <dependency>
+                <groupId>${project.groupId}</groupId>
+                <artifactId>artifactId-model</artifactId>
+            </dependency>
+            <!-- == Begin TERASOLUNA == -->
+            <dependency>
+                <groupId>org.terasoluna.gfw</groupId>
+                <artifactId>terasoluna-gfw-common</artifactId>
+            </dependency>
+            <dependency>
+                <groupId>org.terasoluna.gfw</groupId>
+                <artifactId>terasoluna-gfw-jodatime</artifactId>
+            </dependency>
+            <dependency>
+                <groupId>org.terasoluna.gfw</groupId>
+                <artifactId>terasoluna-gfw-security-core</artifactId>
+            </dependency>
+
+            <dependency>
+                <groupId>org.terasoluna.gfw</groupId>
+                <artifactId>terasoluna-gfw-recommended-dependencies</artifactId>
+                <type>pom</type>
+            </dependency>
+            <!-- == End TERASOLUNA == -->
+        </dependencies>
+    </project>
+
+|
+
+.. _SOAPAppendixPackageServer:
+
+Package configuration of SOAP server
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+| Recommended configuration while creating SOAP server is explained.
+| Following configuration is obtained if the project is added in conformance with the guidelines.
+
+.. tabularcolumns:: |p{0.30\linewidth}|p{0.70\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 30 70
+
+    * - Project name
+      - Description
+    * - | [server projectName]-domain
+      - | Project which stores class and configuration file related to domain layer of SOAP server
+    * - | [server projectName]-web
+      - | Project which stores class and configuration file related to application layer of SOAP server
+    * - | [server projectName]-env
+      - | Project which stores files dependent on the environment of SOAP server
+    * - | [server projectName]-model
+      - | Project which stores the class to be shared with the client and used while executing Web service, from the classes related to domain layer of SOAP server
+    * - | [server projectName]-webservice
+      - | Project which stores interface of Web service offered by SOAP server
+
+|
+
+
+[server projectName]-domain
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+
+Following is added to \ ``pom.xml``\  for adding dependency of [server projectName]-model.
+
+.. code-block:: xml
+      
+    <dependency>
+        <groupId>${project.groupId}</groupId>
+        <artifactId>artifactId-model</artifactId>
+    </dependency>
+
+Refer ":ref:`application-layering_project-structure` of :doc:`../Overview/ApplicationLayering` " since package configuration besides these is not different from the usual domain project.
+
+|
+
+[server projectName]-web
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+
+Following is added to \ ``pom.xml``\  for adding dependency of [server projectName]-webservice.
+
+.. code-block:: xml
+
+    <dependency>
+        <groupId>${project.groupId}</groupId>
+        <artifactId>artifactId-webservice</artifactId>
+    </dependency>
+
+.. note:: **How to resolve a dependency**
+
+    It is not necessary to define dependency of [server projectName]-model because a transitive dependency is added since dependency to [server projectName]-model is defined from [server projectName]-webservice.
+      
+|
+
+Recommended configuration for [server projectName]-web project is shown below.
+
+.. code-block:: console
+
+    [server projectName]-web
+      └src
+          └main
+              ├java
+              │  └com
+              │      └example
+              │          ├app...(1)
+              │          └ws...(2)
+              │            ├exception...(3)
+              │            │  └WsExceptionHandler.java
+              │            ├abc
+              │            │  └AbcWebServiceImpl.java
+              │            └def
+              │                └DefWebServiceImpl.java
+              ├resources
+              │  ├META-INF
+              │  │  └spring
+              │  │      ├applicationContext.xml...(4)
+              │  │      ├application.properties...(5)
+              │  │      ├spring-mvc.xml ...(6)
+              │  │      ├spring-security.xml...(7)
+              │  │      └[server projectName]-ws.xml...(8)
+              │  └i18n
+              │      └application-messages.properties...(9)
+              └webapp
+                  ├resources...(10)
+                  └WEB-INF
+                      ├views ...(11)
+                      └web.xml...(12)
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - Sr. No.
+      - Description
+    * - | (1)
+      - | Package which stores configuration elements of application layer.
+        | It may be deleted if only Web service is required to be created.
+    * - | (2)
+      - | Package which stores related class of Web service.
+    * - | (3)
+      - | Package which stores exception handler etc of Web service.
+    * - | (4)
+      - | Defines a bean related to overall application.
+    * - | (5)
+      - | Define a property to be used in the application.
+    * - | (6)
+      - | Define a Bean for configuring Spring MVC.
+        | It may be deleted if only Web service is required to be created.
+    * - | (7)
+      - | Define a Bean for configuring Spring Security.
+    * - | (8)
+      - | Define a Bean for Web service.
+    * - | (9)
+      - | Define a message (internationalization) for screen display.
+    * - | (10)
+      - | Stores static resources (css, js, image etc).
+        | It may be deleted if only Web service is required to be created.
+    * - | (11)
+      - | Stores View (jsp).
+        | It may be deleted if only Web service is required to be created.
+    * - | (12)
+      - | Define Servlet deployment.
+
+
+.. Note:: **Files not required for SOAP server**
+
+    When only Web service is to be created in SOAP server, Spring MVC configuration file existing in the blank project is not required, hence can be deleted.
+
+
+|
+
+[server projectName]-env
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+
+Since [server projectName]-env does not differ from normal env project, refer ":ref:`application-layering_project-structure` of :doc:`../Overview/ApplicationLayering`".
+
+|
+
+[server projectName]-model
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+
+Recommended project configuration of [server projectName]-model is shown below.
+
+.. code-block:: console
+
+    [server projectName]-model
+      └src
+          └main
+              └java
+                  └com
+                      └example
+                          └domain ...(1)
+                              └model ...(2)
+                                  ├Xxx.java
+                                  ├Yyy.java
+                                  └Zzz.java
+
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - Sr. No.
+      - Description
+    * - | (1)
+      - | Package which stores configuration elements of domain layer.
+    * - | (2)
+      - | Package which stores the class to be used while implementing Web service in the Domain Object.
+
+|
+
+[server projectName]-webservice
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+
+Recommended project configuration of [server projectName]-webservice is shown below.
+  
+  
+.. code-block:: console
+
+    [server projectName]-webservice
+      └src
+          └main
+              └java
+                  └com
+                      └example
+                          └ws...(1)
+                            ├webfault...(2)
+                            ├abc
+                            │  └AbcWebService.java
+                            └def
+                                └DefWebService.java
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - Sr. No.
+      - Description
+    * - | (1)
+      - | Package which stores Web service interface.
+    * - | (2)
+      - | Package which stores webfault of Web service.
+
+|
+
+.. _SOAPAppendixPackageClient:
+
+Package configuration of client
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+| Recommended configuration while creating a client is explained.
+| Project when provided from SOAP Server in accordance with the guidelines is of following configuration.
+
+.. tabularcolumns:: |p{0.30\linewidth}|p{0.70\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 30 70
+
+    * - Project name
+      - Description
+    * - | [client projectName]-domain
+      - | Project which stores class and configuration file related to domain layer of client
+    * - | [client projectName]-web
+      - | Project which stores class and configuration file related to application layer of client
+    * - | [client projectName]-env
+      - | Project which stores files dependent on the client environment
+
+.. note::
+
+    For [server projectName]-model and [server projectName]-webservice, refer " :ref:`SOAPAppendixPackageServer`" described earlier.
+
+|
+
+[client projectName]-domain
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+
+Following is added to \ ``pom.xml``\  for adding dependency of [server projectName]-webservice offered from SOAP server.
+
+.. code-block:: xml
+      
+    <dependency>
+        <groupId>${project.groupId}</groupId>
+        <artifactId>artifactId-webservice</artifactId>
+    </dependency>
+
+.. note:: **how to resolve dependency**
+
+    Similar to [server projectName]-web, it is not necessary to define dependency of [server projectName]-model in \ ``pom.xml``\  because a transitive dependency is added since dependency relation to [server projectName]-model is defined from [server projectName]-webservice.
+
+Since package configuration other than this is not different from the usual domain project, refer ":ref:`application-layering_project-structure` of :doc:`../Overview/ApplicationLayering` ".
+
+|
+
+[client projectName]-web
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+
+Since [client projectName]-web is not different from the usual web project, refer ":ref:`application-layering_project-structure` of :doc:`../Overview/ApplicationLayering`".
+  
+  
+
+[client projectName]-env
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+
+Recommended project configuration of [client projectName]-env project is shown below.
+  
+  
+.. code-block:: console
+
+    [projectName]-env
+      ├configs ...(1)
+      │   └[envName] ...(2)
+      │       └resources ...(3)
+      └src
+          └main
+              └resources ...(4)
+                 ├META-INF
+                 │  └spring
+                 │      ├[projectName]-env.xml ...(5)
+                 │      └[projectName]-infra.properties ...(6)
+                 ├dozer.properties
+                 ├log4jdbc.properties
+                 └logback.xml ...(7)
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - Sr. No.
+      - Description
+    * - | (1)
+      - | Directory for managing environment dependent files of overall environment.
+    * - | (2)
+      - | Directory for managing environment dependent files for each environment.
+        | Specify a name which identifies the environment, as a directory name.
+    * - | (3)
+      - | Directory for managing configuration files for each environment.
+        | Subdirectory configuration and configuration files to be managed are same as (4).
+    * - | (4)
+      - | Directory for managing configuration files for local development environment.
+    * - | (5)
+      - | Define a Bean for local development environment.
+        | Specify a proxy class of Web service in this file.
+    * - | (6)
+      - | Define a property for local development environment.
+        | Specify the value that can be changed for each environment like URL of WSDL.
+    * - | (7)
+      - | Define log output for local development environment.
+
+|
+
+.. _SOAPAppendixWsimport:
+
+wsimport
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+
+| wsimport is a command line tool that is included in Java SE.
+| It outputs a Java class (source as well depending on the options) which can call Web service by reading WSDL file.
+
+Using wsimport
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+
+| In this guideline, wsimport has been recommended to be used in the cases given in the image below..
+| Web service can be implemented by using wsimport while creating a client even when Domain Object or Web service interface which are used in SOAP server cannot be used.
+
+.. figure:: images_SOAP/SOAPModelNoProvide.png
+    :alt: Server and Client Projects for SOAP
+    :width: 80%
+
+|
+
+How to use wsimport
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+
+| It is stored in the bin folder of JDK and can be used only by going through the path.
+| When the command is executed on the command line as given below, the source file is created in the current directory.
+
+
+.. code-block:: bat
+
+    # (1)
+    wsimport -keep -p [Package name of the source to be output] -s [Location which stores source to be output] [URL of wsdl]
+
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - Sr. No.
+      - Description
+    * - | (1)
+      - | Specify URL of WSDL as an argument of wsimport.
+        | Following are used as an option.
+        
+          * -keep Source is output as well.
+          * -p Specify the package of the source to be output.
+          * -s Specify the location which stores the source to be output.
+          
+        | For other options, refer \ `Java Platform, Standard Edition Tools Reference -Web Services(wsimport)- <http://docs.oracle.com/javase/8/docs/technotes/tools/windows/wsimport.html>`_\ .
+
+.. note::
+
+    wsimport outputs only class file as the default behaviour. No action is required only for the moving operation, however when a debug operation is to be carried out, it is recommended to apply 'keep' option and store source as well.
+
+
+|
+
+For example, the commands are as below.
+
+.. code-block:: bat
+
+    wsimport -keep -p com.example.ws.todo -s c:/tmp http://AAA.BBB.CCC.DDD:XXXX/soap-web/ws/TodoWebService?wsdl
+
+Although the source created is dependent on Web service to be published, Java class used in the guideline is output.
+    
+* Web service interface (\ ``TodoWebService.java``\  in the source example）
+* Domain Object (\ ``Todo.java``\  in the source example)
+
+| When the class generated by wsimport is to be used in only one client project, it should be placed in the domain project.
+| Although generated class belongs to infrastructure layer(\ :ref:`application-layering_Integration-System-Connector`\ ), it can also be included in the normal domain project as shown in Note of \ :ref:`application-layering_project-structure`\ .
+| When the generated class is to be used for multiple clients, it is preferable to create model project and webservice project based on \ :ref:`SOAPAppendixAddProject`\ and use by referring the same from respective clients.
+
+.. note::
+
+    Java class to be output is also output in the cases other than above. A client can be created only by using source that has been output. However, as a policy in this guideline, since the client uses \ ``org.springframework.remoting.jaxws.JaxWsPortProxyFactoryBean``\ , it is recommended to not to use another Java class.
+
+|
+
+.. _SOAPAppendixTomcatWebService:
+
+Web service development on Tomcat
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+| Although JAS-VX on Java EE server is described in the guideline, JAX-WS is not implemented in case of Tomcat.
+| Therefore, when SOAP server is Tomcat, \ `Apache CXF <https://cxf.apache.org/>`_\  is used as an implementation product of JAX-WS. It is necessary to use \ ``CXFServlet``\  by changing the configuration.
+| When Apache CXF is used, a couple of implementation methods of WebService class exist as given below.
+
+#. A method wherein Web service implementation class is described in POJO
+#. A method wherein Web service implementation class is created by inheriting \ ``SpringBeanAutowiringSupport``\ . (method that has been described so far)
+
+| In case of 1, since POJO is used as a Web service implementation class, unit testing can be easily carried out. However, this method may not work well for AP servers other than Tomcat. Therefore, implementation by using second method is described in the guideline instead of using first method. However, when only Tomcat is used, using the first method is recommended due to a number of advantages.
+| In case of 2, implementation can be done similar to other AP servers. Operations are carried out on Java EE server, however, this method is used when Tomcat must be mandatorily used during development.
+
+|
+
+Configuration while using CXFServlet
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+
+Library configuration is described in \ ``pom.xml``\  to use \ ``CXFServlet``\ .
+
+.. code-block:: xml
+
+    <!-- (1) -->
+    <dependency>
+        <groupId>org.apache.cxf</groupId>
+        <artifactId>cxf-rt-frontend-jaxws</artifactId>
+        <version>3.1.4</version>
+    </dependency>
+    <dependency>
+        <groupId>org.apache.cxf</groupId>
+        <artifactId>cxf-rt-transports-http</artifactId>
+        <version>3.1.4</version>
+    </dependency>
+
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - Sr. No.
+      - Description
+    * - | (1)
+      - | Add dependency to Apache CXF library for using \ ``CXFServlet``\ .
+
+|
+
+Next, \ ``CXFServlet``\ which receives SOAP Web Service in \ ``web.xml``\  is defined.
+
+.. code-block:: xml
+      
+    <!-- (1) -->
+    <servlet>
+        <servlet-name>cxfServlet</servlet-name>
+        <servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
+        <init-param>
+            <param-name>config-location</param-name>
+            <param-value>classpath:/META-INF/spring/cxf-servlet.xml</param-value>
+        </init-param>
+        <load-on-startup>1</load-on-startup>
+    </servlet>
+    <!-- (2) -->
+    <servlet-mapping>
+        <servlet-name>cxfServlet</servlet-name>
+        <url-pattern>/ws/*</url-pattern>
+    </servlet-mapping>
+      
+      
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - Sr. No.
+      - Description
+    * - | (1)
+      - | Define servlet for \ ``org.apache.cxf.transport.servlet.CXFServlet``\ .
+        | Specify path of \ ``cxf-servlet.xml``\ to be described later, in \ ``config-location``\ .
+    * - | (2)
+      - | Define mapping for the servlet that has been defined. In this case, Web service is created under Context name/ws.
+
+|
+
+Configuration required in POJO method
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+
+Specify Web service implementation class as an endpoint.
+
+
+*[server projectName]-web/src/main/resources/META-INF/spring/cxf-servlet.xml*
+
+.. code-block:: xml
+
+    <beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+        xmlns:context="http://www.springframework.org/schema/context"
+        xmlns:jaxws="http://cxf.apache.org/jaxws" xmlns:soap="http://cxf.apache.org/bindings/soap"
+        xsi:schemaLocation="http://www.springframework.org/schema/beans
+             http://www.springframework.org/schema/beans/spring-beans.xsd
+             http://www.springframework.org/schema/context
+             http://www.springframework.org/schema/context/spring-context.xsd
+             http://cxf.apache.org/jaxws
+             http://cxf.apache.org/schemas/jaxws.xsd
+             http://cxf.apache.org/bindings/soap
+             http://cxf.apache.org/schemas/configuration/soap.xsd">
+
+        <!-- (1) -->
+        <jaxws:endpoint id="todoWebEndpoint" implementor="#todoWebServiceImpl"
+            address="/TodoWebService" />
+
+    </beans>
+      
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - Sr. No.
+      - Description
+    * - | (1)
+      - | Define the endpoint to be published.
+        | Specify bean name ("bean name" format) of Web service class which is registered in DI container, in the \ ``implementor``\  attribute.
+        | Specify address which publishes Web service, in \ ``address``\  attribute.
+        | Address describes only the path of end point to be published.
+        | For attribute details, refer \ `Apache CXF JAX-WS Configuration <https://cwiki.apache.org/confluence/display/CXF20DOC/JAX-WS+Configuration>`_\ .
+
+
+|
+
+Create \ ``TodoWebServiceImpl``\  as POJO.
+
+*[server projectName]-web/src/main/java/com/example/ws/todo/TodoWebServiceImpl.java*
+
+.. code-block:: java
+
+    package com.example.ws.todo;
+
+    import java.util.List;
+
+    import javax.inject.Inject;
+    import javax.jws.HandlerChain;
+    import javax.jws.WebService;
+    import javax.xml.ws.BindingType;
+    import javax.xml.ws.soap.SOAPBinding;
+
+    import org.springframework.web.context.support.SpringBeanAutowiringSupport;
+
+    import org.springframework.stereotype.Component;
+
+    import com.example.domain.model.Todo;
+    import com.example.domain.service.TodoService;
+    import com.example.ws.webfault.WebFaultException;
+    import com.example.ws.exception.WsExceptionHandler;
+    import com.example.ws.todo.TodoWebService;
+
+    // (1)
+    @Component
+    @WebService(
+          portName = "TodoWebPort",
+          serviceName = "TodoWebService",
+          targetNamespace = "http://example.com/todo",
+          endpointInterface = "com.example.ws.todo.TodoWebService")
+    @BindingType(SOAPBinding.SOAP12HTTP_BINDING)
+    // (2)
+    public class TodoWebServiceImpl implements TodoWebService {
+
+        // omitted
+
+    }
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - Sr. No.
+      - Description
+    * - | (1)
+      - | Apply \ ``@Component`` \  and register to DI container.
+        |
+    * - | (2)
+      - | Create as POJO since registration to DI container is possible by component scan. Basically, inheriting \ ``org.springframework.web.context.support.SpringBeanAutowiringSupport``\  is not necessary.
+        |
+
+|
+
+Configuration required for the method that inherits SpringBeanAutowiringSupport
+"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+
+Class name and address acting as SOAP end points are defined in the Bean definition file for CXFServlet.
+
+*[server projectName]-web/src/main/resources/META-INF/spring/cxf-servlet.xml*
+
+.. code-block:: xml
+
+    <beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+        xmlns:context="http://www.springframework.org/schema/context"
+        xmlns:jaxws="http://cxf.apache.org/jaxws" xmlns:soap="http://cxf.apache.org/bindings/soap"
+        xsi:schemaLocation="http://www.springframework.org/schema/beans
+             http://www.springframework.org/schema/beans/spring-beans.xsd
+             http://www.springframework.org/schema/context
+             http://www.springframework.org/schema/context/spring-context.xsd
+             http://cxf.apache.org/jaxws
+             http://cxf.apache.org/schemas/jaxws.xsd
+             http://cxf.apache.org/bindings/soap
+             http://cxf.apache.org/schemas/configuration/soap.xsd">
+        <!-- (1) -->
+        <jaxws:endpoint id="todoWebEndpoint" implementor="com.example.ws.todo.TodoWebServiceImpl"
+            address="/TodoWebService" />
+
+    </beans>
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - Sr. No.
+      - Description
+    * - | (1)
+      - | Define endpoint to be published.
+        | Specify implementation class of Web service to be published in \ ``implementor``\  attribute.
+        | Specify address which publishes Web service in \ ``address``\  attribute.
+        | Address describes only the path of end point to be published.
+        | For attribute details, refer \ `Apache CXF JAX-WS Configuration`_\ .
+
+.. raw:: latex
+
+   \newpage
+
diff --git a/source_en/ArchitectureInDetail/Utilities/StringProcessing.rst b/source_en/ArchitectureInDetail/Utilities/StringProcessing.rst
new file mode 100755
index 0000000000..db11bd0935
--- /dev/null
+++ b/source_en/ArchitectureInDetail/Utilities/StringProcessing.rst
@@ -0,0 +1,887 @@
+String Processing
+--------------------------------------------------------------------------------
+
+.. only:: html
+
+ .. contents:: Index
+    :depth: 4
+    :local:
+
+|
+
+Overview
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+
+| There are very few operations in string standard API of Java which specialise in Japanese language.
+| A process must be devised independently for conversion of full width katakana / half width katakana and 
+| determination of a string consisting of only half width katakana.
+
+| Also, note that although in Java, all the strings are represented in Unicode
+| the special characters like 𠮷 are represented in unicode by char type 2 (32 bits) which is referred to as surrogate pair.
+| Even while handling these characters, an implementation which takes into account various types of characters are necessary to prevent occurrence of unexpected behavior.
+
+| The guideline assumes a case wherein Japanese language is processed, and
+| includes a typical string operation example and offering a Japanese language operation API by a common library.
+
+How to use
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+
+Trim
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+| ``String#trim``  method can be used as well while carrying out half width blank trim operation, however, while carrying out complex trim operations like only leading and trailing trim operation, trim operation of any string etc. ``org.springframework.util.StringUtils`` provided by Spring should be preferably used.
+|
+| Example is given below.
+|
+
+.. code-block:: java
+
+   String str = "  Hello World!!";
+
+   StringUtils.trimWhitespace(str); // => "Hello World!!"
+
+   StringUtils.trimLeadingCharacter(str, ' '); // => "Hello World!!"
+
+   StringUtils.trimTrailingCharacter(str, '!'); // => "  Hello World"
+
+.. note::
+  There is no change in the behaviour even if surrogate pair string is specified in the first argument of ``StringUtils#trimLeadingCharacter`` and ``StringUtils#trimTrailingCharacter``. Also note that, since the second argument is of char type, surrogate pair cannot be specified.
+
+Padding, Suppress
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+
+| While carrying out padding (string padding) and suppress (string takeout) operations, a method
+| provided by ``String`` class can be used.
+|
+| Example is given below.
+
+.. code-block:: java
+
+   int num = 1;
+
+   String paddingStr = String.format("%03d", num); // => "001"
+   String suppressStr = paddingStr.replaceFirst("^0+(?!$)", ""); // => "1"
+
+.. warning::
+  If a surrogate pair is included while carrying out padding of apparent length, appropriate results cannot be obtained since surrogate pair cannot be taken into account by ``String#format``.
+  In order to achieve the padding by using surrogate pair, it is necessary to count number of characters considered as surrogate pair described later, calculate appropriate number of characters that should be padded and join the strings.
+
+Processing of a string considered as a surrogate pair
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+
+
+Fetching string length
+''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
+
+| When the length of the string considered as surrogate pair is to be fetched, it is not possible to
+| simply use ``String#length`` method.
+| Since surrogate pair is represented by 32 bits (char type 2), the count tends to exceed than the apparent number of characters.
+|
+| In the example below, 5 is assigned to variable ``len``.
+
+.. code-block:: java
+
+   String str = "𠮷田太郎";
+   int len = str.length(); // => 5
+
+|
+| Accordingly, a method ``String#codePointCount`` is defined wherein length of the string considered as a surrogate pair is fetched from Java SE 5.
+| String length can be fetched by specifying start index and end index of the target string in the argument of ``String#codePointCount``.
+|
+| Example is given below.
+
+.. code-block:: java
+
+   String str = "𠮷田太郎";
+   int lenOfChar = str.length(); // => 5
+   int lenOfCodePoint = str.codePointCount(0, lenOfChar); // => 4
+
+|
+| Further, Unicode consists of "concatenation".
+| Since there is no appearance difference between ``\u304c`` indicating [が] and ``\u304b\u3099`` indicating [か] plus [voiced sound mark], however [か] plus [voiced sound mark] are likely to be counted as two characters.
+| When number of characters are to be counted including the combining characters as well as described above, counting is done after normalization of text using ``java.text.Normalizer``.
+|
+| A method which returns length of the string after considering combining characters and surrogate pair is given below.
+
+.. code-block:: java
+
+   public int getStrLength(String str) {
+     String normalizedStr  = Normalizer.normalize(str, Normalizer.Form.NFC);
+     int length = normalizedStr.codePointCount(0, normalizedStr.length());
+
+     return length;
+   }
+
+
+Fetch string in the specified range
+''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
+
+| When a string of specified range is to be fetched, unintended results may be obtained if only ``String#substring`` is used.
+
+.. code-block:: java
+
+   String str = "𠮷田 太郎";
+   int startIndex = 0;
+   int endIndex = 2;
+   
+   String subStr = str.substring(startIndex, endIndex);
+
+   System.out.println(subStr); // => "𠮷"
+
+| In the example above, when you try to fetch "𠮷田" by taking out 2 characters from 0th character (beginning), only "𠮷" could be fetched since the surrogate pair is represented by 32 bits (char type 2).
+| In such a case, ``String#substring`` method must be used by searching start and end positions considering the surrogate pair, by using ``String#offsetByCodePoints``.
+|
+| An example wherein 2 characters are taken from the beginning (surname part) is shown below.
+
+.. code-block:: java
+
+   String str = "𠮷田 太郎";
+   int startIndex = 0;
+   int endIndex = 2;
+
+   int startIndexSurrogate = str.offsetByCodePoints(0, startIndex); // => 0
+   int endIndexSurrogate = str.offsetByCodePoints(0, endIndex); // => 3
+
+   String subStrSurrogate = str.substring(startIndexSurrogate, endIndexSurrogate); // => "𠮷田"
+
+|
+
+String split
+''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
+| ``String#split`` method handles the surrogate pair as a default.
+| Example is given below.
+
+
+.. code-block:: java
+
+   String str = "𠮷田 太郎";
+   
+   str.split(" "); // => {"𠮷田", "太郎"}
+
+|
+
+    .. note::
+      | Surrogate pair can also be specified in the argument of ``String#split`` as a delimiter.
+
+    .. note::
+      | Please note that behaviour while passing a blank character in ``String#split`` changes in Java SE 7 environment, and Java SE 8. Refer `Pattern#split Javadoc <http://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html#split-java.lang.CharSequence-int->`_
+      
+      .. code-block:: java 
+      
+        String str = "ABC";
+        String[] elems = str.split("");
+        
+        // Java SE 7 => {, A, B, C}
+        // Java SE 8 => {A, B, C}
+
+
+Full width, half width string conversion
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+
+Full width and half width character conversion is carried out by using API of \ ``org.terasoluna.gfw.common.fullhalf.FullHalfConverter``\  class provided by common library.
+
+\ ``FullHalfConverter``\  class adopts a style wherein pair definition of full width and half width characters for conversion (\ ``org.terasoluna.gfw.common.fullhalf.FullHalfPair``\ ) is registered in advance.
+\ ``FullHalfConverter``\  object for which default pair definition is registered, is provided as a \ ``INSTANCE``\  constant
+of \ ``org.terasoluna.gfw.common.fullhalf.DefaultFullHalf``\  class in the common library.
+For default pair definition, refer `DefaultFullHalf source <https://github.com/terasolunaorg/terasoluna-gfw/blob/master/terasoluna-gfw-string/src/main/java/org/terasoluna/gfw/common/fullhalf/DefaultFullHalf.java>`_ .
+
+.. note::
+
+    When change requirements are not met in the default pair definition provided by common library, \ ``FullHalfConverter``\  object registering a unique pair definition should be created.
+    For basic methods for creation, refer :ref:`StringOperationsHowToUseCustomFullHalfConverter` .
+
+
+Conversion to full width string
+''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
+
+\ ``toFullwidth``\  method of \ ``FullHalfConverter``\  is used while converting a half width character to full width character.
+
+.. code-block:: java
+
+   String fullwidth = DefaultFullHalf.INSTANCE.toFullwidth("ｱﾞ!A8ｶﾞザ");    // (1)
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+   :header-rows: 1
+   :widths: 10 90
+
+   * - Sr. No.
+     - Description
+   * - | (1)
+     - | Pass the string which contains half width characters to argument of \ ``toFullwidth``\  method and convert to full width string.
+       | In this example, it is converted to \ ``"ア゛！Ａ８ガザ"``\ . Also, note that the characters for which a pair is not defined (\ ``"ザ"``\  in this example) are returned without any change.
+
+
+Conversion to half width string
+''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
+
+\ ``toHalfwidth``\  method of \ ``FullHalfConverter``\  is used while converting a full width character to half width character.
+
+.. code-block:: java
+
+   String halfwidth = DefaultFullHalf.INSTANCE.toHalfwidth("Ａ！アガｻ");    // (1)
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+   :header-rows: 1
+   :widths: 10 90
+
+   * - Sr. No.
+     - Description
+   * - | (1)
+     - | Pass the string which contains full width characters to argument of \ ``toHalfwidth``\  method and convert to half width characters.
+       | In this example, it is converted to \ ``"A!ｱｶﾞｻ"``\ . Also, note that the characters for which a pair is not defined (\ ``"ｻ"``\  of this example) are returned without any change.
+
+.. note::
+
+    \ ``FullHalfConverter``\  cannot convert combining characters that represent a single character using 2 or more characters (Example: "\ ``"シ"``\ (\ ``\u30b7``\ ) + voiced sound mark(\ ``\u3099``\ )"）to half width character (Example: \ ``"ｼﾞ"``\ ).
+    When combining characters are to be converted to half width characters, \ ``FullHalfConverter``\  must be used after converting the same to integrated characters （Example:\ ``"ジ"``\ (\ ``\u30b8``\ )）by carrying out text normalization.
+    
+    \ ``java.text.Normalizer``\  is used while carrying out text normalization.
+    Note that, when combining characters are to be converted to integrated characters, NFC or NFKC is used as a normalization format.
+
+
+    Implementation example wherein NFD (analyse by canonical equivalence) is used as a normalization format
+    
+      .. code-block:: java
+
+         String str1 = Normalizer.normalize("モジ", Normalizer.Form.NFD); // str1 = "モシ + Voiced sound mark(\u3099)"
+         String str2 = Normalizer.normalize("ﾓｼﾞ", Normalizer.Form.NFD);  // str2 = "ﾓｼﾞ"
+
+    Implementation example wherein NFC (analyse by canonical equivalence, and integrate again) is used as a normalization format
+    
+      .. code-block:: java
+
+         String mojiStr = "モシ\u3099";                                   // "モシ + Voiced sound mark(\u3099)"
+         String str1 = Normalizer.normalize(mojiStr, Normalizer.Form.NFC); // str1 = "モジ（\u30b8）"
+         String str2 = Normalizer.normalize("ﾓｼﾞ", Normalizer.Form.NFC);   // str2 = "ﾓｼﾞ"
+    
+    Implementation example wherein NFKD (analyse by compatibility equivalent) is used as a normalization format
+    
+      .. code-block:: java
+
+         String str1 = Normalizer.normalize("モジ", Normalizer.Form.NFKD); // str1 = "モシ + Voiced sound mark(\u3099)"
+         String str2 = Normalizer.normalize("ﾓｼﾞ", Normalizer.Form.NFKD);  // str2 = "モシ + Voiced sound mark(\u3099)"
+    
+    Implementation example wherein NFKC (analyse by compatibility equivalent and integrate again) is used as a normalization format
+    
+      .. code-block:: java
+
+         String mojiStr = "モシ\u3099";                                    // "モシ + Voiced sound mark(\u3099)"
+         String str1 = Normalizer.normalize(mojiStr, Normalizer.Form.NFKC); // str1 = "モジ（\u30b8）"
+         String str2 = Normalizer.normalize("ﾓｼﾞ", Normalizer.Form.NFKC) ;  // str2 = "モジ"
+    
+    
+    For details, refer \ `Normalizer JavaDoc <https://docs.oracle.com/javase/8/docs/api/java/text/Normalizer.html>`_\ .
+
+
+.. _StringOperationsHowToUseCustomFullHalfConverter:
+
+Creating FullHalfConverter class for which a unique full width and half width character pair definition is registered
+''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
+
+| \ ``FullHalfConverter``\  for which a unique full width and half width character pair definition is registered can also be used without using \ ``DefaultFullHalf``\ .
+| How to use \ ``FullHalfConverter``\  for which a unique full width character and half width character pair definition is registered, is shown below.
+
+**Implementation example of a class that provides FullHalfConverter for which a unique pair definition is registered**
+
+.. code-block:: java
+ 
+    public class CustomFullHalf {
+        
+        private static final int FULL_HALF_CODE_DIFF = 0xFEE0;
+        
+        public static final FullHalfConverter INSTANCE;
+        
+        static {
+            // (1)
+            FullHalfPairsBuilder builder = new FullHalfPairsBuilder();
+        
+            // (2)
+            builder.pair("ー", "-");
+            
+            // (3)
+            for (char c = '!'; c <= '~'; c++) {
+                String fullwidth = String.valueOf((char) (c + FULL_HALF_CODE_DIFF));
+                builder.pair(fullwidth, String.valueOf(c));
+            }
+            
+            // (4)
+            builder.pair("。", "｡").pair("「", "｢").pair("」", "｣").pair("、", "､")
+                    .pair("・", "･").pair("ァ", "ｧ").pair("ィ", "ｨ").pair("ゥ", "ｩ")
+                    .pair("ェ", "ｪ").pair("ォ", "ｫ").pair("ャ", "ｬ").pair("ュ", "ｭ")
+                    .pair("ョ", "ｮ").pair("ッ", "ｯ").pair("ア", "ｱ").pair("イ", "ｲ")
+                    .pair("ウ", "ｳ").pair("エ", "ｴ").pair("オ", "ｵ").pair("カ", "ｶ")
+                    .pair("キ", "ｷ").pair("ク", "ｸ").pair("ケ", "ｹ").pair("コ", "ｺ")
+                    .pair("サ", "ｻ").pair("シ", "ｼ").pair("ス", "ｽ").pair("セ", "ｾ")
+                    .pair("ソ", "ｿ").pair("タ", "ﾀ").pair("チ", "ﾁ").pair("ツ", "ﾂ")
+                    .pair("テ", "ﾃ").pair("ト", "ﾄ").pair("ナ", "ﾅ").pair("ニ", "ﾆ")
+                    .pair("ヌ", "ﾇ").pair("ネ", "ﾈ").pair("ノ", "ﾉ").pair("ハ", "ﾊ")
+                    .pair("ヒ", "ﾋ").pair("フ", "ﾌ").pair("ヘ", "ﾍ").pair("ホ", "ﾎ")
+                    .pair("マ", "ﾏ").pair("ミ", "ﾐ").pair("ム", "ﾑ").pair("メ", "ﾒ")
+                    .pair("モ", "ﾓ").pair("ヤ", "ﾔ").pair("ユ", "ﾕ").pair("ヨ", "ﾖ")
+                    .pair("ラ", "ﾗ").pair("リ", "ﾘ").pair("ル", "ﾙ").pair("レ", "ﾚ")
+                    .pair("ロ", "ﾛ").pair("ワ", "ﾜ").pair("ヲ", "ｦ").pair("ン", "ﾝ")
+                    .pair("ガ", "ｶﾞ").pair("ギ", "ｷﾞ").pair("グ", "ｸﾞ")
+                    .pair("ゲ", "ｹﾞ").pair("ゴ", "ｺﾞ").pair("ザ", "ｻﾞ")
+                    .pair("ジ", "ｼﾞ").pair("ズ", "ｽﾞ").pair("ゼ", "ｾﾞ")
+                    .pair("ゾ", "ｿﾞ").pair("ダ", "ﾀﾞ").pair("ヂ", "ﾁﾞ")
+                    .pair("ヅ", "ﾂﾞ").pair("デ", "ﾃﾞ").pair("ド", "ﾄﾞ")
+                    .pair("バ", "ﾊﾞ").pair("ビ", "ﾋﾞ").pair("ブ", "ﾌﾞ")
+                    .pair("べ", "ﾍﾞ").pair("ボ", "ﾎﾞ").pair("パ", "ﾊﾟ")
+                    .pair("ピ", "ﾋﾟ").pair("プ", "ﾌﾟ").pair("ペ", "ﾍﾟ")
+                    .pair("ポ", "ﾎﾟ").pair("ヴ", "ｳﾞ").pair("\u30f7", "ﾜﾞ")
+                    .pair("\u30fa", "ｦﾞ").pair("゛", "ﾞ").pair("゜", "ﾟ").pair("　", " ");
+            
+            // (5)
+            INSTANCE = new FullHalfConverter(builder.build());
+        }
+    }
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - Sr. No.
+      - Description
+    * - | (1)
+      - | Use \ ``org.terasoluna.gfw.common.fullhalf.FullHalfPairsBuilder``\  and create \ ``org.terasoluna.gfw.common.fullhalf.FullHalfPairs``\  which represents a set of pair definition of full width and half width characters.
+    * - | (2)
+      - | Half width character corresponding to \ ``"ー"``\ of full width character set to \ ``"ｰ"``\ (\ ``\uFF70``\ ) in \ ``DefaultFullHalf``\  is changed to \ ``"-"``\ (\ ``\u002D``\ ) in this example.
+        | Further, although \ ``"-"``\ (\ ``\u002D``\ ) is also included in the process target given below (3), the pair definition defined earlier is given the precedence.
+    * - | (3)
+      - | In this example, a pair is defined for code values of full width of unicode from \ ``"！"``\  to \ ``"～"``\  and of half width of unicode from \ ``"!"``\  to \ ``"~"``\  using a loop process which use the characteristic "code value sequence is same".
+    * - | (4)
+      - | Since code value sequence for the characters other than given in (3) does not match for full width characters and half width characters, define a pair individually for respective characters.
+    * - | (5)
+      - | Use \ ``FullHalfPairs``\  created by \ ``FullHalfPairsBuilder``\  and create \ ``FullHalfConverter``\ .
+
+.. note::
+
+    For the values that can be specified in the argument of \ ``FullHalfPairsBuilder#pair``\  method,
+    refer `FullHalfPair constructor JavaDoc <https://github.com/terasolunaorg/terasoluna-gfw/blob/master/terasoluna-gfw-string/src/main/java/org/terasoluna/gfw/common/fullhalf/FullHalfPair.java>`_
+    
+
+|
+
+**How to use FullHalfConverter for which a unique pair definition is registered**
+
+.. code-block:: java
+ 
+    String halfwidth = CustomFullHalf.INSTANCE.toHalfwidth("ハローワールド！"); // (1)
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - Sr. No.
+      - Description
+    * - | (1)
+      - | Use \ ``toHalfwidth``\  method of \ ``FullHalfConverter``\  object for which a unique pair definition is registered and convert the string containing full width characters to half width string.
+        | In this example, it is converted to \ ``"ﾊﾛ-ﾜ-ﾙﾄﾞ!"``\ . (\ ``"-"``\  is \ ``\u002D``\ ）
+
+
+|
+
+.. _StringProcessingHowToUseCodePoints:
+
+Code point set check (character type check)
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+
+A code point set function provided by common library should be used for checking character type.
+
+Here, how to implement a character type check by using a code point set function is explained.
+
+* :ref:`StringProcessingHowToUseCodePointsConstruction`
+* :ref:`StringProcessingHowToUseCodePointsOperations`
+* :ref:`StringProcessingHowToUseCodePointsCheck`
+* :ref:`StringProcessingHowToUseCodePointsValidator`
+* :ref:`StringProcessingHowToUseCodePointsClassCreation`
+
+
+.. _StringProcessingHowToUseCodePointsConstruction:
+
+Creating code point set
+''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
+
+| \ ``org.terasoluna.gfw.common.codepoints.CodePoints``\  is a class that represents a code point set.
+| How to create \ ``CodePoints``\  instance is shown below.
+
+**When an instance is created by calling a factory method (cache)**
+
+| A method wherein an instance is created from a code point set class ( \ ``Class<? extends CodePoints>``\ ) and the created instance is then cached, is explained below.
+| This method is recommended for cache process since it is not necessary to create multiple specific code point sets.
+
+.. code-block:: java
+
+   CodePoints codePoints = CodePoints.of(ASCIIPrintableChars.class);  // (1)
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+   :header-rows: 1
+   :widths: 10 90
+
+   * - Sr. No.
+     - Description
+   * - | (1)
+     - | Pass code point set class in \ ``CodePoints#of``\  method (factory method) and fetch an instance.
+       | In this example, an instance of code point set class (\ ``org.terasoluna.gfw.common.codepoints.catalog.ASCIIPrintableChars``\ ) of Ascii printable characters is fetched.
+
+.. note::
+
+    Code point set class exists multiple times in the module, same as \ ``CodePoints``\  class.
+    Although other modules which provide code point set also exist, these modules must be added to their own projects when required.
+    For details, refer :ref:`StringProcessingHowToUseCodePointsClasses`.
+
+    Further, a new code point set class can also be created.
+    For details, refer :ref:`StringProcessingHowToUseCodePointsClassCreation`.
+
+|
+
+**When an instance is created by calling a constructor of code point set class**
+
+| A method wherein an instance is created from code point set class.
+| When this method is used, it is recommended to use the process which need not be cached (argument of set operation) since the created instance is not cached.
+
+.. code-block:: java
+
+   CodePoints codePoints = new ASCIIPrintableChars();  // (1)
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+   :header-rows: 1
+   :widths: 10 90
+
+   * - Sr. No.
+     - Description
+   * - | (1)
+     - | Call constructor by using \ ``new``\  operator and generate an instance of code point set class.
+       | In this example, an instance of code point set class ( \ ``ASCIIPrintableChars``\ ) of Ascii printable characters is generated.
+
+|
+
+**When an instance is created by calling constructor of CodePoints**
+
+| A method wherein an instance is created from \ ``CodePoints``\  is shown below.
+| When this method is used, it is recommended to use the process which need not be cached (argument of set operation) since the created instance is not cached.
+
+* When the codepoint ( \ ``int``\ ) is to be passed by using a variable length argument
+
+  .. code-block:: java
+
+      CodePoints codePoints = new CodePoints(0x0061 /* a */, 0x0062 /* b */);  // (1)
+
+  .. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+  .. list-table::
+      :header-rows: 1
+      :widths: 10 90
+
+      * - Sr. No.
+        - Description
+      * - | (1)
+        - | Generate an instance by passing \ ``int``\  code point in \ ``CodePoints``\  constructor.
+          | In this example, an instance of code point set for characters \ ``"a"``\  and \ ``"b"``\  is generated.
+
+|
+
+* When the \ ``Set``\  of code point ( \ ``int``\ ) is to be passed
+
+  .. code-block:: java
+
+      Set<Integet> set = new HashSet<>();
+      set.add(0x0061 /* a */);
+      set.add(0x0062 /* b */);
+      CodePoints codePoints = new CodePoints(set);  // (1)
+
+ .. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+ .. list-table::
+      :header-rows: 1
+      :widths: 10 90
+
+      * - Sr. No.
+        - Description
+      * - | (1)
+        - | Add code point of \ ``int``\  to \ ``Set``\  and  generate an instance by passing the \ ``Set``\  in constructor of \ ``CodePoints``\ .
+          | In this example, an instance of code point set for characters \ ``"a"``\  and \ ``"b"``\  is generated.
+
+|
+
+* When code point set string is to be passed by using variable length argument
+
+  .. code-block:: java
+
+      CodePoints codePoints = new CodePoints("ab");         // (1)
+
+  .. code-block:: java
+
+      CodePoints codePoints = new CodePoints("a", "b");  // (2)
+
+  .. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+  .. list-table::
+      :header-rows: 1
+      :widths: 10 90
+
+      * - Sr. No.
+        - Description
+      * - | (1)
+        - | Generate an instance by passing code point set string in constructor of \ ``CodePoints``\ .
+          | In this example, an instance of code point set for characters \ ``"a"``\  and \ ``"b"``\  is generated.
+      * - | (2)
+        - | Code point set string can also be passed by dividing it in the arguments. Result is same as (1).
+
+|
+
+.. _StringProcessingHowToUseCodePointsOperations:
+
+Set operation of the code point sets
+''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
+
+| A new code point set instance can be created by performing set operation for code point set.
+| Further, note that status of source code point set does not change due to set operation.
+| A method wherein an instance of code point set is created by using set operation is given below.
+
+
+**When an instance of code point set is created by using union set method**
+
+.. code-block:: java
+
+    CodePoints abCp = new CodePoints(0x0061 /* a */, 0x0062 /* b */);
+    CodePoints cdCp = new CodePoints(0x0063 /* c */, 0x0064 /* d */);
+
+    CodePoints abcdCp = abCp.union(cdCp);    // (1)
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - Sr. No.
+      - Description
+    * - | (1)
+      - | Calculate union of two code point sets by using  \ ``CodePoints#union``\  method and create an instance of new code point set.
+        | In this example, union of "code point set included in string\ ``"ab"``\ " and "code point set included in string \ ``"cd"``\ " is calculated and an instance of new code point set (code point set included in string \ ``"abcd"``\ ) is generated.
+
+|
+
+**When an instance of code point set is created by using difference set method**
+
+.. code-block:: java
+
+    CodePoints abcdCp = new CodePoints(0x0061 /* a */, 0x0062 /* b */,
+            0x0063 /* c */, 0x0064 /* d */);
+    CodePoints cdCp = new CodePoints(0x0063 /* c */, 0x0064 /* d */);
+
+    CodePoints abCp = abcdCp.subtract(cdCp);    // (1)
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - Sr. No.
+      - Description
+    * - | (1)
+      - | Calculate difference set of two code point sets by using \ ``CodePoints#subtract``\  method and create an instance of new code point set.
+        | In this example, difference set of "code point set included in string \ ``"abcd"``\ " and "code point set included in string  \ ``"cd"``\ " is calculated and an instance of new code point set (code point set included in string  \ ``"ab"``\ ) is created.
+
+|
+
+**When an instance of new code point set is to be created by intersection set**
+
+.. code-block:: java
+
+    CodePoints abcdCp = new CodePoints(0x0061 /* a */, 0x0062 /* b */,
+            0x0063 /* c */, 0x0064 /* d */);
+    CodePoints cdeCp = new CodePoints(0x0063 /* c */, 0x0064 /* d */, 0x0064 /* e */);
+
+    CodePoints cdCp = abcdCp.intersect(cdeCp);    // (1)
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - Sr. No.
+      - Description
+    * - | (1)
+      - | Calculate intersection set of two code point sets by using \ ``CodePoints#intersect``\  method and create an instance of new code point set.
+        | In this example, calculate intersection set of "code point set included in string \ ``"abcd"``\ " and "code point set included in string \ ``"cde"``\ " is calculated and an instance of new code point set (code point set included in string \ ``"cd"``\ ）is created.
+
+|
+
+.. _StringProcessingHowToUseCodePointsCheck:
+
+String check by using code point set
+''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
+
+| A string can be checked by using a method provided in \ ``CodePoints``\ .
+| How to use a method which is used while checking the string is given below.
+
+**containsAll method**
+
+Determine whether the entire string for checking is included in the code point set.
+
+.. code-block:: java
+
+    CodePoints jisX208KanaCp = CodePoints.of(JIS_X_0208_Katakana.class);
+
+    boolean result;
+    result = jisX208KanaCp.containsAll("カ");     // true
+    result = jisX208KanaCp.containsAll("カナ");   // true
+    result = jisX208KanaCp.containsAll("カナa");  // false
+
+|
+
+**firstExcludedContPoint method**
+
+Return the first code point which is not included in the code point set, from the string targeted for checking.
+Further, return \ ``CodePoints#NOT_FOUND``\  when the entire string for checking is included in code point set.
+
+.. code-block:: java
+
+    CodePoints jisX208KanaCp = CodePoints.of(JIS_X_0208_Katakana.class);
+
+    int result;
+    result = jisX208KanaCp.firstExcludedCodePoint("カナa");  // 0x0061 (a)
+    result = jisX208KanaCp.firstExcludedCodePoint("カaナ");  // 0x0061 (a)
+    result = jisX208KanaCp.firstExcludedCodePoint("カナ");   // CodePoints#NOT_FOUND
+
+|
+
+**allExcludedCodePoints method**
+
+Return \ ``Set``\  of the code point which is not included in the code point set, from the string targeted for checking.
+
+.. code-block:: java
+
+    CodePoints jisX208KanaCp = CodePoints.of(JIS_X_0208_Katakana.class);
+
+    Set<Integer> result;
+    result = jisX208KanaCp.allExcludedCodePoints("カナa");  // [0x0061 (a)]
+    result = jisX208KanaCp.allExcludedCodePoints("カaナb"); // [0x0061 (a), 0x0062 (b)]
+    result = jisX208KanaCp.allExcludedCodePoints("カナ");   // []
+
+|
+
+.. _StringProcessingHowToUseCodePointsValidator:
+
+String check linked with Bean Validation
+''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
+
+| It can be checked whether the entire string targeted for checking is included in the specified code point set by specifying code point set class in \ ``@org.terasoluna.gfw.common.codepoints.ConsistOf``\  annotation.
+| How to use is shown below.
+
+**When there is only one code point set used for checking**
+
+.. code-block:: java
+
+    @ConsisOf(JIS_X_0208_Hiragana.class)    // (1)
+    private String firstName;
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - Sr. No.
+      - Description
+    * - | (1)
+      - | Check whether the string specified in the targeted field is entirely "Hiragana of JIS X 0208".
+
+|
+
+**When there are multiple code point sets used for checking**
+
+.. code-block:: java
+
+    @ConsisOf({JIS_X_0208_Hiragana.class, JIS_X_0208_Katakana.class})    // (1)
+    private String firstName;
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+.. list-table::
+    :header-rows: 1
+    :widths: 10 90
+
+    * - Sr. No.
+      - Description
+    * - | (1)
+      - | Check whether the string specified in the targeted field is entirely "Hiragana of JIS X 0208" or "Katakana of JIS X 0208".
+
+.. note::
+
+    If string of length N is checked by code point sets M, a checking process that contains N x M is employed. When the string is large, it is likely to cause performance degradation.
+    Hence, a new code point set class that acts as a union set of code point set used for checking is created, that class alone should be specified.
+
+
+|
+
+.. _StringProcessingHowToUseCodePointsClassCreation:
+
+Creating new code point set class
+''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
+
+| When a new code point set class is to be created, specify code point using constructor by inheriting \ ``CodePoints``\  class.
+| A method wherein a new code point set class is created is given below.
+|
+
+**When a new code point set class is created by specifying code point**
+
+How to create code point set which is formed by "only numbers"
+
+.. code-block:: java
+
+     public class NumberChars extends CodePoints {
+         public NumberCodePoints() {
+             super(0x0030 /* 0 */, 0x0031 /* 1 */, 0x0032 /* 2 */, 0x0033 /* 3 */,
+                     0x0034 /* 4 */, 0x0035 /* 5 */, 0x0036 /* 6 */,
+                     0x0037 /* 7 */, 0x0038 /* 8 */, 0x0039 /* 9 */);
+         }
+     }
+
+|
+
+**When a new code point set class is created by using a set operation method of code point set class**
+
+How to create a code point set using a union set consisting of "Hiragana" and "Katakana"
+
+.. code-block:: java
+
+    public class FullwidthHiraganaKatakana extends CodePoints {
+        public FullwidthHiraganaKatakana() {
+            super(new X_JIS_0208_Hiragana().union(new X_JIS_0208_Katakana()));
+        }
+    }
+
+How to create a code point set using difference set consisting of "half width katakana excluding symbols (｡｢｣､･)"
+
+.. code-block:: java
+
+    public class HalfwidthKatakana extends CodePoints {
+        public HalfwidthKatakana() {
+            CodePoints symbolCp = new CodePoints(0xFF61 /* ｡ */, 0xFF62 /* ｢ */,
+                    0xFF63 /* ｣ */, 0xFF64 /* ､ */, 0xFF65 /* ･ */);
+
+            super(new JIS_X_0201_Katakana().subtract(symbolCp));
+        }
+    }
+
+.. note::
+
+    When the code point set class used in set operation (\ ``X_JIS_0208_Hiragana``\  or \ ``X_JIS_0208_Katakana``\ etc in this example) is not to be used individually, it must be ensured that code point is not needlessly cached, by using \ ``new``\  operator and calling constructor.
+    If it is cached by using \ ``CodePoints#of``\ method, code point set used only during set operation calculation remains in the heap resulting in load on the memory.
+    On the other hand, if it is used individually, it should be cached using \ ``CodePoints#of``\  method.
+
+|
+
+.. _StringProcessingHowToUseCodePointsClasses:
+
+Code point set class provided by common library
+''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
+
+Code point class provided by common library (\ ``org.terasoluna.gfw.common.codepoints.catalog``\  package class) and 
+artifact information to be incorporated while using are given below.
+
+.. tabularcolumns:: |p{0.10\linewidth}|p{0.20\linewidth}|p{0.30\linewidth}|p{0.40\linewidth}|
+.. list-table::
+   :header-rows: 1
+   :widths: 10 20 30 40
+
+   * - Sr. No.
+     - Class name
+     - Description
+     - Artifact information
+   * - | (1)
+     - | \ ``ASCIIControlChars``\
+     - | Ascii control characters set.
+       | (\ ``0x0000``\ -\ ``0x001F``\ 、\ ``0x007F``\ )
+     - .. code-block:: xml
+
+           <dependency>
+               <groupId>org.terasoluna.gfw</groupId>
+               <artifactId>terasoluna-gfw-codepoints</artifactId>
+           </dependency>
+   * - | (2)
+     - | \ ``ASCIIPrintableChars``\
+     - | Ascii printable characters set.
+       | (\ ``0x0020``\ -\ ``0x007E``\ )
+     - | (Same as above)
+   * - | (3)
+     - | \ ``CRLF``\
+     - | Linefeed code set.
+       | \ ``0x000A``\ (LINE FEED) and \ ``0x000D``\ (CARRIAGE RETURN)。
+     - | (Same as above)
+   * - | (4)
+     - | \ ``JIS_X_0201_Katakana``\
+     - | JIS X 0201  katakana set.
+       | Symbols (｡｢｣､･) included as well.
+     - .. code-block:: xml
+
+           <dependency>
+               <groupId>org.terasoluna.gfw.codepoints</groupId>
+               <artifactId>terasoluna-gfw-codepoints-jisx0201</artifactId>
+           </dependency>
+   * - | (5)
+     - | \ ``JIS_X_0201_LatinLetters``\
+     - | JIS X 0201 Latin characters set.
+     - | (Same as above)
+   * - | (6)
+     - | \ ``JIS_X_0208_SpecialChars``\
+     - | Row 2 of JIS X 0208: Special characters set.
+     - .. code-block:: xml
+
+           <dependency>
+               <groupId>org.terasoluna.gfw.codepoints</groupId>
+               <artifactId>terasoluna-gfw-codepoints-jisx0208</artifactId>
+           </dependency>
+   * - | (7)
+     - | \ ``JIS_X_0208_LatinLetters``\
+     - | Row 3 of JIS X 0208: Alphanumeric set.
+     - | (Same as above)
+   * - | (8)
+     - | \ ``JIS_X_0208_Hiragana``\
+     - | Row 4 of JIS X 0208: Hiragana set.
+     - | (Same as above)
+   * - | (9)
+     - | \ ``JIS_X_0208_Katakana``\
+     - | Row 5 of JIS X 0208: Katakana set.
+     - | (Same as above)
+   * - | (10)
+     - | \ ``JIS_X_0208_GreekLetters``\
+     - | Row 6 of JIS X 0208: Greek letters set.
+     - | (Same as above)
+   * - | (11)
+     - | \ ``JIS_X_0208_CyrillicLetters``\
+     - | Row 7 of JIS X 0208: Cyrillic letters set.
+     - | (Same as above)
+   * - | (12)
+     - | \ ``JIS_X_0208_BoxDrawingChars``\
+     - | Row 8 of JIS X 0208: Box drawing characters.
+     - | (Same as above)
+   * - | (13)
+     - | \ ``JIS_X_0208_Kanji``\
+     - | Kanji 6355 characters specified in JIS X 208.
+       | First and second level kanjis.
+     - .. code-block:: xml
+
+           <dependency>
+               <groupId>org.terasoluna.gfw.codepoints</groupId>
+               <artifactId>terasoluna-gfw-codepoints-jisx0208kanji</artifactId>
+           </dependency>
+   * - | (14)
+     - | \ ``JIS_X_0213_Kanji``\
+     - | Kanji 10050 characters specified in JIS X 0213:2004.
+       | First, second, third and fourth level kanjis.
+     - .. code-block:: xml
+
+           <dependency>
+               <groupId>org.terasoluna.gfw.codepoints</groupId>
+               <artifactId>terasoluna-gfw-codepoints-jisx0213kanji</artifactId>
+           </dependency>
+
+|
+
+.. raw:: latex
+
+   \newpage
+
diff --git a/source_en/ArchitectureInDetail/Utilities/index.rst b/source_en/ArchitectureInDetail/Utilities/index.rst
index 1c57b3cbc3..99a00b169c 100755
--- a/source_en/ArchitectureInDetail/Utilities/index.rst
+++ b/source_en/ArchitectureInDetail/Utilities/index.rst
@@ -1,11 +1,11 @@
 Utilities
 --------------------
-
 .. toctree::
    :maxdepth: 1
    
    Dozer
    JodaTime
+   StringProcessing
 
 
 .. raw:: latex
diff --git a/source_en/ArchitectureInDetail/images_SOAP/SOAPClientAndServerProjects.png b/source_en/ArchitectureInDetail/images_SOAP/SOAPClientAndServerProjects.png
new file mode 100755
index 0000000000..89deff92ff
Binary files /dev/null and b/source_en/ArchitectureInDetail/images_SOAP/SOAPClientAndServerProjects.png differ
diff --git a/source_en/ArchitectureInDetail/images_SOAP/SOAPClientClass.png b/source_en/ArchitectureInDetail/images_SOAP/SOAPClientClass.png
new file mode 100755
index 0000000000..4ed4f28791
Binary files /dev/null and b/source_en/ArchitectureInDetail/images_SOAP/SOAPClientClass.png differ
diff --git a/source_en/ArchitectureInDetail/images_SOAP/SOAPClientPackageExplorer.png b/source_en/ArchitectureInDetail/images_SOAP/SOAPClientPackageExplorer.png
new file mode 100755
index 0000000000..9160a530cc
Binary files /dev/null and b/source_en/ArchitectureInDetail/images_SOAP/SOAPClientPackageExplorer.png differ
diff --git a/source_en/ArchitectureInDetail/images_SOAP/SOAPClientProjects.png b/source_en/ArchitectureInDetail/images_SOAP/SOAPClientProjects.png
new file mode 100755
index 0000000000..20a92133d1
Binary files /dev/null and b/source_en/ArchitectureInDetail/images_SOAP/SOAPClientProjects.png differ
diff --git a/source_en/ArchitectureInDetail/images_SOAP/SOAPJAXWSArchitecture.png b/source_en/ArchitectureInDetail/images_SOAP/SOAPJAXWSArchitecture.png
new file mode 100755
index 0000000000..c1ddf83b6f
Binary files /dev/null and b/source_en/ArchitectureInDetail/images_SOAP/SOAPJAXWSArchitecture.png differ
diff --git a/source_en/ArchitectureInDetail/images_SOAP/SOAPModelNoProvide.png b/source_en/ArchitectureInDetail/images_SOAP/SOAPModelNoProvide.png
new file mode 100755
index 0000000000..1f4857d0d1
Binary files /dev/null and b/source_en/ArchitectureInDetail/images_SOAP/SOAPModelNoProvide.png differ
diff --git a/source_en/ArchitectureInDetail/images_SOAP/SOAPProcessFlow.png b/source_en/ArchitectureInDetail/images_SOAP/SOAPProcessFlow.png
new file mode 100755
index 0000000000..a8b35296e9
Binary files /dev/null and b/source_en/ArchitectureInDetail/images_SOAP/SOAPProcessFlow.png differ
diff --git a/source_en/ArchitectureInDetail/images_SOAP/SOAPServerAndClient.png b/source_en/ArchitectureInDetail/images_SOAP/SOAPServerAndClient.png
new file mode 100755
index 0000000000..165dabf6fe
Binary files /dev/null and b/source_en/ArchitectureInDetail/images_SOAP/SOAPServerAndClient.png differ
diff --git a/source_en/ArchitectureInDetail/images_SOAP/SOAPServerClass.png b/source_en/ArchitectureInDetail/images_SOAP/SOAPServerClass.png
new file mode 100755
index 0000000000..64877ee288
Binary files /dev/null and b/source_en/ArchitectureInDetail/images_SOAP/SOAPServerClass.png differ
diff --git a/source_en/ArchitectureInDetail/images_SOAP/SOAPServerPackageExplorer.png b/source_en/ArchitectureInDetail/images_SOAP/SOAPServerPackageExplorer.png
new file mode 100755
index 0000000000..0ed6bdff63
Binary files /dev/null and b/source_en/ArchitectureInDetail/images_SOAP/SOAPServerPackageExplorer.png differ
diff --git a/source_en/ArchitectureInDetail/images_SOAP/SOAPServerProjects.png b/source_en/ArchitectureInDetail/images_SOAP/SOAPServerProjects.png
new file mode 100755
index 0000000000..a493966bd4
Binary files /dev/null and b/source_en/ArchitectureInDetail/images_SOAP/SOAPServerProjects.png differ
diff --git a/source_en/ArchitectureInDetail/images_SOAP/SOAPURL.png b/source_en/ArchitectureInDetail/images_SOAP/SOAPURL.png
new file mode 100755
index 0000000000..86f797144e
Binary files /dev/null and b/source_en/ArchitectureInDetail/images_SOAP/SOAPURL.png differ
diff --git a/source_en/ArchitectureInDetail/index.rst b/source_en/ArchitectureInDetail/index.rst
index 6c9ec4886a..0ed2466170 100755
--- a/source_en/ArchitectureInDetail/index.rst
+++ b/source_en/ArchitectureInDetail/index.rst
@@ -23,6 +23,7 @@ TERASOLUNA Server Framework for Java (5.x)の機能詳細
    Ajax
    REST
    RestClient
+   SOAP
    FileUpload
    FileDownload
    Email
diff --git a/source_en/Overview/ApplicationLayering.rst b/source_en/Overview/ApplicationLayering.rst
index b647de1060..d4c4163a9a 100755
--- a/source_en/Overview/ApplicationLayering.rst
+++ b/source_en/Overview/ApplicationLayering.rst
@@ -247,6 +247,8 @@ O/R Mapper used for implementation of Repository.
 
 |
 
+.. _application-layering_Integration-System-Connector:
+
 Integration System Connector
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 
diff --git a/source_en/Overview/FirstApplication.rst b/source_en/Overview/FirstApplication.rst
index c40ef26357..267181c422 100755
--- a/source_en/Overview/FirstApplication.rst
+++ b/source_en/Overview/FirstApplication.rst
@@ -144,7 +144,7 @@ To understand the configuration of Spring MVC, the generated Spring MVC configur
                 <bean
                     class="org.springframework.data.web.PageableHandlerMethodArgumentResolver" />
                 <bean
-                    class="org.springframework.security.web.bind.support.AuthenticationPrincipalArgumentResolver" />
+                    class="org.springframework.security.web.method.annotation.AuthenticationPrincipalArgumentResolver" />
             </mvc:argument-resolvers>
         </mvc:annotation-driven>
 
diff --git a/source_en/Security/Encryption.rst b/source_en/Security/Encryption.rst
new file mode 100755
index 0000000000..b6d2cf78ff
--- /dev/null
+++ b/source_en/Security/Encryption.rst
@@ -0,0 +1,1006 @@
+Encryption
+================================================================================
+
+.. only:: html
+
+ .. contents:: Index
+    :local:
+
+.. _EncryptionOverview:
+
+Overview
+--------------------------------------------------------------------------------
+
+Encryption is required for confidential information like personal data, passwords etc in the following cases.
+
+* Sending/receiving confidential information through a network medium like Internet
+* Storing confidential information in external resources like database, file etc
+
+| Spring Security also offers encryption related functions besides the major functions like "Authentication" and "Authorization".
+| However, since functions offered by Spring Security are limited, the encryption methods which are not supported by Spring Security must be implemented independently.
+
+The guideline explains following processes.
+
+* Encryption and decryption by common key encryption methods which use class offered by Spring Security
+* Generation of pseudo-random numbers which use class offered by Spring Security
+* Encryption and decryption by public key encryption method which use JCA (Java Cryptography Architecture)
+* Encryption and decryption by hybrid encryption method which use JCA
+
+For details of Encryption function of Spring Security, refer \ `Spring Security Reference -Spring Security Crypto Module- <http://docs.spring.io/spring-security/site/docs/4.0.3.RELEASE/reference/htmlsingle/#crypto>`_\ .
+
+.. _EncryptionOverviewEncryptionScheme:
+
+Encryption method
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+Encryption method is explained below.
+
+Common key encryption method
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+| It is a method which uses the same key during encryption and decryption.
+| Since the method shares a key used in decryption for the encryption, a different path to safely transfer the key to encryption side is required.
+
+Public key encryption method
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+| It is a method wherein encryption is performed by using a public key offered by decryption side and decryption is performed by using a secret key which is paired with the public key.\
+| Secret key used while decrypting encrypted text is not published resulting in high security strength, however cost of encryption and decryption is likely to be high.
+
+Hybrid encryption method
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+| It is a method which combines merits of common key encryption method wherein processing cost is less and merits of public key encryption method wherein security strength is high due to easy management and distribution of key.
+| This method is used in SSL/TLS etc.
+
+For example, in HTTPS communication, common key generated at the client side is sent after encrypting it with public key on the server side and common key is decrypted at the server by using secret key paired with public key.
+The subsequent communication is done by a common key encryption method which uses a shared common key.
+
+This method consists of
+
+* Confidential information which is likely to be large in size is encrypted by a common key encryption method wherein the processing cost is less
+* A common key with smaller size wherein safe distribution is required is encrypted by using a public key encryption method with high security strength
+
+
+Since common key used while decrypting confidential information is protected by secret key,
+security strength of public key encryption method is retained while achieving a high-speed encryption and decryption process than public key encryption method.
+
+Process flow of hybrid encryption method from encryption to decryption is shown in the following figure..
+
+.. figure:: ./images_Encryption/EncryptionHybrid.png
+   :alt: Hybrid Encryption
+   :width: 100%
+
+1. Sender generates a common key for encryption of plain text.
+2. Plain text is encrypted by common key generated by sender.
+3. Sender uses public key of receiving side to encrypt common key.
+4. Sender sends encrypted text along with encrypted common key.
+5. Receiving side decrypts encrypted common key by using secret key on receiving side.
+6. Receiving side decrypts encrypted text by decrypted common key
+
+|
+
+.. _EncryptionOverviewEncryptionAlgorithm:
+
+Encryption algorithm
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+Encryption algorithm is explained.
+
+DES / 3DES
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+| DES (Data Encryption Standard) is an algorithm standardised in USA as an algorithm for common encryption method. Currently, it is not recommended since key length is short at 56 bits.
+| 3DES (triple DES) is an encryption algorithm which repeats DES while changing the key.
+
+.. _EncryptionOverviewEncryptionAlgorithmAes:
+
+AES
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+| AES (Advanced Encryption Standard) is an algorithm for common key encryption method.  It is an encryption standard established subsequent to DES and is used as a current default standard for encryption.
+| Also, ECB (Electronic Codebook), CBC (Cipher Block Chaining) and OFB (Output Feedback) are provided as encryption mode wherein a message longer than the block length is encrypted. Of these, CBC is widely used.
+
+.. note:: **AES with GCM**
+
+  GCM (Galois/Counter Mode) is an encryption mode generally accepted for feasible parallel processing and excellent processing efficiency as compared to CEC and can be used in AES.
+
+
+RSA
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+| RSA is an algorithm of public key encryption method. Ability of a computing machine impacts the algorithm since it is based on difficulty of prime numbers factoring. It requires adequate key length as indicated in "Issues of encryption algorithm in 2010". At present, 2048 bits is used a standard length.
+
+DSA / ECDSA
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+| DSA (Digital Signature Algorithm) is a standard specification for digital signature. It is based on the difficulty of discrete logarithmic problem.
+| ECDSA (Elliptic Curve Digital Signature Algorithm ) is a variant of DSA which uses Elliptic curve photography. Elliptic curve photography offers an advantage of reducing key length which is necessary for maintaining security level.
+
+.. _EncryptionOverviewPseudoRandomNumber:
+
+Pseudo-random number (Generator)
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+| Random numbers are used in the generation of a key.
+| In this case, if the value of a number generated at random can be predicted, encryption security can no longer be maintained. Hence, a random number which cannot be predicted easily (pseudo-random number) must be used.
+| It is a pseudo-random number generator which is used to generate  a pseudo-random number.
+
+.. _EncryptionOverviewCipher:
+
+javax.crypto.Cipher class
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+| \ ``Cipher``\  class offers encryption and decryption functions, and specifies a combination of encryption algorithms like AES or RSA, encryption modes like ECB or CBC and padding methods like PKCS1.
+| 
+| Encryption mode is a mechanism to encrypt messages longer than block length, as explained in \ :ref:`EncryptionOverviewEncryptionAlgorithmAes`\ .
+| Also, padding method is a method of storage when encryption target that does not meet the required block length is to be encrypted.
+| 
+| Java application specifies a combination in the \ ``"<Encryption algorithm>/<Encryption mode>/<Padding method>"``\  or \ ``"<Encryption algorithm>"``\  format. For example, \ ``"AES/CBC/PKCS5Padding"``\  or \ ``"RSA"``\  are used.
+  For details, refer to \ `JavaDoc of Cipher class <https://docs.oracle.com/javase/8/docs/api/javax/crypto/Cipher.html>`_\ .
+
+.. _EncryptionOverviewSpringSecurity:
+
+Encryption function in Spring Security
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+| Spring Security offers an encryption and decryption function which uses a common key encryption method.
+| Encryption algorithm is 256-bit AES using PKCS #5's PBKDF2 (Password-Based Key Derivation Function #2).
+| Encryption mode is CBC and padding method is PKCS5Padding.
+
+Components for encryption and decryption
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+
+Spring Security offers following interfaces as a function for encryption and decryption using common key encryption method.
+
+* \ ``org.springframework.security.crypto.encrypt.TextEncryptor``\  (For text)
+* \ ``org.springframework.security.crypto.encrypt.BytesEncryptor``\  (For byte array)
+
+Also, following classes are offered as implementation classes for these interfaces and \ ``Cipher``\  class is used internally.
+
+* \ ``org.springframework.security.crypto.encrypt.HexEncodingTextEncryptor``\  (For text)
+* \ ``org.springframework.security.crypto.encrypt.AesBytesEncryptor``\  (For byte array)
+
+
+Components to generate random numbers
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+
+Spring Security offers following interfaces as functions to generate random numbers (key).
+
+* \ ``org.springframework.security.crypto.keygen.StringKeyGenerator``\  (for text)
+* \ ``org.springframework.security.crypto.keygen.BytesKeyGenerator``\  (for byte array)
+
+Also, following classes are offered as implementation classes for these interfaces.
+
+* \ ``org.springframework.security.crypto.keygen.HexEncodingStringKeyGenerator``\  (for text)
+* \ ``org.springframework.security.crypto.keygen.SecureRandomBytesKeyGenerator``\  (for byte array. Generate a different key length by \ ``generateKey``\  method and return)
+* \ ``org.springframework.security.crypto.keygen.SharedKeyGenerator``\  (for byte array. Return same key length set by constructor, using \ ``generateKey``\  method)
+
+
+.. note:: **Spring Security RSA**
+
+   \ `spring-security-rsa <https://github.com/dsyer/spring-security-rsa>`_\  offers API for public key encryption method and hybrid encryption method which use RSA as an encryption algorithm.
+   spring-security-rsa is currently not managed as \ official repository of Spring <https://github.com/spring-projects>_\ . Later, how to use the repository will be explained in the guideline after moving it under official repository of Spring.
+
+   spring-security-rsa offers 2 classes given below.
+
+   * \ ``org.springframework.security.crypto.encrypt.RsaRawEncryptor``\ 
+
+     A class that offers encryption and decryption functions which use public key encryption method.
+
+   * \ ``org.springframework.security.crypto.encrypt.RsaSecretEncryptor``\ 
+
+     A class that offers encryption and decryption functions which use hybrid encryption method.
+
+|
+
+.. _EncryptionHowToUse:
+
+How to use
+--------------------------------------------------------------------------------
+
+An unlimited strength JCE jurisdiction policy file must be applied for handling key length 256 bits of AES in some Java products like Oracle.
+
+.. note:: **JCE jurisdiction policy file**
+
+   Default encryption algorithm strength is restricted in some Java products due to relation with import regulations. If a more powerful algorithm is to be used, an unlimited strength JCE jurisdiction policy file must be obtained and installed in JDK/JRE. For details, refer \ `Java Cryptography Architecture Oracle Providers Documentation <https://docs.oracle.com/javase/8/docs/technotes/guides/security/SunProviders.html>`_\ .
+
+   Download destination for JCE jurisdiction policy file
+
+   * \ `For Oracle Java 8 <http://www.oracle.com/technetwork/java/javase/downloads/jce8-download-2133166.html>`_\
+   * \ `For Oracle Java 7 <http://www.oracle.com/technetwork/java/embedded/embedded-se/downloads/jce-7-download-432124.html>`_\
+
+.. _EncryptionHowToUseCommonKey:
+
+Common key encryption method
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+| A method is explained wherein AES is used as an encryption algorithm.
+
+Encryption of character string
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+
+- Encrypt text (string).
+
+  .. code-block:: java
+
+    public static String encryptText(
+        String secret, String salt, String plainText) {
+        TextEncryptor encryptor = Encryptors.text(secret, salt); // (1)
+
+        return encryptor.encrypt(plainText); // (2)
+    }
+
+  .. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+  .. list-table::
+     :header-rows: 1
+     :widths: 10 90
+  
+     * - Sr. No.
+       - Description
+     * - | (1)
+       - | Call \ ``Encryptors#text``\  method by specifying common key and salt, and generate instance of \ ``TextEncryptor``\  class.
+         | Since initialization vector of generated instance is random, a varied result is returned at the time of encryption. It should be noted that CEC is used as an encryption mode.
+         | Common key and salt specified during encryption are also used at the time of decryption.
+
+     * - | (2)
+       - | Encrypt plain text by using \ ``encrypt``\  method.
+
+  .. note:: **Regarding encryption results**
+
+    Return value of \ ``encrypt``\  method (encryption results) return a different value for each execution, however,
+    if key and salt are identical, decryption process results will be similar as well (can be correctly decrypted).
+
+| 
+
+- Fetch identical encryption results.
+
+  This method is used in the processes such as searching the database etc.using encrypted results.
+  However, whether to use the method must be reviewed considering possible reduction in the security strength.
+
+  .. code-block:: java
+
+    public static void encryptTextResult(
+        String secret, String salt, String plainText) {
+        TextEncryptor encryptor = Encryptors.queryableText(secret, salt); // (1)
+        System.out.println(encryptor.encrypt(plainText)); // (2)
+        System.out.println(encryptor.encrypt(plainText)); //
+    }
+
+  .. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+  .. list-table::
+     :header-rows: 1
+     :widths: 10 90
+  
+     * - Sr.No.
+       - Description
+     * - | (1)
+       - | When identical value must be fetched as encryption results, generate an instance of \ ``TextEncryptor``\  class by using \ ``Encryptors#queryableText``\  method.
+     * - | (2)
+       - | The instance generated by \ ``Encryptors#queryableText``\  method returns identical values as the encryption results for \ ``encrypt``\  method.
+
+| 
+
+- Encrypt text (string) by using AES which uses GCM.
+
+  AES using GCM can be used in Spring Security4.0.2 and subsequent versions. Processing efficiency is superior to CEC as explained in \ :ref:`EncryptionOverviewEncryptionAlgorithmAes`\ .
+
+  .. code-block:: java
+
+    public static String encryptTextByAesWithGcm(String secret, String salt, String plainText) {
+        TextEncryptor aesTextEncryptor = Encryptors.delux(secret, salt); // (1)
+
+        return aesTextEncryptor.encrypt(plainText); // (2)
+    }
+
+  .. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+  .. list-table::
+     :header-rows: 1
+     :widths: 10 90
+  
+     * - Sr. No.
+       - Description
+     * - | (1)
+       - | Call \ ``Encryptors#delux``\  method by specifying common key and salt, and generate an instance of \ ``TextEncryptor``\  class.
+         | Common key and salt specified during encryption are also used at the time of decryption.
+
+     * - | (2)
+       - | Encrypt plain text by using \ ``encrypt``\  method.
+
+|
+
+Decryption of string
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+
+- Decrypt encryption text of text (string).
+
+  .. code-block:: java
+
+    public static String decryptText(String secret, String salt, String cipherText) {
+        TextEncryptor decryptor = Encryptors.text(secret, salt); // (1)
+
+        return decryptor.decrypt(cipherText); // (2)
+    }
+
+  .. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+  .. list-table::
+     :header-rows: 1
+     :widths: 10 90
+  
+     * - Sr. No.
+       - Description
+     * - | (1)
+       - | Call \ ``Encryptors#text``\  method by specifying common key and salt, and generate an instance of \ ``TextEncryptor``\  class.
+         | Specify values used at the time of encryption as common key and salt.
+
+     * - | (2)
+       - | Decrypt encrypted text by using \ ``decrypt``\  method.
+
+|
+
+- Decrypt encrypted text of text (string) by using AES which uses GCM.
+
+  .. code-block:: java
+
+    public static String decryptTextByAesWithGcm(String secret, String salt, String cipherText) {
+        TextEncryptor aesTextEncryptor = Encryptors.delux(secret, salt); // (1)
+
+        return aesTextEncryptor.decrypt(cipherText); // (2)
+    }
+
+  .. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+  .. list-table::
+     :header-rows: 1
+     :widths: 10 90
+  
+     * - Sr. No.
+       - Description
+     * - | (1)
+       - | Call \ ``Encryptors#delux``\  method by specifying common key and salt, and generate an instance of \ ``TextEncryptor``\  class.
+         | Specify values at the time of encryption as common key and salt.
+
+     * - | (2)
+       - | Decrypt encrypted text by using \ ``decrypt``\  method.
+
+|
+
+Encryption of byte array
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+
+- Encrypt byte array.
+
+  .. code-block:: java
+
+    public static byte[] encryptBytes(String secret, String salt, byte[] plainBytes) {
+        BytesEncryptor encryptor = Encryptors.standard(secret, salt); // (1)
+
+        return encryptor.encrypt(plainBytes); // (2)
+    }
+
+  .. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+  .. list-table::
+     :header-rows: 1
+     :widths: 10 90
+  
+     * - Sr. No.
+       - Description
+     * - | (1)
+       - | Call \ ``Encryptors#standard``\  method by specifying common key and salt, and generate an instance of \ ``BytesEncryptor``\  class.
+         | Common key and salt specified during encryption are also used at the time of decryption.
+
+     * - | (2)
+       - | Encrypt plain text of byte array by using \ ``encrypt``\  method.
+
+|
+
+- Encrypt byte array by using AES which uses GCM.
+
+  .. code-block:: java
+
+    public static byte[] encryptBytesByAesWithGcm(String secret, String salt, byte[] plainBytes) {
+        BytesEncryptor aesBytesEncryptor = Encryptors.stronger(secret, salt); // (1)
+
+        return aesBytesEncryptor.encrypt(plainBytes); // (2)
+    }
+
+  .. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+  .. list-table::
+     :header-rows: 1
+     :widths: 10 90
+  
+     * - Sr. No.
+       - Description
+     * - | (1)
+       - | Call \ ``Encryptors#stronger``\  method by specifying common key and salt, and generate an instance of \ ``BytesEncryptor``\  class.
+         | Common key and salt specified during encryption are also used at the time of decryption.
+
+     * - | (2)
+       - | Encrypt plain text of byte array by using \ ``encrypt``\  method.
+
+|
+
+Decryption of byte array
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+
+Decrypt encrypted text of byte array.
+
+  .. code-block:: java
+
+    public static byte[] decryptBytes(String secret, String salt, byte[] cipherBytes) {
+        BytesEncryptor decryptor = Encryptors.standard(secret, salt); // (1)
+
+        return decryptor.decrypt(cipherBytes); // (2)
+    }
+
+  .. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+  .. list-table::
+     :header-rows: 1
+     :widths: 10 90
+  
+     * - Sr. No.
+       - Description
+     * - | (1)
+       - | Call \ ``Encryptors#standard``\  method by specifying common key and salt, and generate an instance of \ ``BytesEncryptor``\  class.
+         | Specify values used at the time of encryption as common key and salt.
+
+     * - | (2)
+       - | Decrypt encrypted text of byte array by using \ ``decrypt``\  method.
+
+|
+
+- Decrypt byte array using AES which use GCM.
+
+  .. code-block:: java
+
+    public static byte[] decryptBytesByAesWithGcm(String secret, String salt, byte[] cipherBytes) {
+        BytesEncryptor aesBytesEncryptor = Encryptors.stronger(secret, salt); // (1)
+
+        return aesBytesEncryptor.decrypt(cipherBytes); // (2)
+    }
+
+  .. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+  .. list-table::
+     :header-rows: 1
+     :widths: 10 90
+  
+     * - Sr. No.
+       - Description
+     * - | (1)
+       - | Call \ ``Encryptors#stronger``\  method by specifying common key and salt, and generate an instance of \ ``BytesEncryptor``\  class.
+         | Specify values used at the time of encryption as common key and salt.
+
+     * - | (2)
+       - | Decrypt encrypted text of byte array by using \ ``decrypt``\  method.
+
+|
+
+.. _EncryptionHowToUsePublicKey:
+
+Public key encryption method
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+
+| Since functions related to public key encryption method are not offered by Spring Security, a method which uses JCA and OpenSSL is explained using a sample code.
+
+Preliminary preparation (Generation of key pairs using JCA)
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+
+- Generate key pairs (a combination of public key / secret key) using JCA, perform encryption and decryption process by using public key and secret key respectively.
+
+  .. code-block:: java
+
+    public void generateKeysByJCA() {
+        try {
+            KeyPairGenerator generator = KeyPairGenerator.getInstance("RSA"); // (1)
+            generator.initialize(2048); // (2)
+            KeyPair keyPair = generator.generateKeyPair(); // (3)
+            PublicKey publicKey = keyPair.getPublic();
+            PrivateKey privateKey = keyPair.getPrivate();
+
+            byte[] cipherBytes = encryptByPublicKey("Hello World!", publicKey);  // (4)
+            System.out.println(Base64.getEncoder().encodeToString(cipherBytes));
+            String plainText = decryptByPrivateKey(cipherBytes, privateKey); // (5)
+            System.out.println(plainText);
+        } catch (NoSuchAlgorithmException e) {
+            throw new SystemException("e.xx.xx.9002", "No Such setting error.", e);
+        }
+    }
+
+  .. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+  .. list-table::
+     :header-rows: 1
+     :widths: 10 90
+  
+     * - Sr. No.
+       - Description
+     * - | (1)
+       - | Specify RSA algorithm and generate an instance of \ ``KeyPairGenerator``\  class.
+
+     * - | (2)
+       - | Specify 2048 bits as a key length.
+
+     * - | (3)
+       - | Generate key pairs.
+
+     * - | (4)
+       - | Use public key and perform encryption process. Processing details will be described later.
+
+     * - | (5)
+       - | Use secret key and perform decryption process. Processing details will be described later.
+
+|
+
+Encryption
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+
+- Use public key and encrypt character string.
+
+  .. code-block:: java
+
+    public byte[] encryptByPublicKey(String plainText, PublicKey publicKey) {
+        try {
+            Cipher cipher = Cipher.getInstance("RSA/ECB/PKCS1Padding"); // (1)
+            cipher.init(Cipher.ENCRYPT_MODE, publicKey);                       // (2)
+            return cipher.doFinal(plainText.getBytes(StandardCharsets.UTF_8)); //
+        } catch (NoSuchAlgorithmException | NoSuchPaddingException e) {
+            throw new SystemException("e.xx.xx.9002", "No Such setting error.", e);
+        } catch (InvalidKeyException |
+                 IllegalBlockSizeException |
+                 BadPaddingException e) {
+            throw new SystemException("e.xx.xx.9003", "Invalid setting error.", e);
+        }
+    }
+
+  .. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+  .. list-table::
+     :header-rows: 1
+     :widths: 10 90
+  
+     * - Sr.No.
+       - Description
+     * - | (1)
+       - | Specify encryption algorithm, encryption mode and padding method, and generate an instance of \ ``Cipher``\  class.
+
+     * - | (2)
+       - | Execute encryption process.
+
+|
+
+Decryption
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+
+- Use secret key and decrypt byte array.
+
+  .. code-block:: java
+
+    public String decryptByPrivateKey(byte[] cipherBytes, PrivateKey privateKey) {
+        try {
+            Cipher cipher = Cipher.getInstance("RSA/ECB/PKCS1Padding"); // (1)
+            cipher.init(Cipher.DECRYPT_MODE, privateKey);           // (2)
+            byte[] plainBytes = cipher.doFinal(cipherBytes); //
+            return new String(plainBytes, StandardCharsets.UTF_8);
+        } catch (NoSuchAlgorithmException | NoSuchPaddingException e) {
+            throw new SystemException("e.xx.xx.9002", "No Such setting error.", e);
+        } catch (InvalidKeyException |
+                 IllegalBlockSizeException |
+                 BadPaddingException e) {
+            throw new SystemException("e.xx.xx.9003", "Invalid setting error.", e);
+        }
+    }
+
+  .. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+  .. list-table::
+     :header-rows: 1
+     :widths: 10 90
+  
+     * - Sr. No.
+       - Description
+     * - | (1)
+       - | Specify encryption algorithm, encryption mode and padding method, and generate an instance of \ ``Cipher``\  class.
+
+     * - | (2)
+       - | Execute decryption process.
+
+|
+
+OpenSSL
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+
+| If Cipher is identical, a different method can be used for encryption and decryption for public key encryption method.
+| Here, key pairs are created in advance by using OpenSSL and encryption is performed by JCA, by using this public key.
+  Hence, a method wherein decryption process is performed by OpenSSL, by using the secret key is explained.
+
+.. note:: **OpenSSL**
+
+   The software must be installed for creating key pairs by OpenSSL. It can be downloaded from the following site.
+
+   Download destination for OpenSSL
+
+   * \ `For Linux <https://www.openssl.org/source/>`_\
+   * \ `For Windows <http://slproweb.com/products/Win32OpenSSL.html>`_\
+
+|
+
+- Create key pairs by OpenSSL as a preliminary preparation.
+
+  .. code-block:: console
+
+     $ openssl genrsa -out private.pem 2048  # (1)
+
+     $ openssl pkcs8 -topk8 -nocrypt -in private.pem -out private.pk8 -outform DER  # (2)
+
+     $ openssl rsa -pubout -in private.pem -out public.der -outform DER  # (3)
+
+  .. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+  .. list-table::
+     :header-rows: 1
+     :widths: 10 90
+  
+     * - Sr. No.
+       - Description
+     * - | (1)
+       - | Generate secret key of 2048 bits (DER format) by OpenSSL..
+
+     * - | (2)
+       - | Convert secret key to PKCS#8 format for reading it from Java application.
+
+     * - | (3)
+       - | Generate public key (DER format) from secret key.
+
+|
+
+- Read public key created by OpenSSL in the application and perform encryption process by using public key that has been read.
+
+  .. code-block:: java
+
+    public void useOpenSSLDecryption() {
+        try {
+            KeySpec publicKeySpec = new X509EncodedKeySpec(
+                    Files.readAllBytes(Paths.get("public.der"))); // (1)
+            KeyFactory keyFactory = KeyFactory.getInstance("RSA");
+            PublicKey publicKey = keyFactory.generatePublic(publicKeySpec); // (2)
+
+            byte[] cipherBytes = encryptByPublicKey("Hello World!", publicKey); // (3)
+
+            Files.write(Paths.get("encryptedByJCA.txt"), cipherBytes);
+            System.out.println("Please execute the following command:");
+            System.out
+                    .println("openssl rsautl -decrypt -inkey hoge.pem -in encryptedByJCA.txt");
+        } catch (IOException e) {
+            throw new SystemException("e.xx.xx.9001", "input/output error.", e);
+        } catch (NoSuchAlgorithmException e) {
+            throw new SystemException("e.xx.xx.9002", "No Such setting error.", e);
+        } catch (InvalidKeySpecException e) {
+            throw new SystemException("e.xx.xx.9003", "Invalid setting error.", e);
+        }
+    }
+
+  .. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+  .. list-table::
+     :header-rows: 1
+     :widths: 10 90
+  
+     * - Sr.No.
+       - Description
+     * - | (1)
+       - | Read binary data from public key file.
+
+     * - | (2)
+       - | Generate an instance of \ ``PublicKey``\  class from binary data.
+
+     * - | (3)
+       - | Perform encryption process by using public key.
+
+|
+
+- Check that details encrypted by JCA can be decrypted by OpenSSL.
+
+  .. code-block:: console
+
+     $ openssl rsautl -decrypt -inkey private.pem -in encryptedByJCA.txt  # (1)
+
+  .. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+  .. list-table::
+     :header-rows: 1
+     :widths: 10 90
+  
+     * - Sr. No.
+       - Description
+     * - | (1)
+       - | Decrypt by OpenSSL by using a secret key.
+
+|
+
+| Further, a method wherein encryption and decryption are performed by OpenSSL and JCA respectively using key pairs created by OpenSSL is explained.
+
+- Perform encryption process by using OpenSSL commands.
+
+  .. code-block:: console
+
+     $ echo Hello | openssl rsautl -encrypt -keyform DER -pubin -inkey public.der -out encryptedByOpenSSL.txt  # (1)
+     
+  .. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+  .. list-table::
+     :header-rows: 1
+     :widths: 10 90
+  
+     * - Sr. No.
+       - Description
+     * - | (1)
+       - | Encrypt by OpenSSL by using a public key.
+
+|
+
+- Read secret key created by OpenSSL in the application and perform decryption process by using a secret key that has been read.
+
+  .. code-block:: java
+
+    public void useOpenSSLEncryption() {
+        try {
+            KeySpec privateKeySpec = new PKCS8EncodedKeySpec(
+                    Files.readAllBytes(Paths.get("private.pk8"))); // (1)
+            KeyFactory keyFactory = KeyFactory.getInstance("RSA");
+            PrivateKey privateKey = keyFactory.generatePrivate(privateKeySpec); // (2)
+
+            String plainText = decryptByPrivateKey(
+                   Files.readAllBytes(Paths.get("encryptedByOpenSSL.txt")),
+                   privateKey); // (3)
+            System.out.println(plainText);
+        } catch (IOException e) {
+            throw new SystemException("e.xx.xx.9001", "input/output error.", e);
+        } catch (NoSuchAlgorithmException e) {
+            throw new SystemException("e.xx.xx.9002", "No Such setting error.", e);
+        } catch (InvalidKeySpecException e) {
+            throw new SystemException("e.xx.xx.9003", "Invalid setting error.", e);
+        }
+    }
+
+  .. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+  .. list-table::
+     :header-rows: 1
+     :widths: 10 90
+  
+     * - Sr. No.
+       - Description
+     * - | (1)
+       - | Read binary data from secret key file of PKCS #8 format and generate an instance of \ ``PKCS8EncodedKeySpec``\  class.
+
+     * - | (2)
+       - | Generate an instance of \ ``PrivateKey``\  class from \ ``KeyFactory``\  class.
+
+     * - | (3)
+       - | Perform decryption process by using a secret key.
+
+|
+
+.. _EncryptionHowToUseHybrid:
+
+Hybrid encryption method
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+
+| Similar to public key encryption method, since functions related to hybrid encryption methods are not offered by Spring Security, it is explained using a sample code.
+| The sample code refers to \ `RsaSecretEncryptor class <https://github.com/dsyer/spring-security-rsa/blob/master/src/main/java/org/springframework/security/rsa/crypto/RsaSecretEncryptor.java>`_\  of spring-security-rsa.
+
+Encryption
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+
+  .. code-block:: java
+
+    public byte[] encrypt(byte[] plainBytes, PublicKey publicKey, String salt) {
+        byte[] random = KeyGenerators.secureRandom(32).generateKey(); // (1)
+        BytesEncryptor aes = Encryptors.standard(
+                new String(Hex.encode(random)), salt); // (2)
+
+        try (ByteArrayOutputStream result = new ByteArrayOutputStream()) {
+            final Cipher cipher = Cipher.getInstance("RSA"); // (3)
+            cipher.init(Cipher.ENCRYPT_MODE, publicKey); // (4)
+            byte[] secret = cipher.doFinal(random); // (5)
+
+            byte[] data = new byte[2]; // (6)
+            data[0] = (byte) ((secret.length >> 8) & 0xFF); //
+            data[1] = (byte) (secret.length & 0xFF); //
+            result.write(data); //
+
+            result.write(secret); // (7)
+            result.write(aes.encrypt(plainBytes)); // (8)
+
+            return result.toByteArray(); // (9)
+        } catch (IOException e) {
+            throw new SystemException("e.xx.xx.9001", "input/output error.", e);
+        } catch (NoSuchAlgorithmException | NoSuchPaddingException e) {
+            throw new SystemException("e.xx.xx.9002", "No Such setting error.", e);
+        } catch (InvalidKeyException | IllegalBlockSizeException | BadPaddingException e) {
+            throw new SystemException("e.xx.xx.9003", "Invalid setting error.", e);
+        }
+    }
+
+  .. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+  .. list-table::
+     :header-rows: 1
+     :widths: 10 90
+  
+     * - Sr. No.
+       - Description
+     * - | (1)
+       - | Call \ ``KeyGenerators#secureRandom``\  method by specifyinh 32 bytes as a key length and generate an instance of \ ``BytesKeyGenerator``\  class.
+         | Call \ ``BytesKeyGenerator#generateKey``\  method and generate a common key.
+         | For details, refer to \ :ref:`EncryptionHowToUsePseudoRandomNumber`\ .
+
+     * - | (2)
+       - | Specify generated common key and salt, and generate an instance of \ ``BytesEncryptor``\  class.
+
+     * - | (3)
+       - | specify RSA as an encryption algorithm and generate an instance of \ ``Cipher``\  class.
+
+     * - | (4)
+       - | Specify encryption mode constant and public key, and initialise an instance of \ ``Cipher``\  class.
+
+     * - | (5)
+       - | Execute encryption process of common key. The encryption is performed by using public key encryption process.
+
+     * - | (6)
+       - | Store length of encrypted common key in encrypted text of byte array. Length of stored common key is used at the time of decryption.
+
+     * - | (7)
+       - | Store encrypted common key in encrypted text of byte array.
+
+     * - | (8)
+       - | Encrypt plain text and store in encrypted text of byte array. The encryption is performed by using common key encryption process.
+
+     * - | (9)
+       - | Return encrypted text of byte array.
+
+|
+
+Decryption
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+
+  .. code-block:: java
+
+    public byte[] decrypt(byte[] cipherBytes, PrivateKey privateKey, String salt) {
+
+        try (ByteArrayInputStream input = new ByteArrayInputStream(cipherBytes);
+                ByteArrayOutputStream output = new ByteArrayOutputStream()) {
+            byte[] b = new byte[2]; // (1)
+            input.read(b); //
+            int length = ((b[0] & 0xFF) << 8) | (b[1] & 0xFF); //
+
+            byte[] random = new byte[length]; // (2)
+            input.read(random); //
+            final Cipher cipher = Cipher.getInstance("RSA"); // (3)
+            cipher.init(Cipher.DECRYPT_MODE, privateKey); // (4)
+            String secret = new String(Hex.encode(cipher.doFinal(random))); // (5)
+            byte[] buffer = new byte[cipherBytes.length - random.length - 2]; // (6)
+            input.read(buffer); //
+            BytesEncryptor aes = Encryptors.standard(secret, salt); // (7)
+            output.write(aes.decrypt(buffer)); // (8)
+
+            return output.toByteArray(); // (9)
+        } catch (IOException e) {
+            throw new SystemException("e.xx.xx.9001", "input/output error.", e);
+        } catch (NoSuchAlgorithmException | NoSuchPaddingException e) {
+            throw new SystemException("e.xx.xx.9002", "No Such setting error.", e);
+        } catch (InvalidKeyException | IllegalBlockSizeException | BadPaddingException e) {
+            throw new SystemException("e.xx.xx.9003", "Invalid setting error.", e);
+        }
+    }
+
+  .. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+  .. list-table::
+     :header-rows: 1
+     :widths: 10 90
+  
+     * - Sr. No.
+       - Description
+     * - | (1)
+       - | Fetch length of encrypted common key.
+
+     * - | (2)
+       - | Fetch encrypted common key.
+
+     * - | (3)
+       - | Specify RSA as an encryption algorithm and generate an instance of \ ``Cipher``\  class.
+
+     * - | (4)
+       - | Specify decryption mode constant and secret key, and initialise an instance of \ ``Cipher``\  class.
+
+     * - | (5)
+       - | Execute decryption process of common key. Decryption is performed by using public key encryption process.
+
+     * - | (6)
+       - | Fetch decryption target.
+
+     * - | (7)
+       - | Specify decrypted common key and salt, and generate an instance of \ ``BytesEncryptor``\  class.
+
+     * - | (8)
+       - | Execute decryption process. Decryption is performed by using common key encryption process.
+
+     * - | (9)
+       - | Return plain text of decrypted byte array.
+
+|
+
+.. _EncryptionHowToUsePseudoRandomNumber:
+
+Random number generation
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+
+Generation of string type pseudo-random number
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+
+  .. code-block:: java
+
+    public static void createStringKey() {
+        StringKeyGenerator generator = KeyGenerators.string(); // (1)
+        System.out.println(generator.generateKey()); // (2)
+        System.out.println(generator.generateKey()); //
+    }
+
+  .. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+  .. list-table::
+     :header-rows: 1
+     :widths: 10 90
+  
+     * - Sr. No.
+       - Description
+     * - | (1)
+       - | Generate an instance of key (pseudo-random number) generator \ ``StringKeyGenerator``\  class.
+         | If key is generated by this generator, a different value is obtained for each instance.
+         |
+         | Key length cannot be specified, a key of length 8 byte is always generated.
+
+     * - | (2)
+       - | Generate a key (pseudo-random number) by using \ ``generateKey``\  method.
+
+|
+
+Generation of byte array type pseudo-randon number
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+
+- Generate a different key.
+
+  .. code-block:: java
+
+    public static void createDifferentBytesKey() {
+        BytesKeyGenerator generator = KeyGenerators.secureRandom(); // (1)
+        System.out.println(Arrays.toString(generator.generateKey())); // (2)
+        System.out.println(Arrays.toString(generator.generateKey())); //
+    }
+
+  .. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+  .. list-table::
+     :header-rows: 1
+     :widths: 10 90
+  
+     * - Sr. No.
+       - Description
+     * - | (1)
+       - | Call \ ``KeyGenerators#secureRandom``\  method and generate an instance of key (pseudo-random number) generator \ ``BytesKeyGenerator``\  class.
+         | If key is generated by this generator, a different value is obtained for each instance.
+         |
+         | When key length is not specified, a key of length - 8 bytes is generated by default.
+
+     * - | (2)
+       - | Generate a key by using \ ``generateKey``\  method.
+
+|
+
+- Generate identical key.
+
+  .. code-block:: java
+
+    public static void createSameBytesKey() {
+        BytesKeyGenerator generator = KeyGenerators.shared(32); // (1)
+        System.out.println(Arrays.toString(generator.generateKey())); // (2)
+        System.out.println(Arrays.toString(generator.generateKey())); //
+    }
+
+  .. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+  .. list-table::
+     :header-rows: 1
+     :widths: 10 90
+  
+     * - Sr. No.
+       - Description
+     * - | (1)
+       - | Specify 32 bytes as key length, call \ ``KeyGenerators#shared``\  method and generate an instance of key (pseudo-random number) generator \ ``BytesKeyGenerator``\  class.
+         | If key is generated by this generator, same value is obtained for each instance.
+         |
+         | Specifying key length is mandatory.
+
+     * - | (2)
+       - | Generate key by using \ ``generateKey``\  method.
+
+|
+
+.. raw:: latex
+
+   \newpage
+
diff --git a/source_en/Security/images_Encryption/EncryptionHybrid.png b/source_en/Security/images_Encryption/EncryptionHybrid.png
new file mode 100755
index 0000000000..ae8684b1c2
Binary files /dev/null and b/source_en/Security/images_Encryption/EncryptionHybrid.png differ
diff --git a/source_en/Security/index.rst b/source_en/Security/index.rst
index 922b812761..ed40eae780 100755
--- a/source_en/Security/index.rst
+++ b/source_en/Security/index.rst
@@ -1,4 +1,4 @@
-Security for TERASOLUNA Server Framework for Java (5.x)
+Security countermeasures for TERASOLUNA Server Framework for Java (5.x)
 ================================================================================
 
 .. toctree::
@@ -11,6 +11,7 @@ Security for TERASOLUNA Server Framework for Java (5.x)
    Authorization
    XSS
    CSRF
+   Encryption
 
 .. raw:: latex
 
diff --git a/source_en/TutorialREST/index.rst b/source_en/TutorialREST/index.rst
index 94b6bcdd51..061c3abb38 100755
--- a/source_en/TutorialREST/index.rst
+++ b/source_en/TutorialREST/index.rst
@@ -550,7 +550,7 @@ Creation of spring-mvc-rest.xml
                 <bean
                     class="org.springframework.data.web.PageableHandlerMethodArgumentResolver" />
                 <bean
-                    class="org.springframework.security.web.bind.support.AuthenticationPrincipalArgumentResolver" />
+                    class="org.springframework.security.web.method.annotation.AuthenticationPrincipalArgumentResolver" />
             </mvc:argument-resolvers>
             <mvc:message-converters register-defaults="false">
                 <!-- (1) -->
@@ -661,20 +661,11 @@ Definition of Spring Security for REST API
         <sec:http
             pattern="/api/v1/**"
             auto-config="true"
-            use-expressions="true"
             create-session="stateless">
-            <sec:headers />
+            <sec:csrf disabled="true"/>
         </sec:http>
 
-        <sec:http auto-config="true" use-expressions="true">
-            <sec:headers>
-                <sec:cache-control />
-                <sec:content-type-options />
-                <sec:hsts />
-                <sec:frame-options />
-                <sec:xss-protection />
-            </sec:headers>
-            <sec:csrf />
+        <sec:http auto-config="true">
             <sec:access-denied-handler ref="accessDeniedHandler"/>
             <sec:custom-filter ref="userIdMDCPutFilter" after="ANONYMOUS_FILTER"/>
             <sec:session-management />
@@ -732,6 +723,8 @@ Definition of Spring Security for REST API
        | Specify the URL pattern of the REST API request path at \ ``pattern`` \ attribute of the \ ``<sec:http>`` \ element.
        | In this tutorial, request path starts with \ ``/api/v1/`` \ is considered as a REST API request.
        | Furthermore, session is no longer used in the processing of Spring Security by specifying \ ``stateless`` \ at \ ``create-session`` \ attribute.
+       | 
+       | Specify \ ``disabled="true"``\  in \ ``<sec:csrf>``\  element for invalidating CSRF countermeasures.
 
 |
 
diff --git a/source_en/TutorialTodo/index.rst b/source_en/TutorialTodo/index.rst
index e0abf8282b..27ea4600f0 100755
--- a/source_en/TutorialTodo/index.rst
+++ b/source_en/TutorialTodo/index.rst
@@ -4017,7 +4017,7 @@ The Spring MVC related definitions are done in \ :file:`spring-mvc.xml`\.
                 <bean
                     class="org.springframework.data.web.PageableHandlerMethodArgumentResolver" />
                 <bean
-                    class="org.springframework.security.web.bind.support.AuthenticationPrincipalArgumentResolver" />
+                    class="org.springframework.security.web.method.annotation.AuthenticationPrincipalArgumentResolver" />
             </mvc:argument-resolvers>
         </mvc:annotation-driven>
 
@@ -4207,15 +4207,7 @@ The Spring Security related definitions are done in \ :file:`spring-security.xml
             http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
 
         <sec:http pattern="/resources/**" security="none"/>
-        <sec:http auto-config="true" use-expressions="true">
-            <sec:headers>
-                <sec:cache-control />
-                <sec:content-type-options />
-                <sec:hsts />
-                <sec:frame-options />
-                <sec:xss-protection />
-            </sec:headers>
-            <sec:csrf />
+        <sec:http auto-config="true">
             <sec:access-denied-handler ref="accessDeniedHandler"/>
             <sec:custom-filter ref="userIdMDCPutFilter" after="ANONYMOUS_FILTER"/>
             <sec:session-management />
