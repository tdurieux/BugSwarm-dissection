diff --git a/plugin_tooling/src-lang/melnorme/lang/tooling/parser/SourceLinesInfo.java b/plugin_tooling/src-lang/melnorme/lang/tooling/parser/SourceLinesInfo.java
index 7626dfff34..9d75e9201f 100755
--- a/plugin_tooling/src-lang/melnorme/lang/tooling/parser/SourceLinesInfo.java
+++ b/plugin_tooling/src-lang/melnorme/lang/tooling/parser/SourceLinesInfo.java
@@ -107,7 +107,7 @@ public int getValidatedOffset_1(int line_1, int column_1) throws CommonException
 		
 		if(lineIndex >= lines.size()) {
 			throw CommonException.fromMsgFormat("Invalid line: {0} is over the max bound: {1}.", 
-				line_1, lines.size() + 1);
+				line_1, lines.size());
 		}
 		
 		return getValidateOffset_do(lineIndex, columnIndex);
diff --git a/plugin_tooling/src-lang/melnorme/lang/tooling/parser/SourceLinesInfo_Test.java b/plugin_tooling/src-lang/melnorme/lang/tooling/parser/SourceLinesInfo_Test.java
index 4faa6180f0..fcf1b26031 100755
--- a/plugin_tooling/src-lang/melnorme/lang/tooling/parser/SourceLinesInfo_Test.java
+++ b/plugin_tooling/src-lang/melnorme/lang/tooling/parser/SourceLinesInfo_Test.java
@@ -24,6 +24,7 @@
 	public void test$() throws Exception {
 		
 		getSourceLinesInfo("");
+		getSourceLinesInfo("\n");
 		SourceLinesInfo  sourceLinesInfo = getSourceLinesInfo("12345\n12345");
 		
 		testOffset(sourceLinesInfo, 1, 0, 0, 1);
@@ -33,7 +34,7 @@
 		
 		verifyThrows(() -> sourceLinesInfo.getValidatedOffset_1(1, 10), null, "Invalid column, out of bounds");
 		verifyThrows(() -> sourceLinesInfo.getValidatedOffset_1(2, 10), null, "line+column, out of bounds");
-		verifyThrows(() -> sourceLinesInfo.getValidatedOffset_1(3, 1), null, "Invalid line: 3 is over the max bound: 3");
+		verifyThrows(() -> sourceLinesInfo.getValidatedOffset_1(3, 1), null, "Invalid line: 3 is over the max bound: 2");
 		
 		assertEquals(sourceLinesInfo.getValidatedOffset_1(1, 1), 0);
 		assertEquals(sourceLinesInfo.getValidatedOffset_1(2, 1), 6);
