diff --git a/stagemonitor-alerting/src/main/resources/stagemonitor/static/tabs/alert/alerting-tab.html b/stagemonitor-alerting/src/main/resources/stagemonitor/static/tabs/alert/alerting-tab.html
index 84383e5680..4c7e3dba03 100755
--- a/stagemonitor-alerting/src/main/resources/stagemonitor/static/tabs/alert/alerting-tab.html
+++ b/stagemonitor-alerting/src/main/resources/stagemonitor/static/tabs/alert/alerting-tab.html
@@ -250,8 +250,7 @@ <h4 class="modal-title" id="check-modal-label">{{title}}</h4>
 					<label class="col-sm-2 control-label" for="target-name-input">
 						Name
 						<span class="glyphicon glyphicon-question-sign tip"
-							  title="Enter the name of the metric. For example 'response_time_server'.
-							  Press the arrow down key in the field to see all currently available metric names"></span>
+							  title="Enter the name of the metric. For example 'response_time_server'."></span>
 					</label>
 					<div class="col-sm-5">
 						<input id="target-name-input" class="form-control typeahead" name="target[name]" value="{{check.target.name}}" required>
diff --git a/stagemonitor-alerting/src/main/resources/stagemonitor/static/tabs/alert/alerting-tab.js b/stagemonitor-alerting/src/main/resources/stagemonitor/static/tabs/alert/alerting-tab.js
index 0a766d1e9b..e42adf058c 100755
--- a/stagemonitor-alerting/src/main/resources/stagemonitor/static/tabs/alert/alerting-tab.js
+++ b/stagemonitor-alerting/src/main/resources/stagemonitor/static/tabs/alert/alerting-tab.js
@@ -401,7 +401,6 @@
 				}
 
 				function renderCheckModal(title, check) {
-					$(".tip").tooltip({html: true});
 					$.getJSON(stagemonitor.baseUrl + "/stagemonitor/metrics", function (metrics) {
 
 						var matchingMetrics = getMatchingMetrics(metrics, check.target);
@@ -412,10 +411,14 @@
 							hasTagFilters: Object.keys(check.target.tags).length > 0,
 							valueTypes: matchingValueTypes
 						}));
+						$(".tip").tooltip({html: true});
+
 						var allMetricNames = $.unique($.map(metrics, function(metric) { return metric.name }));
+						allMetricNames.sort();
 
 						typeahead("#target-name-input", allMetricNames);
 						var matchingTagKeys = $.unique([].concat.apply([], $.map(matchingMetrics, function(metric) { return Object.keys(metric.tags) })));
+						matchingTagKeys.sort();
 						typeahead(".tag-key", matchingTagKeys);
 
 						var tagKeys = Object.keys(check.target.tags);
diff --git a/stagemonitor-requestmonitor/src/main/java/org/stagemonitor/requestmonitor/reporter/ElasticsearchExternalRequestReporter.java b/stagemonitor-requestmonitor/src/main/java/org/stagemonitor/requestmonitor/reporter/ElasticsearchExternalRequestReporter.java
index ea576e5488..aee01b2871 100755
--- a/stagemonitor-requestmonitor/src/main/java/org/stagemonitor/requestmonitor/reporter/ElasticsearchExternalRequestReporter.java
+++ b/stagemonitor-requestmonitor/src/main/java/org/stagemonitor/requestmonitor/reporter/ElasticsearchExternalRequestReporter.java
@@ -65,7 +65,7 @@ public void reportRequestTrace(final ReportArguments reportArguments) throws Exc
 		for (Iterator<ExternalRequest> iterator = externalRequests.iterator(); iterator.hasNext(); ) {
 			final ExternalRequest externalRequest = iterator.next();
 			trackExternalRequestMetrics(externalRequest);
-			if (false && !isReportExternalRequest(externalRequest)) {
+			if (!isReportExternalRequest(externalRequest)) {
 				iterator.remove();
 			}
 		}
diff --git a/stagemonitor-requestmonitor/src/main/java/org/stagemonitor/requestmonitor/reporter/ElasticsearchRequestTraceReporter.java b/stagemonitor-requestmonitor/src/main/java/org/stagemonitor/requestmonitor/reporter/ElasticsearchRequestTraceReporter.java
index 685da6ef3e..ace8352de2 100755
--- a/stagemonitor-requestmonitor/src/main/java/org/stagemonitor/requestmonitor/reporter/ElasticsearchRequestTraceReporter.java
+++ b/stagemonitor-requestmonitor/src/main/java/org/stagemonitor/requestmonitor/reporter/ElasticsearchRequestTraceReporter.java
@@ -30,7 +30,6 @@ public ElasticsearchRequestTraceReporter() {
 	protected <T extends RequestTrace> void doReport(T requestTrace, PostExecutionInterceptorContext context) {
 		final String index = "stagemonitor-requests-" + StringUtils.getLogstashStyleDate();
 		final String type = "requests";
-		if (true) return;
 		if (!requestMonitorPlugin.isOnlyLogElasticsearchRequestTraceReports()) {
 			if (context.getExcludedProperties().isEmpty()) {
 				elasticsearchClient.index(index, type, requestTrace);
