diff --git a/CHANGELOG.md b/CHANGELOG.md
index 808b5d738c..b9c5282fd0 100755
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -2,6 +2,15 @@
 All enhancements and patches to cookiecutter-django will be documented in this file.
 This project adheres to [Semantic Versioning](http://semver.org/).
 
+## [2015-10-05]
+### Changed
+- Update version of Django, Pillow, hitchselenium, psutil (@luzfcb)
+
+## [2015-10-04]
+### Changed
+- Remove stray closing tags and fix navbar margin in in base.html (@hairychris)
+- Docker docs to be functional and more understandable (@audreyr)
+
 ## [2015-09-30]
 ### Changed
 - Fixed Sentry logging with celery (@jayfk)
diff --git a/CONTRIBUTORS.rst b/CONTRIBUTORS.rst
index 172667b867..884e6bc2d8 100755
--- a/CONTRIBUTORS.rst
+++ b/CONTRIBUTORS.rst
@@ -56,6 +56,7 @@ Code Contributors
 * @kaidokert
 * Raphael Pierzina / @hackebrot
 * Alvaro [Andor] / @andor-pierdelacabeza
+* Chris Franklin / @hairychris
 
 \* Possesses commit rights
 
diff --git a/docs/developing-locally-docker.rst b/docs/developing-locally-docker.rst
index ee63054561..1cee911755 100755
--- a/docs/developing-locally-docker.rst
+++ b/docs/developing-locally-docker.rst
@@ -4,29 +4,28 @@ Getting Up and Running with Docker
 .. index:: Docker
 
 The steps below will get you up and running with a local development environment.
+All of these commands assume you are in the root of your generated project.
 
 Prerequisites
 --------------
 
+If you don't already have these installed, get them all by installing `Docker Toolbox`_.
+
 * docker
 * docker-machine
 * docker-compose
 * virtualbox
 
-If you don't already have these installed, you can get them at:
-
-* https://github.com/docker/toolbox/releases
-* https://www.virtualbox.org/wiki/Downloads
-
-Go to the Root of your Project
-------------------------------
+.. _`Docker Toolbox`: https://github.com/docker/toolbox/releases
 
-All of these commands assume you are in the root of your generated project.
+Create the Machine (Optional)
+-------------------------------
 
-Create the Machine
--------------------
+On Ubuntu you have native Docker, so you don't need to create a VM with 
+docker-machine to use it.
 
-::
+However, on Mac/Windows/other systems without native Docker, you'll want to 
+start by creating a VM with docker-machine::
 
     $ docker-machine create --driver virtualbox dev1
 
@@ -34,29 +33,16 @@ Create the Machine
 name them accordingly. Instead of 'dev1' you might have 'dev2', 'myproject',
 'djangopackages', et al.
 
-Make the new machine the active unit
--------------------------------------
-
-This tells our computer that all future commands are specifically for the just
-created machine. Using the ``eval`` command we can switch machines as needed.
-
-::
-
-    $ eval "$(docker-machine env dev1)"
-
 Get the IP Address
 --------------------
 
-Acquiring the IP Address is good for two reasons:
-
-1. Confirms that the machine is up and running.
-2. Tells us the IP address where our Django project is being served.
-
-::
+Once your machine is up and running, run this::
 
     $ docker-machine ip dev1
     123.456.789.012
 
+This is also the IP address where the Django project will be served from.
+
 Saving changes
 --------------
 
@@ -64,15 +50,12 @@ If you are using OS X or Windows, you need to create a /data partition inside th
 virtual machine that runs the docker deamon in order make all changes persistent.
 If you don't do that your /data directory will get wiped out on every reboot.
 
-To create a persistent folder, log into the virtual machine by running:
-
-::
+To create a persistent folder, log into the virtual machine by running::
 
     $ docker-machine ssh dev1
     $ sudo su
     $ echo 'ln -sfn /mnt/sda1/data /data' >> /var/lib/boot2docker/bootlocal.sh
 
-
 In case you are wondering why you can't use a host volume to keep the files on
 your mac: As of `boot2docker` 1.7 you'll run into permission problems with mounted
 host volumes if the container creates his own user and chown's the directories
@@ -83,73 +66,66 @@ Build the Stack
 ---------------
 
 This can take a while, especially the first time you run this particular command
-on your development system.
-
-::
+on your development system::
 
     $ docker-compose build
 
 Boot the System
-------------------------------
-
-This brings up both Django and PostgreSQL. The first time it is run it might
-take a while to get started, but subsequent runs will occur quickly.
-
-::
+---------------
 
-    $ docker-compose -f dev.yml up
+This brings up both Django and PostgreSQL. 
 
-If you want to run the entire system in production mode, then run:
+The first time it is run it might take a while to get started, but subsequent 
+runs will occur quickly.
 
-::
+Open a terminal at the project root and run the following for local development::
 
-    $ docker-compose up
+    $ docker-compose -f dev.yml up
 
-If you want to run the stack in detached mode (in the background), use the ``-d`` argument::
+You can also set the environment variable ``COMPOSE_FILE`` pointing to ``dev.yml`` like this::
 
-::
+    $ export COMPOSE_FILE=dev.yml
 
-    $ docker-compose up -d
+And then run::
 
-Running bash commands (i.e. management commands)
-----------------------------------------------------
+    $ docker-compose up
+    
+Running management commands
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
-This is done using the ``docker-compose run`` command. In the following examples
-we specify the ``django`` container as the location to run our management commands.
+As with any shell command that we wish to run in our container, this is done 
+using the ``docker-compose run`` command. 
 
-Example:
+To migrate your app and to create a superuser, run::
 
     $ docker-compose run django python manage.py migrate
     $ docker-compose run django python manage.py createsuperuser
 
+Here we specify the ``django`` container as the location to run our management commands.
 
+Production Mode
+~~~~~~~~~~~~~~~~
 
-Deprecated
-==========
-
-**Note:** This segment of documentation is being kept in this location as part of our documentation transition process.
-
-
-The steps below will get you up and running with a local development environment. We assume you have the following installed:
-
-* docker
-* docker-compose
-
-Open a terminal at the project root and run the following for local development::
+Instead of using `dev.yml`, you would use `docker-compose.yml`.
 
-    $ docker-compose -f dev.yml up
+Other Useful Tips
+------------------
 
-You can also set the environment variable ``COMPOSE_FILE`` pointing to ``dev.yml`` like this::
+Make a machine the active unit
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
-    $ export COMPOSE_FILE=dev.yml
+This tells our computer that all future commands are specifically for the dev1 machine. 
+Using the ``eval`` command we can switch machines as needed.
 
-And then run::
+::
 
-    $ docker-compose up
+    $ eval "$(docker-machine env dev1)"
 
+Detached Mode
+~~~~~~~~~~~~~
 
-To migrate your app and to create a superuser, run::
+If you want to run the stack in detached mode (in the background), use the ``-d`` argument:
 
-    $ docker-compose run django python manage.py migrate
+::
 
-    $ docker-compose run django python manage.py createsuperuser
+    $ docker-compose up -d
diff --git a/docs/developing-locally.rst b/docs/developing-locally.rst
index d4fd877457..ae737dc4f8 100755
--- a/docs/developing-locally.rst
+++ b/docs/developing-locally.rst
@@ -15,11 +15,9 @@ First make sure to create and activate a virtualenv_, then open a terminal at th
 
 .. _virtualenv: http://docs.python-guide.org/en/latest/dev/virtualenvs/
 
-Then, create a PostgreSQL database and add the database configuration using the  ``dj-database-url`` app pattern: ``postgres://db_owner:password@dbserver_ip:port/db_name`` either:
-
-* in the ``config.settings.common.py`` setting file,
-* or in the environment variable ``DATABASE_URL``
+Then, create a PostgreSQL database with the following command, where `[repo_name]` is what value you entered for your project's `repo_name`::
 
+    $ createdb [repo_name]
 
 You can now run the usual Django ``migrate`` and ``runserver`` command::
 
diff --git a/{{cookiecutter.repo_name}}/Dockerfile b/{{cookiecutter.repo_name}}/Dockerfile
index 8810d8f984..2a038555b1 100755
--- a/{{cookiecutter.repo_name}}/Dockerfile
+++ b/{{cookiecutter.repo_name}}/Dockerfile
@@ -7,10 +7,8 @@ ENV PYTHONUNBUFFERED 1
 
 # Requirements have to be pulled and installed here, otherwise caching won't work
 ADD ./requirements /requirements
-ADD ./requirements.txt /requirements.txt
 
-RUN pip install -r /requirements.txt
-RUN pip install -r /requirements/local.txt
+RUN pip install -r /requirements/production.txt
 
 RUN groupadd -r django && useradd -r -g django django
 ADD . /app
diff --git a/{{cookiecutter.repo_name}}/Dockerfile-dev b/{{cookiecutter.repo_name}}/Dockerfile-dev
new file mode 100755
index 0000000000..f382b91330
--- /dev/null
+++ b/{{cookiecutter.repo_name}}/Dockerfile-dev
@@ -0,0 +1,25 @@
+{% if cookiecutter.use_python2 == 'n' -%}
+FROM python:3.5
+{% else %}
+FROM python:2.7
+{%- endif %}
+ENV PYTHONUNBUFFERED 1
+
+# Requirements have to be pulled and installed here, otherwise caching won't work
+ADD ./requirements /requirements
+
+RUN pip install -r /requirements/local.txt
+
+RUN groupadd -r django && useradd -r -g django django
+ADD . /app
+RUN chown -R django /app
+
+ADD ./compose/django/gunicorn.sh /gunicorn.sh
+ADD ./compose/django/entrypoint.sh /entrypoint.sh
+
+RUN chmod +x /entrypoint.sh && chown django /entrypoint.sh
+RUN chmod +x /gunicorn.sh && chown django /gunicorn.sh
+
+WORKDIR /app
+
+ENTRYPOINT ["/entrypoint.sh"]
diff --git a/{{cookiecutter.repo_name}}/config/settings/production.py b/{{cookiecutter.repo_name}}/config/settings/production.py
index edcf74a54f..f022d5c622 100755
--- a/{{cookiecutter.repo_name}}/config/settings/production.py
+++ b/{{cookiecutter.repo_name}}/config/settings/production.py
@@ -130,12 +130,10 @@
 MAILGUN_SERVER_NAME = env('DJANGO_MAILGUN_SERVER_NAME')
 EMAIL_SUBJECT_PREFIX = env("DJANGO_EMAIL_SUBJECT_PREFIX", default='[{{cookiecutter.project_name}}] ')
 SERVER_EMAIL = env('DJANGO_SERVER_EMAIL', default=DEFAULT_FROM_EMAIL)
-
 {% if cookiecutter.use_newrelic == 'y'-%}
 NEW_RELIC_LICENSE_KEY = env('NEW_RELIC_LICENSE_KEY')
 {%- endif %}
 
-
 # TEMPLATE CONFIGURATION
 # ------------------------------------------------------------------------------
 # See:
diff --git a/{{cookiecutter.repo_name}}/config/wsgi.py b/{{cookiecutter.repo_name}}/config/wsgi.py
index 9f2df6cf51..50ca3afef8 100755
--- a/{{cookiecutter.repo_name}}/config/wsgi.py
+++ b/{{cookiecutter.repo_name}}/config/wsgi.py
@@ -53,7 +53,6 @@
 if os.environ.get("DJANGO_SETTINGS_MODULE") == "config.settings.production":
     application = newrelic.agent.WSGIApplicationWrapper(application)
 {%- endif %}
-
 # Apply WSGI middleware here.
 # from helloworld.wsgi import HelloWorldApplication
 # application = HelloWorldApplication(application)
diff --git a/{{cookiecutter.repo_name}}/dev.yml b/{{cookiecutter.repo_name}}/dev.yml
index 98146ffedd..63b172d390 100755
--- a/{{cookiecutter.repo_name}}/dev.yml
+++ b/{{cookiecutter.repo_name}}/dev.yml
@@ -1,3 +1,4 @@
+
 postgres:
   image: postgres
   volumes:
@@ -6,6 +7,7 @@ postgres:
     - /data/{{cookiecutter.repo_name}}/postgres:/var/lib/postgresql/data
 
 django:
+  dockerfile: Dockerfile-dev
   build: .
   command: python /app/manage.py runserver_plus 0.0.0.0:8000
   volumes:
diff --git a/{{cookiecutter.repo_name}}/requirements/base.txt b/{{cookiecutter.repo_name}}/requirements/base.txt
index 88561d5d28..68d280a3ce 100755
--- a/{{cookiecutter.repo_name}}/requirements/base.txt
+++ b/{{cookiecutter.repo_name}}/requirements/base.txt
@@ -1,5 +1,5 @@
 # Bleeding edge Django
-django==1.8.4
+django==1.8.5
 
 # Configuration
 django-environ==0.4.0
@@ -18,7 +18,7 @@ django-floppyforms==1.5.2
 django-model-utils==2.3.1
 
 # Images
-Pillow==2.9.0
+Pillow==3.0.0
 
 # For user registration, either via email or social
 # Well-built with regular release cycles!
diff --git a/{{cookiecutter.repo_name}}/tests/hitchreqs.txt b/{{cookiecutter.repo_name}}/tests/hitchreqs.txt
index 740b349fba..40480aff5a 100755
--- a/{{cookiecutter.repo_name}}/tests/hitchreqs.txt
+++ b/{{cookiecutter.repo_name}}/tests/hitchreqs.txt
@@ -5,7 +5,7 @@ hitchcron==0.2
 hitchpostgres==0.6.3
 hitchpython==0.3.8
 hitchredis==0.4.3
-hitchselenium==0.4.3
+hitchselenium==0.4.5
 hitchserve==0.4.5
 hitchsmtp==0.2.1
 hitchtest==0.8.0
@@ -14,7 +14,7 @@ ipython==4.0.0
 Jinja2==2.8
 MarkupSafe==0.23
 patool==1.8
-psutil==3.2.1
+psutil==3.2.2
 python-build==0.2.3
 pyuv==1.2.0
 PyYAML==3.11
diff --git a/{{cookiecutter.repo_name}}/{{cookiecutter.repo_name}}/templates/base.html b/{{cookiecutter.repo_name}}/{{cookiecutter.repo_name}}/templates/base.html
index 50944cd2c8..0931ca8fbc 100755
--- a/{{cookiecutter.repo_name}}/{{cookiecutter.repo_name}}/templates/base.html
+++ b/{{cookiecutter.repo_name}}/{{cookiecutter.repo_name}}/templates/base.html
@@ -31,7 +31,7 @@
 
   <body>
     
-    <div class="m-b-lg">
+    <div class="m-b">
       <nav class="navbar navbar-dark navbar-static-top bg-inverse">
         <div class="container">
          <a class="navbar-brand" href="/">{% endraw %}{{ cookiecutter.project_name }}{% raw %}</a>
@@ -42,17 +42,17 @@
           <!-- Collect the nav links, forms, and other content for toggling -->
           <div class="collapse navbar-toggleable-xs" id="bs-navbar-collapse-1">
             <nav class="nav navbar-nav">
-              <a class="nav-link nav-item" href="{% url 'home' %}">Home</a></li>
-              <a class="nav-link nav-item" href="{% url 'about' %}">About</a></li>
+              <a class="nav-link nav-item" href="{% url 'home' %}">Home</a>
+              <a class="nav-link nav-item" href="{% url 'about' %}">About</a>
             </nav>
         
             <nav class="nav navbar-nav pull-right">
               {% if request.user.is_authenticated %}
-                <a class="nav-link nav-item" href="{% url 'users:detail' request.user.username  %}">{% trans "My Profile" %}</a></li>
-                <a class="nav-link nav-item" href="{% url 'account_logout' %}">{% trans "Logout" %}</a></li>
+                <a class="nav-link nav-item" href="{% url 'users:detail' request.user.username  %}">{% trans "My Profile" %}</a>
+                <a class="nav-link nav-item" href="{% url 'account_logout' %}">{% trans "Logout" %}</a>
               {% else %}
-                <a class="nav-link nav-item" href="{% url 'account_signup' %}">{% trans "Sign Up" %}</a></li>
-                <a class="nav-link nav-item" href="{% url 'account_login' %}">{% trans "Log In" %}</a></li>
+                <a class="nav-link nav-item" href="{% url 'account_signup' %}">{% trans "Sign Up" %}</a>
+                <a class="nav-link nav-item" href="{% url 'account_login' %}">{% trans "Log In" %}</a>
               {% endif %}
             </nav>
           </div>
