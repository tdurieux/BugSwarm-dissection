diff --git a/src/org/nutz/dao/impl/DaoSupport.java b/src/org/nutz/dao/impl/DaoSupport.java
index 6c0bec0004..d9f861977e 100755
--- a/src/org/nutz/dao/impl/DaoSupport.java
+++ b/src/org/nutz/dao/impl/DaoSupport.java
@@ -217,7 +217,7 @@ protected int _exec(final DaoStatement... sts) {
 
         // 如果强制没有事务或者都是 SELECT，没必要启动事务
         Transaction t = Trans.get();
-        if ((Trans.isTransactionNone() && isAllSelect) || // 用户没有指定用事务,又全部都是Select,那就不需要开事务咯
+        if ((Trans.isTransactionNone() && isAllSelect && !meta.isPostgresql()) || // 用户没有指定用事务,又全部都是Select,那就不需要开事务咯
                 // SQLite只有SERIALIZABLE和READ_UNCOMMITTED事务了
                 (meta.isSQLite() && (t == null || (t.getLevel() != Connection.TRANSACTION_SERIALIZABLE
                                               && t.getLevel() != Connection.TRANSACTION_READ_UNCOMMITTED))) 
diff --git a/src/org/nutz/dao/impl/entity/field/NutMappingField.java b/src/org/nutz/dao/impl/entity/field/NutMappingField.java
index 61a6c0b034..a8bced65a4 100755
--- a/src/org/nutz/dao/impl/entity/field/NutMappingField.java
+++ b/src/org/nutz/dao/impl/entity/field/NutMappingField.java
@@ -10,6 +10,8 @@
 import org.nutz.dao.impl.entity.EntityObjectContext;
 import org.nutz.dao.jdbc.ValueAdaptor;
 import org.nutz.lang.segment.Segment;
+import org.nutz.log.Log;
+import org.nutz.log.Logs;
 
 public class NutMappingField extends AbstractEntityField implements MappingField {
 
@@ -50,6 +52,8 @@
 	private boolean insert = true;
 
 	private boolean update = true;
+	
+	private static final Log log = Logs.get();
 
 	public NutMappingField(Entity<?> entity) {
 		super(entity);
@@ -69,14 +73,22 @@ public void injectValue(Object obj, Record rec, String prefix) {
 			Object val = rec.get(prefix == null ? columnName : prefix + columnName);
 			this.setValue(obj, val);
 		}
-		catch (Exception e) {}
+		catch (Exception e) {
+            if (log.isTraceEnabled()) {
+                log.tracef("columnName="+columnName, e);
+            }
+		}
 	}
 
 	public void injectValue(Object obj, ResultSet rs, String prefix) {
 		try {
 			this.setValue(obj, adaptor.get(rs, prefix == null ? columnName : prefix + columnName));
 		}
-		catch (SQLException e) {}
+		catch (SQLException e) {
+		    if (log.isTraceEnabled()) {
+		        log.tracef("columnName="+columnName, e);
+		    }
+		}
 	}
 
 	public String getColumnName() {
diff --git a/src/org/nutz/dao/impl/jdbc/BlobValueAdaptor.java b/src/org/nutz/dao/impl/jdbc/BlobValueAdaptor.java
index f627100693..554ddaae84 100755
--- a/src/org/nutz/dao/impl/jdbc/BlobValueAdaptor.java
+++ b/src/org/nutz/dao/impl/jdbc/BlobValueAdaptor.java
@@ -19,10 +19,10 @@ public BlobValueAdaptor(FilePool pool) {
     }
 
     public Object get(ResultSet rs, String colName) throws SQLException {
-        File f = this.createTempFile();
         Blob blob = rs.getBlob(colName);
         if (blob == null)
             return null;
+        File f = this.createTempFile();
         Files.write(f, blob.getBinaryStream());
         return new SimpleBlob(f);
     }
diff --git a/src/org/nutz/dao/impl/jdbc/ClobValueAdaptor.java b/src/org/nutz/dao/impl/jdbc/ClobValueAdaptor.java
index 8544df326c..f6e4fa8aa6 100755
--- a/src/org/nutz/dao/impl/jdbc/ClobValueAdaptor.java
+++ b/src/org/nutz/dao/impl/jdbc/ClobValueAdaptor.java
@@ -19,10 +19,10 @@ public ClobValueAdaptor(FilePool pool) {
     }
 
     public Object get(ResultSet rs, String colName) throws SQLException {
-        File f = this.createTempFile();
         Clob clob = rs.getClob(colName);
         if (clob == null)
             return null;
+        File f = this.createTempFile();
         Streams.writeAndClose(Streams.fileOutw(f), clob.getCharacterStream());
         return new SimpleClob(f);
     }
diff --git a/test/org/nutz/dao/test/DaoCase.java b/test/org/nutz/dao/test/DaoCase.java
index 950024e8e5..96780bf535 100755
--- a/test/org/nutz/dao/test/DaoCase.java
+++ b/test/org/nutz/dao/test/DaoCase.java
@@ -6,6 +6,7 @@
 import org.nutz.dao.Dao;
 import org.nutz.dao.test.meta.Pojos;
 import org.nutz.ioc.Ioc;
+import org.nutz.trans.Trans;
 
 public abstract class DaoCase {
 
@@ -15,6 +16,7 @@
 
     @Before
     public void setUp() {
+        Trans.DEBUG = false;
         ioc = Nutzs.getIoc("org/nutz/dao/test/meta/pojo.js");
         dao = ioc.get(Dao.class, "dao");
         pojos = ioc.get(Pojos.class, "metas");
