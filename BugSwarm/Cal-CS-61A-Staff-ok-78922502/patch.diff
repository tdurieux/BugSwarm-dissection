diff --git a/server/app/utils.py b/server/app/utils.py
index 9cc2f81124..63aafc407b 100755
--- a/server/app/utils.py
+++ b/server/app/utils.py
@@ -610,13 +610,13 @@ def submit_to_ag(assignment, messages, submitter):
 def autograde_final_subs(assignment, user, data):
     subm_ids = {}
     fsubs = list(ModelProxy.FinalSubmission.query(
-                    ModelProxy.FinalSubmission.assignment == obj.key))
+                    ModelProxy.FinalSubmission.assignment == assignment.key))
     for fsub in fsubs:
       subm_ids[fsub.submission.id()] = fsub.submission.get().backup.id()
 
     data = {
         'subm_ids': subm_ids,
-        'assignment': obj.autograding_key,
+        'assignment': assignment.autograding_key,
         'access_token': data['token']
     }
 
diff --git a/server/tests/integration/test_api_assignment.py b/server/tests/integration/test_api_assignment.py
index fb5309fdea..c50489507a 100755
--- a/server/tests/integration/test_api_assignment.py
+++ b/server/tests/integration/test_api_assignment.py
@@ -38,6 +38,7 @@ def setUp(self):
 		self._course.put()
 		self._assign = make_fake_assignment(self._course, self.user)
 		self._assign.autograding_enabled = True
+		self._assign.autograding_key = "NotReallyAnAutograderKey"
 		self._assign.name = self._assign.display_name = self.assignment_name
 		self._assign.put()
 		self._group = make_fake_group(self._assign, self.user1, self.user2)
@@ -158,7 +159,8 @@ def test_autograde_rejected_request(self):
 		with self.assertRaises(BadValueError):
 			import requests
 			self.mock(requests, 'post').using(lambda *args, **kwargs: self.obj().set(status_code=900))
-			self.API().autograde(self._assign, self.accounts['dummy_admin'], {
+			# Use the deferred task - since that's where submission occurs.
+			utils.autograde_final_subs(self._assign, self.accounts['dummy_admin'], {
 				'grade_final': True,
 				'token': 'gibberish'
 			})
@@ -167,7 +169,7 @@ def test_autograde_successful_request_basic(self):
 		""" Tests successful autograding just runs - does not check for functioanlity """
 		import requests
 		self.mock(requests, 'post').using(lambda *args, **kwargs: self.obj().set(status_code=200))
-		self.API().autograde(self._assign, self.accounts['dummy_admin'], {
+		utils.autograde_final_subs(self._assign, self.accounts['dummy_admin'], {
 			'grade_final': True,
 			'token': 'gibberish'
 		})
