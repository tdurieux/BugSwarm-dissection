diff --git a/androidtest/pom.xml b/androidtest/pom.xml
index 923190ab99..d3a7207c47 100755
--- a/androidtest/pom.xml
+++ b/androidtest/pom.xml
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
          xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
     <modelVersion>4.0.0</modelVersion>
     <groupId>org.mp4parser</groupId>
diff --git a/examples/pom.xml b/examples/pom.xml
index 40bcb56a09..6580bc4ef9 100755
--- a/examples/pom.xml
+++ b/examples/pom.xml
@@ -1,5 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
 
     <modelVersion>4.0.0</modelVersion>
 
@@ -89,7 +90,7 @@
     <scm>
         <url>http://code.google.com/p/mp4parser/source/browse/</url>
         <connection>scm:svn:https://mp4parser.googlecode.com/svn/trunk/examples</connection>
-      <tag> mp4parser-project-1.9.5</tag>
+        <tag>mp4parser-project-1.9.5</tag>
   </scm>
     <repositories>
         <repository>
diff --git a/examples/src/main/java/com/ChopSuey.java b/examples/src/main/java/com/ChopSuey.java
index 518cdf91ab..b9860ea72f 100755
--- a/examples/src/main/java/com/ChopSuey.java
+++ b/examples/src/main/java/com/ChopSuey.java
@@ -1,12 +1,13 @@
 package com;
 
-import com.googlecode.mp4parser.authoring.Movie;
-import com.googlecode.mp4parser.authoring.Track;
-import com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder;
-import com.googlecode.mp4parser.authoring.builder.Mp4Builder;
-import com.googlecode.mp4parser.authoring.container.mp4.MovieCreator;
-import com.googlecode.mp4parser.authoring.tracks.CroppedTrack;
-import com.googlecode.mp4parser.util.Mp4Arrays;
+
+import org.mp4parser.muxer.Movie;
+import org.mp4parser.muxer.Track;
+import org.mp4parser.muxer.builder.DefaultMp4Builder;
+import org.mp4parser.muxer.builder.Mp4Builder;
+import org.mp4parser.muxer.container.mp4.MovieCreator;
+import org.mp4parser.muxer.tracks.ClippedTrack;
+import org.mp4parser.tools.Mp4Arrays;
 
 import java.io.FileOutputStream;
 import java.io.IOException;
@@ -57,13 +58,13 @@ public static void main(String[] args) throws IOException {
 
             while (index < numSamples) {
                 if (timeIndex >= syncSampleTimes.length) {
-                    chops.add(new CroppedTrack(track, lastStart, numSamples));
+                    chops.add(new ClippedTrack(track, lastStart, numSamples));
                     System.err.println("Added partial track for " + track.getTrackMetaData().getTrackId() + " from sample " + lastStart + " to " + numSamples);
                     break;
                 }
                 if (time >= syncSampleTimes[timeIndex]) {
                     if (lastStart != index) {
-                        chops.add(new CroppedTrack(track, lastStart, index));
+                        chops.add(new ClippedTrack(track, lastStart, index));
                         System.err.println("Added partial track for " + track.getTrackMetaData().getTrackId() + " from sample " + lastStart + " to " + index);
                         lastStart = index;
                     }
diff --git a/examples/src/main/java/com/googlecode/mp4parser/MuxVideoWithAmf0.java b/examples/src/main/java/com/googlecode/mp4parser/MuxVideoWithAmf0.java
index eeaa06194b..e910cef48e 100755
--- a/examples/src/main/java/com/googlecode/mp4parser/MuxVideoWithAmf0.java
+++ b/examples/src/main/java/com/googlecode/mp4parser/MuxVideoWithAmf0.java
@@ -1,18 +1,11 @@
 package com.googlecode.mp4parser;
 
-import com.coremedia.iso.boxes.Container;
-import com.googlecode.mp4parser.authoring.Movie;
-import com.googlecode.mp4parser.authoring.Track;
-import com.googlecode.mp4parser.authoring.builder.DefaultFragmenterImpl;
-import com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;
-import com.googlecode.mp4parser.authoring.container.mp4.MovieCreator;
-import com.googlecode.mp4parser.authoring.tracks.Amf0Track;
 import org.apache.commons.codec.binary.Base64;
 import org.mp4parser.Container;
 import org.mp4parser.muxer.Movie;
 import org.mp4parser.muxer.Track;
+import org.mp4parser.muxer.builder.DefaultFragmenterImpl;
 import org.mp4parser.muxer.builder.FragmentedMp4Builder;
-import org.mp4parser.muxer.builder.TimeBasedFragmenter;
 import org.mp4parser.muxer.container.mp4.MovieCreator;
 import org.mp4parser.muxer.tracks.Amf0Track;
 
diff --git a/examples/src/main/java/com/googlecode/mp4parser/SubTitleExample.java b/examples/src/main/java/com/googlecode/mp4parser/SubTitleExample.java
index aec77ea47f..2d82bb793d 100755
--- a/examples/src/main/java/com/googlecode/mp4parser/SubTitleExample.java
+++ b/examples/src/main/java/com/googlecode/mp4parser/SubTitleExample.java
@@ -4,8 +4,8 @@
 import org.mp4parser.Container;
 import org.mp4parser.muxer.Movie;
 import org.mp4parser.muxer.Track;
+import org.mp4parser.muxer.builder.DefaultFragmenterImpl;
 import org.mp4parser.muxer.builder.DefaultMp4Builder;
-import org.mp4parser.muxer.builder.TimeBasedFragmenter;
 import org.mp4parser.muxer.container.mp4.MovieCreator;
 import org.mp4parser.muxer.tracks.TextTrackImpl;
 
diff --git a/examples/src/main/java/org/mp4parser/examples/exportraw/ExportTTMLTrack.java b/examples/src/main/java/org/mp4parser/examples/exportraw/ExportTTMLTrack.java
index 88394e50bb..12405ca8ab 100755
--- a/examples/src/main/java/org/mp4parser/examples/exportraw/ExportTTMLTrack.java
+++ b/examples/src/main/java/org/mp4parser/examples/exportraw/ExportTTMLTrack.java
@@ -37,7 +37,7 @@ public static void main(String[] args) throws IOException, ParserConfigurationEx
             if (track.getHandler().endsWith("soun")) {
                 Movie vide = new Movie(Collections.singletonList(track));
                 DefaultMp4Builder builder = new DefaultMp4Builder();
-                builder.build(vide).writeContainer(new RandomAccessFile("soun_" + track.getTrackMetaData().getTrackId() +".mp4", "rw").getChannel());
+                builder.build(vide).writeContainer(new RandomAccessFile("soun_" + track.getTrackMetaData().getTrackId() + ".mp4", "rw").getChannel());
             }
             if (track.getHandler().endsWith("subt")) {
                 for (int i = 0; i < track.getSamples().size(); i++) {
diff --git a/examples/src/main/java/org/mp4parser/examples/exportraw/ExtractRawH264.java b/examples/src/main/java/org/mp4parser/examples/exportraw/ExtractRawH264.java
index e7b79d004a..5876981a5c 100755
--- a/examples/src/main/java/org/mp4parser/examples/exportraw/ExtractRawH264.java
+++ b/examples/src/main/java/org/mp4parser/examples/exportraw/ExtractRawH264.java
@@ -25,7 +25,7 @@ public static void main(String[] args) throws IOException {
         long trackId = -1;
         TrackBox trackBox = null;
         for (TrackBox _trackBox : trackBoxes) {
-            if (Path.getPath(_trackBox, "mdia/minf/stbl/stsd/avc1")!=null) {
+            if (Path.getPath(_trackBox, "mdia/minf/stbl/stsd/avc1") != null) {
                 trackId = _trackBox.getTrackHeaderBox().getTrackId();
                 trackBox = _trackBox;
             }
diff --git a/isoparser/pom.xml b/isoparser/pom.xml
index 8aa547938f..825b6d1745 100755
--- a/isoparser/pom.xml
+++ b/isoparser/pom.xml
@@ -1,4 +1,5 @@
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
+<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
     <modelVersion>4.0.0</modelVersion>
     <groupId>org.mp4parser</groupId>
     <artifactId>isoparser</artifactId>
@@ -201,7 +202,7 @@
 
     <scm>
         <url>https://github.com/sannies/mp4parser</url>
-      <tag> mp4parser-project-1.9.5</tag>
+        <tag>mp4parser-project-1.9.5</tag>
   </scm>
 
     <licenses>
diff --git a/isoparser/src/main/java/org/mp4parser/boxes/iso14496/part12/EditListBox.java b/isoparser/src/main/java/org/mp4parser/boxes/iso14496/part12/EditListBox.java
index 48c664e77a..ff1e5f2a67 100755
--- a/isoparser/src/main/java/org/mp4parser/boxes/iso14496/part12/EditListBox.java
+++ b/isoparser/src/main/java/org/mp4parser/boxes/iso14496/part12/EditListBox.java
@@ -33,7 +33,7 @@
  * Container: {@link EditBox}('edts')
  * Mandatory: No
  * Quantity  : Zero or one</pre>
- *
+ * <p/>
  * <p>This box contains an explicit timeline map. Each entry defines part of the track time-line: by mapping part of
  * the media time-line, or by indicating 'empty' time, or by defining a 'dwell', where a single time-point in the
  * media is held for a period.</p>
@@ -44,7 +44,7 @@
  * in an edit might need slicing. </p>
  * <p>Starting offsets for tracks (streams) are represented by an initial empty edit. For example, to play a track from
  * its start for 30 seconds, but at 10 seconds into the presentation, we have the following edit list:</p>
- *
+ * <p/>
  * <ul>
  * <li>Entry-count = 2</li>
  * <li>Segment-duration = 10 seconds</li>
diff --git a/isoparser/src/main/java/org/mp4parser/boxes/iso14496/part12/TrackFragmentRandomAccessBox.java b/isoparser/src/main/java/org/mp4parser/boxes/iso14496/part12/TrackFragmentRandomAccessBox.java
index 7e1d938689..4b2ff70383 100755
--- a/isoparser/src/main/java/org/mp4parser/boxes/iso14496/part12/TrackFragmentRandomAccessBox.java
+++ b/isoparser/src/main/java/org/mp4parser/boxes/iso14496/part12/TrackFragmentRandomAccessBox.java
@@ -31,6 +31,7 @@
  * Each entry contains the location and the presentation time of the random accessible sample.
  * It indicates that the sample in the entry can be randomaccessed. Note that not every random
  * accessible sample in the track needs to be listed in the table.
+ *
  * @see MovieFragmentRandomAccessBox
  */
 public class TrackFragmentRandomAccessBox extends AbstractFullBox {
diff --git a/isoparser/src/main/java/org/mp4parser/support/AbstractBox.java b/isoparser/src/main/java/org/mp4parser/support/AbstractBox.java
index f2c6119515..26c5858568 100755
--- a/isoparser/src/main/java/org/mp4parser/support/AbstractBox.java
+++ b/isoparser/src/main/java/org/mp4parser/support/AbstractBox.java
@@ -44,11 +44,9 @@
     private static Logger LOG = Logger.getLogger(AbstractBox.class);
 
     protected String type;
+    protected ByteBuffer content;
     boolean isParsed;
     private byte[] userType;
-    private ByteBuffer content;
-
-
     private ByteBuffer deadBytes = null;
 
     protected AbstractBox(String type) {
diff --git a/isoparser/src/main/java/org/mp4parser/tools/Mp4Arrays.java b/isoparser/src/main/java/org/mp4parser/tools/Mp4Arrays.java
index 316bcad955..bd15cd492e 100755
--- a/isoparser/src/main/java/org/mp4parser/tools/Mp4Arrays.java
+++ b/isoparser/src/main/java/org/mp4parser/tools/Mp4Arrays.java
@@ -48,6 +48,7 @@ private Mp4Arrays() {
         System.arraycopy(toAppend, 0, copy, original.length, toAppend.length);
         return copy;
     }
+
     public static double[] copyOfAndAppend(double[] original, double... toAppend) {
         if (original == null) {
             original = new double[]{};
diff --git a/muxer/pom.xml b/muxer/pom.xml
index 979605cb10..dbe35468f7 100755
--- a/muxer/pom.xml
+++ b/muxer/pom.xml
@@ -1,5 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
 
     <modelVersion>4.0.0</modelVersion>
     <groupId>org.mp4parser</groupId>
@@ -7,7 +8,8 @@
     <artifactId>muxer</artifactId>
     <name>File Muxer</name>
     <url>https://github.com/sannies/mp4parser</url>
-    <description>This package has a focus on file operation. It can read A/V data from Random Access Datasources</description>
+    <description>This package has a focus on file operation. It can read A/V data from Random Access Datasources
+    </description>
     <properties>
         <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
     </properties>
@@ -114,6 +116,6 @@
     </developers>
     <scm>
         <url>https://github.com/sannies/mp4parser</url>
-        <tag> mp4parser-project-1.9.5</tag>
+        <tag>mp4parser-project-1.9.5</tag>
     </scm>
 </project>
\ No newline at end of file
diff --git a/muxer/src/main/java/org/mp4parser/muxer/CencMp4TrackImplImpl.java b/muxer/src/main/java/org/mp4parser/muxer/CencMp4TrackImplImpl.java
index 804284cf11..74143ba9fc 100755
--- a/muxer/src/main/java/org/mp4parser/muxer/CencMp4TrackImplImpl.java
+++ b/muxer/src/main/java/org/mp4parser/muxer/CencMp4TrackImplImpl.java
@@ -29,12 +29,11 @@
      * Creates a track from a TrackBox and potentially fragments. Use <b>fragements parameter
      * only</b> to supply additional fragments that are not located in the main file.
      *
-     * @throws java.io.IOException if reading from underlying <code>DataSource</code> fails
-     * @param trackId ID of the track to extract
-     * @param isofile the parsed MP4 file
+     * @param trackId      ID of the track to extract
+     * @param isofile      the parsed MP4 file
      * @param randomAccess the RandomAccessSource to read the samples from
-     * @param name an arbitrary naem to identify track later - e.g. filename
-     *
+     * @param name         an arbitrary naem to identify track later - e.g. filename
+     * @throws java.io.IOException if reading from underlying <code>DataSource</code> fails
      */
     public CencMp4TrackImplImpl(final long trackId, Container isofile, RandomAccessSource randomAccess, String name) throws IOException {
         super(trackId, isofile, randomAccess, name);
diff --git a/muxer/src/main/java/org/mp4parser/muxer/FileRandomAccessSourceImpl.java b/muxer/src/main/java/org/mp4parser/muxer/FileRandomAccessSourceImpl.java
index 05183fe651..d59c494fab 100755
--- a/muxer/src/main/java/org/mp4parser/muxer/FileRandomAccessSourceImpl.java
+++ b/muxer/src/main/java/org/mp4parser/muxer/FileRandomAccessSourceImpl.java
@@ -22,7 +22,6 @@ public ByteBuffer get(long offset, long size) throws IOException {
     }
 
 
-
     public void close() throws IOException {
         raf.close();
     }
diff --git a/muxer/src/main/java/org/mp4parser/muxer/Mp4TrackImpl.java b/muxer/src/main/java/org/mp4parser/muxer/Mp4TrackImpl.java
index 96eaad4090..6105108780 100755
--- a/muxer/src/main/java/org/mp4parser/muxer/Mp4TrackImpl.java
+++ b/muxer/src/main/java/org/mp4parser/muxer/Mp4TrackImpl.java
@@ -48,11 +48,11 @@
     /**
      * Creates a track from a TrackBox and potentially fragments. Use <b>fragements parameter
      * only</b> to supply additional fragments that are not located in the main file.
-     * @param trackId ID of the track to extract
-     * @param isofile the parsed MP4 file
+     *
+     * @param trackId      ID of the track to extract
+     * @param isofile      the parsed MP4 file
      * @param randomAccess the RandomAccessSource to read the samples from
-     * @param name an arbitrary naem to identify track later - e.g. filename
-
+     * @param name         an arbitrary naem to identify track later - e.g. filename
      */
     public Mp4TrackImpl(final long trackId, Container isofile, RandomAccessSource randomAccess, String name) {
         super(name);
diff --git a/muxer/src/main/java/org/mp4parser/muxer/container/mp4/MovieCreator.java b/muxer/src/main/java/org/mp4parser/muxer/container/mp4/MovieCreator.java
index 5f7c0c553f..5431fd36f3 100755
--- a/muxer/src/main/java/org/mp4parser/muxer/container/mp4/MovieCreator.java
+++ b/muxer/src/main/java/org/mp4parser/muxer/container/mp4/MovieCreator.java
@@ -44,7 +44,7 @@ public static Movie build(String file) throws IOException {
     /**
      * Creates <code>Movie</code> object from a <code>ReadableByteChannel</code>.
      *
-     * @param name track name to identify later
+     * @param name                track name to identify later
      * @param readableByteChannel the box structure is read from this channel
      * @param randomAccessSource  the samples or read from this randomAccessSource
      * @return a representation of the movie
diff --git a/muxer/src/main/java/org/mp4parser/muxer/samples/FragmentedMp4SampleList.java b/muxer/src/main/java/org/mp4parser/muxer/samples/FragmentedMp4SampleList.java
index bfcf4e27f6..a3f04b9add 100755
--- a/muxer/src/main/java/org/mp4parser/muxer/samples/FragmentedMp4SampleList.java
+++ b/muxer/src/main/java/org/mp4parser/muxer/samples/FragmentedMp4SampleList.java
@@ -146,7 +146,7 @@ public Sample get(int index) {
                             offset += tfhd.getBaseDataOffset();
                         } else {
                             //if (tfhd.isDefaultBaseIsMoof()) {
-                                offset += Offsets.find(isofile, moof, 0);
+                            offset += Offsets.find(isofile, moof, 0);
                             //} else {
                             //    throw new RuntimeException("Rethink this case");
                             //}
diff --git a/muxer/src/main/java/org/mp4parser/muxer/tracks/CroppedTrack.java b/muxer/src/main/java/org/mp4parser/muxer/tracks/CroppedTrack.java
index 344fea7814..4a903bc276 100755
--- a/muxer/src/main/java/org/mp4parser/muxer/tracks/CroppedTrack.java
+++ b/muxer/src/main/java/org/mp4parser/muxer/tracks/CroppedTrack.java
@@ -1,7 +1,22 @@
 package org.mp4parser.muxer.tracks;
 
+import org.mp4parser.muxer.Track;
+
+import java.util.List;
+
 /**
- * Created by sannies on 19.01.2016.
+ * @deprecated use ClippedTrack as "to crop" relates to a spatial dimension
  */
-public class CroppedTrack {
+public class CroppedTrack extends ClippedTrack {
+    /**
+     * Wraps an existing track and masks out a number of samples.
+     * Works like {@link List#subList(int, int)}.
+     *
+     * @param origTrack  the original <code>Track</code>
+     * @param fromSample first sample in the new <code>Track</code> - beginning with 0
+     * @param toSample   first sample not in the new <code>Track</code> - beginning with 0
+     */
+    public CroppedTrack(Track origTrack, long fromSample, long toSample) {
+        super(origTrack, fromSample, toSample);
+    }
 }
diff --git a/muxer/src/main/java/org/mp4parser/muxer/tracks/h264/H264TrackImpl.java b/muxer/src/main/java/org/mp4parser/muxer/tracks/h264/H264TrackImpl.java
index 6d87638e0c..cdfa565183 100755
--- a/muxer/src/main/java/org/mp4parser/muxer/tracks/h264/H264TrackImpl.java
+++ b/muxer/src/main/java/org/mp4parser/muxer/tracks/h264/H264TrackImpl.java
@@ -523,7 +523,6 @@ private void createSample(List<ByteBuffer> buffered) throws IOException {
     }
 
 
-
     private void handlePPS(ByteBuffer data) throws IOException {
         InputStream is = new ByteBufferBackedInputStream(data);
         is.read();
diff --git a/muxer/src/test/java/org/mp4parser/muxer/FragmentedMp4BuilderTest.java b/muxer/src/test/java/org/mp4parser/muxer/FragmentedMp4BuilderTest.java
index 075eac878e..9cbd3d8f7c 100755
--- a/muxer/src/test/java/org/mp4parser/muxer/FragmentedMp4BuilderTest.java
+++ b/muxer/src/test/java/org/mp4parser/muxer/FragmentedMp4BuilderTest.java
@@ -2,8 +2,8 @@
 
 import org.junit.Test;
 import org.mp4parser.Container;
+import org.mp4parser.muxer.builder.DefaultFragmenterImpl;
 import org.mp4parser.muxer.builder.FragmentedMp4Builder;
-import org.mp4parser.muxer.builder.TimeBasedFragmenter;
 import org.mp4parser.muxer.container.mp4.MovieCreator;
 
 import java.io.ByteArrayOutputStream;
diff --git a/muxer/src/test/java/org/mp4parser/muxer/builder/DefaultFragmenterTest.java b/muxer/src/test/java/org/mp4parser/muxer/builder/DefaultFragmenterTest.java
index e66be364aa..1489272761 100755
--- a/muxer/src/test/java/org/mp4parser/muxer/builder/DefaultFragmenterTest.java
+++ b/muxer/src/test/java/org/mp4parser/muxer/builder/DefaultFragmenterTest.java
@@ -15,7 +15,7 @@
     public void testSampleNumbers() throws Exception {
         String f = DefaultFragmenterTest.class.getProtectionDomain().getCodeSource().getLocation().getFile() + "/Beethoven - Bagatelle op.119 no.11 i.m4a";
         Movie m = MovieCreator.build(f);
-        DefaultFragmenterImpl intersectionFinder = new DefaultFragmenterImpl( 2);
+        DefaultFragmenterImpl intersectionFinder = new DefaultFragmenterImpl(2);
         long[] s = intersectionFinder.sampleNumbers(m.getTracks().get(0));
         String sss = "";
         for (long l : s) {
diff --git a/muxer/src/test/resources/org/mp4parser/muxer/tracks/ttml/tos-chapters-en.xml b/muxer/src/test/resources/org/mp4parser/muxer/tracks/ttml/tos-chapters-en.xml
index 17d45c2a9e..012d6665f2 100755
--- a/muxer/src/test/resources/org/mp4parser/muxer/tracks/ttml/tos-chapters-en.xml
+++ b/muxer/src/test/resources/org/mp4parser/muxer/tracks/ttml/tos-chapters-en.xml
@@ -32,31 +32,38 @@
             <p
                     begin="00:00:08.000"
                     end="00:00:40.000"
-                    region="fullscreen" tts:backgroundImage="../ttml/0_08-Rocket-starts.jpg">Rocket Starts</p>
+                    region="fullscreen" tts:backgroundImage="../ttml/0_08-Rocket-starts.jpg">Rocket Starts
+            </p>
             <p
                     begin="00:00:40.000"
                     end="00:03:03.000"
-                    region="fullscreen" tts:backgroundImage="animagehere/0_40-Fourty-Years-Later.jpg">Fourty Years Later</p>
+                    region="fullscreen" tts:backgroundImage="animagehere/0_40-Fourty-Years-Later.jpg">Fourty Years Later
+            </p>
             <p
                     begin="00:03:03.000"
                     end="00:05:29.000"
-                    region="fullscreen" tts:backgroundImage="3_03-Show-Starts.jpg">The Show Starts</p>
+                    region="fullscreen" tts:backgroundImage="3_03-Show-Starts.jpg">The Show Starts
+            </p>
             <p
                     begin="00:05:29.000"
                     end="00:07:05.000"
-                    region="fullscreen" tts:backgroundImage="5_29-Things-go-south.jpg">Things Go South</p>
+                    region="fullscreen" tts:backgroundImage="5_29-Things-go-south.jpg">Things Go South
+            </p>
             <p
                     begin="00:07:05.000"
                     end="00:08:51.000"
-                    region="fullscreen" tts:backgroundImage="7_05-attack-starts.jpg">Attack Peace</p>
+                    region="fullscreen" tts:backgroundImage="7_05-attack-starts.jpg">Attack Peace
+            </p>
             <p
                     begin="00:08:51.000"
                     end="00:09:49.000"
-                    region="fullscreen" tts:backgroundImage="8_51-making-peace.jpg">Making Peace</p>
+                    region="fullscreen" tts:backgroundImage="8_51-making-peace.jpg">Making Peace
+            </p>
             <p
                     begin="00:09:49.000"
                     end="00:12:13.000"
-                    region="fullscreen" tts:backgroundImage="9_49-Epilog.jpg">Epilog</p>
+                    region="fullscreen" tts:backgroundImage="9_49-Epilog.jpg">Epilog
+            </p>
         </div>
     </body>
 </tt>
diff --git a/pom.xml b/pom.xml
index 85ef51b755..9f44872b41 100755
--- a/pom.xml
+++ b/pom.xml
@@ -1,4 +1,5 @@
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
+<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
     <modelVersion>4.0.0</modelVersion>
     <groupId>org.mp4parser</groupId>
     <artifactId>mp4parser-project</artifactId>
@@ -85,6 +86,6 @@
     <scm>
         <url>https://github.com/sannies/mp4parser</url>
         <connection>scm:git:git@github.com:sannies/mp4parser.git</connection>
-        <tag> mp4parser-project-1.9.5</tag>
+        <tag>mp4parser-project-1.9.5</tag>
     </scm>
 </project>
diff --git a/streaming/pom.xml b/streaming/pom.xml
index 31578df11a..34d070442d 100755
--- a/streaming/pom.xml
+++ b/streaming/pom.xml
@@ -1,5 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
     <modelVersion>4.0.0</modelVersion>
     <groupId>org.mp4parser</groupId>
     <artifactId>streaming</artifactId>
diff --git a/streaming/src/main/java/org/mp4parser/streaming/StreamingTrack.java b/streaming/src/main/java/org/mp4parser/streaming/StreamingTrack.java
index 496190009a..2469d65828 100755
--- a/streaming/src/main/java/org/mp4parser/streaming/StreamingTrack.java
+++ b/streaming/src/main/java/org/mp4parser/streaming/StreamingTrack.java
@@ -9,6 +9,7 @@
     /**
      * Gets the time scale of the track. Typically called by the SampleSink.
      * Might throw IllegalStateException if called before the first sample has been pushed into the SampleSink.
+     *
      * @return the track's time scale
      */
     long getTimescale();
diff --git a/streaming/src/main/java/org/mp4parser/streaming/input/mp4/DiscardingByteArrayOutputStream.java b/streaming/src/main/java/org/mp4parser/streaming/input/mp4/DiscardingByteArrayOutputStream.java
index be9b2cceee..3fb32cd3a5 100755
--- a/streaming/src/main/java/org/mp4parser/streaming/input/mp4/DiscardingByteArrayOutputStream.java
+++ b/streaming/src/main/java/org/mp4parser/streaming/input/mp4/DiscardingByteArrayOutputStream.java
@@ -183,6 +183,7 @@ public void close() throws IOException {
 
     /**
      * Returns the last index that is available.
+     *
      * @return the overall size (not taking discarded bytes into account)
      */
     public synchronized long available() {
diff --git a/streaming/src/main/java/org/mp4parser/streaming/output/SampleSink.java b/streaming/src/main/java/org/mp4parser/streaming/output/SampleSink.java
index 5ed139a937..f6010ab17f 100755
--- a/streaming/src/main/java/org/mp4parser/streaming/output/SampleSink.java
+++ b/streaming/src/main/java/org/mp4parser/streaming/output/SampleSink.java
@@ -9,6 +9,7 @@
 
 /**
  * Controls the creation of media files.
+ *
  * @see FragmentedMp4Writer
  * @see StreamingTrack#setSampleSink(SampleSink)
  */
diff --git a/streaming/src/main/java/org/mp4parser/streaming/output/mp4/FragmentedMp4Writer.java b/streaming/src/main/java/org/mp4parser/streaming/output/mp4/FragmentedMp4Writer.java
index 8d3f270810..9f2261ec65 100755
--- a/streaming/src/main/java/org/mp4parser/streaming/output/mp4/FragmentedMp4Writer.java
+++ b/streaming/src/main/java/org/mp4parser/streaming/output/mp4/FragmentedMp4Writer.java
@@ -134,7 +134,6 @@ protected Box createMdhd(StreamingTrack streamingTrack) {
     }
 
 
-
     protected Box createMvex() {
         MovieExtendsBox mvex = new MovieExtendsBox();
         final MovieExtendsHeaderBox mved = new MovieExtendsHeaderBox();
