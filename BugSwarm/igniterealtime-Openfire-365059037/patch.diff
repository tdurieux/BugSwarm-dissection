diff --git a/src/web/pubsub-node-summary.jsp b/src/web/pubsub-node-summary.jsp
index b4e1856235..c745817382 100755
--- a/src/web/pubsub-node-summary.jsp
+++ b/src/web/pubsub-node-summary.jsp
@@ -72,21 +72,41 @@
     });
 
     // By default, display all nodes
-    Predicate<Node> filter = node -> true;
+    Predicate<Node> filter = new Predicate<Node>() {
+        @Override
+        public boolean test(final Node node) {
+            return true;
+        }
+    };
     final String searchNodeId = ParamUtils.getStringParameter(request, "searchNodeId", "");
     if(!searchNodeId.trim().isEmpty()) {
         final String searchCriteria = searchNodeId.trim().toLowerCase();
-        filter = filter.and(node -> node.getNodeID().toLowerCase().contains(searchCriteria));
+        filter = filter.and(new Predicate<Node>() {
+            @Override
+            public boolean test(final Node node) {
+                return node.getNodeID().toLowerCase().contains(searchCriteria);
+            }
+        });
     }
     final String searchNodeName = ParamUtils.getStringParameter(request, "searchNodeName", "");
     if(!searchNodeName.trim().isEmpty()) {
         final String searchCriteria = searchNodeName.trim().toLowerCase();
-        filter = filter.and(node -> node.getName().toLowerCase().contains(searchCriteria));
+        filter = filter.and(new Predicate<Node>() {
+            @Override
+            public boolean test(final Node node) {
+                return node.getName().toLowerCase().contains(searchCriteria);
+            }
+        });
     }
     final String searchNodeDescription = ParamUtils.getStringParameter(request, "searchNodeDescription", "");
     if(!searchNodeDescription.trim().isEmpty()) {
         final String searchCriteria = searchNodeDescription.trim().toLowerCase();
-        filter = filter.and(node -> node.getDescription().toLowerCase().contains(searchCriteria));
+        filter = filter.and(new Predicate<Node>() {
+            @Override
+            public boolean test(final Node node) {
+                return node.getDescription().toLowerCase().contains(searchCriteria);
+            }
+        });
     }
 
     final ListPager<Node> listPager = new ListPager<>(request, response, nodes, filter, "searchNodeId", "searchNodeName", "searchNodeDescription");
