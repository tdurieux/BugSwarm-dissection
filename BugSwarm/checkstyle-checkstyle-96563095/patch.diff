diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/DefaultLogger.java b/src/main/java/com/puppycrawl/tools/checkstyle/DefaultLogger.java
index bca2bb0967..e408d055b1 100755
--- a/src/main/java/com/puppycrawl/tools/checkstyle/DefaultLogger.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/DefaultLogger.java
@@ -148,16 +148,14 @@ protected String formErrorMessage(AuditEvent event, SeverityLevel severityLevel)
         final char space = ' ';
         if (printSeverity) {
             final String severityLevelName = severityLevel.getName().toUpperCase(Locale.US);
-            sb.append(leftBrace).append(severityLevelName).append(rightBrace);
-            sb.append(space);
+            sb.append(leftBrace).append(severityLevelName).append(rightBrace).append(space);
         }
         final char separator = ':';
         sb.append(fileName).append(separator).append(event.getLine());
         if (event.getColumn() > 0) {
             sb.append(separator).append(event.getColumn());
         }
-        sb.append(separator).append(space).append(message);
-        sb.append(space);
+        sb.append(separator).append(space).append(message).append(space);
         final String checkShortName = getCheckShortName(event);
         sb.append(leftBrace).append(checkShortName).append(rightBrace);
 
diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/BaseCheckTestSupport.java b/src/test/java/com/puppycrawl/tools/checkstyle/BaseCheckTestSupport.java
index 0e5a41b4de..86711b5732 100755
--- a/src/test/java/com/puppycrawl/tools/checkstyle/BaseCheckTestSupport.java
+++ b/src/test/java/com/puppycrawl/tools/checkstyle/BaseCheckTestSupport.java
@@ -293,7 +293,7 @@ public BriefLogger(OutputStream out) {
         }
 
         public BriefLogger(OutputStream out, boolean printSeverity) {
-            super(out, true, out, false, printSeverity);
+            super(out, true, out, false);
             this.printSeverity = printSeverity;
         }
 
@@ -311,8 +311,7 @@ protected String formErrorMessage(AuditEvent event, SeverityLevel severityLevel)
             sb.append(fileName).append(separator).append(event.getLine());
             final char space = ' ';
             if (printSeverity) {
-                sb.append(separator).append(space);
-                sb.append(severityLevel.getName());
+                sb.append(separator).append(space).append(severityLevel.getName());
             }
             if (event.getColumn() > 0) {
                 sb.append(separator).append(event.getColumn());
diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/DefaultLoggerTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/DefaultLoggerTest.java
index 2279c9aa97..8758e69a78 100755
--- a/src/test/java/com/puppycrawl/tools/checkstyle/DefaultLoggerTest.java
+++ b/src/test/java/com/puppycrawl/tools/checkstyle/DefaultLoggerTest.java
@@ -19,12 +19,17 @@
 
 package com.puppycrawl.tools.checkstyle;
 
+import static org.junit.Assert.assertEquals;
+
 import java.io.ByteArrayOutputStream;
 import java.io.OutputStream;
 
 import org.junit.Test;
 
 import com.puppycrawl.tools.checkstyle.api.AuditEvent;
+import com.puppycrawl.tools.checkstyle.api.LocalizedMessage;
+import com.puppycrawl.tools.checkstyle.api.SeverityLevel;
+import com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck;
 
 public class DefaultLoggerTest {
 
@@ -44,4 +49,32 @@ public void testCtorWithTwoParameters() {
         dl.addException(new AuditEvent(5000, "myfile"), new IllegalStateException("upsss"));
         dl.auditFinished(new AuditEvent(6000, "myfile"));
     }
+
+    @Test
+    public void testFormErrorMessagePrintSeveritySetToFalse() {
+        final OutputStream infoStream = new ByteArrayOutputStream();
+        final boolean printSeverity = false;
+        final DefaultLogger dl =
+            new DefaultLogger(infoStream, true, infoStream, false, printSeverity);
+        final LocalizedMessage violationMessage = new LocalizedMessage(0, 0, "", "", null,
+            SeverityLevel.WARNING, null, RightCurlyCheck.class, null);
+        final AuditEvent event = new AuditEvent(RightCurlyCheck.class, "myfile", violationMessage);
+        final String expected = "myfile:0:  [RightCurly]";
+        final String actual = dl.formErrorMessage(event, event.getSeverityLevel());
+        assertEquals(expected, actual);
+    }
+
+    @Test
+    public void testFormErrorMessagePrintSeveritySetToTrue() {
+        final OutputStream infoStream = new ByteArrayOutputStream();
+        final boolean printSeverity = true;
+        final DefaultLogger dl =
+            new DefaultLogger(infoStream, true, infoStream, false, printSeverity);
+        final LocalizedMessage violationMessage = new LocalizedMessage(0, 0, "", "", null,
+            SeverityLevel.WARNING, null, RightCurlyCheck.class, null);
+        final AuditEvent event = new AuditEvent(RightCurlyCheck.class, "myfile", violationMessage);
+        final String expected = "[WARNING] myfile:0:  [RightCurly]";
+        final String actual = dl.formErrorMessage(event, event.getSeverityLevel());
+        assertEquals(expected, actual);
+    }
 }
