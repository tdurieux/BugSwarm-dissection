diff --git a/tests/test_logging.py b/tests/test_logging.py
index 02d7d5c2b7..dea8056fc0 100755
--- a/tests/test_logging.py
+++ b/tests/test_logging.py
@@ -44,12 +44,13 @@ def test_global_result_get_log_path(files_dir, suite):
     assert summary.session.results.global_result.get_log_path() is not None
     assert summary.session.results.global_result.get_log_path().startswith(str(files_dir))
 
-
-def _decompress_logs(file_name, compression_method):
-    with open(file_name, 'rb') as compressed_logs_file:
-        raw_data = compressed_logs_file.read()
-        return gzip.decompress(raw_data) if compression_method == "gzip" else brotli.decompress(raw_data)
-
+def _decompress(input_file_name, use_gzip=True):
+    if use_gzip:
+        with gzip.open(input_file_name, 'rb') as in_f:
+            return in_f.read().decode()
+    else:
+        with open(input_file_name, 'rb') as in_f:
+            return brotli.decompress(in_f.read()).decode()
 
 @pytest.mark.parametrize('compression_enabled', [True, False])
 @pytest.mark.parametrize('compression_method', ['gzip', 'brotli'])
@@ -78,8 +79,8 @@ def test_logs_compression(files_dir, suite, config_override, compression_enabled
 
         #validate compressing successfully
         if use_rotating_raw_file:
-            decompressed_logs = _decompress_logs(session_log_path, compression_method)
-            with open(raw_file_name, 'rb') as raw_file:
+            decompressed_logs = _decompress(session_log_path, compression_method == "gzip")
+            with open(raw_file_name, 'r') as raw_file:
                 assert decompressed_logs.endswith(raw_file.read())
     else:
         assert session_log_path.endswith(".log")
