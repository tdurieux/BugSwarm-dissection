diff --git a/galen-core/src/main/java/com/galenframework/validation/specs/SpecValidationInside.java b/galen-core/src/main/java/com/galenframework/validation/specs/SpecValidationInside.java
index 964e6713b2..3a0a083de8 100755
--- a/galen-core/src/main/java/com/galenframework/validation/specs/SpecValidationInside.java
+++ b/galen-core/src/main/java/com/galenframework/validation/specs/SpecValidationInside.java
@@ -27,6 +27,7 @@
 
 import static com.galenframework.validation.ValidationUtils.joinErrorMessagesForObject;
 import static com.galenframework.validation.ValidationUtils.joinMessages;
+import static com.galenframework.validation.ValidationUtils.rangeCalculatedFromPercentage;
 import static java.lang.String.format;
 import static java.util.Arrays.asList;
 
@@ -74,7 +75,11 @@ public ValidationResult check(PageValidation pageValidation, String objectName,
             }
 
             if (!perLocationErrors.isEmpty()) {
-                errorMessages.add(format("%s %s", joinMessages(perLocationErrors, " and "), range.getErrorMessageSuffix()));
+                String calculatedFromPercentage = "";
+                if (range.isPercentage()) {
+                    calculatedFromPercentage = " " + rangeCalculatedFromPercentage(range, pageValidation.getObjectValue(range.getPercentageOfValue()));
+                }
+                errorMessages.add(format("%s %s%s", joinMessages(perLocationErrors, " and "), range.getErrorMessageSuffix(), calculatedFromPercentage));
             }
 
         }
diff --git a/galen-core/src/test/java/com/galenframework/tests/validation/InsideValidationTest.java b/galen-core/src/test/java/com/galenframework/tests/validation/InsideValidationTest.java
index 9cace2bc8f..ea5fdfc331 100755
--- a/galen-core/src/test/java/com/galenframework/tests/validation/InsideValidationTest.java
+++ b/galen-core/src/test/java/com/galenframework/tests/validation/InsideValidationTest.java
@@ -198,14 +198,16 @@
                 }})},
 
             {validationResult(areas(new ValidationObject(new Rect(30, 5, 10, 50), "object"), new ValidationObject(new Rect(0, 0, 50, 120), "container")),
-                    messages("\"object\" is 60% [30px] left instead of 20% [10px]"), NULL_META),
+                    messages("\"object\" is 60% [30px] left instead of 20% [10px]"),
+                asList(LayoutMeta.distance("object", LEFT, "container", LEFT, "20%", "60% [30px]"))),
                 specInside("container", location(exact(20).withPercentOf("container/width"), LEFT)), page(new HashMap<String, PageElement>(){{
                     put("object", element(30, 5, 10, 50));
                     put("container", element(0, 0, 50, 120));
                 }})},
 
             {validationResult(areas(new ValidationObject(new Rect(30, 5, 10, 50), "object"), new ValidationObject(new Rect(0, 0, 50, 120), "container")),
-                    messages("\"object\" is 60% [30px] left which is not in range of 20 to 40% [10 to 20px]"), NULL_META),
+                    messages("\"object\" is 60% [30px] left which is not in range of 20 to 40% [10 to 20px]"),
+                asList(LayoutMeta.distance("object", LEFT, "container", LEFT, "20 to 40%", "60% [30px]"))),
                 specInside("container", location(between(20, 40).withPercentOf("container/width"), LEFT)), page(new HashMap<String, PageElement>(){{
                     put("object", element(30, 5, 10, 50));
                     put("container", element(0, 0, 50, 120));
