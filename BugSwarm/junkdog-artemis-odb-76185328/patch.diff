diff --git a/artemis-gwt-test/src/test/java/com/artemis/GWTArtemisTestSuite.java b/artemis-gwt-test/src/test/java/com/artemis/GWTArtemisTestSuite.java
index 8ea87116b9..4168ba2ed4 100755
--- a/artemis-gwt-test/src/test/java/com/artemis/GWTArtemisTestSuite.java
+++ b/artemis-gwt-test/src/test/java/com/artemis/GWTArtemisTestSuite.java
@@ -1,7 +1,6 @@
 package com.artemis;
 
 import com.artemis.io.ReferenceTrackerTest;
-import com.artemis.io.ComponentLookupSerializerTest;
 import junit.framework.TestCase;
 
 import com.google.gwt.junit.client.GWTTestCase;
@@ -17,7 +16,6 @@
 
 		// reflection
 		ReferenceTrackerTest.class
-		//ComponentLookupSerializerTest.class - does not work at this time.
 	};
 
 	public static GWTTestSuite suite() {
diff --git a/artemis-gwt-test/src/test/java/com/artemis/io/ComponentLookupSerializerTest.java b/artemis-gwt-test/src/test/java/com/artemis/io/ComponentLookupSerializerTest.java
deleted file mode 100755
index 24321144a6..0000000000
--- a/artemis-gwt-test/src/test/java/com/artemis/io/ComponentLookupSerializerTest.java
+++ /dev/null
@@ -1,56 +0,0 @@
-package com.artemis.io;
-
-import com.artemis.Component;
-import com.artemis.EntityEdit;
-import com.artemis.World;
-import com.artemis.component.ComponentX;
-import com.artemis.component.ComponentY;
-import com.artemis.component.ReusedComponent;
-import com.esotericsoftware.jsonbeans.Json;
-import com.esotericsoftware.jsonbeans.OutputType;
-import com.google.gwt.junit.client.GWTTestCase;
-
-import java.util.IdentityHashMap;
-
-/**
- * @author Daan van Yperen
- */
-public class ComponentLookupSerializerTest extends GWTTestCase {
-
-	@Override
-	public String getModuleName() {
-		return "com.ArtemisTest";
-	}
-
-	public void test_read_write_read_components() {
-		World world = new World();
-		EntityEdit ee = world.createEntity().edit();
-		ee.create(ComponentX.class);
-		ee.create(ComponentY.class);
-		ee.create(ReusedComponent.class);
-
-		world.process();
-
-		Json json = new Json(OutputType.javascript);
-		ComponentLookupSerializer serializer = new ComponentLookupSerializer(world);
-		IdentityHashMap<Class<? extends Component>, String> componentMap = serializer.classToIdentifierMap();
-		json.setSerializer(IdentityHashMap.class, new ComponentLookupSerializer(world));
-
-		String serialized = json.toJson(componentMap);
-		IdentityHashMap map = json.fromJson(IdentityHashMap.class, serialized);
-
-		assertArrayEquals(componentMap.values().toArray(), map.values().toArray());
-		assertEquals(componentMap.keySet(), map.keySet());
-	}
-
-	/** Assert array equals for poor people. */
-	protected void assertArrayEquals(Object[] a1, Object[] a2) {
-		assertEquals(a1.length, a2.length);
-		int index=0;
-		for (Object o1 : a1) {
-			final Object o2 = a2[index++];
-			assertEquals(o1, o2);
-		}
-	}
-
-}
diff --git a/artemis-gwt-test/src/test/java/com/artemis/io/ReferenceTrackerTest.java b/artemis-gwt-test/src/test/java/com/artemis/io/ReferenceTrackerTest.java
index 08f0c532d5..a058fff328 100755
--- a/artemis-gwt-test/src/test/java/com/artemis/io/ReferenceTrackerTest.java
+++ b/artemis-gwt-test/src/test/java/com/artemis/io/ReferenceTrackerTest.java
@@ -22,7 +22,7 @@ public void test_intercept_component_with_entity_references() {
 		ee.create(EntityHolder.class);
 		ee.create(ComponentY.class); // not referenced
 
-		ReferenceTracker tracker = new ReferenceTracker();
+		ReferenceTracker tracker = new ReferenceTracker(w);
 		tracker.inspectTypes(w);
 
 		assertEquals(2, tracker.referenced.size());
