diff --git a/src/main/java/bammerbom/ultimatecore/sponge/UltimateCore.java b/src/main/java/bammerbom/ultimatecore/sponge/UltimateCore.java
index b5862883ad..547de7b8e5 100755
--- a/src/main/java/bammerbom/ultimatecore/sponge/UltimateCore.java
+++ b/src/main/java/bammerbom/ultimatecore/sponge/UltimateCore.java
@@ -121,8 +121,6 @@ public void onPreInit(GamePreInitializationEvent ev) {
                     if (module.isPresent()) {
                         if (moduleService.registerModule(module.get())) {
                             Messages.log(Messages.getFormatted("core.load.module.registered", "%module%", module.get().getIdentifier()));
-                        } else {
-                            Messages.log(Messages.getFormatted("core.load.module.blocked", "%module%", module.get().getIdentifier()));
                         }
                     } else {
                         Messages.log(Messages.getFormatted("core.load.module.failed", "%module%", f.getName()));
diff --git a/src/main/java/bammerbom/ultimatecore/sponge/config/ModulesConfig.java b/src/main/java/bammerbom/ultimatecore/sponge/config/ModulesConfig.java
index 39d0ff60f6..46e0a4cf79 100755
--- a/src/main/java/bammerbom/ultimatecore/sponge/config/ModulesConfig.java
+++ b/src/main/java/bammerbom/ultimatecore/sponge/config/ModulesConfig.java
@@ -59,16 +59,16 @@ public static void postload() {
         try {
             boolean modified = false;
             if (!node.getNode("modules").getComment().isPresent()) {
-                node.getNode("modules").setComment("Set enabled to 'force', 'enabled' or 'disabled'\nForce will load the module even when another plugin blocks the loading process.");
+                node.getNode("modules").setComment("Set state to 'force', 'enabled' or 'disabled'\nForce will load the module even when another plugin blocks the loading process.");
             }
             for (Module mod : UltimateCore.get().getModuleService().getRegisteredModules()) {
                 if (mod.getIdentifier().equals("default")) {
                     continue;
                 }
                 CommentedConfigurationNode modnode = node.getNode("modules", mod.getIdentifier());
-                if (modnode.getNode("enabled").getValue() == null) {
+                if (modnode.getNode("state").getValue() == null) {
                     modified = true;
-                    modnode.getNode("enabled").setValue("enabled");
+                    modnode.getNode("state").setValue("enabled");
                 }
             }
             if (modified) {
diff --git a/src/main/java/bammerbom/ultimatecore/sponge/defaultmodule/DefaultModule.java b/src/main/java/bammerbom/ultimatecore/sponge/defaultmodule/DefaultModule.java
index cefebebbaf..fe5307773a 100755
--- a/src/main/java/bammerbom/ultimatecore/sponge/defaultmodule/DefaultModule.java
+++ b/src/main/java/bammerbom/ultimatecore/sponge/defaultmodule/DefaultModule.java
@@ -40,11 +40,6 @@ public String getIdentifier() {
         return "default";
     }
 
-    @Override
-    public Optional<? extends Object> getApi() {
-        return Optional.empty();
-    }
-
     @Override
     public Optional<? extends ModuleConfig> getConfig() {
         return Optional.empty();
diff --git a/src/main/java/bammerbom/ultimatecore/sponge/impl/module/UCModuleService.java b/src/main/java/bammerbom/ultimatecore/sponge/impl/module/UCModuleService.java
index 8f13a5aa80..5ec909fa82 100755
--- a/src/main/java/bammerbom/ultimatecore/sponge/impl/module/UCModuleService.java
+++ b/src/main/java/bammerbom/ultimatecore/sponge/impl/module/UCModuleService.java
@@ -27,6 +27,7 @@
 import bammerbom.ultimatecore.sponge.api.event.module.ModuleRegisterEvent;
 import bammerbom.ultimatecore.sponge.api.module.Module;
 import bammerbom.ultimatecore.sponge.api.module.ModuleService;
+import bammerbom.ultimatecore.sponge.config.ModulesConfig;
 import bammerbom.ultimatecore.sponge.utils.Messages;
 import org.spongepowered.api.Sponge;
 import org.spongepowered.api.event.cause.Cause;
@@ -81,6 +82,11 @@ public boolean registerModule(Module module) {
         ModuleRegisterEvent event = new ModuleRegisterEvent(module, Cause.builder().owner(UltimateCore.get()).build());
         Sponge.getEventManager().post(event);
         if (event.isCancelled()) {
+            Messages.log(Messages.getFormatted("core.load.module.blocked", "%module%", module.getIdentifier()));
+            return false;
+        }
+        if (!ModulesConfig.get().getNode("modules", module.getIdentifier(), "state").getBoolean(true)) {
+            Messages.log(Messages.getFormatted("core.load.module.disabled", "%module%", module.getIdentifier()));
             return false;
         }
         modules.add(module);
diff --git a/src/main/java/bammerbom/ultimatecore/sponge/modules/weather/WeatherModule.java b/src/main/java/bammerbom/ultimatecore/sponge/modules/weather/WeatherModule.java
index ff2fee824a..bba0802930 100755
--- a/src/main/java/bammerbom/ultimatecore/sponge/modules/weather/WeatherModule.java
+++ b/src/main/java/bammerbom/ultimatecore/sponge/modules/weather/WeatherModule.java
@@ -60,7 +60,7 @@ public void onInit(GameInitializationEvent event) {
         config.reload();
         //Commands
         UltimateCore.get().getCommandService().register(new WeatherCommand());
-        //listeners
+        //Listeners
         Sponge.getEventManager().registerListeners(UltimateCore.get(), new WeatherListener());
     }
 
diff --git a/src/main/resources/assets/ultimatecore/language/EN_US.properties b/src/main/resources/assets/ultimatecore/language/EN_US.properties
index 0571e0be7a..81060a08d7 100755
--- a/src/main/resources/assets/ultimatecore/language/EN_US.properties
+++ b/src/main/resources/assets/ultimatecore/language/EN_US.properties
@@ -16,6 +16,7 @@ core.load.init=&aInitialized UltimateCore! (%ms% ms)
 core.load.postinit=&aPost-initialized UltimateCore! (%ms% ms)
 core.load.module.registered=Registered module: %module%
 core.load.module.blocked=&cModule %module% was not registered because another plugin blocked the registration.
+core.load.module.disabled=&cModule %module% was not registered because it is disabled in the modules.conf.
 core.load.module.failed=&cModule failed to load: %module%
 core.load.stop=&aStopped UltimateCore! (%ms% ms)
 core.stats.sent=Sent stats to ultimatecore.org - %status%
