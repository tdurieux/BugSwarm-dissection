diff --git a/build.gradle b/build.gradle
index 9f0d0e8db0..c540e85c2b 100755
--- a/build.gradle
+++ b/build.gradle
@@ -21,13 +21,10 @@ ext {
       'jdbc-driver-csv': '1.0.0',
       'junit' : '4.12',
       'testng':  '6.9.10',
-      'h2' : '1.4.181',
-      'hsqldb' : '2.3.2',
-      'derby' : '10.11.1.1',
       'mysql' : '5.1.33',
       'postgresql' : '9.3-1102-jdcb41'
     ]
-    databases = ['h2', 'hsqldb']
+    databases = ['derby', 'h2', 'hsqldb']
 }
 
 buildscript {
@@ -81,7 +78,7 @@ configurations {
 
 dependencies {
     compile 'org.elasticsearch:elasticsearch:' + versions.elasticsearch
-    compile 'org.xbib.elasticsearch.plugins:elasticsearch-helper:' + versions.'elasticsearch-helper'
+    compile 'org.xbib.elasticsearch.plugin:elasticsearch-helper:' + versions.'elasticsearch-helper'
     compile 'org.apache.logging.log4j:log4j-slf4j-impl:' + versions.log4j
     compile 'org.apache.logging.log4j:log4j-core:'+ versions.log4j
     compile('com.vividsolutions:jts:1.13') {
@@ -94,6 +91,7 @@ dependencies {
     // http://www.oracle.com/technetwork/database/features/jdbc/jdbc-drivers-12c-download-1958347.html
     // releaseJars 'com.oracle:ojdbc7:12.1.0.1'
     testCompile 'org.testng:testng:' + versions.testng
+    testCompile 'net.java.dev.jna:jna:' + versions.jna
     // Workaround for a known issue with TestNG 6.x: explicitly add Guice (Gradle will fail to run tests otherwise)
     testCompile 'com.google.inject:guice:3.0'
     testCompile 'org.uncommons:reportng:1.1.4'
@@ -101,6 +99,7 @@ dependencies {
     testCompile 'org.apache.logging.log4j:log4j-core:'+ versions.log4j
     integrationTestCompile 'org.testng:testng:' + versions.testng
     integrationTestCompile 'org.elasticsearch:elasticsearch:' + versions.elasticsearch
+    integrationTestCompile 'net.java.dev.jna:jna:' + versions.jna
     wagon 'org.apache.maven.wagon:wagon-ssh-external:' + versions.wagon
 }
 
@@ -150,16 +149,6 @@ task integrationTest(type: Test, dependsOn: [':unpackPlugin']) {
     systemProperty 'path.home', projectDir.absolutePath
 }
 
-/*databases.each { database ->
-    task "${database}IntegrationTest"(type: Test) {
-        testClassesDir = sourceSets.integrationTest.output.classesDir
-        classpath = configurations.integrationTestCompile
-        classpath += sourceSets.integrationTest.output
-        systemProperty 'path.home', projectDir.absolutePath
-        testLogging.showStandardStreams = true
-    }
-}*/
-
 tasks.withType(Test) {
     reports.html.destination = file("${reporting.baseDir}/${name}")
 }
diff --git a/gradle/derby.gradle b/gradle/derby.gradle
new file mode 100755
index 0000000000..21121122b9
--- /dev/null
+++ b/gradle/derby.gradle
@@ -0,0 +1,66 @@
+dependencies {
+    testCompile 'org.apache.derby:derby:10.12.1.1'
+}
+
+task derbyIntegrationTest(type: Test) {
+    systemProperty 'path.home', projectDir.absolutePath + '/build'
+    systemProperty 'java.io.tmpdir', projectDir.absolutePath + '/build/tmp'
+    ext.useDefaultListeners = true
+    ext.workingDirectory = projectDir.absolutePath + '/build'
+    useTestNG() {
+        testLogging.showStandardStreams = false
+        suiteXmlBuilder().suite(name: 'gradle-testng-jdbc-derby', verbose: '1') {
+            parameter(name: 'starturl', value: 'jdbc:derby:memory:myDB;create=true')
+            parameter(name: 'stopurl', value: 'jdbc:derby:memory:myDB;drop=true')
+            parameter(name: 'user', value: '')
+            parameter(name: 'password', value: '')
+            test(name: 'derby Source Tests') {
+                parameter(name: 'create', value: 'derby/create-ordertables.sql')
+                parameter(name: 'delete', value: 'derby/delete-ordertables.sql')
+                parameter(name: 'sql1', value: 'select * from "orders"')
+                parameter(name: 'sql2', value: 'select * from "orders"')
+                parameter(name: 'sql3', value: 'select * from "products" where "amount" is NULL')
+                classes([:]) {
+                    'class'(name: 'org.xbib.elasticsearch.jdbc.strategy.standard.StandardSourceTests')
+                }
+            }
+            test(name: 'derby Sink Tests') {
+                parameter(name: 'create', value: 'derby/create-ordertables.sql')
+                parameter(name: 'delete', value: 'derby/delete-ordertables.sql')
+                parameter(name: 'task1', value: 'derby/task1.json')
+                parameter(name: 'task2', value: 'derby/task2.json')
+                parameter(name: 'task3', value: 'derby/task3.json')
+                parameter(name: 'sql1', value: 'insert into "products" ("name", "amount", "price") values(?,?,?)')
+                classes([:]) {
+                    'class'(name: 'org.xbib.elasticsearch.jdbc.strategy.standard.StandardSinkTests')
+                }
+            }
+            test(name: 'derby Job Tests') {
+                parameter(name: 'create', value: 'derby/create-jobtables.sql')
+                parameter(name: 'delete', value: 'derby/delete-jobtables.sql')
+                parameter(name: 'task1', value: 'derby/jobtask1.json')
+                parameter(name: 'sql1', value: 'select count(*) from "products"')
+                parameter(name: 'sql2', value: 'insert into "products" ("_job", "name", "amount", "price") values(?,?,?,?)')
+                classes([:]) {
+                    'class'(name: 'org.xbib.elasticsearch.jdbc.strategy.standard.StandardCounterTests')
+                }
+            }
+            test(name: 'derby Schedule Tests') {
+                parameter(name: 'create', value: 'derby/create-ordertables.sql')
+                parameter(name: 'delete', value: 'derby/delete-ordertables.sql')
+                parameter(name: 'task6', value: 'derby/task6.json')
+                parameter(name: 'task7', value: 'derby/task7.json')
+                parameter(name: 'sql1', value: 'insert into "products" ("name", "amount", "price") values(?,?,?)')
+                parameter(name: 'sql2', value: 'insert into "logs" ("modified", "message") values(?,?)')
+                classes([:]) {
+                    'class'(name: 'org.xbib.elasticsearch.jdbc.strategy.standard.StandardScheduleTests')
+                }
+            }
+        }
+    }
+    options {
+        listeners << 'org.xbib.elasticsearch.util.TestListener'
+        listeners << 'org.uncommons.reportng.HTMLReporter'
+        listeners << 'org.uncommons.reportng.JUnitXMLReporter'
+    }
+}
\ No newline at end of file
diff --git a/gradle/h2.gradle b/gradle/h2.gradle
index d67bbe6df5..bda6a03eb8 100755
--- a/gradle/h2.gradle
+++ b/gradle/h2.gradle
@@ -1,17 +1,17 @@
 dependencies {
-    testCompile "com.h2database:h2:1.4.181"
+    testCompile "com.h2database:h2:1.4.191"
 }
 
 task h2IntegrationTest(type: Test) {
     systemProperty 'path.home', projectDir.absolutePath + "/build"
     systemProperty 'java.io.tmpdir', projectDir.absolutePath + "/build/tmp"
     ext.useDefaultListeners = true
-    ext.workingDirectory =  projectDir.absolutePath + '/build'
+    ext.workingDirectory = projectDir.absolutePath + '/build'
     useTestNG() {
         testLogging.showStandardStreams = false
         suiteXmlBuilder().suite(name: 'gradle-testng-jdbc-h2', verbose: '1') {
-            parameter(name: 'starturl', value: 'jdbc:h2:mem:')
-            parameter(name: 'stopurl', value: 'jdbc:h2:mem:')
+            parameter(name: 'starturl', value: 'jdbc:h2:./build/test')
+            parameter(name: 'stopurl', value: 'jdbc:h2:./build/test')
             parameter(name: 'user', value: '')
             parameter(name: 'password', value: '')
             test(name : 'h2 Source Tests') {
diff --git a/gradle/hsqldb.gradle b/gradle/hsqldb.gradle
index 314f53ffa1..402c39d8dc 100755
--- a/gradle/hsqldb.gradle
+++ b/gradle/hsqldb.gradle
@@ -1,12 +1,12 @@
 dependencies {
-    testCompile "org.hsqldb:hsqldb:2.3.2"
+    testCompile "org.hsqldb:hsqldb:2.3.3"
 }
 
 task hsqldbIntegrationTest(type: Test) {
-    systemProperty 'path.home', projectDir.absolutePath + "build"
-    systemProperty 'java.io.tmpdir', projectDir.absolutePath + "build/tmp"
+    systemProperty 'path.home', projectDir.absolutePath + '/build'
+    systemProperty 'java.io.tmpdir', projectDir.absolutePath + '/build/tmp'
     ext.useDefaultListeners = true
-    ext.workingDirectory = 'build/'
+    ext.workingDirectory = projectDir.absolutePath + '/build'
     useTestNG() {
         testLogging.showStandardStreams = false
         suiteXmlBuilder().suite(name: 'gradle-testng-jdbc-hsqldb', verbose: '1') {
diff --git a/src/test/java/org/xbib/elasticsearch/jdbc/strategy/standard/AbstractSinkTest.java b/src/test/java/org/xbib/elasticsearch/jdbc/strategy/standard/AbstractSinkTest.java
index 3743e48d3a..eea8532107 100755
--- a/src/test/java/org/xbib/elasticsearch/jdbc/strategy/standard/AbstractSinkTest.java
+++ b/src/test/java/org/xbib/elasticsearch/jdbc/strategy/standard/AbstractSinkTest.java
@@ -213,6 +213,7 @@ protected void createRandomProductsJob(String sql, int size)
             long job = 0L;
             add(connection, sql, job, UUID.randomUUID().toString().substring(0, 32), amount, price);
         }
+        logger.info("executed {} adds", size);
         if (!connection.getAutoCommit()) {
             connection.commit();
         }
@@ -239,13 +240,12 @@ private void sqlScript(Connection connection, String resourceName) throws Except
         BufferedReader br = new BufferedReader(new InputStreamReader(in, "UTF-8"));
         String sql;
         while ((sql = br.readLine()) != null) {
-
             try {
-                logger.trace("executing {}", sql);
+                logger.info("executing {}", sql);
                 Statement p = connection.createStatement();
                 p.execute(sql);
                 p.close();
-            } catch (SQLException e) {
+            } catch (Exception e) {
                 // ignore
                 logger.error(sql + " failed. Reason: " + e.getMessage());
             } finally {
diff --git a/src/test/java/org/xbib/elasticsearch/jdbc/strategy/standard/StandardCounterTests.java b/src/test/java/org/xbib/elasticsearch/jdbc/strategy/standard/StandardCounterTests.java
index 7340c44778..254537ab04 100755
--- a/src/test/java/org/xbib/elasticsearch/jdbc/strategy/standard/StandardCounterTests.java
+++ b/src/test/java/org/xbib/elasticsearch/jdbc/strategy/standard/StandardCounterTests.java
@@ -50,13 +50,17 @@ protected void perform(String resource) throws Exception {
     @Parameters({"task1", "sql1", "sql2"})
     public void testCounter(String resource, String sql1, String sql2)
             throws Exception {
+        logger.info("creating random products: {}", sql2);
         createRandomProductsJob(sql2, 100);
+        logger.info("random products created");
         Connection connection = source.getConnectionForReading();
+        logger.info("counting random products: {}", sql1);
         ResultSet results = connection.createStatement().executeQuery(sql1);
         if (!connection.getAutoCommit()) {
             connection.commit();
         }
         int count = results.next() ? results.getInt(1) : -1;
+        logger.info("random product count: {}", count);
         source.close(results);
         source.closeReading();
         assertEquals(count, 100);
diff --git a/src/test/resources/org/xbib/elasticsearch/jdbc/strategy/standard/h2/jobtask1.json b/src/test/resources/org/xbib/elasticsearch/jdbc/strategy/standard/h2/jobtask1.json
index ae8a69bcbb..8e50d54eb6 100755
--- a/src/test/resources/org/xbib/elasticsearch/jdbc/strategy/standard/h2/jobtask1.json
+++ b/src/test/resources/org/xbib/elasticsearch/jdbc/strategy/standard/h2/jobtask1.json
@@ -1,7 +1,7 @@
 {
     "type" : "jdbc",
     "jdbc" : {
-        "url" : "jdbc:h2:./target/test",
+        "url" : "jdbc:h2:./build/test",
         "user" : "",
         "password" : "",
         "sql" : [
diff --git a/src/test/resources/org/xbib/elasticsearch/jdbc/strategy/standard/h2/task1.json b/src/test/resources/org/xbib/elasticsearch/jdbc/strategy/standard/h2/task1.json
index 1f46a3f7e6..7550195c56 100755
--- a/src/test/resources/org/xbib/elasticsearch/jdbc/strategy/standard/h2/task1.json
+++ b/src/test/resources/org/xbib/elasticsearch/jdbc/strategy/standard/h2/task1.json
@@ -1,7 +1,7 @@
 {
     "type" : "jdbc",
     "jdbc" : {
-        "url" : "jdbc:h2:./target/test",
+        "url" : "jdbc:h2:./build/test",
         "user" : "",
         "password" : "",
         "sql" : "select * from \"orders\"",
diff --git a/src/test/resources/org/xbib/elasticsearch/jdbc/strategy/standard/h2/task2.json b/src/test/resources/org/xbib/elasticsearch/jdbc/strategy/standard/h2/task2.json
index 1b6b5fed12..0c7ac76e14 100755
--- a/src/test/resources/org/xbib/elasticsearch/jdbc/strategy/standard/h2/task2.json
+++ b/src/test/resources/org/xbib/elasticsearch/jdbc/strategy/standard/h2/task2.json
@@ -1,7 +1,7 @@
 {
     "type" : "jdbc",
     "jdbc" : {
-        "url" : "jdbc:h2:./target/test",
+        "url" : "jdbc:h2:./build/test",
         "user" : "",
         "password" : "",
         "sql" : "select * from \"products\"",
diff --git a/src/test/resources/org/xbib/elasticsearch/jdbc/strategy/standard/h2/task3.json b/src/test/resources/org/xbib/elasticsearch/jdbc/strategy/standard/h2/task3.json
index 24bf23d7e7..8184b17c62 100755
--- a/src/test/resources/org/xbib/elasticsearch/jdbc/strategy/standard/h2/task3.json
+++ b/src/test/resources/org/xbib/elasticsearch/jdbc/strategy/standard/h2/task3.json
@@ -1,7 +1,7 @@
 {
     "type" : "jdbc",
     "jdbc" : {
-        "url" : "jdbc:h2:./target/test",
+        "url" : "jdbc:h2:./build/test",
         "user" : "",
         "password" : "",
         "sql" : "select * from \"products\"",
diff --git a/src/test/resources/org/xbib/elasticsearch/jdbc/strategy/standard/h2/task6.json b/src/test/resources/org/xbib/elasticsearch/jdbc/strategy/standard/h2/task6.json
index 93e595722a..9148643ac1 100755
--- a/src/test/resources/org/xbib/elasticsearch/jdbc/strategy/standard/h2/task6.json
+++ b/src/test/resources/org/xbib/elasticsearch/jdbc/strategy/standard/h2/task6.json
@@ -2,7 +2,7 @@
     "type" : "jdbc",
     "jdbc" : {
         "schedule" : "0/5 0-59 0-23 ? * *",
-        "url" : "jdbc:h2:./target/test",
+        "url" : "jdbc:h2:./build/test",
         "user" : "",
         "password" : "",
         "sql" : "select * from \"products\"",
diff --git a/src/test/resources/org/xbib/elasticsearch/jdbc/strategy/standard/h2/task7.json b/src/test/resources/org/xbib/elasticsearch/jdbc/strategy/standard/h2/task7.json
index 48546386ae..f22ee84e9b 100755
--- a/src/test/resources/org/xbib/elasticsearch/jdbc/strategy/standard/h2/task7.json
+++ b/src/test/resources/org/xbib/elasticsearch/jdbc/strategy/standard/h2/task7.json
@@ -4,7 +4,7 @@
         "schedule" : "0/5 0-59 0-23 ? * *",
         "timezone" : "Asia/Jerusalem",
         "locale" : "iw_IL",
-        "url" : "jdbc:h2:./target/test",
+        "url" : "jdbc:h2:./build/test",
         "user" : "",
         "password" : "",
         "sql" : [
