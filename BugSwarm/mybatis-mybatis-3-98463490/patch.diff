diff --git a/src/main/java/org/apache/ibatis/executor/resultset/DefaultResultSetHandler.java b/src/main/java/org/apache/ibatis/executor/resultset/DefaultResultSetHandler.java
index 2e02a18f7e..50714bf631 100755
--- a/src/main/java/org/apache/ibatis/executor/resultset/DefaultResultSetHandler.java
+++ b/src/main/java/org/apache/ibatis/executor/resultset/DefaultResultSetHandler.java
@@ -57,6 +57,7 @@
 import java.util.List;
 import java.util.Locale;
 import java.util.Map;
+import java.util.Random;
 import java.util.Set;
 
 /**
@@ -985,6 +986,7 @@ private CacheKey combineKeys(CacheKey rowKey, CacheKey parentRowKey) {
   }
 
   private void createRowKeyForMappedProperties(ResultMap resultMap, ResultSetWrapper rsw, CacheKey cacheKey, List<ResultMapping> resultMappings, String columnPrefix) throws SQLException {
+    boolean hasSimpleProperties = false;
     for (ResultMapping resultMapping : resultMappings) {
       if (resultMapping.getNestedResultMapId() != null && resultMapping.getResultSet() == null) {
         // Issue #392
@@ -992,6 +994,7 @@ private void createRowKeyForMappedProperties(ResultMap resultMap, ResultSetWrapp
         createRowKeyForMappedProperties(nestedResultMap, rsw, cacheKey, nestedResultMap.getConstructorResultMappings(),
             prependPrefix(resultMapping.getColumnPrefix(), columnPrefix));
       } else if (resultMapping.getNestedQueryId() == null) {
+        hasSimpleProperties = true;
         final String column = prependPrefix(resultMapping.getColumn(), columnPrefix);
         final TypeHandler<?> th = resultMapping.getTypeHandler();
         List<String> mappedColumnNames = rsw.getMappedColumnNames(resultMap, columnPrefix);
@@ -1005,6 +1008,9 @@ private void createRowKeyForMappedProperties(ResultMap resultMap, ResultSetWrapp
         }
       }
     }
+    if (!hasSimpleProperties && cacheKey.getUpdateCount() == 1) {
+      cacheKey.update(new Random()); // issue #39
+    }
   }
 
   private void createRowKeyForUnmappedProperties(ResultMap resultMap, ResultSetWrapper rsw, CacheKey cacheKey, String columnPrefix) throws SQLException {
diff --git a/src/test/java/org/apache/ibatis/submitted/nestedresulthandler/Item.java b/src/test/java/org/apache/ibatis/submitted/nestedresulthandler/Item.java
index 4e4a20fc1e..6a3b1d11ee 100755
--- a/src/test/java/org/apache/ibatis/submitted/nestedresulthandler/Item.java
+++ b/src/test/java/org/apache/ibatis/submitted/nestedresulthandler/Item.java
@@ -1,5 +1,5 @@
-/*
- *    Copyright 2009-2012 the original author or authors.
+/**
+ *    Copyright 2009-2015 the original author or authors.
  *
  *    Licensed under the Apache License, Version 2.0 (the "License");
  *    you may not use this file except in compliance with the License.
diff --git a/src/test/java/org/apache/ibatis/submitted/nestedresulthandler/Mapper.java b/src/test/java/org/apache/ibatis/submitted/nestedresulthandler/Mapper.java
index bda7b6b3cf..fab97238f0 100755
--- a/src/test/java/org/apache/ibatis/submitted/nestedresulthandler/Mapper.java
+++ b/src/test/java/org/apache/ibatis/submitted/nestedresulthandler/Mapper.java
@@ -1,5 +1,5 @@
-/*
- *    Copyright 2009-2012 the original author or authors.
+/**
+ *    Copyright 2009-2015 the original author or authors.
  *
  *    Licensed under the Apache License, Version 2.0 (the "License");
  *    you may not use this file except in compliance with the License.
diff --git a/src/test/java/org/apache/ibatis/submitted/nestedresulthandler/NestedResultHandlerTest.java b/src/test/java/org/apache/ibatis/submitted/nestedresulthandler/NestedResultHandlerTest.java
index d741592ee5..c4dced9082 100755
--- a/src/test/java/org/apache/ibatis/submitted/nestedresulthandler/NestedResultHandlerTest.java
+++ b/src/test/java/org/apache/ibatis/submitted/nestedresulthandler/NestedResultHandlerTest.java
@@ -1,5 +1,5 @@
-/*
- *    Copyright 2009-2012 the original author or authors.
+/**
+ *    Copyright 2009-2015 the original author or authors.
  *
  *    Licensed under the Apache License, Version 2.0 (the "License");
  *    you may not use this file except in compliance with the License.
@@ -151,7 +151,6 @@ public void testGetPersonOrderedByItem() {
     }
   }
 
-  @Ignore
   @Test //reopen issue 39? (not a bug?)
   public void testGetPersonItemPairs(){
     SqlSession sqlSession = sqlSessionFactory.openSession();
diff --git a/src/test/java/org/apache/ibatis/submitted/nestedresulthandler/Person.java b/src/test/java/org/apache/ibatis/submitted/nestedresulthandler/Person.java
index 401be16db3..8e5ad3f619 100755
--- a/src/test/java/org/apache/ibatis/submitted/nestedresulthandler/Person.java
+++ b/src/test/java/org/apache/ibatis/submitted/nestedresulthandler/Person.java
@@ -1,5 +1,5 @@
-/*
- *    Copyright 2009-2012 the original author or authors.
+/**
+ *    Copyright 2009-2015 the original author or authors.
  *
  *    Licensed under the Apache License, Version 2.0 (the "License");
  *    you may not use this file except in compliance with the License.
diff --git a/src/test/java/org/apache/ibatis/submitted/nestedresulthandler/PersonItemPair.java b/src/test/java/org/apache/ibatis/submitted/nestedresulthandler/PersonItemPair.java
new file mode 100755
index 0000000000..60f53a1952
--- /dev/null
+++ b/src/test/java/org/apache/ibatis/submitted/nestedresulthandler/PersonItemPair.java
@@ -0,0 +1,50 @@
+/**
+ *    Copyright 2009-2015 the original author or authors.
+ *
+ *    Licensed under the Apache License, Version 2.0 (the "License");
+ *    you may not use this file except in compliance with the License.
+ *    You may obtain a copy of the License at
+ *
+ *       http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *    Unless required by applicable law or agreed to in writing, software
+ *    distributed under the License is distributed on an "AS IS" BASIS,
+ *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ *    See the License for the specific language governing permissions and
+ *    limitations under the License.
+ */
+package org.apache.ibatis.submitted.nestedresulthandler;
+
+/**
+ * Created by eyal on 12/9/2015.
+ */
+public class PersonItemPair {
+    private Person  person;
+    private Item item;
+
+    public String toString(){
+        return new StringBuilder()
+                .append("PersonItemPair(")
+                .append(person)
+                .append(", ")
+                .append(item)
+                .append(" )")
+                .toString();
+    }
+
+    public Person getPerson() {
+        return person;
+    }
+
+    public void setPerson(Person person) {
+        this.person = person;
+    }
+
+    public Item getItem() {
+        return item;
+    }
+
+    public void setItem(Item item) {
+        this.item = item;
+    }
+}
