diff --git a/test-data/unit/check-overloading.test b/test-data/unit/check-overloading.test
index e5d612a7bd..589b04b49e 100755
--- a/test-data/unit/check-overloading.test
+++ b/test-data/unit/check-overloading.test
@@ -1412,15 +1412,19 @@ reveal_type(f(d))  # E: Revealed type is 'builtins.list[builtins.int]'
 from typing import overload, Any
 
 @overload
-def f(*, x: int = 3, y: int = 3) -> int: ...
+def f(*, x: int = 3, y: int = 3) -> int: ...  # E: Overloaded function signatures 1 and 2 overlap with incompatible return types
 @overload
 def f(**kwargs: str) -> str: ...
 def f(*args, **kwargs): pass
 
+# Checking an overload flagged as unsafe is a bit weird, but this is the
+# cleanest way to make sure 'Any' ambiguity checks work correctly with
+# keyword arguments.
 a: Any
 i: int
 reveal_type(f(x=a, y=i))  # E: Revealed type is 'builtins.int'
 reveal_type(f(y=a))       # E: Revealed type is 'Any'
+reveal_type(f(x=a, y=a))  # E: Revealed type is 'Any'
 
 [builtins fixtures/dict.pyi]
 
