diff --git a/src/main/java/cn/nukkit/Player.java b/src/main/java/cn/nukkit/Player.java
index acac61caaa..d0d6a7a65e 100755
--- a/src/main/java/cn/nukkit/Player.java
+++ b/src/main/java/cn/nukkit/Player.java
@@ -669,8 +669,7 @@ protected void doFirstSpawn() {
         }
 
         //Weather
-        //this.getLevel().enableWeather(this);
-        //this.getLevel().enableThunder(this);
+        this.getLevel().sendWeather(this);
 
         //FoodLevel
         this.getFoodData().sendFoodLevel();
@@ -2346,7 +2345,7 @@ public void handleDataPacket(DataPacket packet) {
                         entityDamageByEntityEvent.setCancelled();
                     }
 
-                    targetEntity.attack(entityDamageByEntityEvent.getFinalDamage(), entityDamageByEntityEvent);
+                    targetEntity.attack(entityDamageByEntityEvent);
 
                     if (ev.isCancelled()) {
                         if (item.isTool() && this.isSurvival()) {
@@ -3101,7 +3100,7 @@ public float getMovementSpeed() {
     }
 
     @Override
-    public void attack(float damage, EntityDamageEvent source) {
+    public void attack(EntityDamageEvent source) {
         if (!this.isAlive()) {
             return;
         }
@@ -3135,7 +3134,7 @@ public void attack(float damage, EntityDamageEvent source) {
             if (add) source.setDamage((float) (source.getDamage() * 1.5));
         }
 
-        super.attack(damage, source);
+        super.attack(source);
 
         if (!source.isCancelled() && this.getLastDamageCause() == source && this.spawned) {
             this.getFoodData().updateFoodExpLevel(0.3);
diff --git a/src/main/java/cn/nukkit/PlayerFood.java b/src/main/java/cn/nukkit/PlayerFood.java
index 2d526f137c..d0bc3218df 100755
--- a/src/main/java/cn/nukkit/PlayerFood.java
+++ b/src/main/java/cn/nukkit/PlayerFood.java
@@ -137,11 +137,11 @@ public void updateFoodTickTimer(int tickDiff) {
                 EntityDamageEvent ev = new EntityDamageEvent(this.getPlayer(), EntityDamageEvent.CAUSE_VOID, 1);
                 int now = this.getPlayer().getHealth();
                 if (diff == 1) {
-                    if (now > 10) this.getPlayer().attack(1, ev);
+                    if (now > 10) this.getPlayer().attack(ev);
                 } else if (diff == 2) {
-                    if (now > 1) this.getPlayer().attack(1, ev);
+                    if (now > 1) this.getPlayer().attack(ev);
                 } else {
-                    this.getPlayer().attack(1, ev);
+                    this.getPlayer().attack(ev);
                 }
 
                 this.foodTickTimer = 0;
diff --git a/src/main/java/cn/nukkit/block/BurningFurnace.java b/src/main/java/cn/nukkit/block/BurningFurnace.java
index 0edbde0e20..2036a3d879 100755
--- a/src/main/java/cn/nukkit/block/BurningFurnace.java
+++ b/src/main/java/cn/nukkit/block/BurningFurnace.java
@@ -3,7 +3,10 @@
 import cn.nukkit.Player;
 import cn.nukkit.item.Item;
 import cn.nukkit.item.Tool;
-import cn.nukkit.nbt.tag.*;
+import cn.nukkit.nbt.tag.CompoundTag;
+import cn.nukkit.nbt.tag.ListTag;
+import cn.nukkit.nbt.tag.StringTag;
+import cn.nukkit.nbt.tag.Tag;
 import cn.nukkit.tile.Furnace;
 import cn.nukkit.tile.Tile;
 
@@ -14,7 +17,7 @@
  * author: Angelic47
  * Nukkit Project
  */
-public class BurningFurnace extends Solid{
+public class BurningFurnace extends Solid {
 
     public BurningFurnace() {
         this(0);
@@ -66,14 +69,14 @@ public boolean place(Item item, Block block, Block target, int face, double fx,
                 .putInt("y", (int) this.y)
                 .putInt("z", (int) this.z);
 
-        if(item.hasCustomName()) {
+        if (item.hasCustomName()) {
             nbt.putString("CustomName", item.getCustomName());
         }
 
-        if(item.hasCustomBlockData()) {
+        if (item.hasCustomBlockData()) {
             Map<String, Tag> customData = item.getCustomBlockData().getTags();
             Iterator iter = customData.entrySet().iterator();
-            while(iter.hasNext()) {
+            while (iter.hasNext()) {
                 Map.Entry tag = (Map.Entry) iter.next();
                 nbt.put((String) tag.getKey(), (Tag) tag.getValue());
             }
@@ -91,13 +94,12 @@ public boolean onBreak(Item item) {
 
     @Override
     public boolean onActivate(Item item, Player player) {
-        if(player instanceof Player) {
+        if (player instanceof Player) {
             Tile t = this.getLevel().getTile(this);
             Furnace furnace = null;
-            if(t instanceof Furnace) {
+            if (t instanceof Furnace) {
                 furnace = (Furnace) t;
-            }
-            else {
+            } else {
                 CompoundTag nbt = new CompoundTag()
                         .putList(new ListTag<>("Items"))
                         .putString("id", Tile.FURNACE)
@@ -107,13 +109,13 @@ public boolean onActivate(Item item, Player player) {
                 furnace = (Furnace) (Tile.createTile("Furnace", this.getLevel().getChunk((int) (this.x) >> 4, (int) (this.z) >> 4), nbt));
             }
 
-            if(furnace.namedTag.contains("Lock") && furnace.namedTag.get("Lock") instanceof StringTag) {
-                if(furnace.namedTag.getString("Lock") != item.getCustomName()) {
+            if (furnace.namedTag.contains("Lock") && furnace.namedTag.get("Lock") instanceof StringTag) {
+                if (furnace.namedTag.getString("Lock") != item.getCustomName()) {
                     return true;
                 }
             }
 
-            if(player.isCreative()) {
+            if (player.isCreative()) {
                 return true;
             }
 
diff --git a/src/main/java/cn/nukkit/block/Fire.java b/src/main/java/cn/nukkit/block/Fire.java
index a1048b7700..fa47178a17 100755
--- a/src/main/java/cn/nukkit/block/Fire.java
+++ b/src/main/java/cn/nukkit/block/Fire.java
@@ -57,7 +57,7 @@ public boolean canBeReplaced() {
     public void onEntityCollide(Entity entity) {
         if (!entity.hasEffect(Effect.FIRE_RESISTANCE)) {
             EntityDamageByBlockEvent ev = new EntityDamageByBlockEvent(this, entity, EntityDamageEvent.CAUSE_FIRE, 1);
-            entity.attack(ev.getFinalDamage(), ev);
+            entity.attack(ev);
         }
 
         EntityCombustByBlockEvent ev = new EntityCombustByBlockEvent(this, entity, 8);
diff --git a/src/main/java/cn/nukkit/block/Furnace.java b/src/main/java/cn/nukkit/block/Furnace.java
index f22178bf03..842cdddfe5 100755
--- a/src/main/java/cn/nukkit/block/Furnace.java
+++ b/src/main/java/cn/nukkit/block/Furnace.java
@@ -4,7 +4,7 @@
  * author: Angelic47
  * Nukkit Project
  */
-public class Furnace extends BurningFurnace{
+public class Furnace extends BurningFurnace {
 
     public Furnace() {
         this(0);
diff --git a/src/main/java/cn/nukkit/block/Lava.java b/src/main/java/cn/nukkit/block/Lava.java
index e7da0afa84..71ef240860 100755
--- a/src/main/java/cn/nukkit/block/Lava.java
+++ b/src/main/java/cn/nukkit/block/Lava.java
@@ -43,7 +43,7 @@ public void onEntityCollide(Entity entity) {
         entity.fallDistance *= 0.5;
         if (!entity.hasEffect(Effect.FIRE_RESISTANCE)) {
             EntityDamageByBlockEvent ev = new EntityDamageByBlockEvent(this, entity, EntityDamageEvent.CAUSE_LAVA, 4);
-            entity.attack(ev.getFinalDamage(), ev);
+            entity.attack(ev);
         }
 
         EntityCombustByBlockEvent ev = new EntityCombustByBlockEvent(this, entity, 15);
diff --git a/src/main/java/cn/nukkit/entity/DroppedItem.java b/src/main/java/cn/nukkit/entity/DroppedItem.java
index 570221ac62..cc6ebd2a9c 100755
--- a/src/main/java/cn/nukkit/entity/DroppedItem.java
+++ b/src/main/java/cn/nukkit/entity/DroppedItem.java
@@ -75,13 +75,13 @@ protected void initEntity() {
     }
 
     @Override
-    public void attack(float damage, EntityDamageEvent source) {
+    public void attack(EntityDamageEvent source) {
         if (source.getCause() == EntityDamageEvent.CAUSE_VOID ||
                 source.getCause() == EntityDamageEvent.CAUSE_FIRE_TICK ||
                 source.getCause() == EntityDamageEvent.CAUSE_ENTITY_EXPLOSION ||
                 source.getCause() == EntityDamageEvent.CAUSE_BLOCK_EXPLOSION
                 ) {
-            super.attack(damage, source);
+            super.attack(source);
         }
     }
 
diff --git a/src/main/java/cn/nukkit/entity/Effect.java b/src/main/java/cn/nukkit/entity/Effect.java
index 6d8cb30e5a..3bbf3debcc 100755
--- a/src/main/java/cn/nukkit/entity/Effect.java
+++ b/src/main/java/cn/nukkit/entity/Effect.java
@@ -193,12 +193,12 @@ public void applyEffect(Entity entity) {
             case Effect.POISON: //POISON
                 if (entity.getHealth() > 1) {
                     ev = new EntityDamageEvent(entity, EntityDamageEvent.CAUSE_MAGIC, 1);
-                    entity.attack(((EntityDamageEvent) ev).getFinalDamage(), (EntityDamageEvent) ev);
+                    entity.attack((EntityDamageEvent) ev);
                 }
                 break;
             case Effect.WITHER: //WITHER
                 ev = new EntityDamageEvent(entity, EntityDamageEvent.CAUSE_MAGIC, 1);
-                entity.attack(((EntityDamageEvent) ev).getFinalDamage(), (EntityDamageEvent) ev);
+                entity.attack((EntityDamageEvent) ev);
                 break;
             case Effect.REGENERATION: //REGENERATION
                 if (entity.getHealth() < entity.getMaxHealth()) {
diff --git a/src/main/java/cn/nukkit/entity/FallingSand.java b/src/main/java/cn/nukkit/entity/FallingSand.java
index efb8f5761f..819c37b746 100755
--- a/src/main/java/cn/nukkit/entity/FallingSand.java
+++ b/src/main/java/cn/nukkit/entity/FallingSand.java
@@ -57,6 +57,7 @@ public FallingSand(FullChunk chunk, CompoundTag nbt) {
         super(chunk, nbt);
     }
 
+    @Override
     protected void initEntity() {
         super.initEntity();
 
@@ -84,12 +85,14 @@ public boolean canCollideWith(Entity entity) {
         return false;
     }
 
-    public void attack(float damage, EntityDamageEvent source) {
+    @Override
+    public void attack(EntityDamageEvent source) {
         if (source.getCause() == EntityDamageEvent.CAUSE_VOID) {
-            super.attack(damage, source);
+            super.attack(source);
         }
     }
 
+    @Override
     public boolean onUpdate(int currentTick) {
 
         if (closed) {
@@ -164,11 +167,13 @@ public int getNetworkId() {
         return NETWORK_ID;
     }
 
+    @Override
     public void saveNBT() {
         namedTag.putInt("TileID", blockId);
         namedTag.putByte("Data", (byte) damage);
     }
 
+    @Override
     public void spawnTo(Player player) {
         AddEntityPacket packet = new AddEntityPacket();
         packet.type = FallingSand.NETWORK_ID;
diff --git a/src/main/java/cn/nukkit/entity/Living.java b/src/main/java/cn/nukkit/entity/Living.java
index 6009be5bef..8645c8be53 100755
--- a/src/main/java/cn/nukkit/entity/Living.java
+++ b/src/main/java/cn/nukkit/entity/Living.java
@@ -183,7 +183,7 @@ public boolean entityBaseTick(int tickDiff) {
             if (this.isInsideOfSolid()) {
                 hasUpdate = true;
                 EntityDamageEvent ev = new EntityDamageEvent(this, EntityDamageEvent.CAUSE_SUFFOCATION, 1);
-                this.attack( ev);
+                this.attack(ev);
             }
 
             if (!this.hasEffect(Effect.WATER_BREATHING) && this.isInsideOfWater()) {
diff --git a/src/main/java/cn/nukkit/entity/PrimedTNT.java b/src/main/java/cn/nukkit/entity/PrimedTNT.java
index a88f962611..3990983e1c 100755
--- a/src/main/java/cn/nukkit/entity/PrimedTNT.java
+++ b/src/main/java/cn/nukkit/entity/PrimedTNT.java
@@ -56,9 +56,10 @@ public int getNetworkId() {
         return NETWORK_ID;
     }
 
-    public void attack(float damage, EntityDamageEvent source) {
+    @Override
+    public void attack(EntityDamageEvent source) {
         if (source.getCause() == EntityDamageEvent.CAUSE_VOID) {
-            super.attack(damage, source);
+            super.attack(source);
         }
     }
 
diff --git a/src/main/java/cn/nukkit/entity/Projectile.java b/src/main/java/cn/nukkit/entity/Projectile.java
index d65fd2f3e7..4f86442fba 100755
--- a/src/main/java/cn/nukkit/entity/Projectile.java
+++ b/src/main/java/cn/nukkit/entity/Projectile.java
@@ -38,10 +38,9 @@ public Projectile(FullChunk chunk, CompoundTag nbt, Entity shootingEntity) {
         }
     }
 
-    @Override
-    public void attack(float damage, EntityDamageEvent source) {
+    public void attack(EntityDamageEvent source) {
         if (source.getCause() == EntityDamageEvent.CAUSE_VOID) {
-            super.attack(damage, source);
+            super.attack(source);
         }
     }
 
@@ -142,7 +141,7 @@ public boolean onUpdate(int currentTick) {
                         ev = new EntityDamageByChildEntityEvent(this.shootingEntity, this, movingObjectPosition.entityHit, EntityDamageEvent.CAUSE_PROJECTILE, (float) damage);
                     }
 
-                    movingObjectPosition.entityHit.attack(ev.getFinalDamage(), ev);
+                    movingObjectPosition.entityHit.attack(ev);
 
                     this.hadCollision = true;
 
diff --git a/src/main/java/cn/nukkit/level/Explosion.java b/src/main/java/cn/nukkit/level/Explosion.java
index 7629728b24..3f314de650 100755
--- a/src/main/java/cn/nukkit/level/Explosion.java
+++ b/src/main/java/cn/nukkit/level/Explosion.java
@@ -151,13 +151,13 @@ public boolean explodeB() {
 
                 if (this.what instanceof Entity) {
                     EntityDamageByEntityEvent ev = new EntityDamageByEntityEvent((Entity) this.what, entity, EntityDamageEvent.CAUSE_ENTITY_EXPLOSION, damage);
-                    entity.attack(ev.getFinalDamage(), ev);
+                    entity.attack(ev);
                 } else if (this.what instanceof Block) {
                     EntityDamageByBlockEvent ev = new EntityDamageByBlockEvent((Block) this.what, entity, EntityDamageEvent.CAUSE_BLOCK_EXPLOSION, damage);
-                    entity.attack(ev.getFinalDamage(), ev);
+                    entity.attack(ev);
                 } else {
                     EntityDamageEvent ev = new EntityDamageEvent(entity, EntityDamageEvent.CAUSE_BLOCK_EXPLOSION, damage);
-                    entity.attack(ev.getFinalDamage(), ev);
+                    entity.attack(ev);
                 }
 
                 entity.setMotion(motion.multiply(impact));
diff --git a/src/main/java/cn/nukkit/level/generator/task/PopulationTask.java b/src/main/java/cn/nukkit/level/generator/task/PopulationTask.java
index 2a60699b5b..160d72963f 100755
--- a/src/main/java/cn/nukkit/level/generator/task/PopulationTask.java
+++ b/src/main/java/cn/nukkit/level/generator/task/PopulationTask.java
@@ -48,7 +48,7 @@ public void onRun() {
 
         synchronized (manager) {
             synchronized (generator) {
-                synchronized (generator.getChunkManager()){
+                synchronized (generator.getChunkManager()) {
                     BaseFullChunk[] chunks = new BaseFullChunk[9];
 
                     BaseFullChunk chunk = this.chunk.clone();
diff --git a/src/main/java/cn/nukkit/tile/Chest.java b/src/main/java/cn/nukkit/tile/Chest.java
index 84b9b8a05e..213ab7373c 100755
--- a/src/main/java/cn/nukkit/tile/Chest.java
+++ b/src/main/java/cn/nukkit/tile/Chest.java
@@ -128,7 +128,7 @@ protected void checkPairing() {
             }
 
             if (this.doubleInventory == null) {
-                if ((pair.x + (pair.z << 15)) > (this.x + (this.z << 15))) { //Order them correctly
+                if ((pair.x + ((int) pair.z << 15)) > (this.x + ((int) this.z << 15))) { //Order them correctly
                     this.doubleInventory = new DoubleChestInventory(pair, this);
                 } else {
                     this.doubleInventory = new DoubleChestInventory(this, pair);
@@ -191,10 +191,10 @@ public boolean pairWith(Chest tile) {
     }
 
     public void createPair(Chest tile) {
-        this.namedTag.putInt("pairx", tile.x);
-        this.namedTag.putInt("pairz", tile.z);
-        tile.namedTag.putInt("pairx", this.x);
-        tile.namedTag.putInt("pairz", this.z);
+        this.namedTag.putInt("pairx", (int) tile.x);
+        this.namedTag.putInt("pairz", (int) tile.z);
+        tile.namedTag.putInt("pairx", (int) this.x);
+        tile.namedTag.putInt("pairz", (int) this.z);
     }
 
     public boolean unpair() {
@@ -226,17 +226,17 @@ public CompoundTag getSpawnCompound() {
         if (this.isPaired()) {
             c = new CompoundTag()
                     .putString("id", Tile.CHEST)
-                    .putInt("x", this.x)
-                    .putInt("y", this.y)
-                    .putInt("z", this.z)
+                    .putInt("x", (int) this.x)
+                    .putInt("y", (int) this.y)
+                    .putInt("z", (int) this.z)
                     .putInt("pairx", this.namedTag.getInt("pairx"))
                     .putInt("pairz", this.namedTag.getInt("pairz"));
         } else {
             c = new CompoundTag()
                     .putString("id", Tile.CHEST)
-                    .putInt("x", this.x)
-                    .putInt("y", this.y)
-                    .putInt("z", this.z);
+                    .putInt("x", (int) this.x)
+                    .putInt("y", (int) this.y)
+                    .putInt("z", (int) this.z);
         }
 
         if (this.hasName()) {
diff --git a/src/main/java/cn/nukkit/tile/EnchantTable.java b/src/main/java/cn/nukkit/tile/EnchantTable.java
index 8a71471f62..a61e862f0f 100755
--- a/src/main/java/cn/nukkit/tile/EnchantTable.java
+++ b/src/main/java/cn/nukkit/tile/EnchantTable.java
@@ -37,9 +37,9 @@ public void setName(String name) {
     public CompoundTag getSpawnCompound() {
         CompoundTag c = new CompoundTag()
                 .putString("id", Tile.ENCHANT_TABLE)
-                .putInt("x", this.x)
-                .putInt("y", this.y)
-                .putInt("z", this.z);
+                .putInt("x", (int) this.x)
+                .putInt("y", (int) this.y)
+                .putInt("z", (int) this.z);
 
         if (this.hasName()) {
             c.put("CustomName", this.namedTag.get("CustomName"));
diff --git a/src/main/java/cn/nukkit/tile/Sign.java b/src/main/java/cn/nukkit/tile/Sign.java
index 29ebc7a9ec..55f464434c 100755
--- a/src/main/java/cn/nukkit/tile/Sign.java
+++ b/src/main/java/cn/nukkit/tile/Sign.java
@@ -80,9 +80,9 @@ public CompoundTag getSpawnCompound() {
                 .put("Text2", this.namedTag.get("Text2"))
                 .put("Text3", this.namedTag.get("Text3"))
                 .put("Text4", this.namedTag.get("Text4"))
-                .putInt("x", this.x)
-                .putInt("y", this.y)
-                .putInt("z", this.z);
+                .putInt("x", (int) this.x)
+                .putInt("y", (int) this.y)
+                .putInt("z", (int) this.z);
 
     }
 }
diff --git a/src/main/java/cn/nukkit/tile/Spawnable.java b/src/main/java/cn/nukkit/tile/Spawnable.java
index b2f45f6188..b3bb79b71b 100755
--- a/src/main/java/cn/nukkit/tile/Spawnable.java
+++ b/src/main/java/cn/nukkit/tile/Spawnable.java
@@ -28,9 +28,9 @@ public void spawnTo(Player player) {
 
         CompoundTag tag = this.getSpawnCompound();
         BlockEntityDataPacket pk = new BlockEntityDataPacket();
-        pk.x = this.x;
+        pk.x = (int) this.x;
         pk.y = (byte) this.y;
-        pk.z = this.z;
+        pk.z = (int) this.z;
         try {
             pk.namedTag = NBTIO.write(tag, ByteOrder.LITTLE_ENDIAN);
         } catch (IOException e) {
