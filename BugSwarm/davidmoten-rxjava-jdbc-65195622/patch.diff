diff --git a/src/test/java/com/github/davidmoten/rx/DynamicProxyTest.java b/src/test/java/com/github/davidmoten/rx/DynamicProxyTest.java
index 4532e003da..9779bf4c3b 100755
--- a/src/test/java/com/github/davidmoten/rx/DynamicProxyTest.java
+++ b/src/test/java/com/github/davidmoten/rx/DynamicProxyTest.java
@@ -34,6 +34,8 @@
     public static interface Thing {
         @Column("table_id")
         int id();
+        
+        int nonNullNumber();
 
         @Index(2)
         String name();
@@ -46,10 +48,16 @@
     public void testDynamicProxy() {
         Thing t = ProxyService.newInstance(Thing.class);
         assertEquals(123, t.id());
-        assertEquals("fred name", t.name());
+        assertEquals("fred 2", t.name());
         assertEquals("he's the business! desc", t.description());
     }
-
+    
+    @Test(expected=NullPointerException.class)
+    public void testDynamicProxyReturnsNullForNonNullMethod() {
+        Thing t = ProxyService.newInstance(Thing.class);
+        t.nonNullNumber();
+    }
+    
     public static class ProxyService implements java.lang.reflect.InvocationHandler {
 
         @SuppressWarnings("unchecked")
@@ -69,10 +77,12 @@ public Object invoke(Object proxy, Method m, Object[] args) throws Throwable {
             if (name.equals("id")) {
                 return 123;
             } else if (name.equals("name")) {
-                return "fred " + column;
+                return "fred " + m.getAnnotation(Index.class).value();
             } else if (name.equals("description")) {
                 return "he's the business! " + column;
-            } else
+            } else if (name.equals("nonNullNumber")) 
+               return null;
+            else
                 throw new RuntimeException("unexpected");
         }
     }
