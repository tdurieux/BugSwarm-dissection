diff --git a/java-squid/src/main/java/org/sonar/java/se/ExplodedGraphWalker.java b/java-squid/src/main/java/org/sonar/java/se/ExplodedGraphWalker.java
index f8e9b115a1..66d19b0055 100755
--- a/java-squid/src/main/java/org/sonar/java/se/ExplodedGraphWalker.java
+++ b/java-squid/src/main/java/org/sonar/java/se/ExplodedGraphWalker.java
@@ -249,7 +249,7 @@ public void enqueue(ExplodedGraph.ProgramPoint programPoint, ProgramState progra
   @CheckForNull
   public SymbolicValue getVal(Tree expression) {
     if(expression.is(Tree.Kind.NULL_LITERAL)) {
-      return new SymbolicValue.ObjectSymbolicValue(SymbolicValue.NullSymbolicValue.NULL);
+      return SymbolicValue.NULL_LITERAL;
     }
     if(expression.is(Tree.Kind.METHOD_INVOCATION)) {
       MethodInvocationTree mit = (MethodInvocationTree) expression;
diff --git a/java-squid/src/main/java/org/sonar/java/se/SymbolicValue.java b/java-squid/src/main/java/org/sonar/java/se/SymbolicValue.java
index 09d66216d2..046794af9c 100755
--- a/java-squid/src/main/java/org/sonar/java/se/SymbolicValue.java
+++ b/java-squid/src/main/java/org/sonar/java/se/SymbolicValue.java
@@ -31,6 +31,7 @@
     UNKNOWN
   }
 
+  public static final SymbolicValue NULL_LITERAL = new ObjectSymbolicValue(NullSymbolicValue.NULL);
   class ObjectSymbolicValue implements SymbolicValue {
     private final NullSymbolicValue value;
 
diff --git a/java-squid/src/test/java/org/sonar/java/se/ExplodedGraphWalkerTest.java b/java-squid/src/test/java/org/sonar/java/se/ExplodedGraphWalkerTest.java
index 8f980e6a85..e4e783f630 100755
--- a/java-squid/src/test/java/org/sonar/java/se/ExplodedGraphWalkerTest.java
+++ b/java-squid/src/test/java/org/sonar/java/se/ExplodedGraphWalkerTest.java
@@ -117,7 +117,7 @@ public void local_variable() throws Exception {
   public void test_null_pointer_check_unit_test() throws Exception {
     Pattern pattern = Pattern.compile("Null pointer dereference at line (\\d*)");
 
-    List<String> unitTestNPE = Files.readLines(new File("/home/benzonico/Development/SonarSource/sonar-java/java-checks/src/test/files/checks/NullPointerCheck.java"), Charsets.UTF_8);
+    List<String> unitTestNPE = Files.readLines(new File("../java-checks/src/test/files/checks/NullPointerCheck.java"), Charsets.UTF_8);
     List<Integer> expectedLines = Lists.newArrayList();
     int lineNb = 0;
     for (String line : unitTestNPE) {
