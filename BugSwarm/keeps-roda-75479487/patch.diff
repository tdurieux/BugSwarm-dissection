diff --git a/roda-cas/build.xml b/roda-cas/build.xml
new file mode 100755
index 0000000000..c307bbb238
--- /dev/null
+++ b/roda-cas/build.xml
@@ -0,0 +1,139 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+
+    Licensed to Jasig under one or more contributor license
+    agreements. See the NOTICE file distributed with this work
+    for additional information regarding copyright ownership.
+    Jasig licenses this file to you under the Apache License,
+    Version 2.0 (the "License"); you may not use this file
+    except in compliance with the License.  You may obtain a
+    copy of the License at the following location:
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing,
+    software distributed under the License is distributed on an
+    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+    KIND, either express or implied.  See the License for the
+    specific language governing permissions and limitations
+    under the License.
+
+-->
+<project name="cas" default="deploy" basedir=".">
+
+	<!-- ******************* PROPERTIES ************************* -->
+	<property environment="env" />
+	<property name="build.target.dir" value="target" />
+	
+	<property name="catalina.home" value="${env.CATALINA_HOME}" />
+	<property name="tomcat.log.patterns" value="**/*.log, **/*.txt" />
+	<taskdef resource="net/sf/antcontrib/antcontrib.properties" />
+	<property name="cas.resources.dir" value="/etc/cas" />
+	
+	<!-- ******************* MAVEN PROPERTIES******************** -->
+	<condition property="mavenExecutableFile" value="mvn.cmd" else="mvn">
+		<os family="windows" />
+	</condition>
+	<var name="mavenExecutable" value="${env.M2_HOME}\bin\${mavenExecutableFile}"/>
+	<available file="${mavenExecutable}"  property="maven.exec.exists" />
+
+	<if>
+		<not>
+			<isset property="${maven.exec.exists}" />
+		</not>
+		<then>
+			<var name="mavenExecutable" value="${env.MAVEN_HOME}\bin\${mavenExecutableFile}"/>
+			<available file="${mavenExecutable}"  property="maven.exec.exists" />
+		</then>
+	</if>
+	<fail unless="${maven.exec.exists}" message="Cannot determine the maven installation location through M2_HOME or MAVEN_HOME environment variables."/>
+		
+	<!-- ***************** TOMCAT PROPERTIES ******************** -->
+	<condition property="tomcatStartupFile" value="startup.bat" else="startup">
+		<os family="windows" />
+	</condition>
+	<property name="tomcatStartup" value="${catalina.home}\bin\${tomcatStartupFile}" />
+
+	<condition property="tomcatShutDownFile" value="shutdown.bat" else="shutdown">
+		<os family="windows" />
+	</condition>
+	<property name="tomcatShutDown" value="${catalina.home}\bin\${tomcatShutDownFile}" />
+	
+	<!-- ********************* TARGETS *************************** -->
+	<target name="cleanTomcatLogs" description="Clean tomcat log files">
+		<delete failonerror="false">
+			<fileset dir="${catalina.home}/logs" includes="${tomcat.log.patterns}" />
+			<fileset dir="${catalina.home}/bin" includes="${tomcat.log.patterns}" />
+			<fileset dir="${catalina.home}" includes="${tomcat.log.patterns}" />
+		</delete>
+	</target>
+
+	<target name="clean" description="Clean deployed artifacts and logs">
+		<delete file="${catalina.home}/webapps/${ant.project.name}.war" verbose="false" failonerror="true" />
+		<delete file="${catalina.home}\conf\Catalina\localhost\cas.xml" verbose="false" failonerror="true" />
+		<delete file="${catalina.home}/bin/${ant.project.name}.log" verbose="false" failonerror="true" />
+		
+		<delete dir="${catalina.home}/webapps/${ant.project.name}" verbose="false" includeemptydirs="true" failonerror="true" />
+		<delete file="${catalina.home}/webapps/cas-management.war" verbose="false" includeemptydirs="true" failonerror="true" />
+		<delete dir="${catalina.home}/webapps/cas-management" verbose="false" includeemptydirs="true" failonerror="true" />
+		<delete dir="/etc/cas/log" verbose="false" includeemptydirs="true" failonerror="true" />
+
+		<delete dir="${catalina.home}/work/Catalina" verbose="false" includeemptydirs="true"  failonerror="true"/>
+
+
+		<exec dir="${basedir}" executable="${mavenExecutable}">
+			<arg value="clean" />
+			<arg value="-Dmaven.test.skip=true" />
+		</exec>
+		<antcall target="cleanTomcatLogs" />
+	</target>
+
+	<target name="compile" description="Compile artifacts" depends="clean">
+		<exec dir="${basedir}" executable="${mavenExecutable}">
+      		<arg value="compile" />
+			<arg value="-Dmaven.test.skip=true" />
+		</exec>
+	</target>
+
+	<target name="test" description="Compile artifacts and run tests" depends="clean">
+		<exec dir="${basedir}" executable="${mavenExecutable}">
+			<arg value="test" />
+		</exec>
+	</target>
+
+	<target name="copy" description="Copy artifacts over to tomcat" depends="package">
+		<copy overwrite="true"
+		      todir="${catalina.home}\webapps"
+		      file="target/${ant.project.name}.war"
+			  verbose="true"
+		/>
+
+		<mkdir dir="${cas.resources.dir}" />
+		<copy overwrite="true" verbose="true" todir="${cas.resources.dir}" flatten="true">
+			<fileset dir="${basedir}/etc" includes="*.conf" />
+		</copy>
+		<copy overwrite="true" verbose="true" todir="${cas.resources.dir}" flatten="true">
+			<fileset dir="${basedir}/etc" includes="*.xml" />
+		</copy>
+		<copy overwrite="true" verbose="true" todir="${cas.resources.dir}" flatten="true">
+			<fileset dir="${basedir}/etc" includes="*.properties" />
+		</copy>
+
+	</target>
+
+	<target name="package" description="Package src artifacts and prepare for deployment" depends="clean">
+		<exec dir="${basedir}" executable="${mavenExecutable}">
+			<arg value="install" />
+			<arg value="-Dmaven.test.skip=true" />
+		</exec>
+	</target>
+
+
+	<target name="deploy" depends="copy" description="Clean, package and deploy artifacts" />
+
+	<target name="help" description="Prints instructions on how to run the build.">
+		<echo message="Use 'ant -projecthelp' to see all available commands" />
+	</target>
+
+</project>
+
diff --git a/roda-cas/pom.xml b/roda-cas/pom.xml
new file mode 100755
index 0000000000..e1733ca09f
--- /dev/null
+++ b/roda-cas/pom.xml
@@ -0,0 +1,73 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd ">
+    <modelVersion>4.0.0</modelVersion>
+    <groupId>net.unicon</groupId>
+    <artifactId>cas4</artifactId>
+    <packaging>war</packaging>
+    <version>1.0</version>
+
+    <build>
+        <plugins>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-war-plugin</artifactId>
+                <version>2.6</version>
+                <configuration>
+                    <warName>cas</warName>
+                    <overlays>
+                        <overlay>
+                            <groupId>org.jasig.cas</groupId>
+                            <artifactId>cas-server-webapp</artifactId>
+                            <!-- <excludes>
+                                <exclude>WEB-INF/cas.properties</exclude>
+                                <exclude>WEB-INF/classes/log4j.xml</exclude>
+                            </excludes>-->
+                        </overlay>
+                    </overlays>
+                </configuration>
+            </plugin>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-compiler-plugin</artifactId>
+                <version>3.2</version>
+            </plugin>
+
+        </plugins>
+        <finalName>cas</finalName>
+    </build>
+
+    <dependencies>
+        <dependency>
+            <groupId>org.jasig.cas</groupId>
+            <artifactId>cas-server-webapp</artifactId>
+            <version>${cas.version}</version>
+            <type>war</type>
+            <scope>runtime</scope>
+        </dependency>
+		<dependency>
+            <groupId>org.jasig.cas</groupId>
+            <artifactId>cas-server-support-ldap</artifactId>
+            <version>${cas.version}</version>
+        </dependency>
+    </dependencies>
+
+    <properties>
+        <cas.version>4.0.2</cas.version>
+        <maven.compiler.source>1.8</maven.compiler.source>
+        <maven.compiler.target>1.8</maven.compiler.target>
+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
+    </properties>
+
+    <repositories>
+        <repository>
+            <id>sonatype-releases</id>
+            <url>http://oss.sonatype.org/content/repositories/releases/</url>
+        </repository>
+        <repository>
+            <id>sonatype-snapshots</id>
+            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
+        </repository>
+    </repositories>
+</project>
diff --git a/roda-cas/src/main/webapp/WEB-INF/cas.properties b/roda-cas/src/main/webapp/WEB-INF/cas.properties
new file mode 100755
index 0000000000..9c4b2fddb5
--- /dev/null
+++ b/roda-cas/src/main/webapp/WEB-INF/cas.properties
@@ -0,0 +1,107 @@
+#
+# Licensed to Jasig under one or more contributor license
+# agreements. See the NOTICE file distributed with this work
+# for additional information regarding copyright ownership.
+# Jasig licenses this file to you under the Apache License,
+# Version 2.0 (the "License"); you may not use this file
+# except in compliance with the License.  You may obtain a
+# copy of the License at the following location:
+#
+#   http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing,
+# software distributed under the License is distributed on an
+# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+# KIND, either express or implied.  See the License for the
+# specific language governing permissions and limitations
+# under the License.
+#
+
+server.name=https://roda.fake.domain:8443
+server.prefix=${server.name}/cas
+# IP address or CIDR subnet allowed to access the /status URI of CAS that exposes health check information
+cas.securityContext.status.allowedSubnet=127.0.0.1
+
+
+cas.themeResolver.defaultThemeName=cas-theme-default
+cas.viewResolver.basename=default_views
+
+##
+# Unique CAS node name
+# host.name is used to generate unique Service Ticket IDs and SAMLArtifacts.  This is usually set to the specific
+# hostname of the machine running the CAS node, but it could be any label so long as it is unique in the cluster.
+host.name=roda.fake.domain
+
+##
+# Database flavors for Hibernate
+#
+# One of these is needed if you are storing Services or Tickets in an RDBMS via JPA.
+#
+# database.hibernate.dialect=org.hibernate.dialect.OracleDialect
+# database.hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect
+# database.hibernate.dialect=org.hibernate.dialect.HSQLDialect
+
+##
+# CAS Logout Behavior
+# WEB-INF/cas-servlet.xml
+#
+# Specify whether CAS should redirect to the specified service parameter on /logout requests
+# cas.logout.followServiceRedirects=false
+
+##
+# Single Sign-On Session Timeouts
+# Defaults sourced from WEB-INF/spring-configuration/ticketExpirationPolices.xml
+#
+# Maximum session timeout - TGT will expire in maxTimeToLiveInSeconds regardless of usage
+# tgt.maxTimeToLiveInSeconds=28800
+#
+# Idle session timeout -  TGT will expire sooner than maxTimeToLiveInSeconds if no further requests
+# for STs occur within timeToKillInSeconds
+# tgt.timeToKillInSeconds=7200
+
+##
+# Service Ticket Timeout
+# Default sourced from WEB-INF/spring-configuration/ticketExpirationPolices.xml
+#
+# Service Ticket timeout - typically kept short as a control against replay attacks, default is 10s.  You'll want to
+# increase this timeout if you are manually testing service ticket creation/validation via tamperdata or similar tools
+# st.timeToKillInSeconds=10
+
+##
+# Single Logout Out Callbacks
+# Default sourced from WEB-INF/spring-configuration/argumentExtractorsConfiguration.xml
+#
+# To turn off all back channel SLO requests set slo.disabled to true
+# slo.callbacks.disabled=false
+
+##
+# Service Registry Periodic Reloading Scheduler
+# Default sourced from WEB-INF/spring-configuration/applicationContext.xml
+#
+# Force a startup delay of 2 minutes.
+# service.registry.quartz.reloader.startDelay=120000
+#
+# Reload services every 2 minutes
+# service.registry.quartz.reloader.repeatInterval=120000
+
+##
+# Log4j
+# Default sourced from WEB-INF/spring-configuration/log4jConfiguration.xml:
+#
+# It is often time helpful to externalize log4j.xml to a system path to preserve settings between upgrades.
+# e.g. log4j.config.location=/etc/cas/log4j.xml
+#log4j.config.location=/etc/cas/log4j.xml
+# log4j refresh interval in millis
+log4j.refresh.interval=60000
+
+##
+# Password Policy
+#
+# Warn all users of expiration date regardless of warningDays value.
+password.policy.warnAll=false
+
+# Threshold number of days to begin displaying password expiration warnings.
+password.policy.warningDays=30
+
+# URL to which the user will be redirected to change the passsword.
+password.policy.url=https://password.example.edu/change
diff --git a/roda-cas/src/main/webapp/WEB-INF/classes/log4j.xml b/roda-cas/src/main/webapp/WEB-INF/classes/log4j.xml
new file mode 100755
index 0000000000..665969c5b6
--- /dev/null
+++ b/roda-cas/src/main/webapp/WEB-INF/classes/log4j.xml
@@ -0,0 +1,79 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE log4j:configuration SYSTEM "log4j.dtd">
+
+<log4j:configuration debug="false" xmlns:log4j="http://jakarta.apache.org/log4j/">
+    <!--
+      This default ConsoleAppender is used to log all NON perf4j messages
+      to System.out
+    -->
+    <appender name="console" class="org.apache.log4j.ConsoleAppender">
+        <layout class="org.apache.log4j.PatternLayout">
+            <param name="ConversionPattern" value="%d %p [%c] - &lt;%m&gt;%n"/>
+        </layout>
+    </appender>
+
+    <appender name="cas" class="org.apache.log4j.RollingFileAppender">
+        <param name="File" value="/var/log/cas/cas.log" />
+        <param name="MaxFileSize" value="512KB" />
+        <param name="MaxBackupIndex" value="3" />
+        <layout class="org.apache.log4j.PatternLayout">
+            <param name="ConversionPattern" value="%d %p [%c] - %m%n"/>
+        </layout>
+    </appender>
+
+    <!--
+        WARNING: Setting the org.springframework logger to DEBUG displays debug information about
+        the request parameter values being bound to the command objects.  This could expose your
+        password in the log file.  If you are sharing your log files, it is recommend you selectively
+        apply DEBUG level logging on a an org.springframework.* package level (i.e. org.springframework.dao)
+    -->
+    <logger name="org.springframework">
+        <level value="WARN" />
+    </logger>
+
+    <logger name="org.springframework.webflow">
+        <level value="WARN" />
+    </logger>
+
+    <logger name="org.jasig" additivity="true">
+        <level value="DEBUG" />
+        <appender-ref ref="cas" />
+    </logger>
+
+    <logger name="net.unicon.cas" additivity="true">
+        <level value="DEBUG" />
+        <appender-ref ref="cas" />
+    </logger>
+
+    <logger name="com.github.inspektr.audit.support.Slf4jLoggingAuditTrailManager">
+        <level value="INFO" />
+        <appender-ref ref="cas" />
+    </logger>
+
+    <!--
+        WARNING: Setting the flow package to DEBUG will display
+        the parameters posted to the login servlet including
+        cleartext authentication credentials
+    -->
+    <logger name="org.jasig.cas.web.flow" additivity="true">
+        <level value="INFO" />
+        <appender-ref ref="cas" />
+    </logger>
+
+    <logger name="org.opensaml">
+        <level value="OFF" />
+    </logger>
+
+    <logger name="org.apache.xml">
+        <level value="OFF" />
+    </logger>
+
+    <!--
+      The root logger sends all log statements EXCEPT those sent to the perf4j
+      logger to System.out.
+    -->
+    <root>
+        <level value="DEBUG" />
+        <appender-ref ref="console" />
+    </root>
+</log4j:configuration>
diff --git a/roda-cas/src/main/webapp/WEB-INF/deployerConfigContext.xml b/roda-cas/src/main/webapp/WEB-INF/deployerConfigContext.xml
new file mode 100755
index 0000000000..9baed5e1a1
--- /dev/null
+++ b/roda-cas/src/main/webapp/WEB-INF/deployerConfigContext.xml
@@ -0,0 +1,326 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!-- Licensed to Jasig under one or more contributor license agreements. 
+	See the NOTICE file distributed with this work for additional information 
+	regarding copyright ownership. Jasig licenses this file to you under the 
+	Apache License, Version 2.0 (the "License"); you may not use this file except 
+	in compliance with the License. You may obtain a copy of the License at the 
+	following location: http://www.apache.org/licenses/LICENSE-2.0 Unless required 
+	by applicable law or agreed to in writing, software distributed under the 
+	License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
+	OF ANY KIND, either express or implied. See the License for the specific 
+	language governing permissions and limitations under the License. -->
+<!-- | deployerConfigContext.xml centralizes into one file some of the declarative 
+	configuration that | all CAS deployers will need to modify. | | This file 
+	declares some of the Spring-managed JavaBeans that make up a CAS deployment. 
+	| The beans declared in this file are instantiated at context initialization 
+	time by the Spring | ContextLoaderListener declared in web.xml. It finds 
+	this file because this | file is among those declared in the context parameter 
+	"contextConfigLocation". | | By far the most common change you will need 
+	to make in this file is to change the last bean | declaration to replace 
+	the default authentication handler with | one implementing your approach 
+	for authenticating usernames and passwords. + -->
+
+<beans xmlns="http://www.springframework.org/schema/beans"
+
+	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
+
+	xmlns:c="http://www.springframework.org/schema/c" xmlns:tx="http://www.springframework.org/schema/tx"
+
+	xmlns:util="http://www.springframework.org/schema/util" xmlns:sec="http://www.springframework.org/schema/security"
+
+	xsi:schemaLocation="http://www.springframework.org/schema/beans
+
+    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
+
+           http://www.springframework.org/schema/tx
+
+    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
+
+           http://www.springframework.org/schema/security
+
+    http://www.springframework.org/schema/security/spring-security-3.2.xsd
+
+           http://www.springframework.org/schema/util
+
+    http://www.springframework.org/schema/util/spring-util.xsd">
+
+
+	<bean id="authenticationManager"
+		class="org.jasig.cas.authentication.PolicyBasedAuthenticationManager">
+
+		<constructor-arg>
+
+			<map>
+
+				<entry key-ref="ldapAuthenticationHandler" value-ref="usernamePasswordCredentialsResolver" />
+
+			</map>
+
+		</constructor-arg>
+
+	</bean>
+
+	<bean id="ldapAuthenticationHandler" class="org.jasig.cas.authentication.LdapAuthenticationHandler"
+
+		p:principalIdAttribute="uid">
+
+		<constructor-arg ref="authenticator" />
+
+		<property name="principalAttributeMap">
+
+			<map>
+
+				<entry key="mail" value="mail" />
+
+				<entry key="cn" value="cn" />
+
+			</map>
+
+		</property>
+
+	</bean>
+
+
+	<bean id="authenticator" class="org.ldaptive.auth.Authenticator"
+
+		c:resolver-ref="pooledSearchDnResolver" c:handler-ref="pooledBindHandler" />
+
+	<!-- CHANGE -->
+	<bean id="connectionConfig" class="org.ldaptive.ConnectionConfig"
+
+		p:ldapUrl="ldap://localhost:10389" p:connectTimeout="3000"
+
+		p:useStartTLS="false" p:connectionInitializer-ref="bindConnectionInitializer" />
+
+
+	<bean id="bindConnectionInitializer" class="org.ldaptive.BindConnectionInitializer"
+
+		p:bindDn="uid=admin,ou=system"> <!-- CHANGE -->
+
+		<property name="bindCredential">
+
+			<bean class="org.ldaptive.Credential" c:password="secret" /> <!-- CHANGE -->
+
+		</property>
+
+	</bean>
+
+
+	<bean id="ldapPoolConfig" class="org.ldaptive.pool.PoolConfig"
+
+		p:minPoolSize="3" p:maxPoolSize="10" p:validateOnCheckOut="true"
+
+		p:validatePeriodically="false" p:validatePeriod="300" />
+
+
+	<bean id="pruneStrategy" class="org.ldaptive.pool.IdlePruneStrategy"
+
+		p:prunePeriod="300" p:idleTime="600" />
+
+
+	<bean id="searchValidator" class="org.ldaptive.pool.SearchValidator" />
+
+
+	<bean id="connectionPool" class="org.ldaptive.pool.BlockingConnectionPool"
+
+		init-method="initialize" p:poolConfig-ref="ldapPoolConfig"
+
+		p:blockWaitTime="3000" p:validator-ref="searchValidator"
+
+		p:pruneStrategy-ref="pruneStrategy" p:connectionFactory-ref="connectionFactory" />
+
+	<!-- CHANGE -->
+	<bean id="pooledSearchDnResolver" class="org.ldaptive.auth.PooledSearchDnResolver"
+
+		p:baseDn="dc=keep,dc=pt" p:subtreeSearch="true" p:allowMultipleDns="false"
+
+		p:connectionFactory-ref="pooledConnectionFactory" p:userFilter="uid={user}" />
+
+
+	<bean id="pooledBindHandler" class="org.ldaptive.auth.PooledBindAuthenticationHandler"
+
+		p:connectionFactory-ref="pooledConnectionFactory" />
+
+
+	<bean id="connectionFactory" class="org.ldaptive.DefaultConnectionFactory"
+
+		p:connectionConfig-ref="connectionConfig" />
+
+
+	<bean id="pooledConnectionFactory" class="org.ldaptive.pool.PooledConnectionFactory"
+
+		p:connectionPool-ref="connectionPool" />
+
+
+	<!-- | Credential-to-principal resolver beans -->
+
+	<bean id="usernamePasswordCredentialsResolver"
+
+
+		class="org.jasig.cas.authentication.principal.BasicPrincipalResolver" />
+
+
+	<bean id="httpBasedCredentialsResolver"
+
+
+		class="org.jasig.cas.authentication.principal.BasicPrincipalResolver" />
+
+
+	<!-- Required for proxy ticket mechanism. -->
+
+	<bean id="proxyAuthenticationHandler"
+
+
+		class="org.jasig.cas.authentication.handler.support.HttpBasedServiceCredentialsAuthenticationHandler"
+
+		p:httpClient-ref="httpClient" />
+
+	<bean id="primaryAuthenticationHandler"
+
+		class="org.jasig.cas.authentication.AcceptUsersAuthenticationHandler">
+
+		<property name="users">
+
+			<map>
+
+				<entry key="casuser" value="Mellon" />
+
+			</map>
+
+		</property>
+
+	</bean>
+
+	<!-- Required for proxy ticket mechanism -->
+
+	<bean id="proxyPrincipalResolver"
+
+		class="org.jasig.cas.authentication.principal.BasicPrincipalResolver" />
+
+	<!-- | Resolves a principal from a credential using an attribute repository 
+		that is configured to resolve | against a deployer-specific store (e.g. LDAP). -->
+
+	<bean id="primaryPrincipalResolver"
+
+
+		class="org.jasig.cas.authentication.principal.PersonDirectoryPrincipalResolver">
+
+		<property name="attributeRepository" ref="attributeRepository" />
+
+	</bean>
+
+	<!-- Bean that defines the attributes that a service may return. This example 
+		uses the Stub/Mock version. A real implementation may go against a database 
+		or LDAP server. The id should remain "attributeRepository" though. + -->
+
+	<bean id="attributeRepository"
+
+		class="org.jasig.services.persondir.support.StubPersonAttributeDao"
+
+		p:backingMap-ref="attrRepoBackingMap" />
+
+
+	<util:map id="attrRepoBackingMap">
+
+		<entry key="uid" value="uid" />
+
+		<entry key="eduPersonAffiliation" value="eduPersonAffiliation" />
+
+		<entry key="groupMembership" value="groupMembership" />
+
+	</util:map>
+
+	<!-- Sample, in-memory data store for the ServiceRegistry. A real implementation 
+		would probably want to replace this with the JPA-backed ServiceRegistry DAO 
+		The name of this bean should remain "serviceRegistryDao". + -->
+
+	<!-- <bean id="serviceRegistryDao" class="org.jasig.cas.services.InMemoryServiceRegistryDaoImpl"
+
+		p:registeredServices-ref="registeredServicesList" />-->
+		
+	<bean id="serviceRegistryDao" class="org.jasig.cas.services.InMemoryServiceRegistryDaoImpl">
+		<property name="registeredServices">
+			<list>
+				<bean class="org.jasig.cas.services.RegisteredServiceImpl">
+                 			<property name="id" value="0" />
+					<property name="name" value="HTTP" />
+					<property name="description" value="Only Allows HTTP Urls" />
+					<property name="serviceId" value="http://**" />
+					<property name="evaluationOrder" value="10000001" />
+					<property name="ignoreAttributes" value="true" />
+					<property name="allowedToProxy" value="true" />
+					<property name="enabled" value="true" />
+					<property name="ssoEnabled" value="true" />
+					<property name="anonymousAccess" value="false" />
+				</bean>
+
+				<bean class="org.jasig.cas.services.RegisteredServiceImpl">
+					<property name="id" value="1" />
+					<property name="name" value="HTTPS" />
+					<property name="description" value="Only Allows HTTPS Urls" />
+					<property name="serviceId" value="https://**" />
+					<property name="evaluationOrder" value="10000002" />
+					<property name="ignoreAttributes" value="true" />
+					<property name="allowedToProxy" value="true" />
+					<property name="enabled" value="true" />
+					<property name="ssoEnabled" value="true" />
+					<property name="anonymousAccess" value="false" />
+				</bean>
+			</list>
+		</property>
+	</bean>
+
+	<util:list id="registeredServicesList">
+
+		<bean class="org.jasig.cas.services.RegexRegisteredService" p:id="0"
+			p:name="HTTP and IMAP" p:description="Allows HTTP(S)
+
+    and IMAP(S) protocols"
+
+			p:serviceId="^(https?|imaps?)://.*" p:evaluationOrder="10000001" />
+
+		<!-- Use the following definition instead of the above to further restrict 
+			access to services within your domain (including sub domains). Note that 
+			example.com must be replaced with the domain you wish to permit. This example 
+			also demonstrates the configuration of an attribute filter that only allows 
+			for attributes whose length is 3. -->
+
+		<!-- <bean class="org.jasig.cas.services.RegexRegisteredService"> <property 
+			name="id" value="1" /> <property name="name" value="HTTP and IMAP on example.com" 
+			/> <property name="description" value="Allows HTTP(S) and IMAP(S) protocols 
+			on example.com" /> <property name="serviceId" value="^(https?|imaps?)://([A-Za-z0-9_-]+\.)*example\.com/.*" 
+			/> <property name="evaluationOrder" value="0" /> <property name="attributeFilter"> 
+			<bean class="org.jasig.cas.services.support.RegisteredServiceRegexAttributeFilter" 
+			c:regex="^\w{3}$" /> </property> </bean> -->
+
+	</util:list>
+
+
+	<bean id="auditTrailManager"
+
+		class="com.github.inspektr.audit.support.Slf4jLoggingAuditTrailManager" />
+
+
+	<bean id="healthCheckMonitor" class="org.jasig.cas.monitor.HealthCheckMonitor"
+
+		p:monitors-ref="monitorsList" />
+
+
+	<util:list id="monitorsList">
+
+		<bean class="org.jasig.cas.monitor.MemoryMonitor"
+
+			p:freeMemoryWarnThreshold="10" />
+
+		<!-- NOTE The following ticket registries support SessionMonitor: * DefaultTicketRegistry 
+			* JpaTicketRegistry Remove this monitor if you use an unsupported registry. -->
+
+		<bean class="org.jasig.cas.monitor.SessionMonitor"
+
+			p:ticketRegistry-ref="ticketRegistry"
+
+			p:serviceTicketCountWarnThreshold="5000" p:sessionCountWarnThreshold="100000" />
+
+	</util:list>
+
+</beans>
diff --git a/roda-cas/src/main/webapp/WEB-INF/log4j.xml b/roda-cas/src/main/webapp/WEB-INF/log4j.xml
new file mode 100755
index 0000000000..665969c5b6
--- /dev/null
+++ b/roda-cas/src/main/webapp/WEB-INF/log4j.xml
@@ -0,0 +1,79 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE log4j:configuration SYSTEM "log4j.dtd">
+
+<log4j:configuration debug="false" xmlns:log4j="http://jakarta.apache.org/log4j/">
+    <!--
+      This default ConsoleAppender is used to log all NON perf4j messages
+      to System.out
+    -->
+    <appender name="console" class="org.apache.log4j.ConsoleAppender">
+        <layout class="org.apache.log4j.PatternLayout">
+            <param name="ConversionPattern" value="%d %p [%c] - &lt;%m&gt;%n"/>
+        </layout>
+    </appender>
+
+    <appender name="cas" class="org.apache.log4j.RollingFileAppender">
+        <param name="File" value="/var/log/cas/cas.log" />
+        <param name="MaxFileSize" value="512KB" />
+        <param name="MaxBackupIndex" value="3" />
+        <layout class="org.apache.log4j.PatternLayout">
+            <param name="ConversionPattern" value="%d %p [%c] - %m%n"/>
+        </layout>
+    </appender>
+
+    <!--
+        WARNING: Setting the org.springframework logger to DEBUG displays debug information about
+        the request parameter values being bound to the command objects.  This could expose your
+        password in the log file.  If you are sharing your log files, it is recommend you selectively
+        apply DEBUG level logging on a an org.springframework.* package level (i.e. org.springframework.dao)
+    -->
+    <logger name="org.springframework">
+        <level value="WARN" />
+    </logger>
+
+    <logger name="org.springframework.webflow">
+        <level value="WARN" />
+    </logger>
+
+    <logger name="org.jasig" additivity="true">
+        <level value="DEBUG" />
+        <appender-ref ref="cas" />
+    </logger>
+
+    <logger name="net.unicon.cas" additivity="true">
+        <level value="DEBUG" />
+        <appender-ref ref="cas" />
+    </logger>
+
+    <logger name="com.github.inspektr.audit.support.Slf4jLoggingAuditTrailManager">
+        <level value="INFO" />
+        <appender-ref ref="cas" />
+    </logger>
+
+    <!--
+        WARNING: Setting the flow package to DEBUG will display
+        the parameters posted to the login servlet including
+        cleartext authentication credentials
+    -->
+    <logger name="org.jasig.cas.web.flow" additivity="true">
+        <level value="INFO" />
+        <appender-ref ref="cas" />
+    </logger>
+
+    <logger name="org.opensaml">
+        <level value="OFF" />
+    </logger>
+
+    <logger name="org.apache.xml">
+        <level value="OFF" />
+    </logger>
+
+    <!--
+      The root logger sends all log statements EXCEPT those sent to the perf4j
+      logger to System.out.
+    -->
+    <root>
+        <level value="DEBUG" />
+        <appender-ref ref="console" />
+    </root>
+</log4j:configuration>
diff --git a/roda-cas/src/main/webapp/WEB-INF/spring-configuration/log4jConfiguration.xml b/roda-cas/src/main/webapp/WEB-INF/spring-configuration/log4jConfiguration.xml
new file mode 100755
index 0000000000..6a72a5c3dd
--- /dev/null
+++ b/roda-cas/src/main/webapp/WEB-INF/spring-configuration/log4jConfiguration.xml
@@ -0,0 +1,44 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+
+    Licensed to Jasig under one or more contributor license
+    agreements. See the NOTICE file distributed with this work
+    for additional information regarding copyright ownership.
+    Jasig licenses this file to you under the Apache License,
+    Version 2.0 (the "License"); you may not use this file
+    except in compliance with the License.  You may obtain a
+    copy of the License at the following location:
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing,
+    software distributed under the License is distributed on an
+    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+    KIND, either express or implied.  See the License for the
+    specific language governing permissions and limitations
+    under the License.
+
+-->
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
+
+    <description>
+        Log4J initialization.  Configuration options are sourced from cas.properties.  This allows deployers to externalize
+        both cas.properties and log4j.xml, so that a single cas.war file can be deployed to multiple tiers or hosts without
+        having to do any post configuration.  This approach helps to preserve configuration between upgrades.
+
+        Deployers should not have to edit this file.
+    </description>
+
+    <bean id="log4jInitialization" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean"
+        p:targetClass="org.springframework.util.Log4jConfigurer" p:targetMethod="initLogging" p:arguments-ref="arguments"/>
+    
+    <util:list id="arguments">
+       <value>${log4j.config.location:classpath:log4j.xml}</value>
+       <value>${log4j.refresh.interval:60000}</value>
+    </util:list>
+</beans>
