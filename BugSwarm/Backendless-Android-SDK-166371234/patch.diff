diff --git a/build.gradle b/build.gradle
index bb91f2d913..1cd0f43d74 100755
--- a/build.gradle
+++ b/build.gradle
@@ -5,7 +5,7 @@ apply plugin: 'signing'
 
 
 group 'com.backendless'
-version '3.0.21-snapshot'
+version '3.0.23-snapshot'
 archivesBaseName='backendless'
 
 
@@ -212,7 +212,7 @@ dependencies {
     compile( group: "com.backendless", name: "commons", version: "3.0.21", changing: true) {
         exclude group: 'com.fasterxml.jackson.core'
     }
-    compile( group: "weborb", name: "weborbclient", version: "5.1.0.206", changing: true)
+    compile( group: "weborb", name: "weborbclient", version: "5.1.0.208", changing: true)
 
 }
 apply plugin: 'java'
diff --git a/out/backendless.jar b/out/backendless.jar
index a92c049f88..c515afd899 100755
Binary files a/out/backendless.jar and b/out/backendless.jar differ
diff --git a/samples/DataService/tododemo/libs/backendless.jar b/samples/DataService/tododemo/libs/backendless.jar
index a92c049f88..c515afd899 100755
Binary files a/samples/DataService/tododemo/libs/backendless.jar and b/samples/DataService/tododemo/libs/backendless.jar differ
diff --git a/samples/EndlessMatchMaker/libs/backendless.jar b/samples/EndlessMatchMaker/libs/backendless.jar
index a92c049f88..c515afd899 100755
Binary files a/samples/EndlessMatchMaker/libs/backendless.jar and b/samples/EndlessMatchMaker/libs/backendless.jar differ
diff --git a/samples/EndlessTagging/libs/backendless.jar b/samples/EndlessTagging/libs/backendless.jar
index a92c049f88..c515afd899 100755
Binary files a/samples/EndlessTagging/libs/backendless.jar and b/samples/EndlessTagging/libs/backendless.jar differ
diff --git a/samples/FenceDemo/libs/backendless.jar b/samples/FenceDemo/libs/backendless.jar
index a92c049f88..c515afd899 100755
Binary files a/samples/FenceDemo/libs/backendless.jar and b/samples/FenceDemo/libs/backendless.jar differ
diff --git a/samples/GeoService/geodemo/libs/backendless.jar b/samples/GeoService/geodemo/libs/backendless.jar
index a92c049f88..c515afd899 100755
Binary files a/samples/GeoService/geodemo/libs/backendless.jar and b/samples/GeoService/geodemo/libs/backendless.jar differ
diff --git a/samples/MessagingService/pubsubdemo/libs/backendless.jar b/samples/MessagingService/pubsubdemo/libs/backendless.jar
index a92c049f88..c515afd899 100755
Binary files a/samples/MessagingService/pubsubdemo/libs/backendless.jar and b/samples/MessagingService/pubsubdemo/libs/backendless.jar differ
diff --git a/samples/UserService/FacebookSDKSamples/login/libs/backendless.jar b/samples/UserService/FacebookSDKSamples/login/libs/backendless.jar
index a92c049f88..c515afd899 100755
Binary files a/samples/UserService/FacebookSDKSamples/login/libs/backendless.jar and b/samples/UserService/FacebookSDKSamples/login/libs/backendless.jar differ
diff --git a/samples/UserService/rolesdemo/libs/backendless.jar b/samples/UserService/rolesdemo/libs/backendless.jar
index a92c049f88..c515afd899 100755
Binary files a/samples/UserService/rolesdemo/libs/backendless.jar and b/samples/UserService/rolesdemo/libs/backendless.jar differ
diff --git a/samples/UserService/userservicedemo/libs/backendless.jar b/samples/UserService/userservicedemo/libs/backendless.jar
index a92c049f88..c515afd899 100755
Binary files a/samples/UserService/userservicedemo/libs/backendless.jar and b/samples/UserService/userservicedemo/libs/backendless.jar differ
diff --git a/src/com/backendless/push/BackendlessPushService.java b/src/com/backendless/push/BackendlessPushService.java
index 536fb3042d..82e6c778a6 100755
--- a/src/com/backendless/push/BackendlessPushService.java
+++ b/src/com/backendless/push/BackendlessPushService.java
@@ -21,6 +21,8 @@
 
 public class BackendlessPushService extends IntentService implements PushReceiverCallback
 {
+  public static final String DEFAULT_SOUND_FLAG = "DEFAULT";
+
   static final String TAG = "com.backendless.push.BackendlessPushService";
   private static final Random random = new Random();
 
@@ -146,21 +148,23 @@ private void handleMessage( final Context context, Intent intent )
 
           Intent notificationIntent = context.getPackageManager().getLaunchIntentForPackage( context.getApplicationInfo().packageName );
           PendingIntent contentIntent = PendingIntent.getActivity( context, 0, notificationIntent, 0 );
-          Notification notification = new Notification.Builder( context )
+          Notification.Builder notificationBuilder = new Notification.Builder( context )
               .setSmallIcon( appIcon )
               .setTicker( tickerText )
               .setContentTitle( contentTitle )
               .setContentText( contentText )
               .setContentIntent( contentIntent )
-              .setSound(
-                  notEmpty( soundLocation )
-                      ? Uri.parse( soundLocation.toString() )
-                      : RingtoneManager.getDefaultUri( RingtoneManager.TYPE_NOTIFICATION ) )
-              .setWhen( System.currentTimeMillis() ).build();
+              .setWhen( System.currentTimeMillis() );
+
+          if( notEmpty( soundLocation ) )
+          {
+            notificationBuilder.setSound( soundLocation.equals( DEFAULT_SOUND_FLAG )
+                ? RingtoneManager.getDefaultUri( RingtoneManager.TYPE_NOTIFICATION )
+                : Uri.parse( soundLocation.toString() ) );
+          }
 
+          Notification notification = notificationBuilder.build();
           notification.flags |= Notification.FLAG_AUTO_CANCEL;
-          notification.defaults |= Notification.DEFAULT_VIBRATE;
-          notification.defaults |= Notification.DEFAULT_LIGHTS;
 
           int customLayout = context.getResources().getIdentifier( "notification", "layout", context.getPackageName() );
           int customLayoutTitle = context.getResources().getIdentifier( "title", "id", context.getPackageName() );
diff --git a/src/com/backendless/push/NotificationLookAndFeel.java b/src/com/backendless/push/NotificationLookAndFeel.java
index 42def6fdc8..6d75bfaf52 100755
--- a/src/com/backendless/push/NotificationLookAndFeel.java
+++ b/src/com/backendless/push/NotificationLookAndFeel.java
@@ -31,9 +31,8 @@
 {
   private static final String COLOR_SEARCH_RECURSE_TIP = "SOME_SAMPLE_TEXT";
   private static float notification_text_size;
-  private static Integer notification_text_color = null;
+  private static int notification_text_color = android.R.color.black;
   private static float notification_title_size_factor = (float) 1.0;
-  private static float notification_description_size_factor = (float) 0.8;
 
   private boolean recurseGroup( Context context, ViewGroup gp )
   {
@@ -67,9 +66,6 @@ else if( gp.getChildAt( i ) instanceof ViewGroup )
 
   void extractColors( Context context )
   {
-    if( notification_text_color != null )
-      return;
-
     try
     {
       Notification ntf = new Notification();
diff --git a/src/com/backendless/servercode/extension/MessagingExtender.java b/src/com/backendless/servercode/extension/MessagingExtender.java
index 80805301ce..a01036d58f 100755
--- a/src/com/backendless/servercode/extension/MessagingExtender.java
+++ b/src/com/backendless/servercode/extension/MessagingExtender.java
@@ -4,6 +4,7 @@
 import com.backendless.messaging.*;
 import com.backendless.servercode.ExecutionResult;
 import com.backendless.servercode.RunnerContext;
+import com.backendless.services.messaging.MessageStatus;
 
 /**
  * Created with IntelliJ IDEA.
