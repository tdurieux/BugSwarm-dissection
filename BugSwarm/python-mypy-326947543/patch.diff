diff --git a/test-data/unit/check-classes.test b/test-data/unit/check-classes.test
index ea55b40e91..e543c22a15 100755
--- a/test-data/unit/check-classes.test
+++ b/test-data/unit/check-classes.test
@@ -124,17 +124,20 @@ A().f = None # E: Cannot assign to a method
 class A:
     def __init__(self) -> None:
         self.x = object()
-a = None # type: A
+a: A
 a.y  # E: "A" has no attribute "y"
 a.y = object()  # E: "A" has no attribute "y"
 a.x
 a.x = object()
 
-[case testInferAttributeUnannotatedInit]
+[case testReferToInvalidAttributeUnannotatedInit]
 class A:
     def __init__(self):
         self.x = object()
 
+a: A
+a.y  # E: "A" has no attribute "y"
+a.y = object()  # E: "A" has no attribute "y"
 a.x
 a.x = object()
 
diff --git a/test-data/unit/check-statements.test b/test-data/unit/check-statements.test
index 4c25e02ad6..41d31e6877 100755
--- a/test-data/unit/check-statements.test
+++ b/test-data/unit/check-statements.test
@@ -354,11 +354,11 @@ a @= 1  # E: Argument 1 to "__imatmul__" of "A" has incompatible type "int"; exp
 [case testInplaceSetitem]
 class A(object):
     def __init__(self) -> None:
-        self.a = 0
+        self.a = [1]
 
     def __iadd__(self, a):
         # type: (int) -> A
-        self.a += 1
+        self.a += [2]
         return self
 
 a = A()
