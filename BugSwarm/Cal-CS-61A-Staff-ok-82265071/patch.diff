diff --git a/server/app/utils.py b/server/app/utils.py
index 1e3b64f7f2..e5293c7871 100755
--- a/server/app/utils.py
+++ b/server/app/utils.py
@@ -9,7 +9,7 @@
 import logging
 import datetime
 import itertools
-from os.path import join
+from os import path
 from app import constants
 import requests
 
@@ -115,12 +115,21 @@ def finish_zip(zipfile_str, zipfile):
     return zipfile_str.getvalue()
 
 
-def add_to_zip(zipfile, file_contents, dir=''):
+def add_to_zip(zipfile, files, dir=''):
     """
     Adds files to a given zip file. Uses specified dir to store files.
+
+    :param zipfile: (ZipFile) zip archive to be extended
+    :param files: (dict) map from filenames (str) to file contents.
+        File contents will be encoded into a utf-8 text file.
+    :param dir: (str) directory to place files in. Both this and the filename
+        will be utf-8 encoded.
     """
-    for filename, contents in file_contents.items():
-        zipfile.writestr(join(dir, filename).encode('utf-8'), contents.encode('utf-8'))
+    for filename, contents in files.items():
+        zipfile.writestr(
+            # TODO(knrafto) not sure if zip paths should be utf-8
+            path.join(dir, filename).encode('utf-8'),
+            str(contents).encode('utf-8'))
     return zipfile
 
 def create_csv_content(content):
diff --git a/server/tests/integration/test_api_submission.py b/server/tests/integration/test_api_submission.py
index cf851c5556..210edffe2f 100755
--- a/server/tests/integration/test_api_submission.py
+++ b/server/tests/integration/test_api_submission.py
@@ -97,7 +97,7 @@ def test_data_for_zip_unencodable(self):
 			get_messages=lambda: {'file_contents': info},
 			assignment=self._assign.key,
 			to_json=lambda: {}))
-		self.assertEqual(info['gup.py'], '1')
+		self.assertEqual(info['gup.py'], 1)
 
 	def test_zip(self):
 		""" Tests that zip does not crash """
