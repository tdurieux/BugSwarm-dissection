travis_fold:start:worker_info[0K[33;1mWorker information[0m
hostname: f9ea6e7c-6c5c-4b3b-aa05-f9ca0f53a10a@1.production-1-worker-org-02-packet
version: v4.0.0 https://github.com/travis-ci/worker/tree/e5cb567e10c0eefe380e81c9a2229ac8fb6a16ce
instance: e298e8d travisci/ci-garnet:packer-1512502276-986baf0 (via amqp)
startup: 4.449435369s
travis_fold:end:worker_info[0Ktravis_fold:start:system_info[0K[33;1mBuild system information[0m
Build language: python
Build group: stable
Build dist: trusty
Build id: 423367798
Job id: 423367800
Runtime kernel version: 4.4.0-112-generic
travis-build version: c232eb7c7
[34m[1mBuild image provisioning date and time[0m
Tue Dec  5 20:11:19 UTC 2017
[34m[1mOperating System Details[0m
Distributor ID:	Ubuntu
Description:	Ubuntu 14.04.5 LTS
Release:	14.04
Codename:	trusty
[34m[1mCookbooks Version[0m
7c2c6a6 https://github.com/travis-ci/travis-cookbooks/tree/7c2c6a6
[34m[1mgit version[0m
git version 2.15.1
[34m[1mbash version[0m
GNU bash, version 4.3.11(1)-release (x86_64-pc-linux-gnu)
[34m[1mgcc version[0m
gcc (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

[34m[1mdocker version[0m
Client:
 Version:      17.09.0-ce
 API version:  1.32
 Go version:   go1.8.3
 Git commit:   afdb6d4
 Built:        Tue Sep 26 22:39:28 2017
 OS/Arch:      linux/amd64
[34m[1mclang version[0m
clang version 5.0.0 (tags/RELEASE_500/final)
Target: x86_64-unknown-linux-gnu
Thread model: posix
InstalledDir: /usr/local/clang-5.0.0/bin
[34m[1mjq version[0m
jq-1.5
[34m[1mbats version[0m
Bats 0.4.0
[34m[1mshellcheck version[0m
0.4.6
[34m[1mshfmt version[0m
v2.0.0
[34m[1mccache version[0m
ccache version 3.1.9

Copyright (C) 2002-2007 Andrew Tridgell
Copyright (C) 2009-2011 Joel Rosdahl

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 3 of the License, or (at your option) any later
version.
[34m[1mcmake version[0m
cmake version 3.9.2

CMake suite maintained and supported by Kitware (kitware.com/cmake).
[34m[1mheroku version[0m
heroku-cli/6.14.39-addc925 (linux-x64) node-v9.2.0
[34m[1mimagemagick version[0m
Version: ImageMagick 6.7.7-10 2017-07-31 Q16 http://www.imagemagick.org
[34m[1mmd5deep version[0m
4.2
[34m[1mmercurial version[0m
Mercurial Distributed SCM (version 4.2.2)
(see https://mercurial-scm.org for more information)

Copyright (C) 2005-2017 Matt Mackall and others
This is free software; see the source for copying conditions. There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
[34m[1mmysql version[0m
mysql  Ver 14.14 Distrib 5.6.33, for debian-linux-gnu (x86_64) using  EditLine wrapper
[34m[1mopenssl version[0m
OpenSSL 1.0.1f 6 Jan 2014
[34m[1mpacker version[0m
Packer v1.0.2

Your version of Packer is out of date! The latest version
is 1.1.2. You can update by downloading from www.packer.io
[34m[1mpostgresql client version[0m
psql (PostgreSQL) 9.6.6
[34m[1mragel version[0m
Ragel State Machine Compiler version 6.8 Feb 2013
Copyright (c) 2001-2009 by Adrian Thurston
[34m[1msubversion version[0m
svn, version 1.8.8 (r1568071)
   compiled Aug 10 2017, 17:20:39 on x86_64-pc-linux-gnu

Copyright (C) 2013 The Apache Software Foundation.
This software consists of contributions made by many people;
see the NOTICE file for more information.
Subversion is open source software, see http://subversion.apache.org/

The following repository access (RA) modules are available:

* ra_svn : Module for accessing a repository using the svn network protocol.
  - with Cyrus SASL authentication
  - handles 'svn' scheme
* ra_local : Module for accessing a repository on local disk.
  - handles 'file' scheme
* ra_serf : Module for accessing a repository via WebDAV protocol using serf.
  - using serf 1.3.3
  - handles 'http' scheme
  - handles 'https' scheme

[34m[1msudo version[0m
Sudo version 1.8.9p5
Configure options: --prefix=/usr -v --with-all-insults --with-pam --with-fqdn --with-logging=syslog --with-logfac=authpriv --with-env-editor --with-editor=/usr/bin/editor --with-timeout=15 --with-password-timeout=0 --with-passprompt=[sudo] password for %p:  --without-lecture --with-tty-tickets --disable-root-mailer --enable-admin-flag --with-sendmail=/usr/sbin/sendmail --with-timedir=/var/lib/sudo --mandir=/usr/share/man --libexecdir=/usr/lib/sudo --with-sssd --with-sssd-lib=/usr/lib/x86_64-linux-gnu --with-selinux
Sudoers policy plugin version 1.8.9p5
Sudoers file grammar version 43

Sudoers path: /etc/sudoers
Authentication methods: 'pam'
Syslog facility if syslog is being used for logging: authpriv
Syslog priority to use when user authenticates successfully: notice
Syslog priority to use when user authenticates unsuccessfully: alert
Send mail if the user is not in sudoers
Use a separate timestamp for each user/tty combo
Lecture user the first time they run sudo
Root may run sudo
Allow some information gathering to give useful error messages
Require fully-qualified hostnames in the sudoers file
Visudo will honor the EDITOR environment variable
Set the LOGNAME and USER environment variables
Length at which to wrap log file lines (0 for no wrap): 80
Authentication timestamp timeout: 15.0 minutes
Password prompt timeout: 0.0 minutes
Number of tries to enter a password: 3
Umask to use or 0777 to use user's: 022
Path to mail program: /usr/sbin/sendmail
Flags for mail program: -t
Address to send mail to: root
Subject line for mail messages: *** SECURITY information for %h ***
Incorrect password message: Sorry, try again.
Path to authentication timestamp dir: /var/lib/sudo
Default password prompt: [sudo] password for %p: 
Default user to run commands as: root
Value to override user's $PATH with: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin
Path to the editor for use by visudo: /usr/bin/editor
When to require a password for 'list' pseudocommand: any
When to require a password for 'verify' pseudocommand: all
File descriptors >= 3 will be closed before executing a command
Environment variables to check for sanity:
	TZ
	TERM
	LINGUAS
	LC_*
	LANGUAGE
	LANG
	COLORTERM
Environment variables to remove:
	RUBYOPT
	RUBYLIB
	PYTHONUSERBASE
	PYTHONINSPECT
	PYTHONPATH
	PYTHONHOME
	TMPPREFIX
	ZDOTDIR
	READNULLCMD
	NULLCMD
	FPATH
	PERL5DB
	PERL5OPT
	PERL5LIB
	PERLLIB
	PERLIO_DEBUG 
	JAVA_TOOL_OPTIONS
	SHELLOPTS
	GLOBIGNORE
	PS4
	BASH_ENV
	ENV
	TERMCAP
	TERMPATH
	TERMINFO_DIRS
	TERMINFO
	_RLD*
	LD_*
	PATH_LOCALE
	NLSPATH
	HOSTALIASES
	RES_OPTIONS
	LOCALDOMAIN
	CDPATH
	IFS
Environment variables to preserve:
	JAVA_HOME
	TRAVIS
	CI
	DEBIAN_FRONTEND
	XAUTHORIZATION
	XAUTHORITY
	PS2
	PS1
	PATH
	LS_COLORS
	KRB5CCNAME
	HOSTNAME
	HOME
	DISPLAY
	COLORS
Locale to use while parsing sudoers: C
Directory in which to store input/output logs: /var/log/sudo-io
File in which to store the input/output log: %{seq}
Add an entry to the utmp/utmpx file when allocating a pty
PAM service name to use
PAM service name to use for login shells
Create a new PAM session for the command to run in
Maximum I/O log sequence number: 0

Local IP address and netmask pairs:
	172.17.0.2/255.255.0.0

Sudoers I/O plugin version 1.8.9p5
[34m[1mgzip version[0m
gzip 1.6
Copyright (C) 2007, 2010, 2011 Free Software Foundation, Inc.
Copyright (C) 1993 Jean-loup Gailly.
This is free software.  You may redistribute copies of it under the terms of
the GNU General Public License <http://www.gnu.org/licenses/gpl.html>.
There is NO WARRANTY, to the extent permitted by law.

Written by Jean-loup Gailly.
[34m[1mzip version[0m
Copyright (c) 1990-2008 Info-ZIP - Type 'zip "-L"' for software license.
This is Zip 3.0 (July 5th 2008), by Info-ZIP.
Currently maintained by E. Gordon.  Please send bug reports to
the authors using the web page at www.info-zip.org; see README for details.

Latest sources and executables are at ftp://ftp.info-zip.org/pub/infozip,
as of above date; see http://www.info-zip.org/ for other sites.

Compiled with gcc 4.8.2 for Unix (Linux ELF) on Oct 21 2013.

Zip special compilation options:
	USE_EF_UT_TIME       (store Universal Time)
	BZIP2_SUPPORT        (bzip2 library version 1.0.6, 6-Sept-2010)
	    bzip2 code and library copyright (c) Julian R Seward
	    (See the bzip2 license for terms of use)
	SYMLINK_SUPPORT      (symbolic links supported)
	LARGE_FILE_SUPPORT   (can read and write large files on file system)
	ZIP64_SUPPORT        (use Zip64 to store large files in archives)
	UNICODE_SUPPORT      (store and read UTF-8 Unicode paths)
	STORE_UNIX_UIDs_GIDs (store UID/GID sizes/values using new extra field)
	UIDGID_NOT_16BIT     (old Unix 16-bit UID/GID extra field not used)
	[encryption, version 2.91 of 05 Jan 2007] (modified for Zip 3)

Encryption notice:
	The encryption code of this program is not copyrighted and is
	put in the public domain.  It was originally written in Europe
	and, to the best of our knowledge, can be freely distributed
	in both source and object forms from any country, including
	the USA under License Exception TSU of the U.S. Export
	Administration Regulations (section 740.13(e)) of 6 June 2002.

Zip environment options:
             ZIP:  [none]
          ZIPOPT:  [none]
[34m[1mvim version[0m
VIM - Vi IMproved 7.4 (2013 Aug 10, compiled Nov 24 2016 16:43:18)
Included patches: 1-52
Extra patches: 8.0.0056
Modified by pkg-vim-maintainers@lists.alioth.debian.org
Compiled by buildd@
Huge version without GUI.  Features included (+) or not (-):
+acl             +farsi           +mouse_netterm   +syntax
+arabic          +file_in_path    +mouse_sgr       +tag_binary
+autocmd         +find_in_path    -mouse_sysmouse  +tag_old_static
-balloon_eval    +float           +mouse_urxvt     -tag_any_white
-browse          +folding         +mouse_xterm     -tcl
++builtin_terms  -footer          +multi_byte      +terminfo
+byte_offset     +fork()          +multi_lang      +termresponse
+cindent         +gettext         -mzscheme        +textobjects
-clientserver    -hangul_input    +netbeans_intg   +title
-clipboard       +iconv           +path_extra      -toolbar
+cmdline_compl   +insert_expand   -perl            +user_commands
+cmdline_hist    +jumplist        +persistent_undo +vertsplit
+cmdline_info    +keymap          +postscript      +virtualedit
+comments        +langmap         +printer         +visual
+conceal         +libcall         +profile         +visualextra
+cryptv          +linebreak       +python          +viminfo
+cscope          +lispindent      -python3         +vreplace
+cursorbind      +listcmds        +quickfix        +wildignore
+cursorshape     +localmap        +reltime         +wildmenu
+dialog_con      -lua             +rightleft       +windows
+diff            +menu            -ruby            +writebackup
+digraphs        +mksession       +scrollbind      -X11
-dnd             +modify_fname    +signs           -xfontset
-ebcdic          +mouse           +smartindent     -xim
+emacs_tags      -mouseshape      -sniff           -xsmp
+eval            +mouse_dec       +startuptime     -xterm_clipboard
+ex_extra        +mouse_gpm       +statusline      -xterm_save
+extra_search    -mouse_jsbterm   -sun_workshop    -xpm
   system vimrc file: "$VIM/vimrc"
     user vimrc file: "$HOME/.vimrc"
 2nd user vimrc file: "~/.vim/vimrc"
      user exrc file: "$HOME/.exrc"
  fall-back for $VIM: "/usr/share/vim"
Compilation: gcc -c -I. -Iproto -DHAVE_CONFIG_H     -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=1      
Linking: gcc   -Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,--as-needed -o vim        -lm -ltinfo -lnsl  -lselinux  -lacl -lattr -lgpm -ldl    -L/usr/lib/python2.7/config-x86_64-linux-gnu -lpython2.7 -lpthread -ldl -lutil -lm -Xlinker -export-dynamic -Wl,-O1 -Wl,-Bsymbolic-functions      
[34m[1miptables version[0m
iptables v1.4.21
[34m[1mcurl version[0m
curl 7.35.0 (x86_64-pc-linux-gnu) libcurl/7.35.0 OpenSSL/1.0.1f zlib/1.2.8 libidn/1.28 librtmp/2.3
[34m[1mwget version[0m
GNU Wget 1.15 built on linux-gnu.
[34m[1mrsync version[0m
rsync  version 3.1.0  protocol version 31
[34m[1mgimme version[0m
v1.2.0
[34m[1mnvm version[0m
0.33.6
[34m[1mperlbrew version[0m
/home/travis/perl5/perlbrew/bin/perlbrew  - App::perlbrew/0.80
[34m[1mphpenv version[0m
rbenv 1.1.1-25-g6aa70b6
[34m[1mrvm version[0m
rvm 1.29.3 (latest) by Michal Papis, Piotr Kuczynski, Wayne E. Seguin [https://rvm.io]
[34m[1mdefault ruby version[0m
ruby 2.4.1p111 (2017-03-22 revision 58053) [x86_64-linux]
[34m[1mCouchDB version[0m
couchdb 1.6.1
[34m[1mElasticSearch version[0m
5.5.0
[34m[1mInstalled Firefox version[0m
firefox 56.0.2
[34m[1mMongoDB version[0m
MongoDB 3.4.10
[34m[1mPhantomJS version[0m
2.1.1
[34m[1mPre-installed PostgreSQL versions[0m
9.2.24
9.3.20
9.4.15
9.5.10
9.6.6
[34m[1mRabbitMQ Version[0m
3.6.14
[34m[1mRedis version[0m
redis-server 4.0.6
[34m[1mriak version[0m
2.2.3
[34m[1mPre-installed Go versions[0m
1.7.4
[34m[1mant version[0m
Apache Ant(TM) version 1.9.3 compiled on April 8 2014
[34m[1mmvn version[0m
Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T07:58:13Z)
Maven home: /usr/local/maven-3.5.2
Java version: 1.8.0_151, vendor: Oracle Corporation
Java home: /usr/lib/jvm/java-8-oracle/jre
Default locale: en_US, platform encoding: UTF-8
OS name: "linux", version: "4.4.0-101-generic", arch: "amd64", family: "unix"
[34m[1mgradle version[0m

------------------------------------------------------------
Gradle 4.0.1
------------------------------------------------------------

Build time:   2017-07-07 14:02:41 UTC
Revision:     38e5dc0f772daecca1d2681885d3d85414eb6826

Groovy:       2.4.11
Ant:          Apache Ant(TM) version 1.9.6 compiled on June 29 2015
JVM:          1.8.0_151 (Oracle Corporation 25.151-b12)
OS:           Linux 4.4.0-101-generic amd64

[34m[1mlein version[0m
Leiningen 2.8.1 on Java 1.8.0_151 Java HotSpot(TM) 64-Bit Server VM
[34m[1mPre-installed Node.js versions[0m
v4.8.6
v6.12.0
v6.12.1
v8.9
v8.9.1
[34m[1mphpenv versions[0m
  system
  5.6
* 5.6.32 (set by /home/travis/.phpenv/version)
  7.0
  7.0.25
  7.1
  7.1.11
  hhvm
  hhvm-stable
[34m[1mcomposer --version[0m
Composer version 1.5.2 2017-09-11 16:59:25
[34m[1mPre-installed Ruby versions[0m
ruby-2.2.7
ruby-2.3.4
ruby-2.4.1
travis_fold:end:system_info[0K
[32;1mNetwork availability confirmed.[0m


travis_fold:start:git.checkout[0Ktravis_time:start:25d63016[0K$ git clone --depth=50 https://github.com/scikit-learn/scikit-learn.git scikit-learn/scikit-learn
Cloning into 'scikit-learn/scikit-learn'...
remote: Counting objects: 1748, done.[K
remote: Compressing objects:   0% (1/1501)   [Kremote: Compressing objects:   1% (16/1501)   [Kremote: Compressing objects:   2% (31/1501)   [Kremote: Compressing objects:   3% (46/1501)   [Kremote: Compressing objects:   4% (61/1501)   [Kremote: Compressing objects:   5% (76/1501)   [Kremote: Compressing objects:   6% (91/1501)   [Kremote: Compressing objects:   7% (106/1501)   [Kremote: Compressing objects:   8% (121/1501)   [Kremote: Compressing objects:   9% (136/1501)   [Kremote: Compressing objects:  10% (151/1501)   [Kremote: Compressing objects:  11% (166/1501)   [Kremote: Compressing objects:  12% (181/1501)   [Kremote: Compressing objects:  13% (196/1501)   [Kremote: Compressing objects:  14% (211/1501)   [Kremote: Compressing objects:  15% (226/1501)   [Kremote: Compressing objects:  16% (241/1501)   [Kremote: Compressing objects:  17% (256/1501)   [Kremote: Compressing objects:  18% (271/1501)   [Kremote: Compressing objects:  19% (286/1501)   [Kremote: Compressing objects:  20% (301/1501)   [Kremote: Compressing objects:  21% (316/1501)   [Kremote: Compressing objects:  22% (331/1501)   [Kremote: Compressing objects:  23% (346/1501)   [Kremote: Compressing objects:  24% (361/1501)   [Kremote: Compressing objects:  25% (376/1501)   [Kremote: Compressing objects:  26% (391/1501)   [Kremote: Compressing objects:  27% (406/1501)   [Kremote: Compressing objects:  28% (421/1501)   [Kremote: Compressing objects:  29% (436/1501)   [Kremote: Compressing objects:  30% (451/1501)   [Kremote: Compressing objects:  31% (466/1501)   [Kremote: Compressing objects:  32% (481/1501)   [Kremote: Compressing objects:  33% (496/1501)   [Kremote: Compressing objects:  34% (511/1501)   [Kremote: Compressing objects:  35% (526/1501)   [Kremote: Compressing objects:  36% (541/1501)   [Kremote: Compressing objects:  37% (556/1501)   [Kremote: Compressing objects:  38% (571/1501)   [Kremote: Compressing objects:  39% (586/1501)   [Kremote: Compressing objects:  40% (601/1501)   [Kremote: Compressing objects:  41% (616/1501)   [Kremote: Compressing objects:  42% (631/1501)   [Kremote: Compressing objects:  43% (646/1501)   [Kremote: Compressing objects:  44% (661/1501)   [Kremote: Compressing objects:  45% (676/1501)   [Kremote: Compressing objects:  46% (691/1501)   [Kremote: Compressing objects:  47% (706/1501)   [Kremote: Compressing objects:  48% (721/1501)   [Kremote: Compressing objects:  49% (736/1501)   [Kremote: Compressing objects:  50% (751/1501)   [Kremote: Compressing objects:  51% (766/1501)   [Kremote: Compressing objects:  52% (781/1501)   [Kremote: Compressing objects:  53% (796/1501)   [Kremote: Compressing objects:  54% (811/1501)   [Kremote: Compressing objects:  55% (826/1501)   [Kremote: Compressing objects:  56% (841/1501)   [Kremote: Compressing objects:  57% (856/1501)   [Kremote: Compressing objects:  58% (871/1501)   [Kremote: Compressing objects:  59% (886/1501)   [Kremote: Compressing objects:  60% (901/1501)   [Kremote: Compressing objects:  61% (916/1501)   [Kremote: Compressing objects:  62% (931/1501)   [Kremote: Compressing objects:  63% (946/1501)   [Kremote: Compressing objects:  64% (961/1501)   [Kremote: Compressing objects:  65% (976/1501)   [Kremote: Compressing objects:  66% (991/1501)   [Kremote: Compressing objects:  67% (1006/1501)   [Kremote: Compressing objects:  68% (1021/1501)   [Kremote: Compressing objects:  69% (1036/1501)   [Kremote: Compressing objects:  70% (1051/1501)   [Kremote: Compressing objects:  71% (1066/1501)   [Kremote: Compressing objects:  72% (1081/1501)   [Kremote: Compressing objects:  73% (1096/1501)   [Kremote: Compressing objects:  74% (1111/1501)   [Kremote: Compressing objects:  75% (1126/1501)   [Kremote: Compressing objects:  76% (1141/1501)   [Kremote: Compressing objects:  77% (1156/1501)   [Kremote: Compressing objects:  78% (1171/1501)   [Kremote: Compressing objects:  79% (1186/1501)   [Kremote: Compressing objects:  80% (1201/1501)   [Kremote: Compressing objects:  81% (1216/1501)   [Kremote: Compressing objects:  82% (1231/1501)   [Kremote: Compressing objects:  83% (1246/1501)   [Kremote: Compressing objects:  84% (1261/1501)   [Kremote: Compressing objects:  85% (1276/1501)   [Kremote: Compressing objects:  86% (1291/1501)   [Kremote: Compressing objects:  87% (1306/1501)   [Kremote: Compressing objects:  88% (1321/1501)   [Kremote: Compressing objects:  89% (1336/1501)   [Kremote: Compressing objects:  90% (1351/1501)   [Kremote: Compressing objects:  91% (1366/1501)   [Kremote: Compressing objects:  92% (1381/1501)   [Kremote: Compressing objects:  93% (1396/1501)   [Kremote: Compressing objects:  94% (1411/1501)   [Kremote: Compressing objects:  95% (1426/1501)   [Kremote: Compressing objects:  96% (1441/1501)   [Kremote: Compressing objects:  97% (1456/1501)   [Kremote: Compressing objects:  98% (1471/1501)   [Kremote: Compressing objects:  99% (1486/1501)   [Kremote: Compressing objects: 100% (1501/1501)   [Kremote: Compressing objects: 100% (1501/1501), done.[K
Receiving objects:   0% (1/1748)   Receiving objects:   1% (18/1748)   Receiving objects:   2% (35/1748)   Receiving objects:   3% (53/1748)   Receiving objects:   4% (70/1748)   Receiving objects:   5% (88/1748)   Receiving objects:   6% (105/1748)   Receiving objects:   7% (123/1748)   Receiving objects:   8% (140/1748)   Receiving objects:   9% (158/1748)   Receiving objects:  10% (175/1748)   Receiving objects:  11% (193/1748)   Receiving objects:  12% (210/1748)   Receiving objects:  13% (228/1748)   Receiving objects:  14% (245/1748)   Receiving objects:  15% (263/1748)   Receiving objects:  16% (280/1748)   Receiving objects:  17% (298/1748)   Receiving objects:  18% (315/1748)   Receiving objects:  19% (333/1748)   Receiving objects:  20% (350/1748)   Receiving objects:  21% (368/1748)   Receiving objects:  22% (385/1748)   Receiving objects:  23% (403/1748)   Receiving objects:  24% (420/1748)   Receiving objects:  25% (437/1748)   Receiving objects:  26% (455/1748)   Receiving objects:  27% (472/1748)   Receiving objects:  28% (490/1748)   Receiving objects:  29% (507/1748)   Receiving objects:  30% (525/1748)   Receiving objects:  31% (542/1748)   Receiving objects:  32% (560/1748)   Receiving objects:  33% (577/1748)   Receiving objects:  34% (595/1748)   Receiving objects:  35% (612/1748)   Receiving objects:  36% (630/1748)   Receiving objects:  37% (647/1748)   Receiving objects:  38% (665/1748)   Receiving objects:  39% (682/1748)   Receiving objects:  40% (700/1748)   Receiving objects:  41% (717/1748)   Receiving objects:  42% (735/1748)   Receiving objects:  43% (752/1748)   Receiving objects:  44% (770/1748)   Receiving objects:  45% (787/1748)   Receiving objects:  46% (805/1748)   Receiving objects:  47% (822/1748)   Receiving objects:  48% (840/1748)   Receiving objects:  49% (857/1748)   Receiving objects:  50% (874/1748)   Receiving objects:  51% (892/1748)   Receiving objects:  52% (909/1748)   Receiving objects:  53% (927/1748)   Receiving objects:  54% (944/1748)   Receiving objects:  55% (962/1748)   Receiving objects:  56% (979/1748)   Receiving objects:  57% (997/1748)   Receiving objects:  58% (1014/1748)   Receiving objects:  59% (1032/1748)   Receiving objects:  60% (1049/1748)   Receiving objects:  61% (1067/1748)   Receiving objects:  62% (1084/1748)   Receiving objects:  63% (1102/1748)   Receiving objects:  64% (1119/1748)   Receiving objects:  65% (1137/1748)   Receiving objects:  66% (1154/1748)   Receiving objects:  67% (1172/1748)   Receiving objects:  68% (1189/1748)   Receiving objects:  69% (1207/1748)   Receiving objects:  70% (1224/1748)   Receiving objects:  71% (1242/1748)   Receiving objects:  72% (1259/1748)   Receiving objects:  73% (1277/1748)   Receiving objects:  74% (1294/1748)   Receiving objects:  75% (1311/1748)   Receiving objects:  76% (1329/1748)   Receiving objects:  77% (1346/1748)   Receiving objects:  78% (1364/1748)   Receiving objects:  79% (1381/1748)   Receiving objects:  80% (1399/1748)   Receiving objects:  81% (1416/1748)   Receiving objects:  82% (1434/1748)   Receiving objects:  83% (1451/1748)   Receiving objects:  84% (1469/1748)   Receiving objects:  85% (1486/1748)   Receiving objects:  86% (1504/1748)   Receiving objects:  87% (1521/1748)   Receiving objects:  88% (1539/1748)   Receiving objects:  89% (1556/1748)   Receiving objects:  90% (1574/1748)   Receiving objects:  91% (1591/1748)   Receiving objects:  92% (1609/1748)   Receiving objects:  93% (1626/1748)   Receiving objects:  94% (1644/1748)   Receiving objects:  95% (1661/1748)   Receiving objects:  96% (1679/1748)   Receiving objects:  97% (1696/1748)   Receiving objects:  98% (1714/1748)   Receiving objects:  99% (1731/1748)   remote: Total 1748 (delta 412), reused 713 (delta 229), pack-reused 0[K
Receiving objects: 100% (1748/1748)   Receiving objects: 100% (1748/1748), 6.32 MiB | 16.01 MiB/s, done.
Resolving deltas:   0% (0/412)   Resolving deltas:   1% (6/412)   Resolving deltas:   3% (13/412)   Resolving deltas:   4% (19/412)   Resolving deltas:   6% (25/412)   Resolving deltas:  15% (62/412)   Resolving deltas:  16% (66/412)   Resolving deltas:  17% (74/412)   Resolving deltas:  18% (75/412)   Resolving deltas:  19% (79/412)   Resolving deltas:  20% (83/412)   Resolving deltas:  21% (90/412)   Resolving deltas:  22% (91/412)   Resolving deltas:  23% (95/412)   Resolving deltas:  24% (99/412)   Resolving deltas:  26% (108/412)   Resolving deltas:  28% (118/412)   Resolving deltas:  29% (120/412)   Resolving deltas:  30% (124/412)   Resolving deltas:  31% (128/412)   Resolving deltas:  32% (132/412)   Resolving deltas:  33% (137/412)   Resolving deltas:  34% (142/412)   Resolving deltas:  35% (145/412)   Resolving deltas:  36% (150/412)   Resolving deltas:  37% (153/412)   Resolving deltas:  38% (157/412)   Resolving deltas:  39% (162/412)   Resolving deltas:  40% (165/412)   Resolving deltas:  41% (169/412)   Resolving deltas:  42% (175/412)   Resolving deltas:  43% (179/412)   Resolving deltas:  44% (182/412)   Resolving deltas:  45% (187/412)   Resolving deltas:  49% (204/412)   Resolving deltas:  50% (208/412)   Resolving deltas:  51% (212/412)   Resolving deltas:  53% (219/412)   Resolving deltas:  55% (229/412)   Resolving deltas:  56% (231/412)   Resolving deltas:  57% (235/412)   Resolving deltas:  58% (239/412)   Resolving deltas:  59% (244/412)   Resolving deltas:  60% (248/412)   Resolving deltas:  61% (252/412)   Resolving deltas:  62% (256/412)   Resolving deltas:  64% (265/412)   Resolving deltas:  65% (269/412)   Resolving deltas:  66% (272/412)   Resolving deltas:  67% (277/412)   Resolving deltas:  68% (281/412)   Resolving deltas:  69% (285/412)   Resolving deltas:  70% (289/412)   Resolving deltas:  71% (293/412)   Resolving deltas:  72% (298/412)   Resolving deltas:  73% (301/412)   Resolving deltas:  74% (305/412)   Resolving deltas:  75% (309/412)   Resolving deltas:  76% (314/412)   Resolving deltas:  77% (318/412)   Resolving deltas:  78% (322/412)   Resolving deltas:  79% (326/412)   Resolving deltas:  80% (330/412)   Resolving deltas:  81% (334/412)   Resolving deltas:  82% (338/412)   Resolving deltas:  83% (344/412)   Resolving deltas:  84% (348/412)   Resolving deltas:  85% (354/412)   Resolving deltas:  86% (355/412)   Resolving deltas:  88% (363/412)   Resolving deltas:  89% (368/412)   Resolving deltas:  90% (371/412)   Resolving deltas:  91% (376/412)   Resolving deltas:  92% (380/412)   Resolving deltas:  93% (386/412)   Resolving deltas:  94% (388/412)   Resolving deltas:  95% (392/412)   Resolving deltas:  96% (398/412)   Resolving deltas:  97% (400/412)   Resolving deltas:  98% (404/412)   Resolving deltas:  99% (408/412)   Resolving deltas: 100% (412/412)   Resolving deltas: 100% (412/412), done.

travis_time:end:25d63016:start=1535808601896208717,finish=1535808607316583653,duration=5420374936[0K$ cd scikit-learn/scikit-learn
travis_time:start:1c75b91e[0K$ git fetch origin +refs/pull/11966/merge:
remote: Counting objects: 8, done.[K
remote: Compressing objects:  25% (1/4)   [Kremote: Compressing objects:  50% (2/4)   [Kremote: Compressing objects:  75% (3/4)   [Kremote: Compressing objects: 100% (4/4)   [Kremote: Compressing objects: 100% (4/4), done.[K
remote: Total 8 (delta 6), reused 5 (delta 4), pack-reused 0[K
Unpacking objects:  12% (1/8)   Unpacking objects:  25% (2/8)   Unpacking objects:  37% (3/8)   Unpacking objects:  50% (4/8)   Unpacking objects:  62% (5/8)   Unpacking objects:  75% (6/8)   Unpacking objects:  87% (7/8)   Unpacking objects: 100% (8/8)   Unpacking objects: 100% (8/8), done.
From https://github.com/scikit-learn/scikit-learn
 * branch            refs/pull/11966/merge -> FETCH_HEAD

travis_time:end:1c75b91e:start=1535808607322549142,finish=1535808608535306046,duration=1212756904[0K$ git checkout -qf FETCH_HEAD
travis_fold:end:git.checkout[0K
[33;1mSetting environment variables from .travis.yml[0m
$ export TEST_DIR=/tmp/sklearn
$ export OMP_NUM_THREADS=4
$ export OPENBLAS_NUM_THREADS=4
$ export DISTRIB="conda"
$ export PYTHON_VERSION="3.4"
$ export INSTALL_MKL="false"
$ export NUMPY_VERSION="1.10.4"
$ export SCIPY_VERSION="0.16.1"
$ export CYTHON_VERSION="0.25.2"
$ export PILLOW_VERSION="4.0.0"
$ export COVERAGE=true

travis_time:start:05db2cdd[0K$ source ~/virtualenv/python2.7/bin/activate

travis_time:end:05db2cdd:start=1535808608698130677,finish=1535808609110570782,duration=412440105[0Ktravis_fold:start:cache.1[0KSetting up build cache
$ export CASHER_DIR=$HOME/.casher
travis_time:start:136bc9c0[0K$ Installing caching utilities

travis_time:end:136bc9c0:start=1535808614886856964,finish=1535808614944380237,duration=57523273[0Ktravis_time:start:171b20c2[0K
travis_time:end:171b20c2:start=1535808614950152792,finish=1535808614954320592,duration=4167800[0Ktravis_time:start:018872e6[0K[32;1mattempting to download cache archive[0m
[32;1mfetching PR.11966/cache-linux-trusty-b3e938f5828910ac816b7eacbfd746a62df2020465fdab71d64ed17fbb393e30--python-2.7.tgz[0m
[32;1mfetching PR.11966/cache--python-2.7.tgz[0m
[32;1mfetching master/cache-linux-trusty-b3e938f5828910ac816b7eacbfd746a62df2020465fdab71d64ed17fbb393e30--python-2.7.tgz[0m
[32;1mfound cache[0m

travis_time:end:018872e6:start=1535808614959421520,finish=1535808621992426908,duration=7033005388[0Ktravis_time:start:302b668e[0K
travis_time:end:302b668e:start=1535808621998232877,finish=1535808622002357144,duration=4124267[0Ktravis_time:start:09bc2740[0K[32;1madding /home/travis/.cache/pip to cache[0m
[32;1madding /home/travis/.ccache to cache[0m

travis_time:end:09bc2740:start=1535808622007197551,finish=1535808625157020882,duration=3149823331[0Ktravis_fold:end:cache.1[0K$ python --version
Python 2.7.14
$ pip --version
pip 9.0.1 from /home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages (python 2.7)
travis_fold:start:install[0Ktravis_time:start:06298a9a[0K$ source build_tools/travis/install.sh
List files from cached directories
pip:
http  wheels
Set cache size limit to 100.0 Mbytes
cache directory                     /home/travis/.ccache
cache hit (direct)                  8806
cache hit (preprocessed)            4013
cache miss                         12014
called for link                     3836
files in cache                       125
cache size                          49.7 Mbytes
max cache size                     100.0 Mbytes
--2018-09-01 13:30:25--  https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
Resolving repo.continuum.io (repo.continuum.io)... 104.16.19.10, 104.16.18.10, 2400:cb00:2048:1::6810:120a, ...
Connecting to repo.continuum.io (repo.continuum.io)|104.16.19.10|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 58468498 (56M) [application/x-sh]
Saving to: ‘miniconda.sh’

 0% [                                       ] 0           --.-K/s              41% [===============>                       ] 24,017,716   115MB/s             74% [============================>          ] 43,621,172   104MB/s             100%[======================================>] 58,468,498   104MB/s   in 0.5s   

2018-09-01 13:30:26 (104 MB/s) - ‘miniconda.sh’ saved [58468498/58468498]

PREFIX=/home/travis/miniconda
installing: python-3.6.5-hc3d631a_2 ...
Python 3.6.5 :: Anaconda, Inc.
installing: ca-certificates-2018.03.07-0 ...
installing: conda-env-2.6.0-h36134e3_1 ...
installing: libgcc-ng-7.2.0-hdf63c60_3 ...
installing: libstdcxx-ng-7.2.0-hdf63c60_3 ...
installing: libffi-3.2.1-hd88cf55_4 ...
installing: ncurses-6.1-hf484d3e_0 ...
installing: openssl-1.0.2o-h20670df_0 ...
installing: tk-8.6.7-hc745277_3 ...
installing: xz-5.2.4-h14c3975_4 ...
installing: yaml-0.1.7-had09818_2 ...
installing: zlib-1.2.11-ha838bed_2 ...
installing: libedit-3.1.20170329-h6b74fdf_2 ...
installing: readline-7.0-ha6073c6_4 ...
installing: sqlite-3.23.1-he433501_0 ...
installing: asn1crypto-0.24.0-py36_0 ...
installing: certifi-2018.4.16-py36_0 ...
installing: chardet-3.0.4-py36h0f667ec_1 ...
installing: idna-2.6-py36h82fb2a8_1 ...
installing: pycosat-0.6.3-py36h0a5515d_0 ...
installing: pycparser-2.18-py36hf9f622e_1 ...
installing: pysocks-1.6.8-py36_0 ...
installing: ruamel_yaml-0.15.37-py36h14c3975_2 ...
installing: six-1.11.0-py36h372c433_1 ...
installing: cffi-1.11.5-py36h9745a5d_0 ...
installing: setuptools-39.2.0-py36_0 ...
installing: cryptography-2.2.2-py36h14c3975_0 ...
installing: wheel-0.31.1-py36_0 ...
installing: pip-10.0.1-py36_0 ...
installing: pyopenssl-18.0.0-py36_0 ...
installing: urllib3-1.22-py36hbe7ace6_0 ...
installing: requests-2.18.4-py36he2e5f8d_1 ...
installing: conda-4.5.4-py36_0 ...
installation finished.
Solving environment: - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ done

## Package Plan ##

  environment location: /home/travis/miniconda

  added / updated specs: 
    - conda


The following packages will be downloaded:

    package                    |            build
    ---------------------------|-----------------
    openssl-1.0.2p             |       h14c3975_0         3.5 MB
    certifi-2018.8.24          |           py36_1         140 KB
    conda-4.5.11               |           py36_0         1.0 MB
    ------------------------------------------------------------
                                           Total:         4.6 MB

The following packages will be UPDATED:

    certifi: 2018.4.16-py36_0  --> 2018.8.24-py36_1 
    conda:   4.5.4-py36_0      --> 4.5.11-py36_0    
    openssl: 1.0.2o-h20670df_0 --> 1.0.2p-h14c3975_0


Downloading and Extracting Packages
openssl-1.0.2p       |  3.5 MB | :   0% 0/1 [00:00<?, ?it/s]openssl-1.0.2p       |  3.5 MB | :  76% 0.7567906892179296/1 [00:00<00:00,  4.97it/s]openssl-1.0.2p       |  3.5 MB | :  91% 0.90618585201238/1 [00:01<00:00,  1.94s/it]  openssl-1.0.2p       |  3.5 MB | : 100% 1.0/1 [00:01<00:00,  1.37s/it]             
certifi-2018.8.24    |  140 KB | :   0% 0/1 [00:00<?, ?it/s]certifi-2018.8.24    |  140 KB | : 100% 1.0/1 [00:00<00:00, 19.23it/s]
conda-4.5.11         |  1.0 MB | :   0% 0/1 [00:00<?, ?it/s]conda-4.5.11         |  1.0 MB | :  80% 0.8001019483568296/1 [00:00<00:00,  3.65it/s]conda-4.5.11         |  1.0 MB | :  91% 0.9099408351391098/1 [00:00<00:00,  1.39it/s]conda-4.5.11         |  1.0 MB | : 100% 1.0/1 [00:00<00:00,  1.73it/s]               
Preparing transaction: / - done
Verifying transaction: | / - \ | / done
Executing transaction: \ | / - \ done
Solving environment: - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - done

## Package Plan ##

  environment location: /home/travis/miniconda/envs/testenv

  added / updated specs: 
    - cython=0.25.2
    - nomkl
    - numpy=1.10.4
    - pillow=4.0.0
    - pip
    - pytest
    - pytest-cov
    - python=3.4
    - scipy=0.16.1


The following packages will be downloaded:

    package                    |            build
    ---------------------------|-----------------
    coverage-4.2               |           py34_0         213 KB
    pillow-4.0.0               |           py34_0         864 KB
    libgcc-ng-8.2.0            |       hdf63c60_1         7.6 MB
    readline-6.2               |                2         606 KB
    libstdcxx-ng-8.2.0         |       hdf63c60_1         2.9 MB
    openblas-0.2.14            |                3         3.5 MB
    sqlite-3.13.0              |                0         4.0 MB
    pytest-3.0.5               |           py34_0         266 KB
    scipy-0.16.1               |np110py34_nomkl_1        27.8 MB
    libgfortran-1.0            |                0         170 KB
    cython-0.25.2              |           py34_0         6.8 MB
    numpy-1.10.4               |     py34_nomkl_0         5.9 MB
    tk-8.5.18                  |                0         1.9 MB
    pytest-cov-2.3.1           |           py34_0          19 KB
    jpeg-9b                    |       h024ee3a_2         248 KB
    setuptools-27.2.0          |           py34_0         528 KB
    wheel-0.29.0               |           py34_0          82 KB
    nomkl-3.0                  |                0          48 KB
    py-1.4.32                  |           py34_0         135 KB
    libtiff-4.0.9              |       he85c1e1_2         567 KB
    pip-9.0.1                  |           py34_1         1.7 MB
    libpng-1.6.34              |       hb9fc6fc_0         334 KB
    python-3.4.5               |                0        15.2 MB
    blas-1.0                   |         openblas          48 KB
    freetype-2.5.5             |                2         2.5 MB
    ------------------------------------------------------------
                                           Total:        83.9 MB

The following NEW packages will be INSTALLED:

    blas:            1.0-openblas            
    ca-certificates: 2018.03.07-0            
    coverage:        4.2-py34_0              
    cython:          0.25.2-py34_0           
    freetype:        2.5.5-2                 
    jpeg:            9b-h024ee3a_2           
    libgcc-ng:       8.2.0-hdf63c60_1        
    libgfortran:     1.0-0                   
    libpng:          1.6.34-hb9fc6fc_0       
    libstdcxx-ng:    8.2.0-hdf63c60_1        
    libtiff:         4.0.9-he85c1e1_2        
    nomkl:           3.0-0                   
    numpy:           1.10.4-py34_nomkl_0     
    openblas:        0.2.14-3                
    openssl:         1.0.2p-h14c3975_0       
    pillow:          4.0.0-py34_0            
    pip:             9.0.1-py34_1            
    py:              1.4.32-py34_0           
    pytest:          3.0.5-py34_0            
    pytest-cov:      2.3.1-py34_0            
    python:          3.4.5-0                 
    readline:        6.2-2                   
    scipy:           0.16.1-np110py34_nomkl_1
    setuptools:      27.2.0-py34_0           
    sqlite:          3.13.0-0                
    tk:              8.5.18-0                
    wheel:           0.29.0-py34_0           
    xz:              5.2.4-h14c3975_4        
    zlib:            1.2.11-ha838bed_2       


Downloading and Extracting Packages
coverage-4.2         | 213 KB    | :   0% 0/1 [00:00<?, ?it/s]coverage-4.2         | 213 KB    | :   6% 0.056399311531841655/1 [00:00<00:02,  2.83s/it]coverage-4.2         | 213 KB    | : 100% 1.0/1 [00:00<00:00,  3.90it/s]                 
pillow-4.0.0         | 864 KB    | :   0% 0/1 [00:00<?, ?it/s]pillow-4.0.0         | 864 KB    | :  81% 0.8148183314343588/1 [00:00<00:00,  6.58it/s]pillow-4.0.0         | 864 KB    | : 100% 1.0/1 [00:00<00:00,  3.34it/s]               
libgcc-ng-8.2.0      | 7.6 MB    | :   0% 0/1 [00:00<?, ?it/s]libgcc-ng-8.2.0      | 7.6 MB    | :  71% 0.7145661101085008/1 [00:00<00:00,  7.14it/s]libgcc-ng-8.2.0      | 7.6 MB    | :  93% 0.9290257028551405/1 [00:01<00:00,  1.64s/it]libgcc-ng-8.2.0      | 7.6 MB    | : 100% 1.0/1 [00:01<00:00,  1.69s/it]               
readline-6.2         | 606 KB    | :   0% 0/1 [00:00<?, ?it/s]readline-6.2         | 606 KB    | :  91% 0.9051785288219096/1 [00:00<00:00,  9.03it/s]readline-6.2         | 606 KB    | : 100% 1.0/1 [00:00<00:00,  6.01it/s]               
libstdcxx-ng-8.2.0   | 2.9 MB    | :   0% 0/1 [00:00<?, ?it/s]libstdcxx-ng-8.2.0   | 2.9 MB    | :  77% 0.7741039403966257/1 [00:00<00:00,  6.66it/s]libstdcxx-ng-8.2.0   | 2.9 MB    | :  97% 0.9743005564686001/1 [00:00<00:00,  1.22it/s]libstdcxx-ng-8.2.0   | 2.9 MB    | : 100% 1.0/1 [00:00<00:00,  1.45it/s]               
openblas-0.2.14      | 3.5 MB    | :   0% 0/1 [00:00<?, ?it/s]openblas-0.2.14      | 3.5 MB    | :  76% 0.7624446040284213/1 [00:00<00:00,  7.59it/s]openblas-0.2.14      | 3.5 MB    | :  99% 0.9904071232763204/1 [00:00<00:00,  1.16s/it]openblas-0.2.14      | 3.5 MB    | : 100% 1.0/1 [00:00<00:00,  1.03it/s]               
sqlite-3.13.0        | 4.0 MB    | :   0% 0/1 [00:00<?, ?it/s]sqlite-3.13.0        | 4.0 MB    | :  77% 0.7701467578830836/1 [00:00<00:00,  7.69it/s]sqlite-3.13.0        | 4.0 MB    | : 100% 1.0/1 [00:00<00:00,  1.00it/s]               
pytest-3.0.5         | 266 KB    | :   0% 0/1 [00:00<?, ?it/s]pytest-3.0.5         | 266 KB    | :  97% 0.9682903432104029/1 [00:00<00:00,  8.43it/s]pytest-3.0.5         | 266 KB    | : 100% 1.0/1 [00:00<00:00,  7.46it/s]               
scipy-0.16.1         | 27.8 MB   | :   0% 0/1 [00:00<?, ?it/s]scipy-0.16.1         | 27.8 MB   | :   9% 0.09426198546621792/1 [00:00<00:00,  1.06s/it]scipy-0.16.1         | 27.8 MB   | :  19% 0.1918904704133722/1 [00:00<00:00,  1.10s/it] scipy-0.16.1         | 27.8 MB   | :  39% 0.3854641905672126/1 [00:00<00:00,  1.08it/s]scipy-0.16.1         | 27.8 MB   | :  56% 0.5617846008812541/1 [00:00<00:00,  1.22it/s]scipy-0.16.1         | 27.8 MB   | :  75% 0.7504909478409699/1 [00:00<00:00,  1.36it/s]scipy-0.16.1         | 27.8 MB   | :  89% 0.8871147184423036/1 [00:04<00:00,  8.23s/it]scipy-0.16.1         | 27.8 MB   | :  98% 0.9839717139250767/1 [00:06<00:00, 13.38s/it]scipy-0.16.1         | 27.8 MB   | : 100% 1.0/1 [00:06<00:00,  6.96s/it]               
libgfortran-1.0      | 170 KB    | :   0% 0/1 [00:00<?, ?it/s]libgfortran-1.0      | 170 KB    | : 100% 1.0/1 [00:00<00:00, 16.92it/s]
cython-0.25.2        | 6.8 MB    | :   0% 0/1 [00:00<?, ?it/s]cython-0.25.2        | 6.8 MB    | :  32% 0.3196874227423468/1 [00:00<00:00,  3.19it/s]cython-0.25.2        | 6.8 MB    | :  76% 0.7606562474247449/1 [00:00<00:00,  3.27it/s]cython-0.25.2        | 6.8 MB    | :  93% 0.9317322195949738/1 [00:01<00:00,  2.02s/it]cython-0.25.2        | 6.8 MB    | : 100% 1.0/1 [00:01<00:00,  1.81s/it]               
numpy-1.10.4         | 5.9 MB    | :   0% 0/1 [00:00<?, ?it/s]numpy-1.10.4         | 5.9 MB    | :  42% 0.41989498932840097/1 [00:00<00:00,  4.20it/s]numpy-1.10.4         | 5.9 MB    | :  76% 0.757296753369056/1 [00:00<00:00,  3.64it/s]  numpy-1.10.4         | 5.9 MB    | :  93% 0.929102128149555/1 [00:01<00:00,  2.04s/it]numpy-1.10.4         | 5.9 MB    | : 100% 1.0/1 [00:01<00:00,  1.78s/it]              
tk-8.5.18            | 1.9 MB    | :   0% 0/1 [00:00<?, ?it/s]tk-8.5.18            | 1.9 MB    | :  78% 0.7802990572867059/1 [00:00<00:00,  7.80it/s]tk-8.5.18            | 1.9 MB    | : 100% 1.0/1 [00:00<00:00,  1.18it/s]               
pytest-cov-2.3.1     | 19 KB     | :   0% 0/1 [00:00<?, ?it/s]pytest-cov-2.3.1     | 19 KB     | : 100% 1.0/1 [00:00<00:00, 22.28it/s]
jpeg-9b              | 248 KB    | :   0% 0/1 [00:00<?, ?it/s]jpeg-9b              | 248 KB    | : 100% 1.0/1 [00:00<00:00, 14.53it/s]
setuptools-27.2.0    | 528 KB    | :   0% 0/1 [00:00<?, ?it/s]setuptools-27.2.0    | 528 KB    | : 100% 1.0/1 [00:00<00:00, 12.77it/s]
wheel-0.29.0         | 82 KB     | :   0% 0/1 [00:00<?, ?it/s]wheel-0.29.0         | 82 KB     | : 100% 1.0/1 [00:00<00:00, 22.04it/s]
nomkl-3.0            | 48 KB     | :   0% 0/1 [00:00<?, ?it/s]nomkl-3.0            | 48 KB     | : 100% 1.0/1 [00:00<00:00, 30.70it/s]
py-1.4.32            | 135 KB    | :   0% 0/1 [00:00<?, ?it/s]py-1.4.32            | 135 KB    | : 100% 1.0/1 [00:00<00:00, 19.42it/s]
libtiff-4.0.9        | 567 KB    | :   0% 0/1 [00:00<?, ?it/s]libtiff-4.0.9        | 567 KB    | :  95% 0.951189183599607/1 [00:00<00:00,  9.50it/s]libtiff-4.0.9        | 567 KB    | : 100% 1.0/1 [00:00<00:00,  7.57it/s]              
pip-9.0.1            | 1.7 MB    | :   0% 0/1 [00:00<?, ?it/s]pip-9.0.1            | 1.7 MB    | :  78% 0.78362348915938/1 [00:00<00:00,  5.88it/s]pip-9.0.1            | 1.7 MB    | :  96% 0.9607071987321143/1 [00:00<00:00,  1.82it/s]pip-9.0.1            | 1.7 MB    | : 100% 1.0/1 [00:00<00:00,  1.94it/s]               
libpng-1.6.34        | 334 KB    | :   0% 0/1 [00:00<?, ?it/s]libpng-1.6.34        | 334 KB    | : 100% 1.0/1 [00:00<00:00, 12.21it/s]
python-3.4.5         | 15.2 MB   | :   0% 0/1 [00:00<?, ?it/s]python-3.4.5         | 15.2 MB   | :   9% 0.09006800319176281/1 [00:00<00:01,  1.12s/it]python-3.4.5         | 15.2 MB   | :  20% 0.20400017816937732/1 [00:00<00:00,  1.05s/it]python-3.4.5         | 15.2 MB   | :  34% 0.3356380289881076/1 [00:00<00:00,  1.03it/s] python-3.4.5         | 15.2 MB   | :  48% 0.48036268368940166/1 [00:00<00:00,  1.13it/s]python-3.4.5         | 15.2 MB   | :  64% 0.6404835782525355/1 [00:00<00:00,  1.24it/s] python-3.4.5         | 15.2 MB   | :  76% 0.7556452879493413/1 [00:00<00:00,  1.09it/s]python-3.4.5         | 15.2 MB   | :  86% 0.8617510409971871/1 [00:02<00:00,  4.55s/it]python-3.4.5         | 15.2 MB   | :  94% 0.9383473343098402/1 [00:03<00:00,  8.15s/it]python-3.4.5         | 15.2 MB   | :  99% 0.9937737978124634/1 [00:04<00:00, 10.11s/it]python-3.4.5         | 15.2 MB   | : 100% 1.0/1 [00:04<00:00,  4.30s/it]               
blas-1.0             | 48 KB     | :   0% 0/1 [00:00<?, ?it/s]blas-1.0             | 48 KB     | : 100% 1.0/1 [00:00<00:00, 18.53it/s]
freetype-2.5.5       | 2.5 MB    | :   0% 0/1 [00:00<?, ?it/s]freetype-2.5.5       | 2.5 MB    | :  77% 0.7692386817745429/1 [00:00<00:00,  6.91it/s]freetype-2.5.5       | 2.5 MB    | :  98% 0.9770164449396067/1 [00:00<00:00,  1.67it/s]freetype-2.5.5       | 2.5 MB    | : 100% 1.0/1 [00:00<00:00,  1.92it/s]               
Preparing transaction: | / - \ | done
Verifying transaction: - \ | / - \ | / - \ | / - \ | / - \ | / - \ | done
Executing transaction: - \ | / - \ | / done
#
# To activate this environment, use:
# > source activate testenv
#
# To deactivate an active environment, use:
# > source deactivate
#

Collecting pytest==3.5
  Using cached https://files.pythonhosted.org/packages/ed/96/271c93f75212c06e2a7ec3e2fa8a9c90acee0a4838dc05bf379ea09aae31/pytest-3.5.0-py2.py3-none-any.whl
Requirement already satisfied: setuptools in /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/setuptools-27.2.0-py3.4.egg (from pytest==3.5)
Collecting more-itertools>=4.0.0 (from pytest==3.5)
  Using cached https://files.pythonhosted.org/packages/79/b1/eace304ef66bd7d3d8b2f78cc374b73ca03bc53664d78151e9df3b3996cc/more_itertools-4.3.0-py3-none-any.whl
Collecting attrs>=17.4.0 (from pytest==3.5)
  Using cached https://files.pythonhosted.org/packages/3a/e1/5f9023cc983f1a628a8c2fd051ad19e76ff7b142a0faf329336f9a62a514/attrs-18.2.0-py2.py3-none-any.whl
Collecting six>=1.10.0 (from pytest==3.5)
  Using cached https://files.pythonhosted.org/packages/67/4b/141a581104b1f6397bfa78ac9d43d8ad29a7ca43ea90a2d863fe3056e86a/six-1.11.0-py2.py3-none-any.whl
Collecting py>=1.5.0 (from pytest==3.5)
  Using cached https://files.pythonhosted.org/packages/c8/47/d179b80ab1dc1bfd46a0c87e391be47e6c7ef5831a9c138c5c49d1756288/py-1.6.0-py2.py3-none-any.whl
Collecting pluggy<0.7,>=0.5 (from pytest==3.5)
  Using cached https://files.pythonhosted.org/packages/ba/65/ded3bc40bbf8d887f262f150fbe1ae6637765b5c9534bd55690ed2c0b0f7/pluggy-0.6.0-py3-none-any.whl
Installing collected packages: six, more-itertools, attrs, py, pluggy, pytest
  Found existing installation: py 1.4.32
    Uninstalling py-1.4.32:
      Successfully uninstalled py-1.4.32
  Found existing installation: pytest 3.0.5
    Uninstalling pytest-3.0.5:
      Successfully uninstalled pytest-3.0.5
Successfully installed attrs-18.2.0 more-itertools-4.3.0 pluggy-0.6.0 py-1.6.0 pytest-3.5.0 six-1.11.0
Requirement already satisfied: coverage in /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages
Collecting codecov
  Using cached https://files.pythonhosted.org/packages/8b/28/4c1950a61c3c5786f0f34d643d0d28ec832433c9a7c0bd157690d4eb1d5f/codecov-2.0.15-py2.py3-none-any.whl
Collecting requests>=2.7.9 (from codecov)
  Using cached https://files.pythonhosted.org/packages/65/47/7e02164a2a3db50ed6d8a6ab1d6d60b69c4c3fdf57a284257925dfc12bda/requests-2.19.1-py2.py3-none-any.whl
Collecting idna<2.8,>=2.5 (from requests>=2.7.9->codecov)
  Using cached https://files.pythonhosted.org/packages/4b/2a/0276479a4b3caeb8a8c1af2f8e4355746a97fab05a372e4a2c6a6b876165/idna-2.7-py2.py3-none-any.whl
Collecting urllib3<1.24,>=1.21.1 (from requests>=2.7.9->codecov)
  Using cached https://files.pythonhosted.org/packages/bd/c9/6fdd990019071a4a32a5e7cb78a1d92c53851ef4f56f62a3486e6a7d8ffb/urllib3-1.23-py2.py3-none-any.whl
Collecting chardet<3.1.0,>=3.0.2 (from requests>=2.7.9->codecov)
  Using cached https://files.pythonhosted.org/packages/bc/a9/01ffebfb562e4274b6487b4bb1ddec7ca55ec7510b22e4c51f14098443b8/chardet-3.0.4-py2.py3-none-any.whl
Collecting certifi>=2017.4.17 (from requests>=2.7.9->codecov)
  Using cached https://files.pythonhosted.org/packages/df/f7/04fee6ac349e915b82171f8e23cee63644d83663b34c539f7a09aed18f9e/certifi-2018.8.24-py2.py3-none-any.whl
Installing collected packages: idna, urllib3, chardet, certifi, requests, codecov
Successfully installed certifi-2018.8.24 chardet-3.0.4 codecov-2.0.15 idna-2.7 requests-2.19.1 urllib3-1.23
Python 3.4.5 :: Continuum Analytics, Inc.
numpy 1.10.4
scipy 0.16.1
Partial import of sklearn during the build process.
[39mblas_opt_info:[0m
[39mblas_mkl_info:[0m
[39m  libraries mkl,vml,guide not found in ['/home/travis/miniconda/envs/testenv/lib'][0m
[39m  NOT AVAILABLE[0m
[39m[0m
[39mopenblas_info:[0m
/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/distutils/system_info.py:635: UserWarning: Specified path  is invalid.
  warnings.warn('Specified path %s is invalid.' % d)
[39m  FOUND:[0m
[39m    library_dirs = ['/home/travis/miniconda/envs/testenv/lib'][0m
[39m    libraries = ['openblas'][0m
[39m    language = c[0m
[39m    define_macros = [('HAVE_CBLAS', None)][0m
[39m[0m
[39m  FOUND:[0m
[39m    library_dirs = ['/home/travis/miniconda/envs/testenv/lib'][0m
[39m    libraries = ['openblas'][0m
[39m    language = c[0m
[39m    define_macros = [('HAVE_CBLAS', None)][0m
[39m[0m
sklearn/manifold/_barnes_hut_tsne.pyx: cannot find cimported module 'sklearn.neighbors'
Compiling sklearn/__check_build/_check_build.pyx because it changed.
Compiling sklearn/cluster/_dbscan_inner.pyx because it changed.
Compiling sklearn/cluster/_optics_inner.pyx because it changed.
Compiling sklearn/cluster/_hierarchical.pyx because it changed.
Compiling sklearn/cluster/_k_means_elkan.pyx because it changed.
Compiling sklearn/cluster/_k_means.pyx because it changed.
Compiling sklearn/datasets/_svmlight_format.pyx because it changed.
Compiling sklearn/decomposition/_online_lda.pyx because it changed.
Compiling sklearn/decomposition/cdnmf_fast.pyx because it changed.
Compiling sklearn/ensemble/_gradient_boosting.pyx because it changed.
Compiling sklearn/feature_extraction/_hashing.pyx because it changed.
Compiling sklearn/manifold/_utils.pyx because it changed.
Compiling sklearn/manifold/_barnes_hut_tsne.pyx because it changed.
Compiling sklearn/metrics/cluster/expected_mutual_info_fast.pyx because it changed.
Compiling sklearn/metrics/pairwise_fast.pyx because it changed.
Compiling sklearn/neighbors/ball_tree.pyx because it changed.
Compiling sklearn/neighbors/kd_tree.pyx because it changed.
Compiling sklearn/neighbors/dist_metrics.pyx because it changed.
Compiling sklearn/neighbors/typedefs.pyx because it changed.
Compiling sklearn/neighbors/quad_tree.pyx because it changed.
Compiling sklearn/tree/_tree.pyx because it changed.
Compiling sklearn/tree/_splitter.pyx because it changed.
Compiling sklearn/tree/_criterion.pyx because it changed.
Compiling sklearn/tree/_utils.pyx because it changed.
Compiling sklearn/svm/libsvm.pyx because it changed.
Compiling sklearn/svm/liblinear.pyx because it changed.
Compiling sklearn/svm/libsvm_sparse.pyx because it changed.
Compiling sklearn/_isotonic.pyx because it changed.
Compiling sklearn/linear_model/cd_fast.pyx because it changed.
Compiling sklearn/linear_model/sgd_fast.pyx because it changed.
Compiling sklearn/linear_model/sag_fast.pyx because it changed.
Compiling sklearn/utils/sparsefuncs_fast.pyx because it changed.
Compiling sklearn/utils/arrayfuncs.pyx because it changed.
Compiling sklearn/utils/murmurhash.pyx because it changed.
Compiling sklearn/utils/lgamma.pyx because it changed.
Compiling sklearn/utils/graph_shortest_path.pyx because it changed.
Compiling sklearn/utils/fast_dict.pyx because it changed.
Compiling sklearn/utils/seq_dataset.pyx because it changed.
Compiling sklearn/utils/weight_vector.pyx because it changed.
Compiling sklearn/utils/_random.pyx because it changed.
Compiling sklearn/utils/_logistic_sigmoid.pyx because it changed.
[ 1/41] Cythonizing sklearn/__check_build/_check_build.pyx
[ 2/41] Cythonizing sklearn/_isotonic.pyx
[ 3/41] Cythonizing sklearn/cluster/_dbscan_inner.pyx
[ 4/41] Cythonizing sklearn/cluster/_hierarchical.pyx
[ 5/41] Cythonizing sklearn/cluster/_k_means.pyx
[ 6/41] Cythonizing sklearn/cluster/_k_means_elkan.pyx
[ 7/41] Cythonizing sklearn/cluster/_optics_inner.pyx
[ 8/41] Cythonizing sklearn/datasets/_svmlight_format.pyx
[ 9/41] Cythonizing sklearn/decomposition/_online_lda.pyx
[10/41] Cythonizing sklearn/decomposition/cdnmf_fast.pyx
[11/41] Cythonizing sklearn/ensemble/_gradient_boosting.pyx
[12/41] Cythonizing sklearn/feature_extraction/_hashing.pyx
[13/41] Cythonizing sklearn/linear_model/cd_fast.pyx
[14/41] Cythonizing sklearn/linear_model/sag_fast.pyx
[15/41] Cythonizing sklearn/linear_model/sgd_fast.pyx
[16/41] Cythonizing sklearn/manifold/_barnes_hut_tsne.pyx
[17/41] Cythonizing sklearn/manifold/_utils.pyx
[18/41] Cythonizing sklearn/metrics/cluster/expected_mutual_info_fast.pyx
[19/41] Cythonizing sklearn/metrics/pairwise_fast.pyx
[20/41] Cythonizing sklearn/neighbors/ball_tree.pyx
[21/41] Cythonizing sklearn/neighbors/dist_metrics.pyx
[22/41] Cythonizing sklearn/neighbors/kd_tree.pyx
[23/41] Cythonizing sklearn/neighbors/quad_tree.pyx
[24/41] Cythonizing sklearn/neighbors/typedefs.pyx
[25/41] Cythonizing sklearn/svm/liblinear.pyx
[26/41] Cythonizing sklearn/svm/libsvm.pyx
[27/41] Cythonizing sklearn/svm/libsvm_sparse.pyx
[28/41] Cythonizing sklearn/tree/_criterion.pyx
[29/41] Cythonizing sklearn/tree/_splitter.pyx
[30/41] Cythonizing sklearn/tree/_tree.pyx
[31/41] Cythonizing sklearn/tree/_utils.pyx
[32/41] Cythonizing sklearn/utils/_logistic_sigmoid.pyx
[33/41] Cythonizing sklearn/utils/_random.pyx
[34/41] Cythonizing sklearn/utils/arrayfuncs.pyx
[35/41] Cythonizing sklearn/utils/fast_dict.pyx
[36/41] Cythonizing sklearn/utils/graph_shortest_path.pyx
[37/41] Cythonizing sklearn/utils/lgamma.pyx
[38/41] Cythonizing sklearn/utils/murmurhash.pyx
[39/41] Cythonizing sklearn/utils/seq_dataset.pyx
[40/41] Cythonizing sklearn/utils/sparsefuncs_fast.pyx
[41/41] Cythonizing sklearn/utils/weight_vector.pyx
[39mrunning develop[0m
[39mrunning build_scripts[0m
[39mrunning egg_info[0m
[39mrunning build_src[0m
[39mbuild_src[0m
[39mbuilding library "libsvm-skl" sources[0m
[39mbuilding extension "sklearn.__check_build._check_build" sources[0m
[39mbuilding extension "sklearn.cluster._dbscan_inner" sources[0m
[39mbuilding extension "sklearn.cluster._optics_inner" sources[0m
[39mbuilding extension "sklearn.cluster._hierarchical" sources[0m
[39mbuilding extension "sklearn.cluster._k_means_elkan" sources[0m
[39mbuilding extension "sklearn.cluster._k_means" sources[0m
[39mbuilding extension "sklearn.datasets._svmlight_format" sources[0m
[39mbuilding extension "sklearn.decomposition._online_lda" sources[0m
[39mbuilding extension "sklearn.decomposition.cdnmf_fast" sources[0m
[39mbuilding extension "sklearn.ensemble._gradient_boosting" sources[0m
[39mbuilding extension "sklearn.feature_extraction._hashing" sources[0m
[39mbuilding extension "sklearn.manifold._utils" sources[0m
[39mbuilding extension "sklearn.manifold._barnes_hut_tsne" sources[0m
[39mbuilding extension "sklearn.metrics.cluster.expected_mutual_info_fast" sources[0m
[39mbuilding extension "sklearn.metrics.pairwise_fast" sources[0m
[39mbuilding extension "sklearn.neighbors.ball_tree" sources[0m
[39mbuilding extension "sklearn.neighbors.kd_tree" sources[0m
[39mbuilding extension "sklearn.neighbors.dist_metrics" sources[0m
[39mbuilding extension "sklearn.neighbors.typedefs" sources[0m
[39mbuilding extension "sklearn.neighbors.quad_tree" sources[0m
[39mbuilding extension "sklearn.tree._tree" sources[0m
[39mbuilding extension "sklearn.tree._splitter" sources[0m
[39mbuilding extension "sklearn.tree._criterion" sources[0m
[39mbuilding extension "sklearn.tree._utils" sources[0m
[39mbuilding extension "sklearn.svm.libsvm" sources[0m
[39mbuilding extension "sklearn.svm.liblinear" sources[0m
[39mbuilding extension "sklearn.svm.libsvm_sparse" sources[0m
[39mbuilding extension "sklearn._isotonic" sources[0m
[39mbuilding extension "sklearn.linear_model.cd_fast" sources[0m
[39mbuilding extension "sklearn.linear_model.sgd_fast" sources[0m
[39mbuilding extension "sklearn.linear_model.sag_fast" sources[0m
[39mbuilding extension "sklearn.utils.sparsefuncs_fast" sources[0m
[39mbuilding extension "sklearn.utils.arrayfuncs" sources[0m
[39mbuilding extension "sklearn.utils.murmurhash" sources[0m
[39mbuilding extension "sklearn.utils.lgamma" sources[0m
[39mbuilding extension "sklearn.utils.graph_shortest_path" sources[0m
[39mbuilding extension "sklearn.utils.fast_dict" sources[0m
[39mbuilding extension "sklearn.utils.seq_dataset" sources[0m
[39mbuilding extension "sklearn.utils.weight_vector" sources[0m
[39mbuilding extension "sklearn.utils._random" sources[0m
[39mbuilding extension "sklearn.utils._logistic_sigmoid" sources[0m
[39mbuilding data_files sources[0m
[39mbuild_src: building npy-pkg config files[0m
[39mcreating scikit_learn.egg-info[0m
[39mwriting requirements to scikit_learn.egg-info/requires.txt[0m
[39mwriting scikit_learn.egg-info/PKG-INFO[0m
[39mwriting dependency_links to scikit_learn.egg-info/dependency_links.txt[0m
[39mwriting top-level names to scikit_learn.egg-info/top_level.txt[0m
[39mwriting manifest file 'scikit_learn.egg-info/SOURCES.txt'[0m
[39mreading manifest file 'scikit_learn.egg-info/SOURCES.txt'[0m
[39mreading manifest template 'MANIFEST.in'[0m
[39mwriting manifest file 'scikit_learn.egg-info/SOURCES.txt'[0m
[39mrunning build_ext[0m
[39mcustomize UnixCCompiler[0m
[39mcustomize UnixCCompiler using build_clib[0m
[39mbuilding 'libsvm-skl' library[0m
[39mcompiling C++ sources[0m
[39mC compiler: /usr/lib/ccache/g++ -DNDEBUG -g -fwrapv -O3 -Wall -fPIC
[0m
[39mcreating build[0m
[39mcreating build/temp.linux-x86_64-3.4[0m
[39mcreating build/temp.linux-x86_64-3.4/sklearn[0m
[39mcreating build/temp.linux-x86_64-3.4/sklearn/svm[0m
[39mcreating build/temp.linux-x86_64-3.4/sklearn/svm/src[0m
[39mcreating build/temp.linux-x86_64-3.4/sklearn/svm/src/libsvm[0m
[39mcompile options: '-I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/include/python3.4m -I/home/travis/miniconda/envs/testenv/include/python3.4m -c'[0m
[39mg++: sklearn/svm/src/libsvm/libsvm_template.cpp[0m
[39mar: adding 1 object files to build/temp.linux-x86_64-3.4/liblibsvm-skl.a[0m
[39mcustomize UnixCCompiler[0m
[39mcustomize UnixCCompiler using build_ext[0m
[31mresetting extension 'sklearn.svm.liblinear' language from 'c' to 'c++'.[0m
[39mcustomize UnixCCompiler[0m
[39mcustomize UnixCCompiler using build_ext[0m
[39mbuilding 'sklearn.__check_build._check_build' extension[0m
[39mcompiling C sources[0m
[39mC compiler: /usr/lib/ccache/gcc -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC
[0m
[39mcreating build/temp.linux-x86_64-3.4/sklearn/__check_build[0m
[39mcompile options: '-I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/include/python3.4m -I/home/travis/miniconda/envs/testenv/include/python3.4m -c'[0m
[39mgcc: sklearn/__check_build/_check_build.c[0m
[39mgcc -pthread -shared -L/home/travis/miniconda/envs/testenv/lib -Wl,-rpath=/home/travis/miniconda/envs/testenv/lib,--no-as-needed build/temp.linux-x86_64-3.4/sklearn/__check_build/_check_build.o -L/home/travis/miniconda/envs/testenv/lib -Lbuild/temp.linux-x86_64-3.4 -lpython3.4m -o sklearn/__check_build/_check_build.cpython-34m.so[0m
[39mbuilding 'sklearn.cluster._dbscan_inner' extension[0m
[39mcompiling C++ sources[0m
[39mC compiler: /usr/lib/ccache/g++ -DNDEBUG -g -fwrapv -O3 -Wall -fPIC
[0m
[39mcreating build/temp.linux-x86_64-3.4/sklearn/cluster[0m
[39mcompile options: '-I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/include/python3.4m -I/home/travis/miniconda/envs/testenv/include/python3.4m -c'[0m
[39mg++: sklearn/cluster/_dbscan_inner.cpp[0m
In file included from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarraytypes.h:1781:0,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarrayobject.h:18,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                 from sklearn/cluster/_dbscan_inner.cpp:470:
/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:15:2: warning: #warning "Using deprecated NumPy API, disable it by " "#defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
 #warning "Using deprecated NumPy API, disable it by " \
  ^
[39m/usr/lib/ccache/g++ -pthread -shared -L/home/travis/miniconda/envs/testenv/lib -Wl,-rpath=/home/travis/miniconda/envs/testenv/lib,--no-as-needed build/temp.linux-x86_64-3.4/sklearn/cluster/_dbscan_inner.o -L/home/travis/miniconda/envs/testenv/lib -Lbuild/temp.linux-x86_64-3.4 -lpython3.4m -o sklearn/cluster/_dbscan_inner.cpython-34m.so[0m
[39mbuilding 'sklearn.cluster._optics_inner' extension[0m
[39mcompiling C sources[0m
[39mC compiler: /usr/lib/ccache/gcc -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC
[0m
[39mcompile options: '-I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/include/python3.4m -I/home/travis/miniconda/envs/testenv/include/python3.4m -c'[0m
[39mgcc: sklearn/cluster/_optics_inner.c[0m
In file included from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarraytypes.h:1781:0,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarrayobject.h:18,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                 from sklearn/cluster/_optics_inner.c:453:
/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:15:2: warning: #warning "Using deprecated NumPy API, disable it by " "#defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
 #warning "Using deprecated NumPy API, disable it by " \
  ^
sklearn/cluster/_optics_inner.c: In function ‘__pyx_pw_7sklearn_7cluster_13_optics_inner_1quick_scan’:
sklearn/cluster/_optics_inner.c:20541:35: warning: ‘__pyx_v_idx’ may be used uninitialized in this function [-Wmaybe-uninitialized]
             return PyInt_FromLong((long) value);
                                   ^
sklearn/cluster/_optics_inner.c:2132:7: note: ‘__pyx_v_idx’ was declared here
   int __pyx_v_idx;
       ^
[39mgcc -pthread -shared -L/home/travis/miniconda/envs/testenv/lib -Wl,-rpath=/home/travis/miniconda/envs/testenv/lib,--no-as-needed build/temp.linux-x86_64-3.4/sklearn/cluster/_optics_inner.o -L/home/travis/miniconda/envs/testenv/lib -Lbuild/temp.linux-x86_64-3.4 -lm -lpython3.4m -o sklearn/cluster/_optics_inner.cpython-34m.so[0m
[39mbuilding 'sklearn.cluster._hierarchical' extension[0m
[39mcompiling C++ sources[0m
[39mC compiler: /usr/lib/ccache/g++ -DNDEBUG -g -fwrapv -O3 -Wall -fPIC
[0m
[39mcompile options: '-I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/include/python3.4m -I/home/travis/miniconda/envs/testenv/include/python3.4m -c'[0m
[39mg++: sklearn/cluster/_hierarchical.cpp[0m
In file included from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarraytypes.h:1781:0,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarrayobject.h:18,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                 from sklearn/cluster/_hierarchical.cpp:468:
/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:15:2: warning: #warning "Using deprecated NumPy API, disable it by " "#defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
 #warning "Using deprecated NumPy API, disable it by " \
  ^
[39m/usr/lib/ccache/g++ -pthread -shared -L/home/travis/miniconda/envs/testenv/lib -Wl,-rpath=/home/travis/miniconda/envs/testenv/lib,--no-as-needed build/temp.linux-x86_64-3.4/sklearn/cluster/_hierarchical.o -L/home/travis/miniconda/envs/testenv/lib -Lbuild/temp.linux-x86_64-3.4 -lm -lpython3.4m -o sklearn/cluster/_hierarchical.cpython-34m.so[0m
[39mbuilding 'sklearn.cluster._k_means_elkan' extension[0m
[39mcompiling C sources[0m
[39mC compiler: /usr/lib/ccache/gcc -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC
[0m
[39mcompile options: '-I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/include/python3.4m -I/home/travis/miniconda/envs/testenv/include/python3.4m -c'[0m
[39mgcc: sklearn/cluster/_k_means_elkan.c[0m
In file included from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarraytypes.h:1781:0,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarrayobject.h:18,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                 from sklearn/cluster/_k_means_elkan.c:453:
/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:15:2: warning: #warning "Using deprecated NumPy API, disable it by " "#defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
 #warning "Using deprecated NumPy API, disable it by " \
  ^
[39mgcc -pthread -shared -L/home/travis/miniconda/envs/testenv/lib -Wl,-rpath=/home/travis/miniconda/envs/testenv/lib,--no-as-needed build/temp.linux-x86_64-3.4/sklearn/cluster/_k_means_elkan.o -L/home/travis/miniconda/envs/testenv/lib -Lbuild/temp.linux-x86_64-3.4 -lm -lpython3.4m -o sklearn/cluster/_k_means_elkan.cpython-34m.so[0m
[39mbuilding 'sklearn.cluster._k_means' extension[0m
[39mcompiling C sources[0m
[39mC compiler: /usr/lib/ccache/gcc -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC
[0m
[39mcompile options: '-DHAVE_CBLAS -Isklearn/src/cblas -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/include/python3.4m -I/home/travis/miniconda/envs/testenv/include/python3.4m -c'[0m
[39mgcc: sklearn/cluster/_k_means.c[0m
In file included from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarraytypes.h:1781:0,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarrayobject.h:18,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                 from sklearn/cluster/_k_means.c:467:
/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:15:2: warning: #warning "Using deprecated NumPy API, disable it by " "#defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
 #warning "Using deprecated NumPy API, disable it by " \
  ^
sklearn/cluster/_k_means.c: In function ‘__pyx_fuse_0__pyx_f_7sklearn_7cluster_8_k_means__assign_labels_array’:
sklearn/cluster/_k_means.c:3609:15: warning: assignment from incompatible pointer type [enabled by default]
   __pyx_v_dot = cblas_sdot;
               ^
sklearn/cluster/_k_means.c: In function ‘__pyx_fuse_1__pyx_f_7sklearn_7cluster_8_k_means__assign_labels_array’:
sklearn/cluster/_k_means.c:4395:15: warning: assignment from incompatible pointer type [enabled by default]
   __pyx_v_dot = cblas_ddot;
               ^
sklearn/cluster/_k_means.c: In function ‘__pyx_fuse_0__pyx_f_7sklearn_7cluster_8_k_means__assign_labels_csr’:
sklearn/cluster/_k_means.c:5887:15: warning: assignment from incompatible pointer type [enabled by default]
   __pyx_v_dot = cblas_sdot;
               ^
sklearn/cluster/_k_means.c: In function ‘__pyx_fuse_1__pyx_f_7sklearn_7cluster_8_k_means__assign_labels_csr’:
sklearn/cluster/_k_means.c:6738:15: warning: assignment from incompatible pointer type [enabled by default]
   __pyx_v_dot = cblas_ddot;
               ^
[39mgcc -pthread -shared -L/home/travis/miniconda/envs/testenv/lib -Wl,-rpath=/home/travis/miniconda/envs/testenv/lib,--no-as-needed build/temp.linux-x86_64-3.4/sklearn/cluster/_k_means.o -L/home/travis/miniconda/envs/testenv/lib -L/home/travis/miniconda/envs/testenv/lib -Lbuild/temp.linux-x86_64-3.4 -lopenblas -lm -lpython3.4m -o sklearn/cluster/_k_means.cpython-34m.so[0m
[39mbuilding 'sklearn.datasets._svmlight_format' extension[0m
[39mcompiling C sources[0m
[39mC compiler: /usr/lib/ccache/gcc -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC
[0m
[39mcreating build/temp.linux-x86_64-3.4/sklearn/datasets[0m
[39mcompile options: '-I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/include/python3.4m -I/home/travis/miniconda/envs/testenv/include/python3.4m -c'[0m
[39mgcc: sklearn/datasets/_svmlight_format.c[0m
In file included from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarraytypes.h:1781:0,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarrayobject.h:18,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                 from sklearn/datasets/_svmlight_format.c:451:
/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:15:2: warning: #warning "Using deprecated NumPy API, disable it by " "#defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
 #warning "Using deprecated NumPy API, disable it by " \
  ^
[39mgcc -pthread -shared -L/home/travis/miniconda/envs/testenv/lib -Wl,-rpath=/home/travis/miniconda/envs/testenv/lib,--no-as-needed build/temp.linux-x86_64-3.4/sklearn/datasets/_svmlight_format.o -L/home/travis/miniconda/envs/testenv/lib -Lbuild/temp.linux-x86_64-3.4 -lpython3.4m -o sklearn/datasets/_svmlight_format.cpython-34m.so[0m
[39mbuilding 'sklearn.decomposition._online_lda' extension[0m
[39mcompiling C sources[0m
[39mC compiler: /usr/lib/ccache/gcc -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC
[0m
[39mcreating build/temp.linux-x86_64-3.4/sklearn/decomposition[0m
[39mcompile options: '-I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/include/python3.4m -I/home/travis/miniconda/envs/testenv/include/python3.4m -c'[0m
[39mgcc: sklearn/decomposition/_online_lda.c[0m
In file included from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarraytypes.h:1781:0,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarrayobject.h:18,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                 from sklearn/decomposition/_online_lda.c:454:
/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:15:2: warning: #warning "Using deprecated NumPy API, disable it by " "#defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
 #warning "Using deprecated NumPy API, disable it by " \
  ^
[39mgcc -pthread -shared -L/home/travis/miniconda/envs/testenv/lib -Wl,-rpath=/home/travis/miniconda/envs/testenv/lib,--no-as-needed build/temp.linux-x86_64-3.4/sklearn/decomposition/_online_lda.o -L/home/travis/miniconda/envs/testenv/lib -Lbuild/temp.linux-x86_64-3.4 -lm -lpython3.4m -o sklearn/decomposition/_online_lda.cpython-34m.so[0m
[39mbuilding 'sklearn.decomposition.cdnmf_fast' extension[0m
[39mcompiling C sources[0m
[39mC compiler: /usr/lib/ccache/gcc -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC
[0m
[39mcompile options: '-I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/include/python3.4m -I/home/travis/miniconda/envs/testenv/include/python3.4m -c'[0m
[39mgcc: sklearn/decomposition/cdnmf_fast.c[0m
[39mgcc -pthread -shared -L/home/travis/miniconda/envs/testenv/lib -Wl,-rpath=/home/travis/miniconda/envs/testenv/lib,--no-as-needed build/temp.linux-x86_64-3.4/sklearn/decomposition/cdnmf_fast.o -L/home/travis/miniconda/envs/testenv/lib -Lbuild/temp.linux-x86_64-3.4 -lm -lpython3.4m -o sklearn/decomposition/cdnmf_fast.cpython-34m.so[0m
[39mbuilding 'sklearn.ensemble._gradient_boosting' extension[0m
[39mcompiling C sources[0m
[39mC compiler: /usr/lib/ccache/gcc -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC
[0m
[39mcreating build/temp.linux-x86_64-3.4/sklearn/ensemble[0m
[39mcompile options: '-I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/include/python3.4m -I/home/travis/miniconda/envs/testenv/include/python3.4m -c'[0m
[39mgcc: sklearn/ensemble/_gradient_boosting.c[0m
In file included from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarraytypes.h:1781:0,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarrayobject.h:18,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                 from sklearn/ensemble/_gradient_boosting.c:450:
/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:15:2: warning: #warning "Using deprecated NumPy API, disable it by " "#defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
 #warning "Using deprecated NumPy API, disable it by " \
  ^
[39mgcc -pthread -shared -L/home/travis/miniconda/envs/testenv/lib -Wl,-rpath=/home/travis/miniconda/envs/testenv/lib,--no-as-needed build/temp.linux-x86_64-3.4/sklearn/ensemble/_gradient_boosting.o -L/home/travis/miniconda/envs/testenv/lib -Lbuild/temp.linux-x86_64-3.4 -lpython3.4m -o sklearn/ensemble/_gradient_boosting.cpython-34m.so[0m
[39mbuilding 'sklearn.feature_extraction._hashing' extension[0m
[39mcompiling C sources[0m
[39mC compiler: /usr/lib/ccache/gcc -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC
[0m
[39mcreating build/temp.linux-x86_64-3.4/sklearn/feature_extraction[0m
[39mcompile options: '-I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/include/python3.4m -I/home/travis/miniconda/envs/testenv/include/python3.4m -c'[0m
[39mgcc: sklearn/feature_extraction/_hashing.c[0m
In file included from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarraytypes.h:1781:0,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarrayobject.h:18,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                 from sklearn/feature_extraction/_hashing.c:454:
/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:15:2: warning: #warning "Using deprecated NumPy API, disable it by " "#defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
 #warning "Using deprecated NumPy API, disable it by " \
  ^
[39mgcc -pthread -shared -L/home/travis/miniconda/envs/testenv/lib -Wl,-rpath=/home/travis/miniconda/envs/testenv/lib,--no-as-needed build/temp.linux-x86_64-3.4/sklearn/feature_extraction/_hashing.o -L/home/travis/miniconda/envs/testenv/lib -Lbuild/temp.linux-x86_64-3.4 -lm -lpython3.4m -o sklearn/feature_extraction/_hashing.cpython-34m.so[0m
[39mbuilding 'sklearn.manifold._utils' extension[0m
[39mcompiling C sources[0m
[39mC compiler: /usr/lib/ccache/gcc -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC
[0m
[39mcreating build/temp.linux-x86_64-3.4/sklearn/manifold[0m
[39mcompile options: '-I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/include/python3.4m -I/home/travis/miniconda/envs/testenv/include/python3.4m -c'
extra options: '-O3'[0m
[39mgcc: sklearn/manifold/_utils.c[0m
In file included from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarraytypes.h:1781:0,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarrayobject.h:18,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                 from sklearn/manifold/_utils.c:458:
/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:15:2: warning: #warning "Using deprecated NumPy API, disable it by " "#defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
 #warning "Using deprecated NumPy API, disable it by " \
  ^
[39mgcc -pthread -shared -L/home/travis/miniconda/envs/testenv/lib -Wl,-rpath=/home/travis/miniconda/envs/testenv/lib,--no-as-needed build/temp.linux-x86_64-3.4/sklearn/manifold/_utils.o -L/home/travis/miniconda/envs/testenv/lib -Lbuild/temp.linux-x86_64-3.4 -lm -lpython3.4m -o sklearn/manifold/_utils.cpython-34m.so[0m
[39mbuilding 'sklearn.manifold._barnes_hut_tsne' extension[0m
[39mcompiling C sources[0m
[39mC compiler: /usr/lib/ccache/gcc -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC
[0m
[39mcompile options: '-DHAVE_CBLAS -Isklearn/src/cblas -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/include/python3.4m -I/home/travis/miniconda/envs/testenv/include/python3.4m -c'
extra options: '-O4'[0m
[39mgcc: sklearn/manifold/_barnes_hut_tsne.c[0m
In file included from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarraytypes.h:1781:0,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarrayobject.h:18,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                 from sklearn/manifold/_barnes_hut_tsne.c:468:
/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:15:2: warning: #warning "Using deprecated NumPy API, disable it by " "#defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
 #warning "Using deprecated NumPy API, disable it by " \
  ^
sklearn/manifold/_barnes_hut_tsne.c: In function ‘__pyx_f_7sklearn_8manifold_16_barnes_hut_tsne_compute_gradient_negative’:
sklearn/manifold/_barnes_hut_tsne.c:3220:9: warning: variable ‘__pyx_v_force’ set but not used [-Wunused-but-set-variable]
   float __pyx_v_force[3];
         ^
sklearn/manifold/_barnes_hut_tsne.c:3219:9: warning: variable ‘__pyx_v_iQ’ set but not used [-Wunused-but-set-variable]
   float __pyx_v_iQ[1];
         ^
sklearn/manifold/_barnes_hut_tsne.c: In function ‘__pyx_pf_7sklearn_8manifold_16_barnes_hut_tsne_gradient.isra.29’:
sklearn/manifold/_barnes_hut_tsne.c:3121:83: warning: ‘__pyx_v_buff[1]’ may be used uninitialized in this function [-Wmaybe-uninitialized]
         (__pyx_v_pos_f[__pyx_t_20]) = ((__pyx_v_pos_f[__pyx_t_20]) + (__pyx_v_dij * (__pyx_v_buff[__pyx_v_ax])));
                                                                                   ^
sklearn/manifold/_barnes_hut_tsne.c:2797:9: note: ‘__pyx_v_buff[1]’ was declared here
   float __pyx_v_buff[3];
         ^
sklearn/manifold/_barnes_hut_tsne.c:3121:83: warning: ‘__pyx_v_buff[0]’ may be used uninitialized in this function [-Wmaybe-uninitialized]
         (__pyx_v_pos_f[__pyx_t_20]) = ((__pyx_v_pos_f[__pyx_t_20]) + (__pyx_v_dij * (__pyx_v_buff[__pyx_v_ax])));
                                                                                   ^
sklearn/manifold/_barnes_hut_tsne.c:2797:9: note: ‘__pyx_v_buff[0]’ was declared here
   float __pyx_v_buff[3];
         ^
sklearn/manifold/_barnes_hut_tsne.c:3653:74: warning: ‘__pyx_v_neg_force[2]’ may be used uninitialized in this function [-Wmaybe-uninitialized]
       (__pyx_v_neg_f[((__pyx_v_i * __pyx_v_n_dimensions) + __pyx_v_ax)]) = (__pyx_v_neg_force[__pyx_v_ax]);
                                                                          ^
sklearn/manifold/_barnes_hut_tsne.c:3221:9: note: ‘__pyx_v_neg_force[2]’ was declared here
   float __pyx_v_neg_force[3];
         ^
sklearn/manifold/_barnes_hut_tsne.c:3653:74: warning: ‘__pyx_v_neg_force[1]’ may be used uninitialized in this function [-Wmaybe-uninitialized]
       (__pyx_v_neg_f[((__pyx_v_i * __pyx_v_n_dimensions) + __pyx_v_ax)]) = (__pyx_v_neg_force[__pyx_v_ax]);
                                                                          ^
sklearn/manifold/_barnes_hut_tsne.c:3221:9: note: ‘__pyx_v_neg_force[1]’ was declared here
   float __pyx_v_neg_force[3];
         ^
sklearn/manifold/_barnes_hut_tsne.c:3653:74: warning: ‘__pyx_v_neg_force[0]’ may be used uninitialized in this function [-Wmaybe-uninitialized]
       (__pyx_v_neg_f[((__pyx_v_i * __pyx_v_n_dimensions) + __pyx_v_ax)]) = (__pyx_v_neg_force[__pyx_v_ax]);
                                                                          ^
sklearn/manifold/_barnes_hut_tsne.c:3221:9: note: ‘__pyx_v_neg_force[0]’ was declared here
   float __pyx_v_neg_force[3];
         ^
[39mgcc -pthread -shared -L/home/travis/miniconda/envs/testenv/lib -Wl,-rpath=/home/travis/miniconda/envs/testenv/lib,--no-as-needed build/temp.linux-x86_64-3.4/sklearn/manifold/_barnes_hut_tsne.o -L/home/travis/miniconda/envs/testenv/lib -L/home/travis/miniconda/envs/testenv/lib -Lbuild/temp.linux-x86_64-3.4 -lopenblas -lpython3.4m -o sklearn/manifold/_barnes_hut_tsne.cpython-34m.so[0m
[39mbuilding 'sklearn.metrics.cluster.expected_mutual_info_fast' extension[0m
[39mcompiling C sources[0m
[39mC compiler: /usr/lib/ccache/gcc -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC
[0m
[39mcreating build/temp.linux-x86_64-3.4/sklearn/metrics[0m
[39mcreating build/temp.linux-x86_64-3.4/sklearn/metrics/cluster[0m
[39mcompile options: '-I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/include/python3.4m -I/home/travis/miniconda/envs/testenv/include/python3.4m -c'[0m
[39mgcc: sklearn/metrics/cluster/expected_mutual_info_fast.c[0m
In file included from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarraytypes.h:1781:0,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarrayobject.h:18,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                 from sklearn/metrics/cluster/expected_mutual_info_fast.c:454:
/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:15:2: warning: #warning "Using deprecated NumPy API, disable it by " "#defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
 #warning "Using deprecated NumPy API, disable it by " \
  ^
[39mgcc -pthread -shared -L/home/travis/miniconda/envs/testenv/lib -Wl,-rpath=/home/travis/miniconda/envs/testenv/lib,--no-as-needed build/temp.linux-x86_64-3.4/sklearn/metrics/cluster/expected_mutual_info_fast.o -L/home/travis/miniconda/envs/testenv/lib -Lbuild/temp.linux-x86_64-3.4 -lm -lpython3.4m -o sklearn/metrics/cluster/expected_mutual_info_fast.cpython-34m.so[0m
[39mbuilding 'sklearn.metrics.pairwise_fast' extension[0m
[39mcompiling C sources[0m
[39mC compiler: /usr/lib/ccache/gcc -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC
[0m
[39mcompile options: '-DHAVE_CBLAS -Isklearn/src/cblas -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/include/python3.4m -I/home/travis/miniconda/envs/testenv/include/python3.4m -c'[0m
[39mgcc: sklearn/metrics/pairwise_fast.c[0m
In file included from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarraytypes.h:1781:0,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarrayobject.h:18,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                 from sklearn/metrics/pairwise_fast.c:466:
/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:15:2: warning: #warning "Using deprecated NumPy API, disable it by " "#defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
 #warning "Using deprecated NumPy API, disable it by " \
  ^
[39mgcc -pthread -shared -L/home/travis/miniconda/envs/testenv/lib -Wl,-rpath=/home/travis/miniconda/envs/testenv/lib,--no-as-needed build/temp.linux-x86_64-3.4/sklearn/metrics/pairwise_fast.o -L/home/travis/miniconda/envs/testenv/lib -L/home/travis/miniconda/envs/testenv/lib -Lbuild/temp.linux-x86_64-3.4 -lopenblas -lm -lpython3.4m -o sklearn/metrics/pairwise_fast.cpython-34m.so[0m
[39mbuilding 'sklearn.neighbors.ball_tree' extension[0m
[39mcompiling C sources[0m
[39mC compiler: /usr/lib/ccache/gcc -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC
[0m
[39mcreating build/temp.linux-x86_64-3.4/sklearn/neighbors[0m
[39mcompile options: '-I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/include/python3.4m -I/home/travis/miniconda/envs/testenv/include/python3.4m -c'[0m
[39mgcc: sklearn/neighbors/ball_tree.c[0m
In file included from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarraytypes.h:1781:0,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarrayobject.h:18,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                 from sklearn/neighbors/ball_tree.c:453:
/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:15:2: warning: #warning "Using deprecated NumPy API, disable it by " "#defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
 #warning "Using deprecated NumPy API, disable it by " \
  ^
sklearn/neighbors/ball_tree.c: In function ‘__pyx_f_7sklearn_9neighbors_9ball_tree_10BinaryTree__kde_single_depthfirst’:
sklearn/neighbors/ball_tree.c:20516:63: warning: ‘__pyx_v_sample_weight’ may be used uninitialized in this function [-Wmaybe-uninitialized]
         __pyx_t_12 = PyFloat_FromDouble((__pyx_v_sample_weight[(__pyx_v_idx_array[__pyx_v_i])])); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2363, __pyx_L1_error)
                                                               ^
sklearn/neighbors/ball_tree.c:20193:50: note: ‘__pyx_v_sample_weight’ was declared here
   __pyx_t_7sklearn_9neighbors_8typedefs_DTYPE_t *__pyx_v_sample_weight;
                                                  ^
sklearn/neighbors/ball_tree.c: In function ‘__pyx_f_7sklearn_9neighbors_9ball_tree_10BinaryTree__kde_single_breadthfirst’:
sklearn/neighbors/ball_tree.c:23163:52: warning: ‘__pyx_v_sample_weight’ may be used uninitialized in this function [-Wmaybe-uninitialized]
     __pyx_v_N = (__pyx_v_N + (__pyx_v_sample_weight[(__pyx_v_idx_array[__pyx_v_i])]));
                                                    ^
sklearn/neighbors/ball_tree.c:19319:50: note: ‘__pyx_v_sample_weight’ was declared here
   __pyx_t_7sklearn_9neighbors_8typedefs_DTYPE_t *__pyx_v_sample_weight;
                                                  ^
[39mgcc -pthread -shared -L/home/travis/miniconda/envs/testenv/lib -Wl,-rpath=/home/travis/miniconda/envs/testenv/lib,--no-as-needed build/temp.linux-x86_64-3.4/sklearn/neighbors/ball_tree.o -L/home/travis/miniconda/envs/testenv/lib -Lbuild/temp.linux-x86_64-3.4 -lm -lpython3.4m -o sklearn/neighbors/ball_tree.cpython-34m.so[0m
[39mbuilding 'sklearn.neighbors.kd_tree' extension[0m
[39mcompiling C sources[0m
[39mC compiler: /usr/lib/ccache/gcc -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC
[0m
[39mcompile options: '-I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/include/python3.4m -I/home/travis/miniconda/envs/testenv/include/python3.4m -c'[0m
[39mgcc: sklearn/neighbors/kd_tree.c[0m
In file included from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarraytypes.h:1781:0,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarrayobject.h:18,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                 from sklearn/neighbors/kd_tree.c:453:
/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:15:2: warning: #warning "Using deprecated NumPy API, disable it by " "#defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
 #warning "Using deprecated NumPy API, disable it by " \
  ^
sklearn/neighbors/kd_tree.c: In function ‘__pyx_f_7sklearn_9neighbors_7kd_tree_10BinaryTree__kde_single_breadthfirst’:
sklearn/neighbors/kd_tree.c:23134:52: warning: ‘__pyx_v_sample_weight’ may be used uninitialized in this function [-Wmaybe-uninitialized]
     __pyx_v_N = (__pyx_v_N + (__pyx_v_sample_weight[(__pyx_v_idx_array[__pyx_v_i])]));
                                                    ^
sklearn/neighbors/kd_tree.c:19290:50: note: ‘__pyx_v_sample_weight’ was declared here
   __pyx_t_7sklearn_9neighbors_8typedefs_DTYPE_t *__pyx_v_sample_weight;
                                                  ^
sklearn/neighbors/kd_tree.c: In function ‘__pyx_f_7sklearn_9neighbors_7kd_tree_10BinaryTree__kde_single_depthfirst’:
sklearn/neighbors/kd_tree.c:20487:63: warning: ‘__pyx_v_sample_weight’ may be used uninitialized in this function [-Wmaybe-uninitialized]
         __pyx_t_12 = PyFloat_FromDouble((__pyx_v_sample_weight[(__pyx_v_idx_array[__pyx_v_i])])); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2363, __pyx_L1_error)
                                                               ^
sklearn/neighbors/kd_tree.c:20164:50: note: ‘__pyx_v_sample_weight’ was declared here
   __pyx_t_7sklearn_9neighbors_8typedefs_DTYPE_t *__pyx_v_sample_weight;
                                                  ^
[39mgcc -pthread -shared -L/home/travis/miniconda/envs/testenv/lib -Wl,-rpath=/home/travis/miniconda/envs/testenv/lib,--no-as-needed build/temp.linux-x86_64-3.4/sklearn/neighbors/kd_tree.o -L/home/travis/miniconda/envs/testenv/lib -Lbuild/temp.linux-x86_64-3.4 -lm -lpython3.4m -o sklearn/neighbors/kd_tree.cpython-34m.so[0m
[39mbuilding 'sklearn.neighbors.dist_metrics' extension[0m
[39mcompiling C sources[0m
[39mC compiler: /usr/lib/ccache/gcc -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC
[0m
[39mcompile options: '-I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/include/python3.4m -I/home/travis/miniconda/envs/testenv/include/python3.4m -c'[0m
[39mgcc: sklearn/neighbors/dist_metrics.c[0m
In file included from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarraytypes.h:1781:0,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarrayobject.h:18,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                 from sklearn/neighbors/dist_metrics.c:454:
/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:15:2: warning: #warning "Using deprecated NumPy API, disable it by " "#defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
 #warning "Using deprecated NumPy API, disable it by " \
  ^
sklearn/neighbors/dist_metrics.c: In function ‘__pyx_f_7sklearn_9neighbors_12dist_metrics_18SEuclideanDistance_dist’:
sklearn/neighbors/dist_metrics.c:6712:94: warning: passing argument 1 of ‘__pyx_f_7sklearn_9neighbors_12dist_metrics_18SEuclideanDistance_rdist’ from incompatible pointer type [enabled by default]
   __pyx_t_1 = __pyx_f_7sklearn_9neighbors_12dist_metrics_18SEuclideanDistance_rdist(((struct __pyx_obj_7sklearn_9neighbors_12dist_metrics_DistanceMetric *)__pyx_v_self), __pyx_v_x1, __pyx_v_x2, __pyx_v_size); if (unlikely(__pyx_t_1 == -1.0)) __PYX_ERR(1, 463, __pyx_L1_error)
                                                                                              ^
sklearn/neighbors/dist_metrics.c:6517:54: note: expected ‘struct __pyx_obj_7sklearn_9neighbors_12dist_metrics_SEuclideanDistance *’ but argument is of type ‘struct __pyx_obj_7sklearn_9neighbors_12dist_metrics_DistanceMetric *’
 static __pyx_t_7sklearn_9neighbors_8typedefs_DTYPE_t __pyx_f_7sklearn_9neighbors_12dist_metrics_18SEuclideanDistance_rdist(struct __pyx_obj_7sklearn_9neighbors_12dist_metrics_SEuclideanDistance *__pyx_v_self, __pyx_t_7sklearn_9neighbors_8typedefs_DTYPE_t *__pyx_v_x1, __pyx_t_7sklearn_9neighbors_8typedefs_DTYPE_t *__pyx_v_x2, __pyx_t_7sklearn_9neighbors_8typedefs_ITYPE_t __pyx_v_size) {
                                                      ^
sklearn/neighbors/dist_metrics.c: In function ‘__pyx_f_7sklearn_9neighbors_12dist_metrics_17MinkowskiDistance_dist’:
sklearn/neighbors/dist_metrics.c:7523:93: warning: passing argument 1 of ‘__pyx_f_7sklearn_9neighbors_12dist_metrics_17MinkowskiDistance_rdist’ from incompatible pointer type [enabled by default]
   __pyx_t_1 = __pyx_f_7sklearn_9neighbors_12dist_metrics_17MinkowskiDistance_rdist(((struct __pyx_obj_7sklearn_9neighbors_12dist_metrics_DistanceMetric *)__pyx_v_self), __pyx_v_x1, __pyx_v_x2, __pyx_v_size); if (unlikely(__pyx_t_1 == -1.0)) __PYX_ERR(1, 552, __pyx_L1_error)
                                                                                             ^
sklearn/neighbors/dist_metrics.c:7444:54: note: expected ‘struct __pyx_obj_7sklearn_9neighbors_12dist_metrics_MinkowskiDistance *’ but argument is of type ‘struct __pyx_obj_7sklearn_9neighbors_12dist_metrics_DistanceMetric *’
 static __pyx_t_7sklearn_9neighbors_8typedefs_DTYPE_t __pyx_f_7sklearn_9neighbors_12dist_metrics_17MinkowskiDistance_rdist(struct __pyx_obj_7sklearn_9neighbors_12dist_metrics_MinkowskiDistance *__pyx_v_self, __pyx_t_7sklearn_9neighbors_8typedefs_DTYPE_t *__pyx_v_x1, __pyx_t_7sklearn_9neighbors_8typedefs_DTYPE_t *__pyx_v_x2, __pyx_t_7sklearn_9neighbors_8typedefs_ITYPE_t __pyx_v_size) {
                                                      ^
sklearn/neighbors/dist_metrics.c: In function ‘__pyx_f_7sklearn_9neighbors_12dist_metrics_18WMinkowskiDistance_dist’:
sklearn/neighbors/dist_metrics.c:8223:94: warning: passing argument 1 of ‘__pyx_f_7sklearn_9neighbors_12dist_metrics_18WMinkowskiDistance_rdist’ from incompatible pointer type [enabled by default]
   __pyx_t_1 = __pyx_f_7sklearn_9neighbors_12dist_metrics_18WMinkowskiDistance_rdist(((struct __pyx_obj_7sklearn_9neighbors_12dist_metrics_DistanceMetric *)__pyx_v_self), __pyx_v_x1, __pyx_v_x2, __pyx_v_size); if (unlikely(__pyx_t_1 == -1.0)) __PYX_ERR(1, 611, __pyx_L1_error)
                                                                                              ^
sklearn/neighbors/dist_metrics.c:8038:54: note: expected ‘struct __pyx_obj_7sklearn_9neighbors_12dist_metrics_WMinkowskiDistance *’ but argument is of type ‘struct __pyx_obj_7sklearn_9neighbors_12dist_metrics_DistanceMetric *’
 static __pyx_t_7sklearn_9neighbors_8typedefs_DTYPE_t __pyx_f_7sklearn_9neighbors_12dist_metrics_18WMinkowskiDistance_rdist(struct __pyx_obj_7sklearn_9neighbors_12dist_metrics_WMinkowskiDistance *__pyx_v_self, __pyx_t_7sklearn_9neighbors_8typedefs_DTYPE_t *__pyx_v_x1, __pyx_t_7sklearn_9neighbors_8typedefs_DTYPE_t *__pyx_v_x2, __pyx_t_7sklearn_9neighbors_8typedefs_ITYPE_t __pyx_v_size) {
                                                      ^
sklearn/neighbors/dist_metrics.c: In function ‘__pyx_f_7sklearn_9neighbors_12dist_metrics_19MahalanobisDistance_dist’:
sklearn/neighbors/dist_metrics.c:9081:95: warning: passing argument 1 of ‘__pyx_f_7sklearn_9neighbors_12dist_metrics_19MahalanobisDistance_rdist’ from incompatible pointer type [enabled by default]
   __pyx_t_1 = __pyx_f_7sklearn_9neighbors_12dist_metrics_19MahalanobisDistance_rdist(((struct __pyx_obj_7sklearn_9neighbors_12dist_metrics_DistanceMetric *)__pyx_v_self), __pyx_v_x1, __pyx_v_x2, __pyx_v_size); if (unlikely(__pyx_t_1 == -1.0)) __PYX_ERR(1, 684, __pyx_L1_error)
                                                                                               ^
sklearn/neighbors/dist_metrics.c:8841:54: note: expected ‘struct __pyx_obj_7sklearn_9neighbors_12dist_metrics_MahalanobisDistance *’ but argument is of type ‘struct __pyx_obj_7sklearn_9neighbors_12dist_metrics_DistanceMetric *’
 static __pyx_t_7sklearn_9neighbors_8typedefs_DTYPE_t __pyx_f_7sklearn_9neighbors_12dist_metrics_19MahalanobisDistance_rdist(struct __pyx_obj_7sklearn_9neighbors_12dist_metrics_MahalanobisDistance *__pyx_v_self, __pyx_t_7sklearn_9neighbors_8typedefs_DTYPE_t *__pyx_v_x1, __pyx_t_7sklearn_9neighbors_8typedefs_DTYPE_t *__pyx_v_x2, __pyx_t_7sklearn_9neighbors_8typedefs_ITYPE_t __pyx_v_size) {
                                                      ^
[39mgcc -pthread -shared -L/home/travis/miniconda/envs/testenv/lib -Wl,-rpath=/home/travis/miniconda/envs/testenv/lib,--no-as-needed build/temp.linux-x86_64-3.4/sklearn/neighbors/dist_metrics.o -L/home/travis/miniconda/envs/testenv/lib -Lbuild/temp.linux-x86_64-3.4 -lm -lpython3.4m -o sklearn/neighbors/dist_metrics.cpython-34m.so[0m
[39mbuilding 'sklearn.neighbors.typedefs' extension[0m
[39mcompiling C sources[0m
[39mC compiler: /usr/lib/ccache/gcc -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC
[0m
[39mcompile options: '-I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/include/python3.4m -I/home/travis/miniconda/envs/testenv/include/python3.4m -c'[0m
[39mgcc: sklearn/neighbors/typedefs.c[0m
In file included from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarraytypes.h:1781:0,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarrayobject.h:18,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                 from sklearn/neighbors/typedefs.c:453:
/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:15:2: warning: #warning "Using deprecated NumPy API, disable it by " "#defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
 #warning "Using deprecated NumPy API, disable it by " \
  ^
[39mgcc -pthread -shared -L/home/travis/miniconda/envs/testenv/lib -Wl,-rpath=/home/travis/miniconda/envs/testenv/lib,--no-as-needed build/temp.linux-x86_64-3.4/sklearn/neighbors/typedefs.o -L/home/travis/miniconda/envs/testenv/lib -Lbuild/temp.linux-x86_64-3.4 -lm -lpython3.4m -o sklearn/neighbors/typedefs.cpython-34m.so[0m
[39mbuilding 'sklearn.neighbors.quad_tree' extension[0m
[39mcompiling C sources[0m
[39mC compiler: /usr/lib/ccache/gcc -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC
[0m
[39mcompile options: '-I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/include/python3.4m -I/home/travis/miniconda/envs/testenv/include/python3.4m -c'[0m
[39mgcc: sklearn/neighbors/quad_tree.c[0m
In file included from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarraytypes.h:1781:0,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarrayobject.h:18,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                 from sklearn/neighbors/quad_tree.c:453:
/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:15:2: warning: #warning "Using deprecated NumPy API, disable it by " "#defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
 #warning "Using deprecated NumPy API, disable it by " \
  ^
sklearn/neighbors/quad_tree.c:2710:1: warning: function declaration isn’t a prototype [-Wstrict-prototypes]
 static PyObject *__pyx_pf_7sklearn_9neighbors_9quad_tree_9_QuadTree_16test_summarize(); /* proto */
 ^
sklearn/neighbors/quad_tree.c: In function ‘__pyx_f_7sklearn_9neighbors_9quad_tree_9_QuadTree__get_cell_ndarray’:
sklearn/neighbors/quad_tree.c:6994:3: warning: passing argument 1 of ‘(struct PyObject * (*)(struct PyTypeObject *, struct PyArray_Descr *, int,  npy_intp *, npy_intp *, void *, int,  struct PyObject *))*(PyArray_API + 752u)’ from incompatible pointer type [enabled by default]
   __pyx_t_2 = PyArray_NewFromDescr(((PyObject *)__pyx_ptype_5numpy_ndarray), ((PyArray_Descr *)__pyx_t_1), 1, __pyx_v_shape, __pyx_v_strides, ((void *)__pyx_v_self->cells), NPY_DEFAULT, Py_None); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 574, __pyx_L1_error)
   ^
sklearn/neighbors/quad_tree.c:6994:3: note: expected ‘struct PyTypeObject *’ but argument is of type ‘struct PyObject *’
sklearn/neighbors/quad_tree.c: At top level:
sklearn/neighbors/quad_tree.c:7419:18: warning: function declaration isn’t a prototype [-Wstrict-prototypes]
 static PyObject *__pyx_pf_7sklearn_9neighbors_9quad_tree_9_QuadTree_16test_summarize() {
                  ^
[39mgcc -pthread -shared -L/home/travis/miniconda/envs/testenv/lib -Wl,-rpath=/home/travis/miniconda/envs/testenv/lib,--no-as-needed build/temp.linux-x86_64-3.4/sklearn/neighbors/quad_tree.o -L/home/travis/miniconda/envs/testenv/lib -Lbuild/temp.linux-x86_64-3.4 -lm -lpython3.4m -o sklearn/neighbors/quad_tree.cpython-34m.so[0m
[39mbuilding 'sklearn.tree._tree' extension[0m
[39mcompiling C sources[0m
[39mC compiler: /usr/lib/ccache/gcc -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC
[0m
[39mcreating build/temp.linux-x86_64-3.4/sklearn/tree[0m
[39mcompile options: '-I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/include/python3.4m -I/home/travis/miniconda/envs/testenv/include/python3.4m -c'
extra options: '-O3'[0m
[39mgcc: sklearn/tree/_tree.c[0m
In file included from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarraytypes.h:1781:0,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarrayobject.h:18,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                 from sklearn/tree/_tree.c:456:
/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:15:2: warning: #warning "Using deprecated NumPy API, disable it by " "#defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
 #warning "Using deprecated NumPy API, disable it by " \
  ^
sklearn/tree/_tree.c: In function ‘__pyx_f_7sklearn_4tree_5_tree_4Tree__get_node_ndarray’:
sklearn/tree/_tree.c:14116:3: warning: passing argument 1 of ‘(struct PyObject * (*)(struct PyTypeObject *, struct PyArray_Descr *, int,  npy_intp *, npy_intp *, void *, int,  struct PyObject *))*(PyArray_API + 752u)’ from incompatible pointer type [enabled by default]
   __pyx_t_2 = PyArray_NewFromDescr(((PyObject *)__pyx_ptype_5numpy_ndarray), ((PyArray_Descr *)__pyx_t_1), 1, __pyx_v_shape, __pyx_v_strides, ((void *)__pyx_v_self->nodes), NPY_DEFAULT, Py_None); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1123, __pyx_L1_error)
   ^
sklearn/tree/_tree.c:14116:3: note: expected ‘struct PyTypeObject *’ but argument is of type ‘struct PyObject *’
sklearn/tree/_tree.c: In function ‘__pyx_f_7sklearn_4tree_5_tree_20BestFirstTreeBuilder_build’:
sklearn/tree/_tree.c:5361:13: warning: ‘__pyx_v_split_node_right.improvement’ may be used uninitialized in this function [-Wmaybe-uninitialized]
   __pyx_t_1 = ((struct __pyx_vtabstruct_7sklearn_4tree_6_utils_PriorityHeap *)__pyx_v_frontier->__pyx_vtab)->push(__pyx_v_frontier, __pyx_v_rec->node_id, __pyx_v_rec->start, __pyx_v_rec->end, __pyx_v_rec->pos, __pyx_v_rec->depth, __pyx_v_rec->is_leaf, __pyx_v_rec->improvement, __pyx_v_rec->impurity, __pyx_v_rec->impurity_left, __pyx_v_rec->impurity_right); if (unlikely(__pyx_t_1 == -1)) __PYX_ERR(0, 290, __pyx_L1_error)
             ^
sklearn/tree/_tree.c:5653:60: note: ‘__pyx_v_split_node_right.improvement’ was declared here
   struct __pyx_t_7sklearn_4tree_6_utils_PriorityHeapRecord __pyx_v_split_node_right;
                                                            ^
sklearn/tree/_tree.c:5361:13: warning: ‘__pyx_v_split_node_right.impurity_right’ may be used uninitialized in this function [-Wmaybe-uninitialized]
   __pyx_t_1 = ((struct __pyx_vtabstruct_7sklearn_4tree_6_utils_PriorityHeap *)__pyx_v_frontier->__pyx_vtab)->push(__pyx_v_frontier, __pyx_v_rec->node_id, __pyx_v_rec->start, __pyx_v_rec->end, __pyx_v_rec->pos, __pyx_v_rec->depth, __pyx_v_rec->is_leaf, __pyx_v_rec->improvement, __pyx_v_rec->impurity, __pyx_v_rec->impurity_left, __pyx_v_rec->impurity_right); if (unlikely(__pyx_t_1 == -1)) __PYX_ERR(0, 290, __pyx_L1_error)
             ^
sklearn/tree/_tree.c:5653:60: note: ‘__pyx_v_split_node_right.impurity_right’ was declared here
   struct __pyx_t_7sklearn_4tree_6_utils_PriorityHeapRecord __pyx_v_split_node_right;
                                                            ^
sklearn/tree/_tree.c:5361:13: warning: ‘__pyx_v_split_node_right.impurity_left’ may be used uninitialized in this function [-Wmaybe-uninitialized]
   __pyx_t_1 = ((struct __pyx_vtabstruct_7sklearn_4tree_6_utils_PriorityHeap *)__pyx_v_frontier->__pyx_vtab)->push(__pyx_v_frontier, __pyx_v_rec->node_id, __pyx_v_rec->start, __pyx_v_rec->end, __pyx_v_rec->pos, __pyx_v_rec->depth, __pyx_v_rec->is_leaf, __pyx_v_rec->improvement, __pyx_v_rec->impurity, __pyx_v_rec->impurity_left, __pyx_v_rec->impurity_right); if (unlikely(__pyx_t_1 == -1)) __PYX_ERR(0, 290, __pyx_L1_error)
             ^
sklearn/tree/_tree.c:5653:60: note: ‘__pyx_v_split_node_right.impurity_left’ was declared here
   struct __pyx_t_7sklearn_4tree_6_utils_PriorityHeapRecord __pyx_v_split_node_right;
                                                            ^
sklearn/tree/_tree.c:5361:13: warning: ‘__pyx_v_split_node_right.impurity’ may be used uninitialized in this function [-Wmaybe-uninitialized]
   __pyx_t_1 = ((struct __pyx_vtabstruct_7sklearn_4tree_6_utils_PriorityHeap *)__pyx_v_frontier->__pyx_vtab)->push(__pyx_v_frontier, __pyx_v_rec->node_id, __pyx_v_rec->start, __pyx_v_rec->end, __pyx_v_rec->pos, __pyx_v_rec->depth, __pyx_v_rec->is_leaf, __pyx_v_rec->improvement, __pyx_v_rec->impurity, __pyx_v_rec->impurity_left, __pyx_v_rec->impurity_right); if (unlikely(__pyx_t_1 == -1)) __PYX_ERR(0, 290, __pyx_L1_error)
             ^
sklearn/tree/_tree.c:5653:60: note: ‘__pyx_v_split_node_right.impurity’ was declared here
   struct __pyx_t_7sklearn_4tree_6_utils_PriorityHeapRecord __pyx_v_split_node_right;
                                                            ^
sklearn/tree/_tree.c:5361:13: warning: ‘__pyx_v_split_node_right.is_leaf’ may be used uninitialized in this function [-Wmaybe-uninitialized]
   __pyx_t_1 = ((struct __pyx_vtabstruct_7sklearn_4tree_6_utils_PriorityHeap *)__pyx_v_frontier->__pyx_vtab)->push(__pyx_v_frontier, __pyx_v_rec->node_id, __pyx_v_rec->start, __pyx_v_rec->end, __pyx_v_rec->pos, __pyx_v_rec->depth, __pyx_v_rec->is_leaf, __pyx_v_rec->improvement, __pyx_v_rec->impurity, __pyx_v_rec->impurity_left, __pyx_v_rec->impurity_right); if (unlikely(__pyx_t_1 == -1)) __PYX_ERR(0, 290, __pyx_L1_error)
             ^
sklearn/tree/_tree.c:5653:60: note: ‘__pyx_v_split_node_right.is_leaf’ was declared here
   struct __pyx_t_7sklearn_4tree_6_utils_PriorityHeapRecord __pyx_v_split_node_right;
                                                            ^
sklearn/tree/_tree.c:5361:13: warning: ‘__pyx_v_split_node_right.depth’ may be used uninitialized in this function [-Wmaybe-uninitialized]
   __pyx_t_1 = ((struct __pyx_vtabstruct_7sklearn_4tree_6_utils_PriorityHeap *)__pyx_v_frontier->__pyx_vtab)->push(__pyx_v_frontier, __pyx_v_rec->node_id, __pyx_v_rec->start, __pyx_v_rec->end, __pyx_v_rec->pos, __pyx_v_rec->depth, __pyx_v_rec->is_leaf, __pyx_v_rec->improvement, __pyx_v_rec->impurity, __pyx_v_rec->impurity_left, __pyx_v_rec->impurity_right); if (unlikely(__pyx_t_1 == -1)) __PYX_ERR(0, 290, __pyx_L1_error)
             ^
sklearn/tree/_tree.c:5653:60: note: ‘__pyx_v_split_node_right.depth’ was declared here
   struct __pyx_t_7sklearn_4tree_6_utils_PriorityHeapRecord __pyx_v_split_node_right;
                                                            ^
sklearn/tree/_tree.c:5361:13: warning: ‘__pyx_v_split_node_right.pos’ may be used uninitialized in this function [-Wmaybe-uninitialized]
   __pyx_t_1 = ((struct __pyx_vtabstruct_7sklearn_4tree_6_utils_PriorityHeap *)__pyx_v_frontier->__pyx_vtab)->push(__pyx_v_frontier, __pyx_v_rec->node_id, __pyx_v_rec->start, __pyx_v_rec->end, __pyx_v_rec->pos, __pyx_v_rec->depth, __pyx_v_rec->is_leaf, __pyx_v_rec->improvement, __pyx_v_rec->impurity, __pyx_v_rec->impurity_left, __pyx_v_rec->impurity_right); if (unlikely(__pyx_t_1 == -1)) __PYX_ERR(0, 290, __pyx_L1_error)
             ^
sklearn/tree/_tree.c:5653:60: note: ‘__pyx_v_split_node_right.pos’ was declared here
   struct __pyx_t_7sklearn_4tree_6_utils_PriorityHeapRecord __pyx_v_split_node_right;
                                                            ^
sklearn/tree/_tree.c:5361:13: warning: ‘__pyx_v_split_node_right.end’ may be used uninitialized in this function [-Wmaybe-uninitialized]
   __pyx_t_1 = ((struct __pyx_vtabstruct_7sklearn_4tree_6_utils_PriorityHeap *)__pyx_v_frontier->__pyx_vtab)->push(__pyx_v_frontier, __pyx_v_rec->node_id, __pyx_v_rec->start, __pyx_v_rec->end, __pyx_v_rec->pos, __pyx_v_rec->depth, __pyx_v_rec->is_leaf, __pyx_v_rec->improvement, __pyx_v_rec->impurity, __pyx_v_rec->impurity_left, __pyx_v_rec->impurity_right); if (unlikely(__pyx_t_1 == -1)) __PYX_ERR(0, 290, __pyx_L1_error)
             ^
sklearn/tree/_tree.c:5653:60: note: ‘__pyx_v_split_node_right.end’ was declared here
   struct __pyx_t_7sklearn_4tree_6_utils_PriorityHeapRecord __pyx_v_split_node_right;
                                                            ^
sklearn/tree/_tree.c:5361:13: warning: ‘__pyx_v_split_node_right.start’ may be used uninitialized in this function [-Wmaybe-uninitialized]
   __pyx_t_1 = ((struct __pyx_vtabstruct_7sklearn_4tree_6_utils_PriorityHeap *)__pyx_v_frontier->__pyx_vtab)->push(__pyx_v_frontier, __pyx_v_rec->node_id, __pyx_v_rec->start, __pyx_v_rec->end, __pyx_v_rec->pos, __pyx_v_rec->depth, __pyx_v_rec->is_leaf, __pyx_v_rec->improvement, __pyx_v_rec->impurity, __pyx_v_rec->impurity_left, __pyx_v_rec->impurity_right); if (unlikely(__pyx_t_1 == -1)) __PYX_ERR(0, 290, __pyx_L1_error)
             ^
sklearn/tree/_tree.c:5653:60: note: ‘__pyx_v_split_node_right.start’ was declared here
   struct __pyx_t_7sklearn_4tree_6_utils_PriorityHeapRecord __pyx_v_split_node_right;
                                                            ^
sklearn/tree/_tree.c:5361:13: warning: ‘__pyx_v_split_node_right.node_id’ may be used uninitialized in this function [-Wmaybe-uninitialized]
   __pyx_t_1 = ((struct __pyx_vtabstruct_7sklearn_4tree_6_utils_PriorityHeap *)__pyx_v_frontier->__pyx_vtab)->push(__pyx_v_frontier, __pyx_v_rec->node_id, __pyx_v_rec->start, __pyx_v_rec->end, __pyx_v_rec->pos, __pyx_v_rec->depth, __pyx_v_rec->is_leaf, __pyx_v_rec->improvement, __pyx_v_rec->impurity, __pyx_v_rec->impurity_left, __pyx_v_rec->impurity_right); if (unlikely(__pyx_t_1 == -1)) __PYX_ERR(0, 290, __pyx_L1_error)
             ^
sklearn/tree/_tree.c:5653:60: note: ‘__pyx_v_split_node_right.node_id’ was declared here
   struct __pyx_t_7sklearn_4tree_6_utils_PriorityHeapRecord __pyx_v_split_node_right;
                                                            ^
sklearn/tree/_tree.c:5361:13: warning: ‘__pyx_v_split_node_left.node_id’ may be used uninitialized in this function [-Wmaybe-uninitialized]
   __pyx_t_1 = ((struct __pyx_vtabstruct_7sklearn_4tree_6_utils_PriorityHeap *)__pyx_v_frontier->__pyx_vtab)->push(__pyx_v_frontier, __pyx_v_rec->node_id, __pyx_v_rec->start, __pyx_v_rec->end, __pyx_v_rec->pos, __pyx_v_rec->depth, __pyx_v_rec->is_leaf, __pyx_v_rec->improvement, __pyx_v_rec->impurity, __pyx_v_rec->impurity_left, __pyx_v_rec->impurity_right); if (unlikely(__pyx_t_1 == -1)) __PYX_ERR(0, 290, __pyx_L1_error)
             ^
sklearn/tree/_tree.c:5652:60: note: ‘__pyx_v_split_node_left.node_id’ was declared here
   struct __pyx_t_7sklearn_4tree_6_utils_PriorityHeapRecord __pyx_v_split_node_left;
                                                            ^
sklearn/tree/_tree.c:5361:13: warning: ‘__pyx_v_split_node_left.end’ may be used uninitialized in this function [-Wmaybe-uninitialized]
   __pyx_t_1 = ((struct __pyx_vtabstruct_7sklearn_4tree_6_utils_PriorityHeap *)__pyx_v_frontier->__pyx_vtab)->push(__pyx_v_frontier, __pyx_v_rec->node_id, __pyx_v_rec->start, __pyx_v_rec->end, __pyx_v_rec->pos, __pyx_v_rec->depth, __pyx_v_rec->is_leaf, __pyx_v_rec->improvement, __pyx_v_rec->impurity, __pyx_v_rec->impurity_left, __pyx_v_rec->impurity_right); if (unlikely(__pyx_t_1 == -1)) __PYX_ERR(0, 290, __pyx_L1_error)
             ^
sklearn/tree/_tree.c:5652:60: note: ‘__pyx_v_split_node_left.end’ was declared here
   struct __pyx_t_7sklearn_4tree_6_utils_PriorityHeapRecord __pyx_v_split_node_left;
                                                            ^
sklearn/tree/_tree.c:5361:13: warning: ‘__pyx_v_split_node_left.pos’ may be used uninitialized in this function [-Wmaybe-uninitialized]
   __pyx_t_1 = ((struct __pyx_vtabstruct_7sklearn_4tree_6_utils_PriorityHeap *)__pyx_v_frontier->__pyx_vtab)->push(__pyx_v_frontier, __pyx_v_rec->node_id, __pyx_v_rec->start, __pyx_v_rec->end, __pyx_v_rec->pos, __pyx_v_rec->depth, __pyx_v_rec->is_leaf, __pyx_v_rec->improvement, __pyx_v_rec->impurity, __pyx_v_rec->impurity_left, __pyx_v_rec->impurity_right); if (unlikely(__pyx_t_1 == -1)) __PYX_ERR(0, 290, __pyx_L1_error)
             ^
sklearn/tree/_tree.c:5652:60: note: ‘__pyx_v_split_node_left.pos’ was declared here
   struct __pyx_t_7sklearn_4tree_6_utils_PriorityHeapRecord __pyx_v_split_node_left;
                                                            ^
sklearn/tree/_tree.c:5361:13: warning: ‘__pyx_v_split_node_left.is_leaf’ may be used uninitialized in this function [-Wmaybe-uninitialized]
   __pyx_t_1 = ((struct __pyx_vtabstruct_7sklearn_4tree_6_utils_PriorityHeap *)__pyx_v_frontier->__pyx_vtab)->push(__pyx_v_frontier, __pyx_v_rec->node_id, __pyx_v_rec->start, __pyx_v_rec->end, __pyx_v_rec->pos, __pyx_v_rec->depth, __pyx_v_rec->is_leaf, __pyx_v_rec->improvement, __pyx_v_rec->impurity, __pyx_v_rec->impurity_left, __pyx_v_rec->impurity_right); if (unlikely(__pyx_t_1 == -1)) __PYX_ERR(0, 290, __pyx_L1_error)
             ^
sklearn/tree/_tree.c:5652:60: note: ‘__pyx_v_split_node_left.is_leaf’ was declared here
   struct __pyx_t_7sklearn_4tree_6_utils_PriorityHeapRecord __pyx_v_split_node_left;
                                                            ^
sklearn/tree/_tree.c:5361:13: warning: ‘__pyx_v_split_node_left.impurity’ may be used uninitialized in this function [-Wmaybe-uninitialized]
   __pyx_t_1 = ((struct __pyx_vtabstruct_7sklearn_4tree_6_utils_PriorityHeap *)__pyx_v_frontier->__pyx_vtab)->push(__pyx_v_frontier, __pyx_v_rec->node_id, __pyx_v_rec->start, __pyx_v_rec->end, __pyx_v_rec->pos, __pyx_v_rec->depth, __pyx_v_rec->is_leaf, __pyx_v_rec->improvement, __pyx_v_rec->impurity, __pyx_v_rec->impurity_left, __pyx_v_rec->impurity_right); if (unlikely(__pyx_t_1 == -1)) __PYX_ERR(0, 290, __pyx_L1_error)
             ^
sklearn/tree/_tree.c:5652:60: note: ‘__pyx_v_split_node_left.impurity’ was declared here
   struct __pyx_t_7sklearn_4tree_6_utils_PriorityHeapRecord __pyx_v_split_node_left;
                                                            ^
sklearn/tree/_tree.c:5361:13: warning: ‘__pyx_v_split_node_left.impurity_left’ may be used uninitialized in this function [-Wmaybe-uninitialized]
   __pyx_t_1 = ((struct __pyx_vtabstruct_7sklearn_4tree_6_utils_PriorityHeap *)__pyx_v_frontier->__pyx_vtab)->push(__pyx_v_frontier, __pyx_v_rec->node_id, __pyx_v_rec->start, __pyx_v_rec->end, __pyx_v_rec->pos, __pyx_v_rec->depth, __pyx_v_rec->is_leaf, __pyx_v_rec->improvement, __pyx_v_rec->impurity, __pyx_v_rec->impurity_left, __pyx_v_rec->impurity_right); if (unlikely(__pyx_t_1 == -1)) __PYX_ERR(0, 290, __pyx_L1_error)
             ^
sklearn/tree/_tree.c:5652:60: note: ‘__pyx_v_split_node_left.impurity_left’ was declared here
   struct __pyx_t_7sklearn_4tree_6_utils_PriorityHeapRecord __pyx_v_split_node_left;
                                                            ^
sklearn/tree/_tree.c:5361:13: warning: ‘__pyx_v_split_node_left.impurity_right’ may be used uninitialized in this function [-Wmaybe-uninitialized]
   __pyx_t_1 = ((struct __pyx_vtabstruct_7sklearn_4tree_6_utils_PriorityHeap *)__pyx_v_frontier->__pyx_vtab)->push(__pyx_v_frontier, __pyx_v_rec->node_id, __pyx_v_rec->start, __pyx_v_rec->end, __pyx_v_rec->pos, __pyx_v_rec->depth, __pyx_v_rec->is_leaf, __pyx_v_rec->improvement, __pyx_v_rec->impurity, __pyx_v_rec->impurity_left, __pyx_v_rec->impurity_right); if (unlikely(__pyx_t_1 == -1)) __PYX_ERR(0, 290, __pyx_L1_error)
             ^
sklearn/tree/_tree.c:5652:60: note: ‘__pyx_v_split_node_left.impurity_right’ was declared here
   struct __pyx_t_7sklearn_4tree_6_utils_PriorityHeapRecord __pyx_v_split_node_left;
                                                            ^
sklearn/tree/_tree.c:5361:13: warning: ‘__pyx_v_split_node_left.improvement’ may be used uninitialized in this function [-Wmaybe-uninitialized]
   __pyx_t_1 = ((struct __pyx_vtabstruct_7sklearn_4tree_6_utils_PriorityHeap *)__pyx_v_frontier->__pyx_vtab)->push(__pyx_v_frontier, __pyx_v_rec->node_id, __pyx_v_rec->start, __pyx_v_rec->end, __pyx_v_rec->pos, __pyx_v_rec->depth, __pyx_v_rec->is_leaf, __pyx_v_rec->improvement, __pyx_v_rec->impurity, __pyx_v_rec->impurity_left, __pyx_v_rec->impurity_right); if (unlikely(__pyx_t_1 == -1)) __PYX_ERR(0, 290, __pyx_L1_error)
             ^
sklearn/tree/_tree.c:5652:60: note: ‘__pyx_v_split_node_left.improvement’ was declared here
   struct __pyx_t_7sklearn_4tree_6_utils_PriorityHeapRecord __pyx_v_split_node_left;
                                                            ^
[39mgcc -pthread -shared -L/home/travis/miniconda/envs/testenv/lib -Wl,-rpath=/home/travis/miniconda/envs/testenv/lib,--no-as-needed build/temp.linux-x86_64-3.4/sklearn/tree/_tree.o -L/home/travis/miniconda/envs/testenv/lib -Lbuild/temp.linux-x86_64-3.4 -lm -lpython3.4m -o sklearn/tree/_tree.cpython-34m.so[0m
[39mbuilding 'sklearn.tree._splitter' extension[0m
[39mcompiling C sources[0m
[39mC compiler: /usr/lib/ccache/gcc -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC
[0m
[39mcompile options: '-I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/include/python3.4m -I/home/travis/miniconda/envs/testenv/include/python3.4m -c'
extra options: '-O3'[0m
[39mgcc: sklearn/tree/_splitter.c[0m
In file included from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarraytypes.h:1781:0,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarrayobject.h:18,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                 from sklearn/tree/_splitter.c:456:
/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:15:2: warning: #warning "Using deprecated NumPy API, disable it by " "#defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
 #warning "Using deprecated NumPy API, disable it by " \
  ^
[39mgcc -pthread -shared -L/home/travis/miniconda/envs/testenv/lib -Wl,-rpath=/home/travis/miniconda/envs/testenv/lib,--no-as-needed build/temp.linux-x86_64-3.4/sklearn/tree/_splitter.o -L/home/travis/miniconda/envs/testenv/lib -Lbuild/temp.linux-x86_64-3.4 -lm -lpython3.4m -o sklearn/tree/_splitter.cpython-34m.so[0m
[39mbuilding 'sklearn.tree._criterion' extension[0m
[39mcompiling C sources[0m
[39mC compiler: /usr/lib/ccache/gcc -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC
[0m
[39mcompile options: '-I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/include/python3.4m -I/home/travis/miniconda/envs/testenv/include/python3.4m -c'
extra options: '-O3'[0m
[39mgcc: sklearn/tree/_criterion.c[0m
In file included from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarraytypes.h:1781:0,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarrayobject.h:18,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                 from sklearn/tree/_criterion.c:456:
/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:15:2: warning: #warning "Using deprecated NumPy API, disable it by " "#defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
 #warning "Using deprecated NumPy API, disable it by " \
  ^
[39mgcc -pthread -shared -L/home/travis/miniconda/envs/testenv/lib -Wl,-rpath=/home/travis/miniconda/envs/testenv/lib,--no-as-needed build/temp.linux-x86_64-3.4/sklearn/tree/_criterion.o -L/home/travis/miniconda/envs/testenv/lib -Lbuild/temp.linux-x86_64-3.4 -lm -lpython3.4m -o sklearn/tree/_criterion.cpython-34m.so[0m
[39mbuilding 'sklearn.tree._utils' extension[0m
[39mcompiling C sources[0m
[39mC compiler: /usr/lib/ccache/gcc -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC
[0m
[39mcompile options: '-I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/include/python3.4m -I/home/travis/miniconda/envs/testenv/include/python3.4m -c'
extra options: '-O3'[0m
[39mgcc: sklearn/tree/_utils.c[0m
In file included from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarraytypes.h:1781:0,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarrayobject.h:18,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                 from sklearn/tree/_utils.c:456:
/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:15:2: warning: #warning "Using deprecated NumPy API, disable it by " "#defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
 #warning "Using deprecated NumPy API, disable it by " \
  ^
sklearn/tree/_utils.c: In function ‘__pyx_f_7sklearn_4tree_6_utils_24WeightedMedianCalculator_remove’:
sklearn/tree/_utils.c:8755:142: warning: ‘__pyx_v_original_median’ may be used uninitialized in this function [-Wmaybe-uninitialized]
   ((struct __pyx_vtabstruct_7sklearn_4tree_6_utils_WeightedMedianCalculator *)__pyx_v_self->__pyx_vtab)->update_median_parameters_post_remove(__pyx_v_self, __pyx_v_data, __pyx_v_weight, __pyx_v_original_median);
                                                                                                                                              ^
sklearn/tree/_utils.c:8707:43: note: ‘__pyx_v_original_median’ was declared here
   __pyx_t_7sklearn_4tree_6_utils_DOUBLE_t __pyx_v_original_median;
                                           ^
sklearn/tree/_utils.c: In function ‘__pyx_f_7sklearn_4tree_6_utils_24WeightedMedianCalculator_pop’:
sklearn/tree/_utils.c:8867:142: warning: ‘__pyx_v_original_median’ may be used uninitialized in this function [-Wmaybe-uninitialized]
   ((struct __pyx_vtabstruct_7sklearn_4tree_6_utils_WeightedMedianCalculator *)__pyx_v_self->__pyx_vtab)->update_median_parameters_post_remove(__pyx_v_self, (__pyx_v_data[0]), (__pyx_v_weight[0]), __pyx_v_original_median);
                                                                                                                                              ^
sklearn/tree/_utils.c:8790:10: note: ‘__pyx_v_original_median’ was declared here
   double __pyx_v_original_median;
          ^
sklearn/tree/_utils.c: In function ‘__pyx_f_7sklearn_4tree_6_utils_24WeightedMedianCalculator_push’:
sklearn/tree/_utils.c:8399:140: warning: ‘__pyx_v_original_median’ may be used uninitialized in this function [-Wmaybe-uninitialized]
   ((struct __pyx_vtabstruct_7sklearn_4tree_6_utils_WeightedMedianCalculator *)__pyx_v_self->__pyx_vtab)->update_median_parameters_post_push(__pyx_v_self, __pyx_v_data, __pyx_v_weight, __pyx_v_original_median);
                                                                                                                                            ^
sklearn/tree/_utils.c:8349:43: note: ‘__pyx_v_original_median’ was declared here
   __pyx_t_7sklearn_4tree_6_utils_DOUBLE_t __pyx_v_original_median;
                                           ^
[39mgcc -pthread -shared -L/home/travis/miniconda/envs/testenv/lib -Wl,-rpath=/home/travis/miniconda/envs/testenv/lib,--no-as-needed build/temp.linux-x86_64-3.4/sklearn/tree/_utils.o -L/home/travis/miniconda/envs/testenv/lib -Lbuild/temp.linux-x86_64-3.4 -lm -lpython3.4m -o sklearn/tree/_utils.cpython-34m.so[0m
[39mbuilding 'sklearn.svm.libsvm' extension[0m
[39mcompiling C sources[0m
[39mC compiler: /usr/lib/ccache/gcc -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC
[0m
[39mcompile options: '-I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -Isklearn/svm/src/libsvm -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/include/python3.4m -I/home/travis/miniconda/envs/testenv/include/python3.4m -c'[0m
[39mgcc: sklearn/svm/libsvm.c[0m
In file included from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarraytypes.h:1781:0,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarrayobject.h:18,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                 from sklearn/svm/libsvm.c:458:
/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:15:2: warning: #warning "Using deprecated NumPy API, disable it by " "#defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
 #warning "Using deprecated NumPy API, disable it by " \
  ^
[39m/usr/lib/ccache/g++ -pthread -shared -L/home/travis/miniconda/envs/testenv/lib -Wl,-rpath=/home/travis/miniconda/envs/testenv/lib,--no-as-needed build/temp.linux-x86_64-3.4/sklearn/svm/libsvm.o -L/home/travis/miniconda/envs/testenv/lib -Lbuild/temp.linux-x86_64-3.4 -llibsvm-skl -lpython3.4m -o sklearn/svm/libsvm.cpython-34m.so[0m
[39mbuilding 'sklearn.svm.liblinear' extension[0m
[39mcompiling C sources[0m
[39mC compiler: /usr/lib/ccache/gcc -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC
[0m
[39mcompile options: '-DHAVE_CBLAS -Isklearn/src/cblas -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/include/python3.4m -I/home/travis/miniconda/envs/testenv/include/python3.4m -c'[0m
[39mgcc: sklearn/svm/liblinear.c[0m
In file included from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarraytypes.h:1781:0,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarrayobject.h:18,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                 from sklearn/svm/liblinear.c:468:
/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:15:2: warning: #warning "Using deprecated NumPy API, disable it by " "#defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
 #warning "Using deprecated NumPy API, disable it by " \
  ^
In file included from sklearn/svm/liblinear.c:471:0:
sklearn/svm/src/liblinear/liblinear_helper.c: In function ‘set_problem’:
sklearn/svm/src/liblinear/liblinear_helper.c:145:28: warning: assignment from incompatible pointer type [enabled by default]
     problem->sample_weight = sample_weight;
                            ^
sklearn/svm/src/liblinear/liblinear_helper.c: In function ‘csr_set_problem’:
sklearn/svm/src/liblinear/liblinear_helper.c:174:28: warning: assignment from incompatible pointer type [enabled by default]
     problem->sample_weight = sample_weight;
                            ^
[39mcompiling C++ sources[0m
[39mC compiler: /usr/lib/ccache/g++ -DNDEBUG -g -fwrapv -O3 -Wall -fPIC
[0m
[39mcreating build/temp.linux-x86_64-3.4/sklearn/svm/src/liblinear[0m
[39mcompile options: '-DHAVE_CBLAS -Isklearn/src/cblas -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/include/python3.4m -I/home/travis/miniconda/envs/testenv/include/python3.4m -c'[0m
[39mg++: sklearn/svm/src/liblinear/linear.cpp[0m
sklearn/svm/src/liblinear/linear.cpp: In function ‘model* train(const problem*, const parameter*)’:
sklearn/svm/src/liblinear/linear.cpp:2370:6: warning: unused variable ‘n_iter’ [-Wunused-variable]
  int n_iter;
      ^
[39mg++: sklearn/svm/src/liblinear/tron.cpp[0m
[39m/usr/lib/ccache/g++ -pthread -shared -L/home/travis/miniconda/envs/testenv/lib -Wl,-rpath=/home/travis/miniconda/envs/testenv/lib,--no-as-needed build/temp.linux-x86_64-3.4/sklearn/svm/liblinear.o build/temp.linux-x86_64-3.4/sklearn/svm/src/liblinear/linear.o build/temp.linux-x86_64-3.4/sklearn/svm/src/liblinear/tron.o -L/home/travis/miniconda/envs/testenv/lib -L/home/travis/miniconda/envs/testenv/lib -Lbuild/temp.linux-x86_64-3.4 -lopenblas -lm -lpython3.4m -o sklearn/svm/liblinear.cpython-34m.so[0m
[39mbuilding 'sklearn.svm.libsvm_sparse' extension[0m
[39mcompiling C sources[0m
[39mC compiler: /usr/lib/ccache/gcc -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC
[0m
[39mcompile options: '-I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -Isklearn/svm/src/libsvm -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/include/python3.4m -I/home/travis/miniconda/envs/testenv/include/python3.4m -c'[0m
[39mgcc: sklearn/svm/libsvm_sparse.c[0m
In file included from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarraytypes.h:1781:0,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarrayobject.h:18,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                 from sklearn/svm/libsvm_sparse.c:456:
/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:15:2: warning: #warning "Using deprecated NumPy API, disable it by " "#defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
 #warning "Using deprecated NumPy API, disable it by " \
  ^
[39m/usr/lib/ccache/g++ -pthread -shared -L/home/travis/miniconda/envs/testenv/lib -Wl,-rpath=/home/travis/miniconda/envs/testenv/lib,--no-as-needed build/temp.linux-x86_64-3.4/sklearn/svm/libsvm_sparse.o -L/home/travis/miniconda/envs/testenv/lib -Lbuild/temp.linux-x86_64-3.4 -llibsvm-skl -lpython3.4m -o sklearn/svm/libsvm_sparse.cpython-34m.so[0m
[39mbuilding 'sklearn._isotonic' extension[0m
[39mcompiling C sources[0m
[39mC compiler: /usr/lib/ccache/gcc -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC
[0m
[39mcompile options: '-I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/include/python3.4m -I/home/travis/miniconda/envs/testenv/include/python3.4m -c'[0m
[39mgcc: sklearn/_isotonic.c[0m
In file included from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarraytypes.h:1781:0,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarrayobject.h:18,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                 from sklearn/_isotonic.c:453:
/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:15:2: warning: #warning "Using deprecated NumPy API, disable it by " "#defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
 #warning "Using deprecated NumPy API, disable it by " \
  ^
[39mgcc -pthread -shared -L/home/travis/miniconda/envs/testenv/lib -Wl,-rpath=/home/travis/miniconda/envs/testenv/lib,--no-as-needed build/temp.linux-x86_64-3.4/sklearn/_isotonic.o -L/home/travis/miniconda/envs/testenv/lib -Lbuild/temp.linux-x86_64-3.4 -lm -lpython3.4m -o sklearn/_isotonic.cpython-34m.so[0m
[39mbuilding 'sklearn.linear_model.cd_fast' extension[0m
[39mcompiling C sources[0m
[39mC compiler: /usr/lib/ccache/gcc -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC
[0m
[39mcreating build/temp.linux-x86_64-3.4/sklearn/linear_model[0m
[39mcompile options: '-DHAVE_CBLAS -Isklearn/src/cblas -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/include/python3.4m -I/home/travis/miniconda/envs/testenv/include/python3.4m -c'[0m
[39mgcc: sklearn/linear_model/cd_fast.c[0m
In file included from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarraytypes.h:1781:0,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarrayobject.h:18,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                 from sklearn/linear_model/cd_fast.c:467:
/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:15:2: warning: #warning "Using deprecated NumPy API, disable it by " "#defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
 #warning "Using deprecated NumPy API, disable it by " \
  ^
sklearn/linear_model/cd_fast.c: In function ‘__pyx_pf_7sklearn_12linear_model_7cd_fast_8enet_coordinate_descent’:
sklearn/linear_model/cd_fast.c:4654:16: warning: assignment from incompatible pointer type [enabled by default]
   __pyx_v_gemv = cblas_sgemv;
                ^
sklearn/linear_model/cd_fast.c:4663:15: warning: assignment from incompatible pointer type [enabled by default]
   __pyx_v_dot = cblas_sdot;
               ^
sklearn/linear_model/cd_fast.c:4672:16: warning: assignment from incompatible pointer type [enabled by default]
   __pyx_v_axpy = cblas_saxpy;
                ^
sklearn/linear_model/cd_fast.c:4681:16: warning: assignment from incompatible pointer type [enabled by default]
   __pyx_v_asum = cblas_sasum;
                ^
sklearn/linear_model/cd_fast.c:4690:16: warning: assignment from incompatible pointer type [enabled by default]
   __pyx_v_copy = cblas_scopy;
                ^
sklearn/linear_model/cd_fast.c: In function ‘__pyx_pf_7sklearn_12linear_model_7cd_fast_10enet_coordinate_descent’:
sklearn/linear_model/cd_fast.c:6077:16: warning: assignment from incompatible pointer type [enabled by default]
   __pyx_v_gemv = cblas_dgemv;
                ^
sklearn/linear_model/cd_fast.c:6086:15: warning: assignment from incompatible pointer type [enabled by default]
   __pyx_v_dot = cblas_ddot;
               ^
sklearn/linear_model/cd_fast.c:6095:16: warning: assignment from incompatible pointer type [enabled by default]
   __pyx_v_axpy = cblas_daxpy;
                ^
sklearn/linear_model/cd_fast.c:6104:16: warning: assignment from incompatible pointer type [enabled by default]
   __pyx_v_asum = cblas_dasum;
                ^
sklearn/linear_model/cd_fast.c:6113:16: warning: assignment from incompatible pointer type [enabled by default]
   __pyx_v_copy = cblas_dcopy;
                ^
sklearn/linear_model/cd_fast.c: In function ‘__pyx_pf_7sklearn_12linear_model_7cd_fast_14sparse_enet_coordinate_descent’:
sklearn/linear_model/cd_fast.c:8297:15: warning: assignment from incompatible pointer type [enabled by default]
   __pyx_v_dot = cblas_sdot;
               ^
sklearn/linear_model/cd_fast.c:8306:16: warning: assignment from incompatible pointer type [enabled by default]
   __pyx_v_asum = cblas_sasum;
                ^
sklearn/linear_model/cd_fast.c: In function ‘__pyx_pf_7sklearn_12linear_model_7cd_fast_16sparse_enet_coordinate_descent’:
sklearn/linear_model/cd_fast.c:10237:15: warning: assignment from incompatible pointer type [enabled by default]
   __pyx_v_dot = cblas_ddot;
               ^
sklearn/linear_model/cd_fast.c:10246:16: warning: assignment from incompatible pointer type [enabled by default]
   __pyx_v_asum = cblas_dasum;
                ^
sklearn/linear_model/cd_fast.c: In function ‘__pyx_pf_7sklearn_12linear_model_7cd_fast_20enet_coordinate_descent_gram’:
sklearn/linear_model/cd_fast.c:12677:15: warning: assignment from incompatible pointer type [enabled by default]
   __pyx_v_dot = cblas_sdot;
               ^
sklearn/linear_model/cd_fast.c:12686:16: warning: assignment from incompatible pointer type [enabled by default]
   __pyx_v_axpy = cblas_saxpy;
                ^
sklearn/linear_model/cd_fast.c:12695:16: warning: assignment from incompatible pointer type [enabled by default]
   __pyx_v_asum = cblas_sasum;
                ^
sklearn/linear_model/cd_fast.c: In function ‘__pyx_pf_7sklearn_12linear_model_7cd_fast_22enet_coordinate_descent_gram’:
sklearn/linear_model/cd_fast.c:14180:15: warning: assignment from incompatible pointer type [enabled by default]
   __pyx_v_dot = cblas_ddot;
               ^
sklearn/linear_model/cd_fast.c:14189:16: warning: assignment from incompatible pointer type [enabled by default]
   __pyx_v_axpy = cblas_daxpy;
                ^
sklearn/linear_model/cd_fast.c:14198:16: warning: assignment from incompatible pointer type [enabled by default]
   __pyx_v_asum = cblas_dasum;
                ^
sklearn/linear_model/cd_fast.c: In function ‘__pyx_pf_7sklearn_12linear_model_7cd_fast_26enet_coordinate_descent_multi_task’:
sklearn/linear_model/cd_fast.c:16294:15: warning: assignment from incompatible pointer type [enabled by default]
   __pyx_v_dot = cblas_sdot;
               ^
sklearn/linear_model/cd_fast.c:16303:16: warning: assignment from incompatible pointer type [enabled by default]
   __pyx_v_nrm2 = cblas_snrm2;
                ^
sklearn/linear_model/cd_fast.c:16312:16: warning: assignment from incompatible pointer type [enabled by default]
   __pyx_v_asum = cblas_sasum;
                ^
sklearn/linear_model/cd_fast.c:16321:16: warning: assignment from incompatible pointer type [enabled by default]
   __pyx_v_copy = cblas_scopy;
                ^
sklearn/linear_model/cd_fast.c:16339:15: warning: assignment from incompatible pointer type [enabled by default]
   __pyx_v_ger = cblas_sger;
               ^
sklearn/linear_model/cd_fast.c:16348:16: warning: assignment from incompatible pointer type [enabled by default]
   __pyx_v_gemv = cblas_sgemv;
                ^
sklearn/linear_model/cd_fast.c: In function ‘__pyx_pf_7sklearn_12linear_model_7cd_fast_28enet_coordinate_descent_multi_task’:
sklearn/linear_model/cd_fast.c:18001:15: warning: assignment from incompatible pointer type [enabled by default]
   __pyx_v_dot = cblas_ddot;
               ^
sklearn/linear_model/cd_fast.c:18010:16: warning: assignment from incompatible pointer type [enabled by default]
   __pyx_v_nrm2 = cblas_dnrm2;
                ^
sklearn/linear_model/cd_fast.c:18019:16: warning: assignment from incompatible pointer type [enabled by default]
   __pyx_v_asum = cblas_dasum;
                ^
sklearn/linear_model/cd_fast.c:18028:16: warning: assignment from incompatible pointer type [enabled by default]
   __pyx_v_copy = cblas_dcopy;
                ^
sklearn/linear_model/cd_fast.c:18046:15: warning: assignment from incompatible pointer type [enabled by default]
   __pyx_v_ger = cblas_dger;
               ^
sklearn/linear_model/cd_fast.c:18055:16: warning: assignment from incompatible pointer type [enabled by default]
   __pyx_v_gemv = cblas_dgemv;
                ^
[39mgcc -pthread -shared -L/home/travis/miniconda/envs/testenv/lib -Wl,-rpath=/home/travis/miniconda/envs/testenv/lib,--no-as-needed build/temp.linux-x86_64-3.4/sklearn/linear_model/cd_fast.o -L/home/travis/miniconda/envs/testenv/lib -L/home/travis/miniconda/envs/testenv/lib -Lbuild/temp.linux-x86_64-3.4 -lopenblas -lm -lpython3.4m -o sklearn/linear_model/cd_fast.cpython-34m.so[0m
[39mbuilding 'sklearn.linear_model.sgd_fast' extension[0m
[39mcompiling C sources[0m
[39mC compiler: /usr/lib/ccache/gcc -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC
[0m
[39mcompile options: '-DHAVE_CBLAS -Isklearn/src/cblas -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/include/python3.4m -I/home/travis/miniconda/envs/testenv/include/python3.4m -c'[0m
[39mgcc: sklearn/linear_model/sgd_fast.c[0m
In file included from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarraytypes.h:1781:0,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarrayobject.h:18,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                 from sklearn/linear_model/sgd_fast.c:468:
/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:15:2: warning: #warning "Using deprecated NumPy API, disable it by " "#defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
 #warning "Using deprecated NumPy API, disable it by " \
  ^
[39mgcc -pthread -shared -L/home/travis/miniconda/envs/testenv/lib -Wl,-rpath=/home/travis/miniconda/envs/testenv/lib,--no-as-needed build/temp.linux-x86_64-3.4/sklearn/linear_model/sgd_fast.o -L/home/travis/miniconda/envs/testenv/lib -L/home/travis/miniconda/envs/testenv/lib -Lbuild/temp.linux-x86_64-3.4 -lopenblas -lm -lpython3.4m -o sklearn/linear_model/sgd_fast.cpython-34m.so[0m
[39mbuilding 'sklearn.linear_model.sag_fast' extension[0m
[39mcompiling C sources[0m
[39mC compiler: /usr/lib/ccache/gcc -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC
[0m
[39mcompile options: '-I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/include/python3.4m -I/home/travis/miniconda/envs/testenv/include/python3.4m -c'[0m
[39mgcc: sklearn/linear_model/sag_fast.c[0m
In file included from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarraytypes.h:1781:0,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarrayobject.h:18,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                 from sklearn/linear_model/sag_fast.c:451:
/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:15:2: warning: #warning "Using deprecated NumPy API, disable it by " "#defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
 #warning "Using deprecated NumPy API, disable it by " \
  ^
[39mgcc -pthread -shared -L/home/travis/miniconda/envs/testenv/lib -Wl,-rpath=/home/travis/miniconda/envs/testenv/lib,--no-as-needed build/temp.linux-x86_64-3.4/sklearn/linear_model/sag_fast.o -L/home/travis/miniconda/envs/testenv/lib -Lbuild/temp.linux-x86_64-3.4 -lpython3.4m -o sklearn/linear_model/sag_fast.cpython-34m.so[0m
[39mbuilding 'sklearn.utils.sparsefuncs_fast' extension[0m
[39mcompiling C sources[0m
[39mC compiler: /usr/lib/ccache/gcc -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC
[0m
[39mcreating build/temp.linux-x86_64-3.4/sklearn/utils[0m
[39mcompile options: '-I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/include/python3.4m -I/home/travis/miniconda/envs/testenv/include/python3.4m -c'[0m
[39mgcc: sklearn/utils/sparsefuncs_fast.c[0m
In file included from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarraytypes.h:1781:0,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarrayobject.h:18,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                 from sklearn/utils/sparsefuncs_fast.c:448:
/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:15:2: warning: #warning "Using deprecated NumPy API, disable it by " "#defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
 #warning "Using deprecated NumPy API, disable it by " \
  ^
[39mgcc -pthread -shared -L/home/travis/miniconda/envs/testenv/lib -Wl,-rpath=/home/travis/miniconda/envs/testenv/lib,--no-as-needed build/temp.linux-x86_64-3.4/sklearn/utils/sparsefuncs_fast.o -L/home/travis/miniconda/envs/testenv/lib -Lbuild/temp.linux-x86_64-3.4 -lm -lpython3.4m -o sklearn/utils/sparsefuncs_fast.cpython-34m.so[0m
[39mbuilding 'sklearn.utils.arrayfuncs' extension[0m
[39mcompiling C sources[0m
[39mC compiler: /usr/lib/ccache/gcc -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC
[0m
[39mcompile options: '-DHAVE_CBLAS -Isklearn/src/cblas -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/include/python3.4m -I/home/travis/miniconda/envs/testenv/include/python3.4m -c'[0m
[39mgcc: sklearn/utils/arrayfuncs.c[0m
In file included from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarraytypes.h:1781:0,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarrayobject.h:18,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                 from sklearn/utils/arrayfuncs.c:466:
/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:15:2: warning: #warning "Using deprecated NumPy API, disable it by " "#defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
 #warning "Using deprecated NumPy API, disable it by " \
  ^
[39mgcc -pthread -shared -L/home/travis/miniconda/envs/testenv/lib -Wl,-rpath=/home/travis/miniconda/envs/testenv/lib,--no-as-needed build/temp.linux-x86_64-3.4/sklearn/utils/arrayfuncs.o -L/home/travis/miniconda/envs/testenv/lib -L/home/travis/miniconda/envs/testenv/lib -Lbuild/temp.linux-x86_64-3.4 -lopenblas -lm -lpython3.4m -o sklearn/utils/arrayfuncs.cpython-34m.so[0m
[39mbuilding 'sklearn.utils.murmurhash' extension[0m
[39mcompiling C sources[0m
[39mC compiler: /usr/lib/ccache/gcc -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC
[0m
[39mcompile options: '-Isklearn/utils/src -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/include/python3.4m -I/home/travis/miniconda/envs/testenv/include/python3.4m -c'[0m
[39mgcc: sklearn/utils/murmurhash.c[0m
In file included from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarraytypes.h:1781:0,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarrayobject.h:18,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                 from sklearn/utils/murmurhash.c:449:
/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:15:2: warning: #warning "Using deprecated NumPy API, disable it by " "#defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
 #warning "Using deprecated NumPy API, disable it by " \
  ^
[39mcompiling C++ sources[0m
[39mC compiler: /usr/lib/ccache/g++ -DNDEBUG -g -fwrapv -O3 -Wall -fPIC
[0m
[39mcreating build/temp.linux-x86_64-3.4/sklearn/utils/src[0m
[39mcompile options: '-Isklearn/utils/src -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/include/python3.4m -I/home/travis/miniconda/envs/testenv/include/python3.4m -c'[0m
[39mg++: sklearn/utils/src/MurmurHash3.cpp[0m
[39m/usr/lib/ccache/g++ -pthread -shared -L/home/travis/miniconda/envs/testenv/lib -Wl,-rpath=/home/travis/miniconda/envs/testenv/lib,--no-as-needed build/temp.linux-x86_64-3.4/sklearn/utils/murmurhash.o build/temp.linux-x86_64-3.4/sklearn/utils/src/MurmurHash3.o -L/home/travis/miniconda/envs/testenv/lib -Lbuild/temp.linux-x86_64-3.4 -lpython3.4m -o sklearn/utils/murmurhash.cpython-34m.so[0m
[39mbuilding 'sklearn.utils.lgamma' extension[0m
[39mcompiling C sources[0m
[39mC compiler: /usr/lib/ccache/gcc -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC
[0m
[39mcompile options: '-Isklearn/utils/src -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/include/python3.4m -I/home/travis/miniconda/envs/testenv/include/python3.4m -c'[0m
[39mgcc: sklearn/utils/lgamma.c[0m
[39mgcc: sklearn/utils/src/gamma.c[0m
[39mgcc -pthread -shared -L/home/travis/miniconda/envs/testenv/lib -Wl,-rpath=/home/travis/miniconda/envs/testenv/lib,--no-as-needed build/temp.linux-x86_64-3.4/sklearn/utils/lgamma.o build/temp.linux-x86_64-3.4/sklearn/utils/src/gamma.o -L/home/travis/miniconda/envs/testenv/lib -Lbuild/temp.linux-x86_64-3.4 -lm -lpython3.4m -o sklearn/utils/lgamma.cpython-34m.so[0m
[39mbuilding 'sklearn.utils.graph_shortest_path' extension[0m
[39mcompiling C sources[0m
[39mC compiler: /usr/lib/ccache/gcc -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC
[0m
[39mcompile options: '-I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/include/python3.4m -I/home/travis/miniconda/envs/testenv/include/python3.4m -c'[0m
[39mgcc: sklearn/utils/graph_shortest_path.c[0m
In file included from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarraytypes.h:1781:0,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarrayobject.h:18,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                 from sklearn/utils/graph_shortest_path.c:450:
/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:15:2: warning: #warning "Using deprecated NumPy API, disable it by " "#defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
 #warning "Using deprecated NumPy API, disable it by " \
  ^
[39mgcc -pthread -shared -L/home/travis/miniconda/envs/testenv/lib -Wl,-rpath=/home/travis/miniconda/envs/testenv/lib,--no-as-needed build/temp.linux-x86_64-3.4/sklearn/utils/graph_shortest_path.o -L/home/travis/miniconda/envs/testenv/lib -Lbuild/temp.linux-x86_64-3.4 -lpython3.4m -o sklearn/utils/graph_shortest_path.cpython-34m.so[0m
[39mbuilding 'sklearn.utils.fast_dict' extension[0m
[39mcompiling C++ sources[0m
[39mC compiler: /usr/lib/ccache/g++ -DNDEBUG -g -fwrapv -O3 -Wall -fPIC
[0m
[39mcompile options: '-I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/include/python3.4m -I/home/travis/miniconda/envs/testenv/include/python3.4m -c'[0m
[39mg++: sklearn/utils/fast_dict.cpp[0m
In file included from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarraytypes.h:1781:0,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarrayobject.h:18,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                 from sklearn/utils/fast_dict.cpp:474:
/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:15:2: warning: #warning "Using deprecated NumPy API, disable it by " "#defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
 #warning "Using deprecated NumPy API, disable it by " \
  ^
sklearn/utils/fast_dict.cpp: In function ‘PyObject* __pyx_pw_7sklearn_5utils_9fast_dict_1argmin(PyObject*, PyObject*)’:
sklearn/utils/fast_dict.cpp:22206:48: warning: ‘__pyx_v_min_key’ may be used uninitialized in this function [-Wmaybe-uninitialized]
             return PyInt_FromLong((long) value);
                                                ^
sklearn/utils/fast_dict.cpp:3836:46: note: ‘__pyx_v_min_key’ was declared here
   __pyx_t_7sklearn_5utils_9fast_dict_ITYPE_t __pyx_v_min_key;
                                              ^
[39m/usr/lib/ccache/g++ -pthread -shared -L/home/travis/miniconda/envs/testenv/lib -Wl,-rpath=/home/travis/miniconda/envs/testenv/lib,--no-as-needed build/temp.linux-x86_64-3.4/sklearn/utils/fast_dict.o -L/home/travis/miniconda/envs/testenv/lib -Lbuild/temp.linux-x86_64-3.4 -lm -lpython3.4m -o sklearn/utils/fast_dict.cpython-34m.so[0m
[39mbuilding 'sklearn.utils.seq_dataset' extension[0m
[39mcompiling C sources[0m
[39mC compiler: /usr/lib/ccache/gcc -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC
[0m
[39mcompile options: '-I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/include/python3.4m -I/home/travis/miniconda/envs/testenv/include/python3.4m -c'[0m
[39mgcc: sklearn/utils/seq_dataset.c[0m
In file included from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarraytypes.h:1781:0,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarrayobject.h:18,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                 from sklearn/utils/seq_dataset.c:450:
/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:15:2: warning: #warning "Using deprecated NumPy API, disable it by " "#defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
 #warning "Using deprecated NumPy API, disable it by " \
  ^
[39mgcc -pthread -shared -L/home/travis/miniconda/envs/testenv/lib -Wl,-rpath=/home/travis/miniconda/envs/testenv/lib,--no-as-needed build/temp.linux-x86_64-3.4/sklearn/utils/seq_dataset.o -L/home/travis/miniconda/envs/testenv/lib -Lbuild/temp.linux-x86_64-3.4 -lpython3.4m -o sklearn/utils/seq_dataset.cpython-34m.so[0m
[39mbuilding 'sklearn.utils.weight_vector' extension[0m
[39mcompiling C sources[0m
[39mC compiler: /usr/lib/ccache/gcc -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC
[0m
[39mcompile options: '-DHAVE_CBLAS -Isklearn/src/cblas -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/include/python3.4m -I/home/travis/miniconda/envs/testenv/include/python3.4m -c'[0m
[39mgcc: sklearn/utils/weight_vector.c[0m
In file included from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarraytypes.h:1781:0,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarrayobject.h:18,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                 from sklearn/utils/weight_vector.c:466:
/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:15:2: warning: #warning "Using deprecated NumPy API, disable it by " "#defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
 #warning "Using deprecated NumPy API, disable it by " \
  ^
[39mgcc -pthread -shared -L/home/travis/miniconda/envs/testenv/lib -Wl,-rpath=/home/travis/miniconda/envs/testenv/lib,--no-as-needed build/temp.linux-x86_64-3.4/sklearn/utils/weight_vector.o -L/home/travis/miniconda/envs/testenv/lib -L/home/travis/miniconda/envs/testenv/lib -Lbuild/temp.linux-x86_64-3.4 -lopenblas -lm -lpython3.4m -o sklearn/utils/weight_vector.cpython-34m.so[0m
[39mbuilding 'sklearn.utils._random' extension[0m
[39mcompiling C sources[0m
[39mC compiler: /usr/lib/ccache/gcc -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC
[0m
[39mcompile options: '-I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/include/python3.4m -I/home/travis/miniconda/envs/testenv/include/python3.4m -c'[0m
[39mgcc: sklearn/utils/_random.c[0m
In file included from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarraytypes.h:1781:0,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarrayobject.h:18,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                 from sklearn/utils/_random.c:453:
/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:15:2: warning: #warning "Using deprecated NumPy API, disable it by " "#defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
 #warning "Using deprecated NumPy API, disable it by " \
  ^
[39mgcc -pthread -shared -L/home/travis/miniconda/envs/testenv/lib -Wl,-rpath=/home/travis/miniconda/envs/testenv/lib,--no-as-needed build/temp.linux-x86_64-3.4/sklearn/utils/_random.o -L/home/travis/miniconda/envs/testenv/lib -Lbuild/temp.linux-x86_64-3.4 -lm -lpython3.4m -o sklearn/utils/_random.cpython-34m.so[0m
[39mbuilding 'sklearn.utils._logistic_sigmoid' extension[0m
[39mcompiling C sources[0m
[39mC compiler: /usr/lib/ccache/gcc -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC
[0m
[39mcompile options: '-I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include -I/home/travis/miniconda/envs/testenv/include/python3.4m -I/home/travis/miniconda/envs/testenv/include/python3.4m -c'[0m
[39mgcc: sklearn/utils/_logistic_sigmoid.c[0m
In file included from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarraytypes.h:1781:0,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/ndarrayobject.h:18,
                 from /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                 from sklearn/utils/_logistic_sigmoid.c:454:
/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:15:2: warning: #warning "Using deprecated NumPy API, disable it by " "#defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
 #warning "Using deprecated NumPy API, disable it by " \
  ^
[39mgcc -pthread -shared -L/home/travis/miniconda/envs/testenv/lib -Wl,-rpath=/home/travis/miniconda/envs/testenv/lib,--no-as-needed build/temp.linux-x86_64-3.4/sklearn/utils/_logistic_sigmoid.o -L/home/travis/miniconda/envs/testenv/lib -Lbuild/temp.linux-x86_64-3.4 -lm -lpython3.4m -o sklearn/utils/_logistic_sigmoid.cpython-34m.so[0m
[39mCreating /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scikit-learn.egg-link (link to .)[0m
[39mAdding scikit-learn 0.21.dev0 to easy-install.pth file[0m
[39m
Installed /home/travis/build/scikit-learn/scikit-learn[0m
[39mProcessing dependencies for scikit-learn==0.21.dev0[0m
[39mSearching for scipy==0.16.1[0m
[39mBest match: scipy 0.16.1[0m
[39mAdding scipy 0.16.1 to easy-install.pth file[0m
[39m
Using /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages[0m
[39mSearching for numpy==1.10.4[0m
[39mBest match: numpy 1.10.4[0m
[39mAdding numpy 1.10.4 to easy-install.pth file[0m
[39m
Using /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages[0m
[39mFinished processing dependencies for scikit-learn==0.21.dev0[0m
cache directory                     /home/travis/.ccache
cache hit (direct)                  8829
cache hit (preprocessed)            4019
cache miss                         12031
called for link                     3843
files in cache                       108
cache size                          46.1 Mbytes
max cache size                     100.0 Mbytes

travis_time:end:06298a9a:start=1535808625935315915,finish=1535808888176972527,duration=262241656612[0Ktravis_fold:end:install[0Ktravis_time:start:2c1bbfec[0K$ bash build_tools/travis/test_script.sh
Python 3.4.5 :: Continuum Analytics, Inc.
numpy 1.10.4
scipy 0.16.1
48 CPUs
[1m============================= test session starts ==============================[0m
platform linux -- Python 3.4.5, pytest-3.5.0, py-1.6.0, pluggy-0.6.0
rootdir: /tmp/sklearn, inifile: setup.cfg
plugins: cov-2.3.1
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/fixes.py:313: FutureWarning: numpy not_equal will not check object identity in the future. The comparison did not return the same result as suggested by the identity (`is`)) and will change.
  _nan_object_mask = _nan_object_array != _nan_object_array
[1mcollecting 0 items                                                             [0m[1mcollecting 0 items                                                             [0m[1mcollecting 1 item                                                              [0m[1mcollecting 1 item                                                              [0m[1mcollecting 1 item                                                              [0m[1mcollecting 3 items                                                             [0m[1mcollecting 3 items                                                             [0m[1mcollecting 5 items                                                             [0m[1mcollecting 7 items                                                             [0m[1mcollecting 7 items                                                             [0m[1mcollecting 11 items                                                            [0m[1mcollecting 12 items                                                            [0m[1mcollecting 12 items                                                            [0m[1mcollecting 12 items                                                            [0m[1mcollecting 16 items                                                            [0m[1mcollecting 20 items                                                            [0m[1mcollecting 23 items                                                            [0m[1mcollecting 23 items                                                            [0m[1mcollecting 23 items                                                            [0m[1mcollecting 23 items                                                            [0m[1mcollecting 23 items                                                            [0m[1mcollecting 24 items                                                            [0m[1mcollecting 26 items                                                            [0m[1mcollecting 27 items                                                            [0m[1mcollecting 28 items                                                            [0m[1mcollecting 30 items                                                            [0m[1mcollecting 32 items                                                            [0m[1mcollecting 33 items                                                            [0m[1mcollecting 33 items                                                            [0m[1mcollecting 34 items                                                            [0m[1mcollecting 34 items                                                            [0m[1mcollecting 34 items                                                            [0m[1mcollecting 34 items                                                            [0m[1mcollecting 41 items                                                            [0m[1mcollecting 41 items                                                            [0m[1mcollecting 51 items                                                            [0m[1mcollecting 51 items                                                            [0m[1mcollecting 58 items                                                            [0m[1mcollecting 58 items                                                            [0m[1mcollecting 76 items                                                            [0m[1mcollecting 76 items                                                            [0m[1mcollecting 77 items                                                            [0m[1mcollecting 77 items                                                            [0m[1mcollecting 99 items                                                            [0m[1mcollecting 99 items                                                            [0m[1mcollecting 166 items                                                           [0m[1mcollecting 166 items                                                           [0m[1mcollecting 175 items                                                           [0m[1mcollecting 175 items                                                           [0m[1mcollecting 193 items                                                           [0m[1mcollecting 193 items                                                           [0m[1mcollecting 206 items                                                           [0m[1mcollecting 206 items                                                           [0m[1mcollecting 208 items                                                           [0m[1mcollecting 209 items                                                           [0m[1mcollecting 209 items                                                           [0m[1mcollecting 209 items                                                           [0m[1mcollecting 254 items                                                           [0m[1mcollecting 254 items                                                           [0m[1mcollecting 265 items                                                           [0m[1mcollecting 265 items                                                           [0m[1mcollecting 265 items                                                           [0m[1mcollecting 265 items                                                           [0m[1mcollecting 265 items                                                           [0m[1mcollecting 265 items                                                           [0m[1mcollecting 265 items                                                           [0m[1mcollecting 265 items                                                           [0m[1mcollecting 265 items                                                           [0m[1mcollecting 271 items                                                           [0m[1mcollecting 271 items                                                           [0m[1mcollecting 275 items                                                           [0m[1mcollecting 275 items                                                           [0m[1mcollecting 280 items                                                           [0m[1mcollecting 280 items                                                           [0m[1mcollecting 285 items                                                           [0m[1mcollecting 285 items                                                           [0m[1mcollecting 292 items                                                           [0m[1mcollecting 292 items                                                           [0m[1mcollecting 293 items                                                           [0m[1mcollecting 296 items                                                           [0m[1mcollecting 296 items                                                           [0m[1mcollecting 296 items                                                           [0m[1mcollecting 304 items                                                           [0m[1mcollecting 304 items                                                           [0m[1mcollecting 311 items                                                           [0m[1mcollecting 311 items                                                           [0m[1mcollecting 311 items                                                           [0m[1mcollecting 311 items                                                           [0m[1mcollecting 311 items                                                           [0m[1mcollecting 311 items                                                           [0m[1mcollecting 311 items                                                           [0m[1mcollecting 311 items                                                           [0m[1mcollecting 311 items                                                           [0m[1mcollecting 311 items                                                           [0m[1mcollecting 312 items                                                           [0m[1mcollecting 312 items                                                           [0m[1mcollecting 312 items                                                           [0m[1mcollecting 312 items                                                           [0m[1mcollecting 312 items                                                           [0m[1mcollecting 312 items                                                           [0m[1mcollecting 315 items                                                           [0m[1mcollecting 315 items                                                           [0m[1mcollecting 334 items                                                           [0m[1mcollecting 334 items                                                           [0m[1mcollecting 335 items                                                           [0m[1mcollecting 335 items                                                           [0m[1mcollecting 335 items                                                           [0m[1mcollecting 335 items                                                           [0m[1mcollecting 336 items                                                           [0m[1mcollecting 336 items                                                           [0m[1mcollecting 338 items                                                           [0m[1mcollecting 338 items                                                           [0m[1mcollecting 343 items                                                           [0m[1mcollecting 343 items                                                           [0m[1mcollecting 347 items                                                           [0m[1mcollecting 347 items                                                           [0m[1mcollecting 369 items                                                           [0m[1mcollecting 369 items                                                           [0m[1mcollecting 370 items                                                           [0m[1mcollecting 370 items                                                           [0m[1mcollecting 398 items                                                           [0m[1mcollecting 398 items                                                           [0m[1mcollecting 452 items                                                           [0m[1mcollecting 452 items                                                           [0m[1mcollecting 453 items                                                           [0m[1mcollecting 453 items                                                           [0m[1mcollecting 454 items                                                           [0m[1mcollecting 455 items                                                           [0m[1mcollecting 456 items                                                           [0m[1mcollecting 457 items                                                           [0m[1mcollecting 459 items                                                           [0m[1mcollecting 460 items                                                           [0m[1mcollecting 461 items                                                           [0m[1mcollecting 463 items                                                           [0m[1mcollecting 464 items                                                           [0m[1mcollecting 464 items                                                           [0m[1mcollecting 464 items                                                           [0m[1mcollecting 521 items                                                           [0m[1mcollecting 521 items                                                           [0m[1mcollecting 522 items                                                           [0m[1mcollecting 522 items                                                           [0m[1mcollecting 530 items                                                           [0m[1mcollecting 530 items                                                           [0m[1mcollecting 546 items                                                           [0m[1mcollecting 546 items                                                           [0m[1mcollecting 558 items                                                           [0m[1mcollecting 558 items                                                           [0m[1mcollecting 582 items                                                           [0m[1mcollecting 582 items                                                           [0m[1mcollecting 615 items                                                           [0m[1mcollecting 615 items                                                           [0m[1mcollecting 656 items                                                           [0m[1mcollecting 656 items                                                           [0m[1mcollecting 676 items                                                           [0m[1mcollecting 676 items                                                           [0m[1mcollecting 691 items                                                           [0m[1mcollecting 691 items                                                           [0m[1mcollecting 691 items                                                           [0m[1mcollecting 691 items                                                           [0m[1mcollecting 693 items                                                           [0m[1mcollecting 693 items                                                           [0m[1mcollecting 693 items                                                           [0m[1mcollecting 695 items                                                           [0m[1mcollecting 696 items                                                           [0m[1mcollecting 696 items                                                           [0m[1mcollecting 696 items                                                           [0m[1mcollecting 696 items                                                           [0m[1mcollecting 726 items                                                           [0m[1mcollecting 726 items                                                           [0m[1mcollecting 730 items                                                           [0m[1mcollecting 730 items                                                           [0m[1mcollecting 894 items                                                           [0m[1mcollecting 894 items                                                           [0m[1mcollecting 1011 items                                                          [0m[1mcollecting 1011 items                                                          [0m[1mcollecting 1020 items                                                          [0m[1mcollecting 1020 items                                                          [0m[1mcollecting 1034 items                                                          [0m[1mcollecting 1034 items                                                          [0m[1mcollecting 1041 items                                                          [0m[1mcollecting 1041 items                                                          [0m[1mcollecting 1058 items                                                          [0m[1mcollecting 1058 items                                                          [0m[1mcollecting 1074 items                                                          [0m[1mcollecting 1074 items                                                          [0m[1mcollecting 1076 items                                                          [0m[1mcollecting 1077 items                                                          [0m[1mcollecting 1078 items                                                          [0m[1mcollecting 1078 items                                                          [0m[1mcollecting 1081 items                                                          [0m[1mcollecting 1081 items                                                          [0m[1mcollecting 1081 items                                                          [0m[1mcollecting 1109 items                                                          [0m[1mcollecting 1109 items                                                          [0m[1mcollecting 1120 items                                                          [0m[1mcollecting 1120 items                                                          [0m[1mcollecting 1140 items                                                          [0m[1mcollecting 1140 items                                                          [0m[1mcollecting 1204 items                                                          [0m[1mcollecting 1204 items                                                          [0m[1mcollecting 1204 items                                                          [0m[1mcollecting 1204 items                                                          [0m[1mcollecting 1204 items                                                          [0m[1mcollecting 1206 items                                                          [0m[1mcollecting 1212 items                                                          [0m[1mcollecting 1213 items                                                          [0m[1mcollecting 1213 items                                                          [0m[1mcollecting 1213 items                                                          [0m[1mcollecting 1218 items                                                          [0m[1mcollecting 1218 items                                                          [0m[1mcollecting 1223 items                                                          [0m[1mcollecting 1223 items                                                          [0m[1mcollecting 1256 items                                                          [0m[1mcollecting 1256 items                                                          [0m[1mcollecting 1277 items                                                          [0m[1mcollecting 1277 items                                                          [0m[1mcollecting 1285 items                                                          [0m[1mcollecting 1285 items                                                          [0m[1mcollecting 1297 items                                                          [0m[1mcollecting 1297 items                                                          [0m[1mcollecting 1299 items                                                          [0m[1mcollecting 1299 items                                                          [0m[1mcollecting 1299 items                                                          [0m[1mcollecting 1300 items                                                          [0m[1mcollecting 1301 items                                                          [0m[1mcollecting 1301 items                                                          [0m[1mcollecting 1301 items                                                          [0m[1mcollecting 1301 items                                                          [0m[1mcollecting 1301 items                                                          [0m[1mcollecting 1331 items                                                          [0m[1mcollecting 1331 items                                                          [0m[1mcollecting 1411 items                                                          [0m[1mcollecting 1411 items                                                          [0m[1mcollecting 1663 items                                                          [0m[1mcollecting 1663 items                                                          [0m[1mcollecting 1663 items                                                          [0m[1mcollecting 1665 items                                                          [0m[1mcollecting 1672 items                                                          [0m[1mcollecting 1672 items                                                          [0m[1mcollecting 1675 items                                                          [0m[1mcollecting 1677 items                                                          [0m[1mcollecting 1677 items                                                          [0m[1mcollecting 1679 items                                                          [0m[1mcollecting 1680 items                                                          [0m[1mcollecting 1682 items                                                          [0m[1mcollecting 1682 items                                                          [0m[1mcollecting 1686 items                                                          [0m[1mcollecting 1687 items                                                          [0m[1mcollecting 1689 items                                                          [0m[1mcollecting 1689 items                                                          [0m[1mcollecting 1689 items                                                          [0m[1mcollecting 1689 items                                                          [0m[1mcollecting 1707 items                                                          [0m[1mcollecting 1707 items                                                          [0m[1mcollecting 1716 items                                                          [0m[1mcollecting 1716 items                                                          [0m[1mcollecting 1756 items                                                          [0m[1mcollecting 1756 items                                                          [0m[1mcollecting 1765 items                                                          [0m[1mcollecting 1765 items                                                          [0m[1mcollecting 1795 items                                                          [0m[1mcollecting 1795 items                                                          [0m[1mcollecting 1903 items                                                          [0m[1mcollecting 1903 items                                                          [0m[1mcollecting 1921 items                                                          [0m[1mcollecting 1921 items                                                          [0m[1mcollecting 1937 items                                                          [0m[1mcollecting 1937 items                                                          [0m[1mcollecting 1940 items                                                          [0m[1mcollecting 1940 items                                                          [0m[1mcollecting 1947 items                                                          [0m[1mcollecting 1947 items                                                          [0m[1mcollecting 1970 items                                                          [0m[1mcollecting 1970 items                                                          [0m[1mcollecting 2014 items                                                          [0m[1mcollecting 2014 items                                                          [0m[1mcollecting 2030 items                                                          [0m[1mcollecting 2030 items                                                          [0m[1mcollecting 2094 items                                                          [0m[1mcollecting 2158 items                                                          [0m[1mcollecting 2189 items                                                          [0m[1mcollecting 2220 items                                                          [0m[1mcollecting 2237 items                                                          [0m[1mcollecting 2237 items                                                          [0m[1mcollecting 2248 items                                                          [0m[1mcollecting 2248 items                                                          [0m[1mcollecting 2265 items                                                          [0m[1mcollecting 2265 items                                                          [0m[1mcollecting 2266 items                                                          [0m[1mcollecting 2267 items                                                          [0m[1mcollecting 2268 items                                                          [0m[1mcollecting 2269 items                                                          [0m[1mcollecting 2270 items                                                          [0m[1mcollecting 2270 items                                                          [0m[1mcollecting 2270 items                                                          [0m[1mcollecting 2276 items                                                          [0m[1mcollecting 2276 items                                                          [0m[1mcollecting 2283 items                                                          [0m[1mcollecting 2283 items                                                          [0m[1mcollecting 2286 items                                                          [0m[1mcollecting 2286 items                                                          [0m[1mcollecting 2298 items                                                          [0m[1mcollecting 2298 items                                                          [0m[1mcollecting 2346 items                                                          [0m[1mcollecting 2346 items                                                          [0m[1mcollecting 2346 items                                                          [0m[1mcollecting 2362 items                                                          [0m[1mcollecting 2366 items                                                          [0m[1mcollecting 2372 items                                                          [0m[1mcollecting 2378 items                                                          [0m[1mcollecting 2379 items                                                          [0m[1mcollecting 2379 items                                                          [0m[1mcollecting 2379 items                                                          [0m[1mcollecting 2386 items                                                          [0m[1mcollecting 2386 items                                                          [0m[1mcollecting 2386 items                                                          [0m[1mcollecting 2386 items                                                          [0m[1mcollecting 2389 items                                                          [0m[1mcollecting 2389 items                                                          [0m[1mcollecting 2429 items                                                          [0m[1mcollecting 2429 items                                                          [0m[1mcollecting 2448 items                                                          [0m[1mcollecting 2448 items                                                          [0m[1mcollecting 2456 items                                                          [0m[1mcollecting 2456 items                                                          [0m[1mcollecting 2456 items                                                          [0m[1mcollecting 2527 items                                                          [0m[1mcollecting 2527 items                                                          [0m[1mcollecting 2964 items                                                          [0m[1mcollecting 2964 items                                                          [0m[1mcollecting 3042 items                                                          [0m[1mcollecting 3042 items                                                          [0m[1mcollecting 3092 items                                                          [0m[1mcollecting 3092 items                                                          [0m[1mcollecting 3099 items                                                          [0m[1mcollecting 3099 items                                                          [0m[1mcollecting 3146 items                                                          [0m[1mcollecting 3146 items                                                          [0m[1mcollecting 3146 items                                                          [0m[1mcollecting 3146 items                                                          [0m[1mcollecting 3146 items                                                          [0m[1mcollecting 3146 items                                                          [0m[1mcollecting 3146 items                                                          [0m[1mcollecting 3161 items                                                          [0m[1mcollecting 3161 items                                                          [0m[1mcollecting 3192 items                                                          [0m[1mcollecting 3192 items                                                          [0m[1mcollecting 3194 items                                                          [0m[1mcollecting 3194 items                                                          [0m[1mcollecting 3197 items                                                          [0m[1mcollecting 3212 items                                                          [0m[1mcollecting 3216 items                                                          [0m[1mcollecting 3216 items                                                          [0m[1mcollecting 3216 items                                                          [0m[1mcollecting 3216 items                                                          [0m[1mcollecting 3271 items                                                          [0m[1mcollecting 3271 items                                                          [0m[1mcollecting 3318 items                                                          [0m[1mcollecting 3318 items                                                          [0m[1mcollecting 3365 items                                                          [0m[1mcollecting 3365 items                                                          [0m[1mcollecting 3366 items                                                          [0m[1mcollecting 3370 items                                                          [0m[1mcollecting 3372 items                                                          [0m[1mcollecting 3374 items                                                          [0m[1mcollecting 3374 items                                                          [0m[1mcollecting 3374 items                                                          [0m[1mcollecting 3375 items                                                          [0m[1mcollecting 3377 items                                                          [0m[1mcollecting 3378 items                                                          [0m[1mcollecting 3378 items                                                          [0m[1mcollecting 3378 items                                                          [0m[1mcollecting 3391 items                                                          [0m[1mcollecting 3391 items                                                          [0m[1mcollecting 3639 items                                                          [0m[1mcollecting 3639 items                                                          [0m[1mcollecting 3697 items                                                          [0m[1mcollecting 3697 items                                                          [0m[1mcollecting 3774 items                                                          [0m[1mcollecting 3774 items                                                          [0m[1mcollecting 3813 items                                                          [0m[1mcollecting 3813 items                                                          [0m[1mcollecting 3825 items                                                          [0m[1mcollecting 3825 items                                                          [0m[1mcollecting 3834 items                                                          [0m[1mcollecting 3834 items                                                          [0m[1mcollecting 3887 items                                                          [0m[1mcollecting 3887 items                                                          [0m[1mcollecting 3898 items                                                          [0m[1mcollecting 3898 items                                                          [0m[1mcollecting 3898 items                                                          [0m[1mcollecting 3898 items                                                          [0m[1mcollecting 3898 items                                                          [0m[1mcollecting 3899 items                                                          [0m[1mcollecting 3899 items                                                          [0m[1mcollecting 3899 items                                                          [0m[1mcollecting 3924 items                                                          [0m[1mcollecting 3924 items                                                          [0m[1mcollecting 3936 items                                                          [0m[1mcollecting 3936 items                                                          [0m[1mcollecting 3942 items                                                          [0m[1mcollecting 3942 items                                                          [0m[1mcollecting 3943 items                                                          [0m[1mcollecting 3945 items                                                          [0m[1mcollecting 3945 items                                                          [0m[1mcollecting 3945 items                                                          [0m[1mcollecting 3958 items                                                          [0m[1mcollecting 3958 items                                                          [0m[1mcollecting 3962 items                                                          [0m[1mcollecting 3962 items                                                          [0m[1mcollecting 3962 items                                                          [0m[1mcollecting 3981 items                                                          [0m[1mcollecting 3981 items                                                          [0m[1mcollecting 3990 items                                                          [0m[1mcollecting 3990 items                                                          [0m[1mcollecting 4140 items                                                          [0m[1mcollecting 4140 items                                                          [0m[1mcollecting 4174 items                                                          [0m[1mcollecting 4174 items                                                          [0m[1mcollecting 4217 items                                                          [0m[1mcollecting 4217 items                                                          [0m[1mcollecting 4228 items                                                          [0m[1mcollecting 4228 items                                                          [0m[1mcollecting 4236 items                                                          [0m[1mcollecting 4236 items                                                          [0m[1mcollecting 4268 items                                                          [0m[1mcollecting 4268 items                                                          [0m[1mcollecting 4271 items                                                          [0m[1mcollecting 4271 items                                                          [0m[1mcollecting 4271 items                                                          [0m[1mcollecting 4281 items                                                          [0m[1mcollecting 4281 items                                                          [0m[1mcollecting 4281 items                                                          [0m[1mcollecting 4281 items                                                          [0m[1mcollecting 4287 items                                                          [0m[1mcollecting 4287 items                                                          [0m[1mcollecting 4287 items                                                          [0m[1mcollecting 4306 items                                                          [0m[1mcollecting 4306 items                                                          [0m[1mcollecting 4337 items                                                          [0m[1mcollecting 4337 items                                                          [0m[1mcollecting 4384 items                                                          [0m[1mcollecting 4384 items                                                          [0m[1mcollecting 4384 items                                                          [0m[1mcollecting 4406 items                                                          [0m[1mcollecting 4406 items                                                          [0m[1mcollecting 4415 items                                                          [0m[1mcollecting 4415 items                                                          [0m[1mcollecting 4416 items                                                          [0m[1mcollecting 4416 items                                                          [0m[1mcollecting 9458 items                                                          [0m[1mcollecting 9458 items                                                          [0m[1mcollecting 9461 items                                                          [0m[1mcollecting 9461 items                                                          [0m[1mcollecting 9475 items                                                          [0m[1mcollecting 9475 items                                                          [0m[1mcollecting 9477 items                                                          [0m[1mcollecting 9477 items                                                          [0m[1mcollecting 9512 items                                                          [0m[1mcollecting 9512 items                                                          [0m[1mcollecting 9624 items                                                          [0m[1mcollecting 9624 items                                                          [0m[1mcollecting 9626 items                                                          [0m[1mcollecting 9626 items                                                          [0m[1mcollecting 9656 items                                                          [0m[1mcollecting 9656 items                                                          [0m[1mcollecting 9665 items                                                          [0m[1mcollecting 9665 items                                                          [0m[1mcollecting 9673 items                                                          [0m[1mcollecting 9673 items                                                          [0m[1mcollecting 9674 items                                                          [0m[1mcollecting 9674 items                                                          [0m[1mcollecting 9713 items                                                          [0m[1mcollecting 9713 items                                                          [0m[1mcollecting 9736 items                                                          [0m[1mcollecting 9736 items                                                          [0m[1mcollecting 9779 items                                                          [0m[1mcollecting 9779 items                                                          [0m[1mcollecting 9814 items                                                          [0m[1mcollecting 9814 items                                                          [0m[1mcollecting 9830 items                                                          [0m[1mcollecting 9830 items                                                          [0m[1mcollecting 9832 items                                                          [0m[1mcollecting 9832 items                                                          [0m[1mcollecting 9833 items                                                          [0m[1mcollecting 9835 items                                                          [0m[1mcollecting 9835 items                                                          [0m[1mcollecting 9835 items                                                          [0m[1mcollecting 9839 items                                                          [0m[1mcollecting 9839 items                                                          [0m[1mcollecting 10012 items                                                         [0m[1mcollecting 10019 items                                                         [0m[1mcollecting 10019 items                                                         [0m[1mcollecting 10019 items                                                         [0m[1mcollecting 10019 items                                                         [0m[1mcollecting 10019 items                                                         [0m[1mcollecting 10019 items                                                         [0m[1mcollecting 10019 items                                                         [0m[1mcollecting 10019 items                                                         [0m[1mcollecting 10020 items                                                         [0m[1mcollecting 10020 items                                                         [0m[1mcollecting 10023 items                                                         [0m[1mcollecting 10023 items                                                         [0m[1mcollecting 10024 items                                                         [0m[1mcollecting 10024 items                                                         [0m[1mcollecting 10024 items                                                         [0m[1mcollecting 10024 items                                                         [0m[1mcollecting 10027 items                                                         [0m[1mcollecting 10027 items                                                         [0m[1mcollecting 10028 items                                                         [0m[1mcollecting 10028 items                                                         [0m[1mcollecting 10028 items                                                         [0m[1mcollecting 10029 items                                                         [0m[1mcollecting 10031 items                                                         [0m[1mcollecting 10031 items                                                         [0m[1mcollecting 10031 items                                                         [0m[1mcollecting 10031 items                                                         [0m[1mcollecting 10031 items                                                         [0m[1mcollecting 10032 items                                                         [0m[1mcollecting 10032 items                                                         [0m[1mcollecting 10042 items                                                         [0m[1mcollecting 10042 items                                                         [0m[1mcollecting 10046 items                                                         [0m[1mcollecting 10046 items                                                         [0m[1mcollecting 10053 items                                                         [0m[1mcollecting 10053 items                                                         [0m[1mcollecting 10081 items                                                         [0m[1mcollecting 10081 items                                                         [0m[1mcollecting 10083 items                                                         [0m[1mcollecting 10083 items                                                         [0m[1mcollecting 10091 items                                                         [0m[1mcollecting 10091 items                                                         [0m[1mcollecting 10092 items                                                         [0m[1mcollecting 10092 items                                                         [0m[1mcollecting 10093 items                                                         [0m[1mcollecting 10093 items                                                         [0m[1mcollecting 10095 items                                                         [0m[1mcollecting 10095 items                                                         [0m[1mcollecting 10103 items                                                         [0m[1mcollecting 10103 items                                                         [0m[1mcollecting 10109 items                                                         [0m[1mcollecting 10109 items                                                         [0m[1mcollecting 10110 items                                                         [0m[1mcollecting 10110 items                                                         [0m[1mcollecting 10114 items                                                         [0m[1mcollecting 10114 items                                                         [0m[1mcollecting 10116 items                                                         [0m[1mcollecting 10116 items                                                         [0m[1mcollecting 10120 items                                                         [0m[1mcollecting 10120 items                                                         [0m[1mcollecting 10123 items                                                         [0m[1mcollecting 10123 items                                                         [0m[1mcollecting 10164 items                                                         [0m[1mcollecting 10164 items                                                         [0m[1mcollecting 10169 items                                                         [0m[1mcollecting 10169 items                                                         [0m[1mcollecting 10171 items                                                         [0m[1mcollecting 10183 items                                                         [0m[1mcollecting 10183 items                                                         [0m[1mcollecting 10217 items                                                         [0m[1mcollecting 10217 items                                                         [0m[1mcollecting 10270 items                                                         [0m[1mcollected 10270 items                                                          [0m

sklearn/_config.py s[36m                                                     [  0%][0m
sklearn/discriminant_analysis.py ss[36m                                      [  0%][0m
sklearn/exceptions.py ss[36m                                                 [  0%][0m
sklearn/impute.py ss[36m                                                     [  0%][0m
sklearn/kernel_approximation.py ssss[36m                                     [  0%][0m
sklearn/kernel_ridge.py s[36m                                                [  0%][0m
sklearn/naive_bayes.py ssss[36m                                              [  0%][0m
sklearn/pipeline.py ssss[36m                                                 [  0%][0m
sklearn/random_projection.py sss[36m                                         [  0%][0m
sklearn/cluster/affinity_propagation_.py s[36m                               [  0%][0m
sklearn/cluster/bicluster.py ss[36m                                          [  0%][0m
sklearn/cluster/birch.py s[36m                                               [  0%][0m
sklearn/cluster/dbscan_.py s[36m                                             [  0%][0m
sklearn/cluster/hierarchical.py ss[36m                                       [  0%][0m
sklearn/cluster/k_means_.py ss[36m                                           [  0%][0m
sklearn/cluster/mean_shift_.py s[36m                                         [  0%][0m
sklearn/cluster/spectral.py s[36m                                            [  0%][0m
sklearn/cluster/tests/test_affinity_propagation.py .......[36m               [  0%][0m
sklearn/cluster/tests/test_bicluster.py ........s.[36m                       [  0%][0m
sklearn/cluster/tests/test_birch.py .......[36m                              [  0%][0m
sklearn/cluster/tests/test_dbscan.py ..F.F.............[36m                  [  0%][0m
sklearn/cluster/tests/test_feature_agglomeration.py .[36m                    [  0%][0m
sklearn/cluster/tests/test_hierarchical.py ......................[36m        [  0%][0m
sklearn/cluster/tests/test_k_means.py .FF.F..F.F.........F..F..F..F.F...[36m [  1%]
[0m........FFF.....F....FF.F........[36m                                        [  1%][0m
sklearn/cluster/tests/test_mean_shift.py .........[36m                       [  1%][0m
sklearn/cluster/tests/test_optics.py ..................[36m                  [  1%][0m
sklearn/cluster/tests/test_spectral.py .............[36m                     [  2%][0m
sklearn/compose/_column_transformer.py ss[36m                                [  2%][0m
sklearn/compose/_target.py s[36m                                             [  2%][0m
sklearn/compose/tests/test_column_transformer.py .s.....s...............[36m [  2%]
[0m.sssssssss...........s[36m                                                   [  2%][0m
sklearn/compose/tests/test_target.py ...........[36m                         [  2%][0m
sklearn/covariance/tests/test_covariance.py ......[36m                       [  2%][0m
sklearn/covariance/tests/test_elliptic_envelope.py ....[36m                  [  2%][0m
sklearn/covariance/tests/test_graph_lasso.py .....[36m                       [  2%][0m
sklearn/covariance/tests/test_graphical_lasso.py .....[36m                   [  2%][0m
sklearn/covariance/tests/test_robust_covariance.py .......[36m               [  2%][0m
sklearn/cross_decomposition/cca_.py s[36m                                    [  2%][0m
sklearn/cross_decomposition/pls_.py sss[36m                                  [  2%][0m
sklearn/cross_decomposition/tests/test_pls.py ........[36m                   [  2%][0m
sklearn/datasets/base.py sssssss[36m                                         [  3%][0m
sklearn/datasets/samples_generator.py s[36m                                  [  3%][0m
sklearn/datasets/tests/test_20news.py sss[36m                                [  3%][0m
sklearn/datasets/tests/test_base.py ...................[36m                  [  3%][0m
sklearn/datasets/tests/test_california_housing.py s[36m                      [  3%][0m
sklearn/datasets/tests/test_covtype.py s[36m                                 [  3%][0m
sklearn/datasets/tests/test_kddcup99.py ss[36m                               [  3%][0m
sklearn/datasets/tests/test_lfw.py .....[36m                                 [  3%][0m
sklearn/datasets/tests/test_mldata.py ....[36m                               [  3%][0m
sklearn/datasets/tests/test_openml.py ......................[36m             [  3%][0m
sklearn/datasets/tests/test_rcv1.py s[36m                                    [  3%][0m
sklearn/datasets/tests/test_samples_generator.py .......................[36m [  3%]
[0m.....[36m                                                                    [  3%][0m
sklearn/datasets/tests/test_svmlight_format.py .........................[36m [  4%]
[0m.............................[36m                                            [  4%][0m
sklearn/decomposition/base.py s[36m                                          [  4%][0m
sklearn/decomposition/factor_analysis.py s[36m                               [  4%][0m
sklearn/decomposition/fastica_.py s[36m                                      [  4%][0m
sklearn/decomposition/incremental_pca.py s[36m                               [  4%][0m
sklearn/decomposition/kernel_pca.py s[36m                                    [  4%][0m
sklearn/decomposition/nmf.py ss[36m                                          [  4%][0m
sklearn/decomposition/online_lda.py s[36m                                    [  4%][0m
sklearn/decomposition/pca.py s[36m                                           [  4%][0m
sklearn/decomposition/sparse_pca.py ss[36m                                   [  4%][0m
sklearn/decomposition/truncated_svd.py s[36m                                 [  4%][0m
sklearn/decomposition/tests/test_dict_learning.py ......................[36m [  4%]
[0m...................................[36m                                      [  5%][0m
sklearn/decomposition/tests/test_factor_analysis.py .[36m                    [  5%][0m
sklearn/decomposition/tests/test_fastica.py ........[36m                     [  5%][0m
sklearn/decomposition/tests/test_incremental_pca.py ................[36m     [  5%][0m
sklearn/decomposition/tests/test_kernel_pca.py ...F........[36m              [  5%][0m
sklearn/decomposition/tests/test_nmf.py ........................[36m         [  5%][0m
sklearn/decomposition/tests/test_online_lda.py .........................[36m [  5%]
[0m........[36m                                                                 [  5%][0m
sklearn/decomposition/tests/test_pca.py ................................[36m [  6%]
[0m.........[36m                                                                [  6%][0m
sklearn/decomposition/tests/test_sparse_pca.py ..............ss....[36m      [  6%][0m
sklearn/decomposition/tests/test_truncated_svd.py FF...FFFFFFFF..[36m        [  6%][0m
sklearn/ensemble/forest.py ss[36m                                            [  6%][0m
sklearn/ensemble/partial_dependence.py ss[36m                                [  6%][0m
sklearn/ensemble/voting_classifier.py s[36m                                  [  6%][0m
sklearn/ensemble/tests/test_bagging.py ..............................[36m    [  7%][0m
sklearn/ensemble/tests/test_base.py ....[36m                                 [  7%][0m
sklearn/ensemble/tests/test_forest.py ..................................[36m [  7%]
[0m...................................F....................................[36m [  8%]
[0m..........................................................[36m               [  8%][0m
sklearn/ensemble/tests/test_gradient_boosting.py .......................[36m [  8%]
[0m........................................................................[36m [  9%]
[0m......................[36m                                                   [  9%][0m
sklearn/ensemble/tests/test_gradient_boosting_loss_functions.py ........[36m [  9%]
[0m.[36m                                                                        [  9%][0m
sklearn/ensemble/tests/test_iforest.py ..............[36m                    [ 10%][0m
sklearn/ensemble/tests/test_partial_dependence.py ....sss[36m                [ 10%][0m
sklearn/ensemble/tests/test_voting_classifier.py .................[36m       [ 10%][0m
sklearn/ensemble/tests/test_weight_boosting.py ................[36m          [ 10%][0m
sklearn/feature_extraction/dict_vectorizer.py ss[36m                         [ 10%][0m
sklearn/feature_extraction/hashing.py s[36m                                  [ 10%][0m
sklearn/feature_extraction/image.py s[36m                                    [ 10%][0m
sklearn/feature_extraction/text.py sss[36m                                   [ 10%][0m
sklearn/feature_extraction/tests/test_dict_vectorizer.py ...............[36m [ 10%]
[0m.............[36m                                                            [ 10%][0m
sklearn/feature_extraction/tests/test_feature_hasher.py ...........[36m      [ 10%][0m
sklearn/feature_extraction/tests/test_image.py ....................[36m      [ 11%][0m
sklearn/feature_extraction/tests/test_text.py ..........................[36m [ 11%]
[0m......................................[36m                                   [ 11%][0m
sklearn/feature_selection/rfe.py ss[36m                                      [ 11%][0m
sklearn/feature_selection/univariate_selection.py ssssss[36m                 [ 11%][0m
sklearn/feature_selection/variance_threshold.py s[36m                        [ 11%][0m
sklearn/feature_selection/tests/test_base.py .....[36m                       [ 11%][0m
sklearn/feature_selection/tests/test_chi2.py .....[36m                       [ 11%][0m
sklearn/feature_selection/tests/test_feature_select.py ...F.............[36m [ 12%]
[0m................[36m                                                         [ 12%][0m
sklearn/feature_selection/tests/test_from_model.py .....................[36m [ 12%]
[0m[36m                                                                         [ 12%][0m
sklearn/feature_selection/tests/test_mutual_info.py ........[36m             [ 12%][0m
sklearn/feature_selection/tests/test_rfe.py ............[36m                 [ 12%][0m
sklearn/feature_selection/tests/test_variance_threshold.py FF[36m            [ 12%][0m
sklearn/gaussian_process/gpc.py s[36m                                        [ 12%][0m
sklearn/gaussian_process/gpr.py s[36m                                        [ 12%][0m
sklearn/gaussian_process/tests/test_gpc.py .............................[36m [ 12%]
[0m.[36m                                                                        [ 12%][0m
sklearn/gaussian_process/tests/test_gpr.py .............................[36m [ 13%]
[0m...................................................[36m                      [ 13%][0m
sklearn/gaussian_process/tests/test_kernels.py .........................[36m [ 13%]
[0m........................................................................[36m [ 14%]
[0m........................................................................[36m [ 15%]
[0m........................................................................[36m [ 16%]
[0m...........[36m                                                              [ 16%][0m
sklearn/linear_model/bayes.py ss[36m                                         [ 16%][0m
sklearn/linear_model/coordinate_descent.py sssssss[36m                       [ 16%][0m
sklearn/linear_model/least_angle.py sss[36m                                  [ 16%][0m
sklearn/linear_model/logistic.py ss[36m                                      [ 16%][0m
sklearn/linear_model/passive_aggressive.py ss[36m                            [ 16%][0m
sklearn/linear_model/perceptron.py s[36m                                     [ 16%][0m
sklearn/linear_model/randomized_l1.py ss[36m                                 [ 16%][0m
sklearn/linear_model/ridge.py ssss[36m                                       [ 16%][0m
sklearn/linear_model/sag.py s[36m                                            [ 16%][0m
sklearn/linear_model/stochastic_gradient.py ss[36m                           [ 16%][0m
sklearn/linear_model/tests/test_base.py ....F.F.F.FFF.F...[36m               [ 16%][0m
sklearn/linear_model/tests/test_bayes.py s........[36m                       [ 16%][0m
sklearn/linear_model/tests/test_coordinate_descent.py ..................[36m [ 16%]
[0m.....F...F............[36m                                                   [ 17%][0m
sklearn/linear_model/tests/test_huber.py .........[36m                       [ 17%][0m
sklearn/linear_model/tests/test_least_angle.py .........................[36m [ 17%]
[0m.....[36m                                                                    [ 17%][0m
sklearn/linear_model/tests/test_logistic.py ............................[36m [ 17%]
[0m....................F...F........................................F......[36m [ 18%]
[0m........[36m                                                                 [ 18%][0m
sklearn/linear_model/tests/test_omp.py ..................[36m                [ 18%][0m
sklearn/linear_model/tests/test_passive_aggressive.py ................[36m   [ 18%][0m
sklearn/linear_model/tests/test_perceptron.py ...[36m                        [ 18%][0m
sklearn/linear_model/tests/test_randomized_l1.py .....F.[36m                 [ 18%][0m
sklearn/linear_model/tests/test_ransac.py .............FFF.......[36m        [ 19%][0m
sklearn/linear_model/tests/test_ridge.py ................FF..F..........[36m [ 19%]
[0m.......F.....[36m                                                            [ 19%][0m
sklearn/linear_model/tests/test_sag.py ..FFF.FFFFFF....[36m                  [ 19%][0m
sklearn/linear_model/tests/test_sgd.py .................................[36m [ 20%]
[0m........................................................................[36m [ 20%]
[0m........................................................................[36m [ 21%]
[0m..............................[36m                                           [ 21%][0m
sklearn/linear_model/tests/test_sparse_coordinate_descent.py .FFFFF.F.FF[36m [ 21%]
[0m[36m                                                                         [ 21%][0m
sklearn/linear_model/tests/test_theil_sen.py .................[36m           [ 22%][0m
sklearn/manifold/isomap.py s[36m                                             [ 22%][0m
sklearn/manifold/locally_linear.py s[36m                                     [ 22%][0m
sklearn/manifold/mds.py s[36m                                                [ 22%][0m
sklearn/manifold/spectral_embedding_.py s[36m                                [ 22%][0m
sklearn/manifold/t_sne.py s[36m                                              [ 22%][0m
sklearn/manifold/tests/test_isomap.py .....F[36m                             [ 22%][0m
sklearn/manifold/tests/test_locally_linear.py .......[36m                    [ 22%][0m
sklearn/manifold/tests/test_mds.py ...[36m                                   [ 22%][0m
sklearn/manifold/tests/test_spectral_embedding.py ....s.......[36m           [ 22%][0m
sklearn/manifold/tests/test_t_sne.py ........F..........................[36m [ 22%]
[0m.............[36m                                                            [ 22%][0m
sklearn/metrics/classification.py ssssssssssssssss[36m                       [ 22%][0m
sklearn/metrics/pairwise.py ssss[36m                                         [ 23%][0m
sklearn/metrics/ranking.py ssssss[36m                                        [ 23%][0m
sklearn/metrics/regression.py ssssss[36m                                     [ 23%][0m
sklearn/metrics/scorer.py s[36m                                              [ 23%][0m
sklearn/metrics/cluster/supervised.py sssssss[36m                            [ 23%][0m
sklearn/metrics/cluster/tests/test_bicluster.py ...[36m                      [ 23%][0m
sklearn/metrics/cluster/tests/test_common.py ...........................[36m [ 23%]
[0m.............[36m                                                            [ 23%][0m
sklearn/metrics/cluster/tests/test_supervised.py ...................[36m     [ 23%][0m
sklearn/metrics/cluster/tests/test_unsupervised.py F.......[36m              [ 23%][0m
sklearn/metrics/tests/test_classification.py ...........................[36m [ 24%]
[0m............................................[36m                             [ 24%][0m
sklearn/metrics/tests/test_common.py ...................................[36m [ 24%]
[0m........................................................................[36m [ 25%]
[0m........................................................................[36m [ 26%]
[0m........................................................................[36m [ 27%]
[0m........................................................................[36m [ 27%]
[0m........................................................................[36m [ 28%]
[0m..........................................[36m                               [ 28%][0m
sklearn/metrics/tests/test_pairwise.py F.................F.........FFF..[36m [ 29%]
[0m.F.............F............F................[36m                            [ 29%][0m
sklearn/metrics/tests/test_ranking.py ..................................[36m [ 29%]
[0m................[36m                                                         [ 30%][0m
sklearn/metrics/tests/test_regression.py .......[36m                         [ 30%][0m
sklearn/metrics/tests/test_score_objects.py ............................[36m [ 30%]
[0m...................[36m                                                      [ 30%][0m
sklearn/mixture/tests/test_bayesian_mixture.py ...............[36m           [ 30%][0m
sklearn/mixture/tests/test_gaussian_mixture.py .........................[36m [ 31%]
[0m......[36m                                                                   [ 31%][0m
sklearn/mixture/tests/test_mixture.py ..[36m                                 [ 31%][0m
sklearn/model_selection/_search.py sss[36m                                   [ 31%][0m
sklearn/model_selection/_split.py sssssssssssssss[36m                        [ 31%][0m
sklearn/model_selection/_validation.py ssss[36m                              [ 31%][0m
sklearn/model_selection/tests/test_search.py ...........................[36m [ 31%]
[0m............................[36m                                             [ 31%][0m
sklearn/model_selection/tests/test_split.py ............................[36m [ 32%]
[0m...................[36m                                                      [ 32%][0m
sklearn/model_selection/tests/test_validation.py .................F.....[36m [ 32%]
[0m........................[36m                                                 [ 32%][0m
sklearn/neighbors/approximate.py s[36m                                       [ 32%][0m
sklearn/neighbors/base.py ssss[36m                                           [ 32%][0m
sklearn/neighbors/classification.py ss[36m                                   [ 32%][0m
sklearn/neighbors/graph.py ss[36m                                            [ 32%][0m
sklearn/neighbors/nearest_centroid.py s[36m                                  [ 32%][0m
sklearn/neighbors/regression.py ss[36m                                       [ 32%][0m
sklearn/neighbors/unsupervised.py s[36m                                      [ 32%][0m
sklearn/neighbors/tests/test_approximate.py .............[36m                [ 33%][0m
sklearn/neighbors/tests/test_ball_tree.py ..............................[36m [ 33%]
[0m........................................................................[36m [ 34%]
[0m........................................................................[36m [ 34%]
[0m........................................................................[36m [ 35%]
[0m..[36m                                                                       [ 35%][0m
sklearn/neighbors/tests/test_dist_metrics.py ...........................[36m [ 35%]
[0m...............................[36m                                          [ 35%][0m
sklearn/neighbors/tests/test_kd_tree.py ................................[36m [ 36%]
[0m.............................................[36m                            [ 36%][0m
sklearn/neighbors/tests/test_kde.py ....................................[36m [ 37%]
[0m...[36m                                                                      [ 37%][0m
sklearn/neighbors/tests/test_lof.py ..........F.[36m                         [ 37%][0m
sklearn/neighbors/tests/test_nearest_centroid.py F........[36m               [ 37%][0m
sklearn/neighbors/tests/test_neighbors.py ................F.......F...F.[36m [ 37%]
[0mF...F..................[36m                                                  [ 37%][0m
sklearn/neighbors/tests/test_quad_tree.py ...........[36m                    [ 37%][0m
sklearn/neural_network/rbm.py s[36m                                          [ 37%][0m
sklearn/neural_network/tests/test_mlp.py .........................[36m       [ 38%][0m
sklearn/neural_network/tests/test_rbm.py ............[36m                    [ 38%][0m
sklearn/neural_network/tests/test_stochastic_optimizers.py ......[36m        [ 38%][0m
sklearn/preprocessing/_discretization.py s[36m                               [ 38%][0m
sklearn/preprocessing/_encoders.py ss[36m                                    [ 38%][0m
sklearn/preprocessing/data.py sssssssssssss[36m                              [ 38%][0m
sklearn/preprocessing/label.py ssss[36m                                      [ 38%][0m
sklearn/preprocessing/tests/test_base.py ...................[36m             [ 38%][0m
sklearn/preprocessing/tests/test_common.py ...F.....[36m                     [ 38%][0m
sklearn/preprocessing/tests/test_data.py ...............F......F....sFs.[36m [ 39%]
[0msFs..FF.......s.s.....................................F.................[36m [ 39%]
[0m...............................................[36m                          [ 40%][0m
sklearn/preprocessing/tests/test_discretization.py .....................[36m [ 40%]
[0m.............[36m                                                            [ 40%][0m
sklearn/preprocessing/tests/test_encoders.py ...............sss.........[36m [ 40%]
[0m.....s.......s..[36m                                                         [ 41%][0m
sklearn/preprocessing/tests/test_function_transformer.py ..........s[36m     [ 41%][0m
sklearn/preprocessing/tests/test_imputation.py ........[36m                  [ 41%][0m
sklearn/preprocessing/tests/test_label.py ..............................[36m [ 41%]
[0m..[36m                                                                       [ 41%][0m
sklearn/semi_supervised/label_propagation.py sss[36m                         [ 41%][0m
sklearn/semi_supervised/tests/test_label_propagation.py ..........[36m       [ 41%][0m
sklearn/svm/classes.py ssssss[36m                                            [ 41%][0m
sklearn/svm/tests/test_bounds.py ...................[36m                     [ 41%][0m
sklearn/svm/tests/test_sparse.py ...............................[36m         [ 42%][0m
sklearn/svm/tests/test_svm.py ..........................................[36m [ 42%]
[0m.....[36m                                                                    [ 42%][0m
sklearn/tests/test_base.py ......................[36m                        [ 42%][0m
sklearn/tests/test_calibration.py .........[36m                              [ 42%][0m
sklearn/tests/test_check_build.py .[36m                                      [ 42%][0m
sklearn/tests/test_common.py ...........................................[36m [ 43%]
[0m........................................................................[36m [ 44%]
[0m........................................................................[36m [ 44%]
[0m..................s...................................s.................[36m [ 45%]
[0m...................................................F....................[36m [ 46%]
[0m...........................s...................................s........[36m [ 46%]
[0m.................................................s......................[36m [ 47%]
[0m...........s.....................................................s......[36m [ 48%]
[0m........................................................................[36m [ 49%]
[0m....s......................s...................................s........[36m [ 49%]
[0m..........................s.........F..................s................[36m [ 50%]
[0m...................s....................................................[36m [ 51%]
[0m....................F.................................F.................[36m [ 51%]
[0m...........................................................s............[36m [ 52%]
[0m.......................s.................................s..............[36m [ 53%]
[0m......................s.................................................[36m [ 53%]
[0m........................................................................[36m [ 54%]
[0m...................................................s....................[36m [ 55%]
[0m........................................................................[36m [ 56%]
[0m......................................................................s.[36m [ 56%]
[0m..................................s.....................................[36m [ 57%]
[0m........................................................................[36m [ 58%]
[0m....................s...................................................[36m [ 58%]
[0m.......................................s................................[36m [ 59%]
[0m......F..............................................s.........F........[36m [ 60%]
[0m.........................F...................................F..........[36m [ 60%]
[0m..........................................s.............................[36m [ 61%]
[0m......................s.................................................[36m [ 62%]
[0m........................................................................[36m [ 63%]
[0m........................................................................[36m [ 63%]
[0m............F.................................F.........................[36m [ 64%]
[0m........................................................................[36m [ 65%]
[0m........................................................................[36m [ 65%]
[0m..................................................s.........F...........[36m [ 66%]
[0m............s.....................................s.....................[36m [ 67%]
[0m......................F..........................................s......[36m [ 67%]
[0m...............................s........................................[36m [ 68%]
[0m........................................................................[36m [ 69%]
[0m........................................................................[36m [ 70%]
[0m........................................................................[36m [ 70%]
[0m.............s.........F.........................................s......[36m [ 71%]
[0m........................................................................[36m [ 72%]
[0m........................................................................[36m [ 72%]
[0m........................s...............................................[36m [ 73%]
[0m..........................F.............................................[36m [ 74%]
[0m.............................s.....................s..............s.....[36m [ 74%]
[0m......................................F.................................[36m [ 75%]
[0m......................................s.................................[36m [ 76%]
[0m........................................................................[36m [ 77%]
[0m.................................s....................................s.[36m [ 77%]
[0m........................................................................[36m [ 78%]
[0m..................................................s.....................[36m [ 79%]
[0m........................................................................[36m [ 79%]
[0m....................................s.........F.........................[36m [ 80%]
[0m.....................................F..................................[36m [ 81%]
[0m.F.......................s....................................s.........[36m [ 81%]
[0m..................................F...........................F.........[36m [ 82%]
[0m.........s.........F.......................s.........F..................[36m [ 83%]
[0m.....s.........F..........................s.........F...................[36m [ 84%]
[0m...................................s....................................[36m [ 84%]
[0m.s..................................s.........................s.........[36m [ 85%]
[0m.s......................................................................[36m [ 86%]
[0m........................................................................[36m [ 86%]
[0m........................................................................[36m [ 87%]
[0m...............................................................s........[36m [ 88%]
[0m.........................................F..............................[36m [ 88%]
[0m....................F...................................................[36m [ 89%]
[0m.........................s.........F.................................F..[36m [ 90%]
[0m........................................................................[36m [ 91%]
[0m........................................................................[36m [ 91%]
[0m...............................[36m                                          [ 92%][0m
sklearn/tests/test_config.py ...[36m                                         [ 92%][0m
sklearn/tests/test_discriminant_analysis.py ..............[36m               [ 92%][0m
sklearn/tests/test_docstring_parameters.py s.[36m                            [ 92%][0m
sklearn/tests/test_dummy.py ...................................[36m          [ 92%][0m
sklearn/tests/test_impute.py ...............................ss..........[36m [ 93%]
[0mss...................................................................[36m    [ 93%][0m
sklearn/tests/test_init.py .s[36m                                            [ 93%][0m
sklearn/tests/test_isotonic.py ..............................[36m            [ 94%][0m
sklearn/tests/test_kernel_approximation.py .........[36m                     [ 94%][0m
sklearn/tests/test_kernel_ridge.py ........[36m                              [ 94%][0m
sklearn/tests/test_metaestimators.py .[36m                                   [ 94%][0m
sklearn/tests/test_multiclass.py .......................................[36m [ 94%]
[0m[36m                                                                         [ 94%][0m
sklearn/tests/test_multioutput.py ...F................F..[36m                [ 94%][0m
sklearn/tests/test_naive_bayes.py ......................................[36m [ 95%]
[0m.....[36m                                                                    [ 95%][0m
sklearn/tests/test_pipeline.py .............F.....................[36m       [ 95%][0m
sklearn/tests/test_random_projection.py ................[36m                 [ 95%][0m
sklearn/tests/test_site_joblib.py ..[36m                                     [ 95%][0m
sklearn/tree/export.py s[36m                                                 [ 95%][0m
sklearn/tree/tree.py ss[36m                                                  [ 95%][0m
sklearn/tree/tests/test_export.py ....[36m                                   [ 95%][0m
sklearn/tree/tests/test_tree.py ........................................[36m [ 96%]
[0m........................................................................[36m [ 96%]
[0m.............................................................[36m            [ 97%][0m
sklearn/utils/__init__.py sssssss[36m                                        [ 97%][0m
sklearn/utils/deprecation.py s[36m                                           [ 97%][0m
sklearn/utils/extmath.py sss[36m                                             [ 97%][0m
sklearn/utils/graph.py s[36m                                                 [ 97%][0m
sklearn/utils/multiclass.py sss[36m                                          [ 97%][0m
sklearn/utils/random.py s[36m                                                [ 97%][0m
sklearn/utils/testing.py s[36m                                               [ 97%][0m
sklearn/utils/validation.py ss[36m                                           [ 97%][0m
sklearn/utils/tests/test_bench.py .[36m                                      [ 97%][0m
sklearn/utils/tests/test_class_weight.py ..........[36m                      [ 97%][0m
sklearn/utils/tests/test_deprecation.py .s..[36m                             [ 97%][0m
sklearn/utils/tests/test_estimator_checks.py ...F...[36m                     [ 97%][0m
sklearn/utils/tests/test_extmath.py ..........F.................[36m         [ 98%][0m
sklearn/utils/tests/test_fast_dict.py ..[36m                                 [ 98%][0m
sklearn/utils/tests/test_fixes.py ........[36m                               [ 98%][0m
sklearn/utils/tests/test_graph.py .[36m                                      [ 98%][0m
sklearn/utils/tests/test_linear_assignment.py .[36m                          [ 98%][0m
sklearn/utils/tests/test_metaestimators.py ..[36m                            [ 98%][0m
sklearn/utils/tests/test_multiclass.py .....s..[36m                          [ 98%][0m
sklearn/utils/tests/test_murmurhash.py ......[36m                            [ 98%][0m
sklearn/utils/tests/test_optimize.py .[36m                                   [ 98%][0m
sklearn/utils/tests/test_random.py ....[36m                                  [ 98%][0m
sklearn/utils/tests/test_seq_dataset.py ..[36m                               [ 98%][0m
sklearn/utils/tests/test_shortest_path.py ....[36m                           [ 98%][0m
sklearn/utils/tests/test_show_versions.py ...[36m                            [ 98%][0m
sklearn/utils/tests/test_sparsefuncs.py FFFFFFF.........................[36m [ 98%]
[0m.........[36m                                                                [ 98%][0m
sklearn/utils/tests/test_stats.py .....[36m                                  [ 99%][0m
sklearn/utils/tests/test_testing.py ...........s..[36m                       [ 99%][0m
sklearn/utils/tests/test_utils.py ..........s.......................[36m     [ 99%][0m
sklearn/utils/tests/test_validation.py .................................[36m [ 99%]
[0m..............s.s...[36m                                                     [100%][0m

=================================== FAILURES ===================================
[31m[1m______________________________ test_dbscan_sparse ______________________________[0m

[1m    def test_dbscan_sparse():[0m
[1m        core_sparse, labels_sparse = dbscan(sparse.lil_matrix(X), eps=.8,[0m
[1m>                                           min_samples=10)[0m


[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/tests/test_dbscan.py[0m:78: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/dbscan_.py[0m:165: in dbscan
[1m    return_distance=False)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/base.py[0m:699: in radius_neighbors
[1m    neigh_ind_list = sum(results, [])[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:1282: in pairwise_distances_chunked
[1m    n_jobs=n_jobs, **kwds)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:1402: in pairwise_distances
[1m    return _parallel_pairwise(X, Y, func, n_jobs, **kwds)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:1069: in _parallel_pairwise
[1m    return func(X, Y, **kwds)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:234: in euclidean_distances
[1m    XX = row_norms(X, squared=True)[:, np.newaxis][0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py[0m:86: in row_norms
[1m    norms = csr_row_norms(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:31: TypeError
[31m[1m_________________________ test_dbscan_no_core_samples __________________________[0m

[1m    def test_dbscan_no_core_samples():[0m
[1m        rng = np.random.RandomState(0)[0m
[1m        X = rng.rand(40, 10)[0m
[1m        X[X < .8] = 0[0m
[1m    [0m
[1m        for X_ in [X, sparse.csr_matrix(X)]:[0m
[1m>           db = DBSCAN(min_samples=6).fit(X_)[0m

X          = array([[ 0.        ,  0.        ,  0.        ,  0.        ,  0.        ,
         0.        ,  0.        ,  0.891773  ...    ,  0.        ,  0.84903831,  0.        ,
         0.95898272,  0.        ,  0.        ,  0.        ,  0.        ]])
X_         = <40x10 sparse matrix of type '<class 'numpy.float64'>'
	with 74 stored elements in Compressed Sparse Row format>
db         = DBSCAN(algorithm='auto', eps=0.5, leaf_size=30, metric='euclidean',
    metric_params=None, min_samples=6, n_jobs=None, p=None)
rng        = <mtrand.RandomState object at 0x7fd3f77e4be0>

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/tests/test_dbscan.py[0m:106: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/dbscan_.py[0m:334: in fit
[1m    **self.get_params())[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/dbscan_.py[0m:165: in dbscan
[1m    return_distance=False)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/base.py[0m:699: in radius_neighbors
[1m    neigh_ind_list = sum(results, [])[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:1282: in pairwise_distances_chunked
[1m    n_jobs=n_jobs, **kwds)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:1402: in pairwise_distances
[1m    return _parallel_pairwise(X, Y, func, n_jobs, **kwds)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:1069: in _parallel_pairwise
[1m    return func(X, Y, **kwds)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:234: in euclidean_distances
[1m    XX = row_norms(X, squared=True)[:, np.newaxis][0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py[0m:86: in row_norms
[1m    norms = csr_row_norms(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:31: TypeError
[31m[1m______________________ test_labels_assignment_and_inertia ______________________[0m

[1m    def test_labels_assignment_and_inertia():[0m
[1m        # pure numpy implementation as easily auditable reference gold[0m
[1m        # implementation[0m
[1m        rng = np.random.RandomState(42)[0m
[1m        noisy_centers = centers + rng.normal(size=centers.shape)[0m
[1m        labels_gold = np.full(n_samples, -1, dtype=np.int)[0m
[1m        mindist = np.empty(n_samples)[0m
[1m        mindist.fill(np.infty)[0m
[1m        for center_id in range(n_clusters):[0m
[1m            dist = np.sum((X - noisy_centers[center_id]) ** 2, axis=1)[0m
[1m            labels_gold[dist < mindist] = center_id[0m
[1m            mindist = np.minimum(dist, mindist)[0m
[1m        inertia_gold = mindist.sum()[0m
[1m        assert_true((mindist >= 0.0).all())[0m
[1m        assert_true((labels_gold != -1).all())[0m
[1m    [0m
[1m        sample_weight = None[0m
[1m    [0m
[1m        # perform label assignment using the dense array input[0m
[1m        x_squared_norms = (X ** 2).sum(axis=1)[0m
[1m        labels_array, inertia_array = _labels_inertia([0m
[1m            X, sample_weight, x_squared_norms, noisy_centers)[0m
[1m        assert_array_almost_equal(inertia_array, inertia_gold)[0m
[1m        assert_array_equal(labels_array, labels_gold)[0m
[1m    [0m
[1m        # perform label assignment using the sparse CSR input[0m
[1m>       x_squared_norms_from_csr = row_norms(X_csr, squared=True)[0m

center_id  = 2
dist       = array([  4.18201866,  53.39386682,  36.93512659,  74.48514804,
        41.77145322,  30.71594804,  28.36279396,  44.04... 60.33995028,   7.88147878,   9.18781601,  22.81706914,
        17.22714064,  22.46093037,  24.71978832,  32.38755161])
inertia_array = 979.70717826232749
inertia_gold = 979.7071782623276
labels_array = array([2, 0, 1, 0, 0, 1, 1, 0, 2, 2, 2, 1, 0, 2, 1, 0, 1, 0, 1, 0, 0, 1, 2,
       2, 0, 2, 0, 0, 2, 1, 1, 2, 1, 1, 0,...      2, 1, 2, 2, 1, 0, 2, 1, 1, 0, 0, 0, 1, 0, 2, 1, 2, 0, 2, 2, 0, 0, 2,
       0, 2, 2, 1, 1, 2, 1, 0], dtype=int32)
labels_gold = array([2, 0, 1, 0, 0, 1, 1, 0, 2, 2, 2, 1, 0, 2, 1, 0, 1, 0, 1, 0, 0, 1, 2,
       2, 0, 2, 0, 0, 2, 1, 1, 2, 1, 1, 0,...2, 0, 2, 1,
       2, 1, 2, 2, 1, 0, 2, 1, 1, 0, 0, 0, 1, 0, 2, 1, 2, 0, 2, 2, 0, 0, 2,
       0, 2, 2, 1, 1, 2, 1, 0])
mindist    = array([  4.18201866,   5.88679817,   2.46254442,  13.38278845,
         6.17574302,   7.9008214 ,   7.52948086,  10.48... 10.20936594,   7.88147878,   9.18781601,   5.41181289,
         7.91004099,  22.46093037,   3.11400763,   7.16743126])
noisy_centers = array([[ 0.49671415,  4.8617357 ,  0.64768854,  1.52302986, -0.23415337],
       [ 0.76586304,  2.57921282,  4.76743473, -0.46947439,  0.54256004],
       [ 0.53658231, -0.46572975,  0.24196227,  3.08671976, -0.72491783]])
rng        = <mtrand.RandomState object at 0x7fd3f77b6e48>
sample_weight = None
x_squared_norms = array([ 20.61835777,  38.29292975,  30.66760276,  49.11128188,
        30.60182723,  23.14530561,  15.00949464,  21.63... 37.38430932,  24.54623485,  31.38965381,  15.2873549 ,
        13.36583496,  50.0245322 ,  17.60756709,  21.45800606])

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/tests/test_k_means.py[0m:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py[0m:86: in row_norms
[1m    norms = csr_row_norms(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:31: TypeError
[31m[1m______________________ test_minibatch_update_consistency _______________________[0m

[1m    def test_minibatch_update_consistency():[0m
[1m        # Check that dense and sparse minibatch update give the same results[0m
[1m        rng = np.random.RandomState(42)[0m
[1m        old_centers = centers + rng.normal(size=centers.shape)[0m
[1m    [0m
[1m        new_centers = old_centers.copy()[0m
[1m        new_centers_csr = old_centers.copy()[0m
[1m    [0m
[1m        weight_sums = np.zeros(new_centers.shape[0], dtype=np.double)[0m
[1m        weight_sums_csr = np.zeros(new_centers.shape[0], dtype=np.double)[0m
[1m    [0m
[1m        x_squared_norms = (X ** 2).sum(axis=1)[0m
[1m>       x_squared_norms_csr = row_norms(X_csr, squared=True)[0m

new_centers = array([[ 0.49671415,  4.8617357 ,  0.64768854,  1.52302986, -0.23415337],
       [ 0.76586304,  2.57921282,  4.76743473, -0.46947439,  0.54256004],
       [ 0.53658231, -0.46572975,  0.24196227,  3.08671976, -0.72491783]])
new_centers_csr = array([[ 0.49671415,  4.8617357 ,  0.64768854,  1.52302986, -0.23415337],
       [ 0.76586304,  2.57921282,  4.76743473, -0.46947439,  0.54256004],
       [ 0.53658231, -0.46572975,  0.24196227,  3.08671976, -0.72491783]])
old_centers = array([[ 0.49671415,  4.8617357 ,  0.64768854,  1.52302986, -0.23415337],
       [ 0.76586304,  2.57921282,  4.76743473, -0.46947439,  0.54256004],
       [ 0.53658231, -0.46572975,  0.24196227,  3.08671976, -0.72491783]])
rng        = <mtrand.RandomState object at 0x7fd3f77ea080>
weight_sums = array([ 0.,  0.,  0.])
weight_sums_csr = array([ 0.,  0.,  0.])
x_squared_norms = array([ 20.61835777,  38.29292975,  30.66760276,  49.11128188,
        30.60182723,  23.14530561,  15.00949464,  21.63... 37.38430932,  24.54623485,  31.38965381,  15.2873549 ,
        13.36583496,  50.0245322 ,  17.60756709,  21.45800606])

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/tests/test_k_means.py[0m:111: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py[0m:86: in row_norms
[1m    norms = csr_row_norms(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:31: TypeError
[31m[1m___________________________ test_k_means_new_centers ___________________________[0m

[1m    def test_k_means_new_centers():[0m
[1m        # Explore the part of the code where a new center is reassigned[0m
[1m        X = np.array([[0, 0, 1, 1],[0m
[1m                      [0, 0, 0, 0],[0m
[1m                      [0, 1, 0, 0],[0m
[1m                      [0, 0, 0, 0],[0m
[1m                      [0, 0, 0, 0],[0m
[1m                      [0, 1, 0, 0]])[0m
[1m        labels = [0, 1, 2, 1, 1, 2][0m
[1m        bad_centers = np.array([[+0, 1, 0, 0],[0m
[1m                                [.2, 0, .2, .2],[0m
[1m                                [+0, 0, 0, 0]])[0m
[1m    [0m
[1m        km = KMeans(n_clusters=3, init=bad_centers, n_init=1, max_iter=10,[0m
[1m                    random_state=1)[0m
[1m        for this_X in (X, sp.coo_matrix(X)):[0m
[1m>           km.fit(this_X)[0m

X          = array([[0, 0, 1, 1],
       [0, 0, 0, 0],
       [0, 1, 0, 0],
       [0, 0, 0, 0],
       [0, 0, 0, 0],
       [0, 1, 0, 0]])
bad_centers = array([[ 0. ,  1. ,  0. ,  0. ],
       [ 0.2,  0. ,  0.2,  0.2],
       [ 0. ,  0. ,  0. ,  0. ]])
km         = KMeans(algorithm='auto', copy_x=True,
    init=array([[ 0. ,  1. ,  0. ,  0. ],
       [ 0.2,  0. ,  0.2,  0.2],
     ...x_iter=10, n_clusters=3, n_init=1, n_jobs=None,
    precompute_distances='auto', random_state=1, tol=0.0001, verbose=0)
labels     = [0, 1, 2, 1, 1, 2]
this_X     = <6x4 sparse matrix of type '<class 'numpy.int64'>'
	with 4 stored elements in COOrdinate format>
this_labels = array([0, 1, 2, 1, 1, 2])

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/tests/test_k_means.py[0m:206: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/k_means_.py[0m:968: in fit
[1m    return_n_iter=True)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/k_means_.py[0m:317: in k_means
[1m    tol = _tolerance(X, tol)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/k_means_.py[0m:165: in _tolerance
[1m    variances = mean_variance_axis(X, axis=0)[1][0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
[31m[1m______________________ test_k_means_plus_plus_init_sparse ______________________[0m

[1m    def test_k_means_plus_plus_init_sparse():[0m
[1m        km = KMeans(init="k-means++", n_clusters=n_clusters, random_state=42)[0m
[1m>       km.fit(X_csr)[0m

km         = KMeans(algorithm='auto', copy_x=True, init='k-means++', max_iter=300,
    n_clusters=3, n_init=10, n_jobs=None, precompute_distances='auto',
    random_state=42, tol=0.0001, verbose=0)

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/tests/test_k_means.py[0m:234: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/k_means_.py[0m:968: in fit
[1m    return_n_iter=True)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/k_means_.py[0m:317: in k_means
[1m    tol = _tolerance(X, tol)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/k_means_.py[0m:165: in _tolerance
[1m    variances = mean_variance_axis(X, axis=0)[1][0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
[31m[1m_______________________ test_k_means_random_init_sparse ________________________[0m

[1m    def test_k_means_random_init_sparse():[0m
[1m        km = KMeans(init="random", n_clusters=n_clusters, random_state=42)[0m
[1m>       km.fit(X_csr)[0m

km         = KMeans(algorithm='auto', copy_x=True, init='random', max_iter=300,
    n_clusters=3, n_init=10, n_jobs=None, precompute_distances='auto',
    random_state=42, tol=0.0001, verbose=0)

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/tests/test_k_means.py[0m:246: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/k_means_.py[0m:968: in fit
[1m    return_n_iter=True)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/k_means_.py[0m:317: in k_means
[1m    tol = _tolerance(X, tol)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/k_means_.py[0m:165: in _tolerance
[1m    variances = mean_variance_axis(X, axis=0)[1][0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
[31m[1m_________________ test_mb_k_means_plus_plus_init_sparse_matrix _________________[0m

[1m    def test_mb_k_means_plus_plus_init_sparse_matrix():[0m
[1m        mb_k_means = MiniBatchKMeans(init="k-means++", n_clusters=n_clusters,[0m
[1m                                     random_state=42)[0m
[1m>       mb_k_means.fit(X_csr)[0m

mb_k_means = MiniBatchKMeans(batch_size=100, compute_labels=True, init='k-means++',
        init_size=None, max_iter=100, max_no_improvement=10, n_clusters=3,
        n_init=3, random_state=42, reassignment_ratio=0.01, tol=0.0,
        verbose=0)

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/tests/test_k_means.py[0m:339: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/k_means_.py[0m:1508: in fit
[1m    x_squared_norms = row_norms(X, squared=True)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py[0m:86: in row_norms
[1m    norms = csr_row_norms(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:31: TypeError
[31m[1m________________ test_minibatch_k_means_random_init_sparse_csr _________________[0m

[1m    def test_minibatch_k_means_random_init_sparse_csr():[0m
[1m        # increase n_init to make random init stable enough[0m
[1m        mb_k_means = MiniBatchKMeans(init="random", n_clusters=n_clusters,[0m
[1m>                                    random_state=42, n_init=10).fit(X_csr)[0m


[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/tests/test_k_means.py[0m:360: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/k_means_.py[0m:1508: in fit
[1m    x_squared_norms = row_norms(X, squared=True)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py[0m:86: in row_norms
[1m    norms = csr_row_norms(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:31: TypeError
[31m[1m________________ test_minibatch_k_means_perfect_init_sparse_csr ________________[0m

[1m    def test_minibatch_k_means_perfect_init_sparse_csr():[0m
[1m        mb_k_means = MiniBatchKMeans(init=centers.copy(), n_clusters=n_clusters,[0m
[1m>                                    random_state=42, n_init=1).fit(X_csr)[0m


[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/tests/test_k_means.py[0m:378: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/k_means_.py[0m:1508: in fit
[1m    x_squared_norms = row_norms(X, squared=True)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py[0m:86: in row_norms
[1m    norms = csr_row_norms(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:31: TypeError
[31m[1m___________________________ test_minibatch_reassign ____________________________[0m

[1m    def test_minibatch_reassign():[0m
[1m        # Give a perfect initialization, but a large reassignment_ratio,[0m
[1m        # as a result all the centers should be reassigned and the model[0m
[1m        # should no longer be good[0m
[1m        sample_weight = np.ones(X.shape[0], dtype=X.dtype)[0m
[1m        for this_X in (X, X_csr):[0m
[1m            mb_k_means = MiniBatchKMeans(n_clusters=n_clusters, batch_size=100,[0m
[1m                                         random_state=42)[0m
[1m>           mb_k_means.fit(this_X)[0m

mb_k_means = MiniBatchKMeans(batch_size=100, compute_labels=True, init='k-means++',
        init_size=None, max_iter=100, max_no_improvement=10, n_clusters=3,
        n_init=3, random_state=42, reassignment_ratio=0.01, tol=0.0,
        verbose=0)
old_stdout = <_pytest.capture.EncodedFile object at 0x7fd413380908>
sample_weight = array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,
        1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,...   1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,
        1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.])
score_before = -466.37779202951373
this_X     = <100x5 sparse matrix of type '<class 'numpy.float64'>'
	with 500 stored elements in Compressed Sparse Row format>

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/tests/test_k_means.py[0m:422: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/k_means_.py[0m:1508: in fit
[1m    x_squared_norms = row_norms(X, squared=True)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py[0m:86: in row_norms
[1m    norms = csr_row_norms(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:31: TypeError
[31m[1m_____________________ test_sparse_mb_k_means_callable_init _____________________[0m

[1m    def test_sparse_mb_k_means_callable_init():[0m
[1m    [0m
[1m        def test_init(X, k, random_state):[0m
[1m            return centers[0m
[1m    [0m
[1m        # Small test to check that giving the wrong number of centers[0m
[1m        # raises a meaningful error[0m
[1m        msg = "does not match the number of clusters"[0m
[1m        assert_raises_regex(ValueError, msg, MiniBatchKMeans(init=test_init,[0m
[1m                                                             random_state=42).fit,[0m
[1m>                           X_csr)[0m

msg        = 'does not match the number of clusters'
test_init  = <function test_sparse_mb_k_means_callable_init.<locals>.test_init at 0x7fd3f778c2f0>

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/tests/test_k_means.py[0m:486: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/_unittest_backport.py[0m:224: in assertRaisesRegex
[1m    return context.handle('assertRaisesRegex', args, kwargs)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/_unittest_backport.py[0m:113: in handle
[1m    callable_obj(*args, **kwargs)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/k_means_.py[0m:1508: in fit
[1m    x_squared_norms = row_norms(X, squared=True)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py[0m:86: in row_norms
[1m    norms = csr_row_norms(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:31: TypeError
[31m[1m______________ test_predict_minibatch_kmeanspp_init_sparse_input _______________[0m

[1m    def test_predict_minibatch_kmeanspp_init_sparse_input():[0m
[1m        mb_k_means = MiniBatchKMeans(n_clusters=n_clusters, init='k-means++',[0m
[1m>                                    n_init=10).fit(X_csr)[0m


[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/tests/test_k_means.py[0m:619: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/k_means_.py[0m:1508: in fit
[1m    x_squared_norms = row_norms(X, squared=True)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py[0m:86: in row_norms
[1m    norms = csr_row_norms(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:31: TypeError
[31m[1m_______________ test_predict_minibatch_random_init_sparse_input ________________[0m

[1m    def test_predict_minibatch_random_init_sparse_input():[0m
[1m        mb_k_means = MiniBatchKMeans(n_clusters=n_clusters, init='random',[0m
[1m>                                    n_init=10).fit(X_csr)[0m


[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/tests/test_k_means.py[0m:635: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/k_means_.py[0m:1508: in fit
[1m    x_squared_norms = row_norms(X, squared=True)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py[0m:86: in row_norms
[1m    norms = csr_row_norms(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:31: TypeError
[31m[1m________________________________ test_int_input ________________________________[0m

[1m    def test_int_input():[0m
[1m        X_list = [[0, 0], [10, 10], [12, 9], [-1, 1], [2, 0], [8, 10]][0m
[1m        for dtype in [np.int32, np.int64]:[0m
[1m            X_int = np.array(X_list, dtype=dtype)[0m
[1m            X_int_csr = sp.csr_matrix(X_int)[0m
[1m            init_int = X_int[:2][0m
[1m    [0m
[1m            fitted_models = [[0m
[1m                KMeans(n_clusters=2).fit(X_int),[0m
[1m                KMeans(n_clusters=2, init=init_int, n_init=1).fit(X_int),[0m
[1m                # mini batch kmeans is very unstable on such a small dataset hence[0m
[1m                # we use many inits[0m
[1m                MiniBatchKMeans(n_clusters=2, n_init=10, batch_size=2).fit(X_int),[0m
[1m                MiniBatchKMeans(n_clusters=2, n_init=10, batch_size=2).fit([0m
[1m>                       X_int_csr),[0m
[1m                MiniBatchKMeans(n_clusters=2, batch_size=2,[0m
[1m                                init=init_int, n_init=1).fit(X_int),[0m
[1m                MiniBatchKMeans(n_clusters=2, batch_size=2,[0m
[1m                                init=init_int, n_init=1).fit(X_int_csr),[0m
[1m            ][0m

X_int      = array([[ 0,  0],
       [10, 10],
       [12,  9],
       [-1,  1],
       [ 2,  0],
       [ 8, 10]], dtype=int32)
X_int_csr  = <6x2 sparse matrix of type '<class 'numpy.int32'>'
	with 9 stored elements in Compressed Sparse Row format>
X_list     = [[0, 0], [10, 10], [12, 9], [-1, 1], [2, 0], [8, 10]]
dtype      = <class 'numpy.int32'>
init_int   = array([[ 0,  0],
       [10, 10]], dtype=int32)

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/tests/test_k_means.py[0m:663: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/k_means_.py[0m:1508: in fit
[1m    x_squared_norms = row_norms(X, squared=True)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py[0m:86: in row_norms
[1m    norms = csr_row_norms(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:31: TypeError
[31m[1m____________________________ test_k_means_function _____________________________[0m

exceptions = <class 'TypeError'>
message = "algorithm='elkan' not supported for sparse input X"
function = <function k_means at 0x7fd3fcde66a8>, args = ()
kwargs = {'X': <100x5 sparse matrix of type '<class 'numpy.float64'>'
	with 500 stored elements in Compressed Sparse Row format>, 'algorithm': 'elkan', 'n_clusters': 2, 'sample_weight': None}
error_message = "astype() got an unexpected keyword argument 'copy'"

[1m    def assert_raise_message(exceptions, message, function, *args, **kwargs):[0m
[1m        """Helper function to test the message raised in an exception.[0m
[1m    [0m
[1m        Given an exception, a callable to raise the exception, and[0m
[1m        a message string, tests that the correct exception is raised and[0m
[1m        that the message is a substring of the error thrown. Used to test[0m
[1m        that the specific message thrown during an exception is correct.[0m
[1m    [0m
[1m        Parameters[0m
[1m        ----------[0m
[1m        exceptions : exception or tuple of exception[0m
[1m            An Exception object.[0m
[1m    [0m
[1m        message : str[0m
[1m            The error message or a substring of the error message.[0m
[1m    [0m
[1m        function : callable[0m
[1m            Callable object to raise error.[0m
[1m    [0m
[1m        *args : the positional arguments to `function`.[0m
[1m    [0m
[1m        **kwargs : the keyword arguments to `function`.[0m
[1m        """[0m
[1m        try:[0m
[1m>           function(*args, **kwargs)[0m

args       = ()
error_message = "astype() got an unexpected keyword argument 'copy'"
exceptions = <class 'TypeError'>
function   = <function k_means at 0x7fd3fcde66a8>
kwargs     = {'X': <100x5 sparse matrix of type '<class 'numpy.float64'>'
	with 500 stored elements in Compressed Sparse Row format>, 'algorithm': 'elkan', 'n_clusters': 2, 'sample_weight': None}
message    = "algorithm='elkan' not supported for sparse input X"

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/testing.py[0m:411: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

X = <100x5 sparse matrix of type '<class 'numpy.float64'>'
	with 500 stored elements in Compressed Sparse Row format>
n_clusters = 2, sample_weight = None, init = 'k-means++'
precompute_distances = 'auto', n_init = 10, max_iter = 300, verbose = False
tol = 0.0001, random_state = <mtrand.RandomState object at 0x7fd408ff7cf8>
copy_x = True, n_jobs = None, algorithm = 'elkan', return_n_iter = False

[1m    def k_means(X, n_clusters, sample_weight=None, init='k-means++',[0m
[1m                precompute_distances='auto', n_init=10, max_iter=300,[0m
[1m                verbose=False, tol=1e-4, random_state=None, copy_x=True,[0m
[1m                n_jobs=None, algorithm="auto", return_n_iter=False):[0m
[1m        """K-means clustering algorithm.[0m
[1m    [0m
[1m        Read more in the :ref:`User Guide <k_means>`.[0m
[1m    [0m
[1m        Parameters[0m
[1m        ----------[0m
[1m        X : array-like or sparse matrix, shape (n_samples, n_features)[0m
[1m            The observations to cluster. It must be noted that the data[0m
[1m            will be converted to C ordering, which will cause a memory copy[0m
[1m            if the given data is not C-contiguous.[0m
[1m    [0m
[1m        n_clusters : int[0m
[1m            The number of clusters to form as well as the number of[0m
[1m            centroids to generate.[0m
[1m    [0m
[1m        sample_weight : array-like, shape (n_samples,), optional[0m
[1m            The weights for each observation in X. If None, all observations[0m
[1m            are assigned equal weight (default: None)[0m
[1m    [0m
[1m        init : {'k-means++', 'random', or ndarray, or a callable}, optional[0m
[1m            Method for initialization, default to 'k-means++':[0m
[1m    [0m
[1m            'k-means++' : selects initial cluster centers for k-mean[0m
[1m            clustering in a smart way to speed up convergence. See section[0m
[1m            Notes in k_init for more details.[0m
[1m    [0m
[1m            'random': choose k observations (rows) at random from data for[0m
[1m            the initial centroids.[0m
[1m    [0m
[1m            If an ndarray is passed, it should be of shape (n_clusters, n_features)[0m
[1m            and gives the initial centers.[0m
[1m    [0m
[1m            If a callable is passed, it should take arguments X, k and[0m
[1m            and a random state and return an initialization.[0m
[1m    [0m
[1m        precompute_distances : {'auto', True, False}[0m
[1m            Precompute distances (faster but takes more memory).[0m
[1m    [0m
[1m            'auto' : do not precompute distances if n_samples * n_clusters > 12[0m
[1m            million. This corresponds to about 100MB overhead per job using[0m
[1m            double precision.[0m
[1m    [0m
[1m            True : always precompute distances[0m
[1m    [0m
[1m            False : never precompute distances[0m
[1m    [0m
[1m        n_init : int, optional, default: 10[0m
[1m            Number of time the k-means algorithm will be run with different[0m
[1m            centroid seeds. The final results will be the best output of[0m
[1m            n_init consecutive runs in terms of inertia.[0m
[1m    [0m
[1m        max_iter : int, optional, default 300[0m
[1m            Maximum number of iterations of the k-means algorithm to run.[0m
[1m    [0m
[1m        verbose : boolean, optional[0m
[1m            Verbosity mode.[0m
[1m    [0m
[1m        tol : float, optional[0m
[1m            The relative increment in the results before declaring convergence.[0m
[1m    [0m
[1m        random_state : int, RandomState instance or None (default)[0m
[1m            Determines random number generation for centroid initialization. Use[0m
[1m            an int to make the randomness deterministic.[0m
[1m            See :term:`Glossary <random_state>`.[0m
[1m    [0m
[1m        copy_x : boolean, optional[0m
[1m            When pre-computing distances it is more numerically accurate to center[0m
[1m            the data first.  If copy_x is True (default), then the original data is[0m
[1m            not modified, ensuring X is C-contiguous.  If False, the original data[0m
[1m            is modified, and put back before the function returns, but small[0m
[1m            numerical differences may be introduced by subtracting and then adding[0m
[1m            the data mean, in this case it will also not ensure that data is[0m
[1m            C-contiguous which may cause a significant slowdown.[0m
[1m    [0m
[1m        n_jobs : int or None, optional (default=None)[0m
[1m            The number of jobs to use for the computation. This works by computing[0m
[1m            each of the n_init runs in parallel.[0m
[1m    [0m
[1m            ``None`` means 1 unless in a :obj:`joblib.parallel_backend` context.[0m
[1m            ``-1`` means using all processors. See :term:`Glossary <n_jobs>`[0m
[1m            for more details.[0m
[1m    [0m
[1m        algorithm : "auto", "full" or "elkan", default="auto"[0m
[1m            K-means algorithm to use. The classical EM-style algorithm is "full".[0m
[1m            The "elkan" variation is more efficient by using the triangle[0m
[1m            inequality, but currently doesn't support sparse data. "auto" chooses[0m
[1m            "elkan" for dense data and "full" for sparse data.[0m
[1m    [0m
[1m        return_n_iter : bool, optional[0m
[1m            Whether or not to return the number of iterations.[0m
[1m    [0m
[1m        Returns[0m
[1m        -------[0m
[1m        centroid : float ndarray with shape (k, n_features)[0m
[1m            Centroids found at the last iteration of k-means.[0m
[1m    [0m
[1m        label : integer ndarray with shape (n_samples,)[0m
[1m            label[i] is the code or index of the centroid the[0m
[1m            i'th observation is closest to.[0m
[1m    [0m
[1m        inertia : float[0m
[1m            The final value of the inertia criterion (sum of squared distances to[0m
[1m            the closest centroid for all observations in the training set).[0m
[1m    [0m
[1m        best_n_iter : int[0m
[1m            Number of iterations corresponding to the best results.[0m
[1m            Returned only if `return_n_iter` is set to True.[0m
[1m    [0m
[1m        """[0m
[1m        if n_init <= 0:[0m
[1m            raise ValueError("Invalid number of initializations."[0m
[1m                             " n_init=%d must be bigger than zero." % n_init)[0m
[1m        random_state = check_random_state(random_state)[0m
[1m    [0m
[1m        if max_iter <= 0:[0m
[1m            raise ValueError('Number of iterations should be a positive number,'[0m
[1m                             ' got %d instead' % max_iter)[0m
[1m    [0m
[1m        # avoid forcing order when copy_x=False[0m
[1m        order = "C" if copy_x else None[0m
[1m        X = check_array(X, accept_sparse='csr', dtype=[np.float64, np.float32],[0m
[1m                        order=order, copy=copy_x)[0m
[1m        # verify that the number of samples given is larger than k[0m
[1m        if _num_samples(X) < n_clusters:[0m
[1m            raise ValueError("n_samples=%d should be >= n_clusters=%d" % ([0m
[1m                _num_samples(X), n_clusters))[0m
[1m    [0m
[1m>       tol = _tolerance(X, tol)[0m

X          = <100x5 sparse matrix of type '<class 'numpy.float64'>'
	with 500 stored elements in Compressed Sparse Row format>
algorithm  = 'elkan'
copy_x     = True
init       = 'k-means++'
max_iter   = 300
n_clusters = 2
n_init     = 10
n_jobs     = None
order      = 'C'
precompute_distances = 'auto'
random_state = <mtrand.RandomState object at 0x7fd408ff7cf8>
return_n_iter = False
sample_weight = None
tol        = 0.0001
verbose    = False

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/k_means_.py[0m:317: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

X = <100x5 sparse matrix of type '<class 'numpy.float64'>'
	with 500 stored elements in Compressed Sparse Row format>
tol = 0.0001

[1m    def _tolerance(X, tol):[0m
[1m        """Return a tolerance which is independent of the dataset"""[0m
[1m        if sp.issparse(X):[0m
[1m>           variances = mean_variance_axis(X, axis=0)[1][0m

X          = <100x5 sparse matrix of type '<class 'numpy.float64'>'
	with 500 stored elements in Compressed Sparse Row format>
tol        = 0.0001

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/k_means_.py[0m:165: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

X = <100x5 sparse matrix of type '<class 'numpy.float64'>'
	with 500 stored elements in Compressed Sparse Row format>
axis = 0

[1m    def mean_variance_axis(X, axis):[0m
[1m        """Compute mean and variance along an axix on a CSR or CSC matrix[0m
[1m    [0m
[1m        Parameters[0m
[1m        ----------[0m
[1m        X : CSR or CSC sparse matrix, shape (n_samples, n_features)[0m
[1m            Input data.[0m
[1m    [0m
[1m        axis : int (either 0 or 1)[0m
[1m            Axis along which the axis should be computed.[0m
[1m    [0m
[1m        Returns[0m
[1m        -------[0m
[1m    [0m
[1m        means : float array with shape (n_features,)[0m
[1m            Feature-wise means[0m
[1m    [0m
[1m        variances : float array with shape (n_features,)[0m
[1m            Feature-wise variances[0m
[1m    [0m
[1m        """[0m
[1m        _raise_error_wrong_axis(axis)[0m
[1m    [0m
[1m        if isinstance(X, sp.csr_matrix):[0m
[1m            if axis == 0:[0m
[1m>               return _csr_mean_var_axis0(X)[0m

X          = <100x5 sparse matrix of type '<class 'numpy.float64'>'
	with 500 stored elements in Compressed Sparse Row format>
axis       = 0

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError

[33mDuring handling of the above exception, another exception occurred:[0m

[1m    def test_k_means_function():[0m
[1m        # test calling the k_means function directly[0m
[1m        # catch output[0m
[1m        old_stdout = sys.stdout[0m
[1m        sys.stdout = StringIO()[0m
[1m        try:[0m
[1m            cluster_centers, labels, inertia = k_means(X, n_clusters=n_clusters,[0m
[1m                                                       sample_weight=None,[0m
[1m                                                       verbose=True)[0m
[1m        finally:[0m
[1m            sys.stdout = old_stdout[0m
[1m        centers = cluster_centers[0m
[1m        assert_equal(centers.shape, (n_clusters, n_features))[0m
[1m    [0m
[1m        labels = labels[0m
[1m        assert_equal(np.unique(labels).shape[0], n_clusters)[0m
[1m    [0m
[1m        # check that the labels assignment are perfect (up to a permutation)[0m
[1m        assert_equal(v_measure_score(true_labels, labels), 1.0)[0m
[1m        assert_greater(inertia, 0.0)[0m
[1m    [0m
[1m        # check warning when centers are passed[0m
[1m        assert_warns(RuntimeWarning, k_means, X, n_clusters=n_clusters,[0m
[1m                     sample_weight=None, init=centers)[0m
[1m    [0m
[1m        # to many clusters desired[0m
[1m        assert_raises(ValueError, k_means, X, n_clusters=X.shape[0] + 1,[0m
[1m                      sample_weight=None)[0m
[1m    [0m
[1m        # kmeans for algorithm='elkan' raises TypeError on sparse matrix[0m
[1m        assert_raise_message(TypeError, "algorithm='elkan' not supported for "[0m
[1m                             "sparse input X", k_means, X=X_csr, n_clusters=2,[0m
[1m>                            sample_weight=None, algorithm="elkan")[0m

centers    = array([[ 0.01685633,  5.16821012, -0.01701333, -0.11807707, -0.27262545],
       [ 0.92726991, -0.02541732, -0.34345636,  5.37694321,  0.97868558],
       [ 0.91976543,  1.08530456,  4.07652006,  0.13276793,  0.20461933]])
cluster_centers = array([[ 0.01685633,  5.16821012, -0.01701333, -0.11807707, -0.27262545],
       [ 0.92726991, -0.02541732, -0.34345636,  5.37694321,  0.97868558],
       [ 0.91976543,  1.08530456,  4.07652006,  0.13276793,  0.20461933]])
inertia    = 465.10524386352859
labels     = array([1, 0, 2, 0, 0, 2, 2, 0, 1, 1, 1, 2, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 1,
       1, 0, 1, 0, 0, 1, 2, 2, 1, 2, 2, 0,...      1, 2, 1, 1, 2, 0, 1, 2, 2, 0, 0, 0, 2, 0, 1, 2, 1, 0, 1, 1, 0, 0, 2,
       0, 1, 1, 2, 2, 1, 2, 0], dtype=int32)
old_stdout = <_pytest.capture.EncodedFile object at 0x7fd413380908>

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/tests/test_k_means.py[0m:770: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

exceptions = <class 'TypeError'>
message = "algorithm='elkan' not supported for sparse input X"
function = <function k_means at 0x7fd3fcde66a8>, args = ()
kwargs = {'X': <100x5 sparse matrix of type '<class 'numpy.float64'>'
	with 500 stored elements in Compressed Sparse Row format>, 'algorithm': 'elkan', 'n_clusters': 2, 'sample_weight': None}
error_message = "astype() got an unexpected keyword argument 'copy'"

[1m    def assert_raise_message(exceptions, message, function, *args, **kwargs):[0m
[1m        """Helper function to test the message raised in an exception.[0m
[1m    [0m
[1m        Given an exception, a callable to raise the exception, and[0m
[1m        a message string, tests that the correct exception is raised and[0m
[1m        that the message is a substring of the error thrown. Used to test[0m
[1m        that the specific message thrown during an exception is correct.[0m
[1m    [0m
[1m        Parameters[0m
[1m        ----------[0m
[1m        exceptions : exception or tuple of exception[0m
[1m            An Exception object.[0m
[1m    [0m
[1m        message : str[0m
[1m            The error message or a substring of the error message.[0m
[1m    [0m
[1m        function : callable[0m
[1m            Callable object to raise error.[0m
[1m    [0m
[1m        *args : the positional arguments to `function`.[0m
[1m    [0m
[1m        **kwargs : the keyword arguments to `function`.[0m
[1m        """[0m
[1m        try:[0m
[1m            function(*args, **kwargs)[0m
[1m        except exceptions as e:[0m
[1m            error_message = str(e)[0m
[1m            if message not in error_message:[0m
[1m                raise AssertionError("Error message does not include the expected"[0m
[1m                                     " string: %r. Observed error message: %r" %[0m
[1m>                                    (message, error_message))[0m
[31m[1mE               AssertionError: Error message does not include the expected string: "algorithm='elkan' not supported for sparse input X". Observed error message: "astype() got an unexpected keyword argument 'copy'"[0m

args       = ()
error_message = "astype() got an unexpected keyword argument 'copy'"
exceptions = <class 'TypeError'>
function   = <function k_means at 0x7fd3fcde66a8>
kwargs     = {'X': <100x5 sparse matrix of type '<class 'numpy.float64'>'
	with 500 stored elements in Compressed Sparse Row format>, 'algorithm': 'elkan', 'n_clusters': 2, 'sample_weight': None}
message    = "algorithm='elkan' not supported for sparse input X"

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/testing.py[0m:417: AssertionError
[31m[1m______________________ test_float_precision[True-KMeans] _______________________[0m

Estimator = <class 'sklearn.cluster.k_means_.KMeans'>, is_sparse = True

[1m    @pytest.mark.parametrize('Estimator', [KMeans, MiniBatchKMeans])[0m
[1m    @pytest.mark.parametrize('is_sparse', [False, True])[0m
[1m    def test_float_precision(Estimator, is_sparse):[0m
[1m    [0m
[1m        estimator = Estimator(n_init=1, random_state=30)[0m
[1m    [0m
[1m        inertia = {}[0m
[1m        X_new = {}[0m
[1m        centers = {}[0m
[1m    [0m
[1m        for dtype in [np.float64, np.float32]:[0m
[1m            if is_sparse:[0m
[1m                X_test = sp.csr_matrix(X_csr, dtype=dtype)[0m
[1m            else:[0m
[1m                X_test = X.astype(dtype)[0m
[1m>           estimator.fit(X_test)[0m

Estimator  = <class 'sklearn.cluster.k_means_.KMeans'>
X_new      = {}
X_test     = <100x5 sparse matrix of type '<class 'numpy.float64'>'
	with 500 stored elements in Compressed Sparse Row format>
centers    = {}
dtype      = <class 'numpy.float64'>
estimator  = KMeans(algorithm='auto', copy_x=True, init='k-means++', max_iter=300,
    n_clusters=8, n_init=1, n_jobs=None, precompute_distances='auto',
    random_state=30, tol=0.0001, verbose=0)
inertia    = {}
is_sparse  = True

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/tests/test_k_means.py[0m:807: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/k_means_.py[0m:968: in fit
[1m    return_n_iter=True)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/k_means_.py[0m:317: in k_means
[1m    tol = _tolerance(X, tol)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/k_means_.py[0m:165: in _tolerance
[1m    variances = mean_variance_axis(X, axis=0)[1][0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
[31m[1m__________________ test_float_precision[True-MiniBatchKMeans] __________________[0m

Estimator = <class 'sklearn.cluster.k_means_.MiniBatchKMeans'>, is_sparse = True

[1m    @pytest.mark.parametrize('Estimator', [KMeans, MiniBatchKMeans])[0m
[1m    @pytest.mark.parametrize('is_sparse', [False, True])[0m
[1m    def test_float_precision(Estimator, is_sparse):[0m
[1m    [0m
[1m        estimator = Estimator(n_init=1, random_state=30)[0m
[1m    [0m
[1m        inertia = {}[0m
[1m        X_new = {}[0m
[1m        centers = {}[0m
[1m    [0m
[1m        for dtype in [np.float64, np.float32]:[0m
[1m            if is_sparse:[0m
[1m                X_test = sp.csr_matrix(X_csr, dtype=dtype)[0m
[1m            else:[0m
[1m                X_test = X.astype(dtype)[0m
[1m>           estimator.fit(X_test)[0m

Estimator  = <class 'sklearn.cluster.k_means_.MiniBatchKMeans'>
X_new      = {}
X_test     = <100x5 sparse matrix of type '<class 'numpy.float64'>'
	with 500 stored elements in Compressed Sparse Row format>
centers    = {}
dtype      = <class 'numpy.float64'>
estimator  = MiniBatchKMeans(batch_size=100, compute_labels=True, init='k-means++',
        init_size=None, max_iter=100, max_no_improvement=10, n_clusters=8,
        n_init=1, random_state=30, reassignment_ratio=0.01, tol=0.0,
        verbose=0)
inertia    = {}
is_sparse  = True

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/tests/test_k_means.py[0m:807: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/k_means_.py[0m:1508: in fit
[1m    x_squared_norms = row_norms(X, squared=True)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py[0m:86: in row_norms
[1m    norms = csr_row_norms(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:31: TypeError
[31m[1m_______________________ test_sparse_k_means_init_centers _______________________[0m

[1m    def test_sparse_k_means_init_centers():[0m
[1m        from sklearn.datasets import load_iris[0m
[1m    [0m
[1m        iris = load_iris()[0m
[1m        X = iris.data[0m
[1m    [0m
[1m        # Get a local optimum[0m
[1m        centers = KMeans(n_clusters=3).fit(X).cluster_centers_[0m
[1m    [0m
[1m        # Fit starting from a local optimum shouldn't change the solution[0m
[1m        np.testing.assert_allclose([0m
[1m            centers,[0m
[1m            KMeans(n_clusters=3,[0m
[1m                   init=centers,[0m
[1m                   n_init=1).fit(X).cluster_centers_[0m
[1m        )[0m
[1m    [0m
[1m        # The same should be true when X is sparse[0m
[1m        X_sparse = sp.csr_matrix(X)[0m
[1m        np.testing.assert_allclose([0m
[1m            centers,[0m
[1m            KMeans(n_clusters=3,[0m
[1m                   init=centers,[0m
[1m>                  n_init=1).fit(X_sparse).cluster_centers_[0m
[1m        )[0m

X          = array([[ 5.1,  3.5,  1.4,  0.2],
       [ 4.9,  3. ,  1.4,  0.2],
       [ 4.7,  3.2,  1.3,  0.2],
       [ 4.6,  3.1,...  2.5,  5. ,  1.9],
       [ 6.5,  3. ,  5.2,  2. ],
       [ 6.2,  3.4,  5.4,  2.3],
       [ 5.9,  3. ,  5.1,  1.8]])
X_sparse   = <150x4 sparse matrix of type '<class 'numpy.float64'>'
	with 600 stored elements in Compressed Sparse Row format>
centers    = array([[ 6.85      ,  3.07368421,  5.74210526,  2.07105263],
       [ 5.006     ,  3.428     ,  1.462     ,  0.246     ],
       [ 5.9016129 ,  2.7483871 ,  4.39354839,  1.43387097]])
iris       = {'target_names': array(['setosa', 'versicolor', 'virginica'], 
      dtype='<U10'), 'feature_names': ['sepal length (c...eseman et al"s AUTOCLASS II\n     conceptual clustering system finds 3 classes in the data.\n   - Many, many more ...'}
load_iris  = <function load_iris at 0x7fd3fce90ae8>

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/tests/test_k_means.py[0m:872: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/k_means_.py[0m:968: in fit
[1m    return_n_iter=True)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/k_means_.py[0m:317: in k_means
[1m    tol = _tolerance(X, tol)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/k_means_.py[0m:165: in _tolerance
[1m    variances = mean_variance_axis(X, axis=0)[1][0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
[31m[1m____________________________ test_kernel_pca_sparse ____________________________[0m

[1m    def test_kernel_pca_sparse():[0m
[1m        rng = np.random.RandomState(0)[0m
[1m        X_fit = sp.csr_matrix(rng.random_sample((5, 4)))[0m
[1m        X_pred = sp.csr_matrix(rng.random_sample((2, 4)))[0m
[1m    [0m
[1m        for eigen_solver in ("auto", "arpack"):[0m
[1m            for kernel in ("linear", "rbf", "poly"):[0m
[1m                # transform fit data[0m
[1m                kpca = KernelPCA(4, kernel=kernel, eigen_solver=eigen_solver,[0m
[1m                                 fit_inverse_transform=False)[0m
[1m>               X_fit_transformed = kpca.fit_transform(X_fit)[0m

X_fit      = <5x4 sparse matrix of type '<class 'numpy.float64'>'
	with 20 stored elements in Compressed Sparse Row format>
X_fit_transformed = array([[ -1.97763042e-02,   4.91518395e-02,   6.67126539e-02,
          2.97173141e-02],
       [  2.15250434e-01,  -3...2,
         -7.81116273e-03],
       [  5.63202455e-01,  -2.40929048e-01,   1.30379566e-01,
         -1.04044182e-02]])
X_fit_transformed2 = array([[ -1.97763042e-02,   4.91518395e-02,   6.67126539e-02,
          2.97173141e-02],
       [  2.15250434e-01,  -3...2,
         -7.81116273e-03],
       [  5.63202455e-01,  -2.40929048e-01,   1.30379566e-01,
         -1.04044182e-02]])
X_pred     = <2x4 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>
X_pred_transformed = array([[-0.14574621,  0.25126599, -0.24781394,  0.36382465],
       [ 0.2708249 , -0.37352849, -0.43904968, -0.17767656]])
eigen_solver = 'auto'
kernel     = 'rbf'
kpca       = KernelPCA(alpha=1.0, coef0=1, copy_X=True, degree=3, eigen_solver='auto',
     fit_inverse_transform=False, gamma=None...  kernel_params=None, max_iter=None, n_components=4, n_jobs=None,
     random_state=None, remove_zero_eig=False, tol=0)
rng        = <mtrand.RandomState object at 0x7fd3f5279240>

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_kernel_pca.py[0m:84: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/kernel_pca.py[0m:276: in fit_transform
[1m    self.fit(X, **params)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/kernel_pca.py[0m:252: in fit
[1m    K = self._get_kernel(X)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/kernel_pca.py[0m:179: in _get_kernel
[1m    **params)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:1559: in pairwise_kernels
[1m    return _parallel_pairwise(X, Y, func, n_jobs, **kwds)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:1069: in _parallel_pairwise
[1m    return func(X, Y, **kwds)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:823: in rbf_kernel
[1m    K = euclidean_distances(X, Y, squared=True)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:234: in euclidean_distances
[1m    XX = row_norms(X, squared=True)[:, np.newaxis][0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py[0m:86: in row_norms
[1m    norms = csr_row_norms(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:31: TypeError
[31m[1m_______________________________ test_algorithms ________________________________[0m

[1m    def test_algorithms():[0m
[1m        svd_a = TruncatedSVD(30, algorithm="arpack")[0m
[1m        svd_r = TruncatedSVD(30, algorithm="randomized", random_state=42)[0m
[1m    [0m
[1m>       Xa = svd_a.fit_transform(X)[:, :6][0m

svd_a      = TruncatedSVD(algorithm='arpack', n_components=30, n_iter=5, random_state=None,
       tol=0.0)
svd_r      = TruncatedSVD(algorithm='randomized', n_components=30, n_iter=5,
       random_state=42, tol=0.0)

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_truncated_svd.py[0m:30: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/truncated_svd.py[0m:187: in fit_transform
[1m    _, full_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
[31m[1m_______________________________ test_attributes ________________________________[0m

[1m    def test_attributes():[0m
[1m        for n_components in (10, 25, 41):[0m
[1m>           tsvd = TruncatedSVD(n_components).fit(X)[0m

n_components = 10

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_truncated_svd.py[0m:43: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/truncated_svd.py[0m:141: in fit
[1m    self.fit_transform(X)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/truncated_svd.py[0m:187: in fit_transform
[1m    _, full_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
[31m[1m___________________________ test_sparse_formats[csr] ___________________________[0m

fmt = 'csr'

[1m    @pytest.mark.parametrize('fmt', ("array", "csr", "csc", "coo", "lil"))[0m
[1m    def test_sparse_formats(fmt):[0m
[1m        Xfmt = Xdense if fmt == "dense" else getattr(X, "to" + fmt)()[0m
[1m        tsvd = TruncatedSVD(n_components=11)[0m
[1m>       Xtrans = tsvd.fit_transform(Xfmt)[0m

Xfmt       = <60x55 sparse matrix of type '<class 'numpy.float64'>'
	with 503 stored elements in Compressed Sparse Row format>
fmt        = 'csr'
tsvd       = TruncatedSVD(algorithm='randomized', n_components=11, n_iter=5,
       random_state=None, tol=0.0)

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_truncated_svd.py[0m:59: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/truncated_svd.py[0m:187: in fit_transform
[1m    _, full_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
[31m[1m___________________________ test_sparse_formats[csc] ___________________________[0m

fmt = 'csc'

[1m    @pytest.mark.parametrize('fmt', ("array", "csr", "csc", "coo", "lil"))[0m
[1m    def test_sparse_formats(fmt):[0m
[1m        Xfmt = Xdense if fmt == "dense" else getattr(X, "to" + fmt)()[0m
[1m        tsvd = TruncatedSVD(n_components=11)[0m
[1m>       Xtrans = tsvd.fit_transform(Xfmt)[0m

Xfmt       = <60x55 sparse matrix of type '<class 'numpy.float64'>'
	with 503 stored elements in Compressed Sparse Column format>
fmt        = 'csc'
tsvd       = TruncatedSVD(algorithm='randomized', n_components=11, n_iter=5,
       random_state=None, tol=0.0)

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_truncated_svd.py[0m:59: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/truncated_svd.py[0m:187: in fit_transform
[1m    _, full_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:94: in mean_variance_axis
[1m    return _csc_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:156: TypeError
[31m[1m___________________________ test_sparse_formats[coo] ___________________________[0m

fmt = 'coo'

[1m    @pytest.mark.parametrize('fmt', ("array", "csr", "csc", "coo", "lil"))[0m
[1m    def test_sparse_formats(fmt):[0m
[1m        Xfmt = Xdense if fmt == "dense" else getattr(X, "to" + fmt)()[0m
[1m        tsvd = TruncatedSVD(n_components=11)[0m
[1m>       Xtrans = tsvd.fit_transform(Xfmt)[0m

Xfmt       = <60x55 sparse matrix of type '<class 'numpy.float64'>'
	with 503 stored elements in COOrdinate format>
fmt        = 'coo'
tsvd       = TruncatedSVD(algorithm='randomized', n_components=11, n_iter=5,
       random_state=None, tol=0.0)

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_truncated_svd.py[0m:59: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/truncated_svd.py[0m:187: in fit_transform
[1m    _, full_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
[31m[1m___________________________ test_sparse_formats[lil] ___________________________[0m

fmt = 'lil'

[1m    @pytest.mark.parametrize('fmt', ("array", "csr", "csc", "coo", "lil"))[0m
[1m    def test_sparse_formats(fmt):[0m
[1m        Xfmt = Xdense if fmt == "dense" else getattr(X, "to" + fmt)()[0m
[1m        tsvd = TruncatedSVD(n_components=11)[0m
[1m>       Xtrans = tsvd.fit_transform(Xfmt)[0m

Xfmt       = <60x55 sparse matrix of type '<class 'numpy.float64'>'
	with 503 stored elements in LInked List format>
fmt        = 'lil'
tsvd       = TruncatedSVD(algorithm='randomized', n_components=11, n_iter=5,
       random_state=None, tol=0.0)

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_truncated_svd.py[0m:59: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/truncated_svd.py[0m:187: in fit_transform
[1m    _, full_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
[31m[1m________________________ test_inverse_transform[arpack] ________________________[0m

algo = 'arpack'

[1m    @pytest.mark.parametrize('algo', ("arpack", "randomized"))[0m
[1m    def test_inverse_transform(algo):[0m
[1m        # We need a lot of components for the reconstruction to be "almost[0m
[1m        # equal" in all positions. XXX Test means or sums instead?[0m
[1m        tsvd = TruncatedSVD(n_components=52, random_state=42, algorithm=algo)[0m
[1m>       Xt = tsvd.fit_transform(X)[0m

algo       = 'arpack'
tsvd       = TruncatedSVD(algorithm='arpack', n_components=52, n_iter=5, random_state=42,
       tol=0.0)

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_truncated_svd.py[0m:70: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/truncated_svd.py[0m:187: in fit_transform
[1m    _, full_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
[31m[1m______________________ test_inverse_transform[randomized] ______________________[0m

algo = 'randomized'

[1m    @pytest.mark.parametrize('algo', ("arpack", "randomized"))[0m
[1m    def test_inverse_transform(algo):[0m
[1m        # We need a lot of components for the reconstruction to be "almost[0m
[1m        # equal" in all positions. XXX Test means or sums instead?[0m
[1m        tsvd = TruncatedSVD(n_components=52, random_state=42, algorithm=algo)[0m
[1m>       Xt = tsvd.fit_transform(X)[0m

algo       = 'randomized'
tsvd       = TruncatedSVD(algorithm='randomized', n_components=52, n_iter=5,
       random_state=42, tol=0.0)

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_truncated_svd.py[0m:70: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/truncated_svd.py[0m:187: in fit_transform
[1m    _, full_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
[31m[1m________________________________ test_integers _________________________________[0m

[1m    def test_integers():[0m
[1m        Xint = X.astype(np.int64)[0m
[1m        tsvd = TruncatedSVD(n_components=6)[0m
[1m>       Xtrans = tsvd.fit_transform(Xint)[0m

Xint       = <60x55 sparse matrix of type '<class 'numpy.int64'>'
	with 503 stored elements in Compressed Sparse Row format>
tsvd       = TruncatedSVD(algorithm='randomized', n_components=6, n_iter=5,
       random_state=None, tol=0.0)

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_truncated_svd.py[0m:78: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/truncated_svd.py[0m:187: in fit_transform
[1m    _, full_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
[31m[1m___________________________ test_explained_variance ____________________________[0m

[1m    def test_explained_variance():[0m
[1m        # Test sparse data[0m
[1m        svd_a_10_sp = TruncatedSVD(10, algorithm="arpack")[0m
[1m        svd_r_10_sp = TruncatedSVD(10, algorithm="randomized", random_state=42)[0m
[1m        svd_a_20_sp = TruncatedSVD(20, algorithm="arpack")[0m
[1m        svd_r_20_sp = TruncatedSVD(20, algorithm="randomized", random_state=42)[0m
[1m>       X_trans_a_10_sp = svd_a_10_sp.fit_transform(X)[0m

svd_a_10_sp = TruncatedSVD(algorithm='arpack', n_components=10, n_iter=5, random_state=None,
       tol=0.0)
svd_a_20_sp = TruncatedSVD(algorithm='arpack', n_components=20, n_iter=5, random_state=None,
       tol=0.0)
svd_r_10_sp = TruncatedSVD(algorithm='randomized', n_components=10, n_iter=5,
       random_state=42, tol=0.0)
svd_r_20_sp = TruncatedSVD(algorithm='randomized', n_components=20, n_iter=5,
       random_state=42, tol=0.0)

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_truncated_svd.py[0m:88: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/truncated_svd.py[0m:187: in fit_transform
[1m    _, full_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
[31m[1m______________________________ test_random_hasher ______________________________[0m

[1m    @ignore_warnings[0m
[1m    def test_random_hasher():[0m
[1m        # test random forest hashing on circles dataset[0m
[1m        # make sure that it is linearly separable.[0m
[1m        # even after projected to two SVD dimensions[0m
[1m        # Note: Not all random_states produce perfect results.[0m
[1m        hasher = RandomTreesEmbedding(n_estimators=30, random_state=1)[0m
[1m        X, y = datasets.make_circles(factor=0.5)[0m
[1m        X_transformed = hasher.fit_transform(X)[0m
[1m    [0m
[1m        # test fit and transform:[0m
[1m        hasher = RandomTreesEmbedding(n_estimators=30, random_state=1)[0m
[1m        assert_array_equal(hasher.fit(X).transform(X).toarray(),[0m
[1m                           X_transformed.toarray())[0m
[1m    [0m
[1m        # one leaf active per data point per forest[0m
[1m        assert_equal(X_transformed.shape[0], X.shape[0])[0m
[1m        assert_array_equal(X_transformed.sum(axis=1), hasher.n_estimators)[0m
[1m        svd = TruncatedSVD(n_components=2)[0m
[1m>       X_reduced = svd.fit_transform(X_transformed)[0m

X          = array([[ -9.36906573e-02,   4.91143625e-01],
       [ -2.12889646e-01,   4.52413526e-01],
       [  3.64484314e-01,  -...8497e-01,   4.75528258e-01],
       [ -4.84291581e-01,   1.24344944e-01],
       [ -2.67913397e-01,   4.22163963e-01]])
X_transformed = <100x747 sparse matrix of type '<class 'numpy.float64'>'
	with 3000 stored elements in Compressed Sparse Row format>
hasher     = RandomTreesEmbedding(max_depth=5, max_leaf_nodes=None,
           min_impurity_decrease=0.0, min_impurity_split=None,
...', n_estimators=30,
           n_jobs=None, random_state=1, sparse_output=True, verbose=0,
           warm_start=False)
svd        = TruncatedSVD(algorithm='randomized', n_components=2, n_iter=5,
       random_state=None, tol=0.0)
y          = array([1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1,
       0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1,...0, 0, 1, 1,
       0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0,
       1, 1, 1, 1, 0, 1, 1, 1])

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/ensemble/tests/test_forest.py[0m:618: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/truncated_svd.py[0m:187: in fit_transform
[1m    _, full_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
[31m[1m______________________________ test_f_regression _______________________________[0m

[1m    def test_f_regression():[0m
[1m        # Test whether the F test yields meaningful results[0m
[1m        # on a simple simulated regression problem[0m
[1m        X, y = make_regression(n_samples=200, n_features=20, n_informative=5,[0m
[1m                               shuffle=False, random_state=0)[0m
[1m    [0m
[1m        F, pv = f_regression(X, y)[0m
[1m        assert_true((F > 0).all())[0m
[1m        assert_true((pv > 0).all())[0m
[1m        assert_true((pv < 1).all())[0m
[1m        assert_true((pv[:5] < 0.05).all())[0m
[1m        assert_true((pv[5:] > 1.e-4).all())[0m
[1m    [0m
[1m        # with centering, compare with sparse[0m
[1m        F, pv = f_regression(X, y, center=True)[0m
[1m>       F_sparse, pv_sparse = f_regression(sparse.csr_matrix(X), y, center=True)[0m

F          = array([  7.34232251e+01,   4.19684247e+01,   6.77605525e+01,
         4.20600915e+01,   3.46726040e+01,   5.70151792e-....78951770e-02,
         4.70451417e-02,   2.75989577e+00,   1.52897849e-01,
         1.57464155e-02,   2.93803214e+00])
X          = array([[ 1.76405235,  0.40015721,  0.97873798, ..., -0.20515826,
         0.3130677 , -0.85409574],
       [-2.5529898...224,  0.65627066],
       [ 0.88951355,  1.54093298, -1.46591433, ..., -0.03057244,
         1.57708821, -0.8128021 ]])
pv         = array([  2.95184595e-15,   7.18730917e-10,   2.44893698e-14,
         6.91472297e-10,   1.64772803e-08,   9.39886454e-....93718061e-01,
         8.28510444e-01,   9.82370821e-02,   6.96201739e-01,
         9.00267138e-01,   8.80809640e-02])
y          = array([ 464.50235952,   23.01038148, -211.64959421, -225.28871847,
          6.74422008,  -65.54681858,   26.37645666,...8241 ,   85.11557161,   17.29137704, -187.12760216,
        -20.08910607,  103.31320472, -157.07680701,  131.87946316])

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/feature_selection/tests/test_feature_select.py[0m:96: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/feature_selection/univariate_selection.py[0m:292: in f_regression
[1m    X_norms = np.sqrt(row_norms(X.T, squared=True) -[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py[0m:86: in row_norms
[1m    norms = csr_row_norms(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:31: TypeError
[31m[1m______________________________ test_zero_variance ______________________________[0m

[1m    def test_zero_variance():[0m
[1m        # Test VarianceThreshold with default setting, zero variance.[0m
[1m    [0m
[1m        for X in [data, csr_matrix(data), csc_matrix(data), bsr_matrix(data)]:[0m
[1m>           sel = VarianceThreshold().fit(X)[0m

X          = <3x5 sparse matrix of type '<class 'numpy.int64'>'
	with 12 stored elements in Compressed Sparse Row format>
sel        = VarianceThreshold(threshold=0.0)

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/feature_selection/tests/test_variance_threshold.py[0m:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/feature_selection/variance_threshold.py[0m:67: in fit
[1m    _, self.variances_ = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
[31m[1m___________________________ test_variance_threshold ____________________________[0m

[1m    def test_variance_threshold():[0m
[1m        # Test VarianceThreshold with custom variance.[0m
[1m        for X in [data, csr_matrix(data)]:[0m
[1m>           X = VarianceThreshold(threshold=.4).fit_transform(X)[0m

X          = <3x5 sparse matrix of type '<class 'numpy.int64'>'
	with 12 stored elements in Compressed Sparse Row format>

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/feature_selection/tests/test_variance_threshold.py[0m:27: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/base.py[0m:462: in fit_transform
[1m    return self.fit(X, **fit_params).transform(X)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/feature_selection/variance_threshold.py[0m:67: in fit
[1m    _, self.variances_ = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
[31m[1m________________________ test_linear_regression_sparse _________________________[0m

random_state = <mtrand.RandomState object at 0x7fd3f752dbe0>

[1m    def test_linear_regression_sparse(random_state=0):[0m
[1m        # Test that linear regression also works with sparse data[0m
[1m        random_state = check_random_state(random_state)[0m
[1m        for i in range(10):[0m
[1m            n = 100[0m
[1m            X = sparse.eye(n, n)[0m
[1m            beta = random_state.rand(n)[0m
[1m            y = X * beta[:, np.newaxis][0m
[1m    [0m
[1m            ols = LinearRegression()[0m
[1m>           ols.fit(X, y.ravel())[0m

X          = <100x100 sparse matrix of type '<class 'numpy.float64'>'
	with 100 stored elements (1 diagonals) in DIAgonal format>
beta       = array([ 0.5488135 ,  0.71518937,  0.60276338,  0.54488318,  0.4236548 ,
        0.64589411,  0.43758721,  0.891773  , ...741038,  0.13179786,  0.7163272 ,  0.28940609,
        0.18319136,  0.58651293,  0.02010755,  0.82894003,  0.00469548])
i          = 0
n          = 100
ols        = LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None,
         normalize=False)
random_state = <mtrand.RandomState object at 0x7fd3f752dbe0>
y          = array([[ 0.5488135 ],
       [ 0.71518937],
       [ 0.60276338],
       [ 0.54488318],
       [ 0.4236548 ],
       [...940609],
       [ 0.18319136],
       [ 0.58651293],
       [ 0.02010755],
       [ 0.82894003],
       [ 0.00469548]])

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_base.py[0m:147: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:448: in fit
[1m    copy=self.copy_X, sample_weight=sample_weight)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:129: in _preprocess_data
[1m    X_offset, X_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
[31m[1m________________ test_linear_regression_sparse_multiple_outcome ________________[0m

random_state = <mtrand.RandomState object at 0x7fd3f751f908>

[1m    def test_linear_regression_sparse_multiple_outcome(random_state=0):[0m
[1m        # Test multiple-outcome linear regressions with sparse data[0m
[1m        random_state = check_random_state(random_state)[0m
[1m        X, y = make_sparse_uncorrelated(random_state=random_state)[0m
[1m        X = sparse.coo_matrix(X)[0m
[1m        Y = np.vstack((y, y)).T[0m
[1m        n_features = X.shape[1][0m
[1m    [0m
[1m        ols = LinearRegression()[0m
[1m>       ols.fit(X, Y)[0m

X          = <100x10 sparse matrix of type '<class 'numpy.float64'>'
	with 1000 stored elements in COOrdinate format>
Y          = array([[ -2.19848632e+00,  -2.19848632e+00],
       [  2.24047650e+00,   2.24047650e+00],
       [ -2.28369232e+00,  -...3049e+00,  -1.32053049e+00],
       [ -4.55139142e-01,  -4.55139142e-01],
       [  2.69954026e+00,   2.69954026e+00]])
n_features = 10
ols        = LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None,
         normalize=False)
random_state = <mtrand.RandomState object at 0x7fd3f751f908>
y          = array([ -2.19848632e+00,   2.24047650e+00,  -2.28369232e+00,
         5.76275269e+00,  -3.17415823e+00,   2.87237693e+....81093292e-03,  -2.73596250e+00,
         4.03847335e-01,  -1.32053049e+00,  -4.55139142e-01,
         2.69954026e+00])

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_base.py[0m:178: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:448: in fit
[1m    copy=self.copy_X, sample_weight=sample_weight)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:129: in _preprocess_data
[1m    X_offset, X_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
[31m[1m_______________________ test_preprocess_data_multioutput _______________________[0m

[1m    def test_preprocess_data_multioutput():[0m
[1m        n_samples = 200[0m
[1m        n_features = 3[0m
[1m        n_outputs = 2[0m
[1m        X = rng.rand(n_samples, n_features)[0m
[1m        y = rng.rand(n_samples, n_outputs)[0m
[1m        expected_y_mean = np.mean(y, axis=0)[0m
[1m    [0m
[1m        args = [X, sparse.csc_matrix(X)][0m
[1m        for X in args:[0m
[1m            _, yt, _, y_mean, _ = _preprocess_data(X, y, fit_intercept=False,[0m
[1m                                                   normalize=False)[0m
[1m            assert_array_almost_equal(y_mean, np.zeros(n_outputs))[0m
[1m            assert_array_almost_equal(yt, y)[0m
[1m    [0m
[1m            _, yt, _, y_mean, _ = _preprocess_data(X, y, fit_intercept=True,[0m
[1m>                                                  normalize=False)[0m

X          = <200x3 sparse matrix of type '<class 'numpy.float64'>'
	with 600 stored elements in Compressed Sparse Column format>
_          = array([ 1.,  1.,  1.])
args       = [array([[  6.26360031e-02,   2.41901704e-01,   4.32281481e-01],
       [  5.21996274e-01,   7.73083554e-01,   9.587409..., <200x3 sparse matrix of type '<class 'numpy.float64'>'
	with 600 stored elements in Compressed Sparse Column format>]
expected_y_mean = array([ 0.52751633,  0.53352625])
n_features = 3
n_outputs  = 2
n_samples  = 200
y          = array([[ 0.18581675,  0.10473611],
       [ 0.11655861,  0.35763903],
       [ 0.00465484,  0.42485392],
       [ 0.66... 0.62946123],
       [ 0.73214222,  0.89011154],
       [ 0.98908844,  0.66285648],
       [ 0.84536452,  0.77803885]])
y_mean     = array([ 0.,  0.])
yt         = array([[ 0.18581675,  0.10473611],
       [ 0.11655861,  0.35763903],
       [ 0.00465484,  0.42485392],
       [ 0.66... 0.62946123],
       [ 0.73214222,  0.89011154],
       [ 0.98908844,  0.66285648],
       [ 0.84536452,  0.77803885]])

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_base.py[0m:236: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:129: in _preprocess_data
[1m    X_offset, X_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:94: in mean_variance_axis
[1m    return _csc_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:156: TypeError
[31m[1m_________________ test_sparse_preprocess_data_with_return_mean _________________[0m

[1m    def test_sparse_preprocess_data_with_return_mean():[0m
[1m        n_samples = 200[0m
[1m        n_features = 2[0m
[1m        # random_state not supported yet in sparse.rand[0m
[1m        X = sparse.rand(n_samples, n_features, density=.5)  # , random_state=rng[0m
[1m        X = X.tolil()[0m
[1m        y = rng.rand(n_samples)[0m
[1m        XA = X.toarray()[0m
[1m        expected_X_norm = np.std(XA, axis=0) * np.sqrt(X.shape[0])[0m
[1m    [0m
[1m        Xt, yt, X_mean, y_mean, X_norm = \[0m
[1m            _preprocess_data(X, y, fit_intercept=False, normalize=False,[0m
[1m                             return_mean=True)[0m
[1m        assert_array_almost_equal(X_mean, np.zeros(n_features))[0m
[1m        assert_array_almost_equal(y_mean, 0)[0m
[1m        assert_array_almost_equal(X_norm, np.ones(n_features))[0m
[1m        assert_array_almost_equal(Xt.A, XA)[0m
[1m        assert_array_almost_equal(yt, y)[0m
[1m    [0m
[1m        Xt, yt, X_mean, y_mean, X_norm = \[0m
[1m            _preprocess_data(X, y, fit_intercept=True, normalize=False,[0m
[1m>                            return_mean=True)[0m

X          = <200x2 sparse matrix of type '<class 'numpy.float64'>'
	with 200 stored elements in LInked List format>
XA         = array([[  1.30394844e-01,   2.71822193e-01],
       [  5.08061196e-01,   0.00000000e+00],
       [  9.46785429e-02,   ...7017e-01,   0.00000000e+00],
       [  0.00000000e+00,   1.85952194e-01],
       [  6.76417055e-01,   0.00000000e+00]])
X_mean     = array([ 0.,  0.])
X_norm     = array([ 1.,  1.])
Xt         = <200x2 sparse matrix of type '<class 'numpy.float64'>'
	with 200 stored elements in Compressed Sparse Row format>
expected_X_norm = array([ 4.65630178,  4.72418128])
n_features = 2
n_samples  = 200
y          = array([ 0.95048604,  0.03510737,  0.93384636,  0.77385389,  0.35886158,
        0.90887655,  0.29625727,  0.40929531, ...148532,  0.99583   ,  0.81724858,  0.61723795,
        0.91439889,  0.81358168,  0.49863935,  0.59122029,  0.73129281])
y_mean     = 0.0
yt         = array([ 0.95048604,  0.03510737,  0.93384636,  0.77385389,  0.35886158,
        0.90887655,  0.29625727,  0.40929531, ...148532,  0.99583   ,  0.81724858,  0.61723795,
        0.91439889,  0.81358168,  0.49863935,  0.59122029,  0.73129281])

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_base.py[0m:300: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:129: in _preprocess_data
[1m    X_offset, X_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
[31m[1m___________________________ test_csr_preprocess_data ___________________________[0m

[1m    def test_csr_preprocess_data():[0m
[1m        # Test output format of _preprocess_data, when input is csr[0m
[1m        X, y = make_regression()[0m
[1m        X[X < 2.5] = 0.0[0m
[1m        csr = sparse.csr_matrix(X)[0m
[1m>       csr_, y, _, _, _ = _preprocess_data(csr, y, True)[0m

X          = array([[ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0... 0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]])
csr        = <100x100 sparse matrix of type '<class 'numpy.float64'>'
	with 49 stored elements in Compressed Sparse Row format>
y          = array([  14.50433518,   89.39223912, -116.65260066,   72.62125743,
       -154.28164141,  195.7864321 ,  -95.61079948,...52239,  146.06925454,   46.99636093,   28.54450994,
        -50.15320456,  197.51765374,    6.5534317 ,   37.81146515])

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_base.py[0m:322: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:129: in _preprocess_data
[1m    X_offset, X_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
[31m[1m________________ test_preprocess_copy_data_no_checks[True-True] ________________[0m

is_sparse = True, to_copy = True

[1m    @pytest.mark.parametrize('is_sparse', (True, False))[0m
[1m    @pytest.mark.parametrize('to_copy', (True, False))[0m
[1m    def test_preprocess_copy_data_no_checks(is_sparse, to_copy):[0m
[1m        X, y = make_regression()[0m
[1m        X[X < 2.5] = 0.0[0m
[1m    [0m
[1m        if is_sparse:[0m
[1m            X = sparse.csr_matrix(X)[0m
[1m    [0m
[1m        X_, y_, _, _, _ = _preprocess_data(X, y, True,[0m
[1m>                                          copy=to_copy, check_input=False)[0m

X          = <100x100 sparse matrix of type '<class 'numpy.float64'>'
	with 55 stored elements in Compressed Sparse Row format>
is_sparse  = True
to_copy    = True
y          = array([-499.13549063,  225.93167965, -168.87212013,   60.7661114 ,
       -205.1962508 ,  -61.35051947,  239.32713139,...36626,  148.87910086,  -20.10502946, -281.85333849,
        -53.37682479,  -60.30823705,  -18.96475274,  267.27937895])

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_base.py[0m:336: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:129: in _preprocess_data
[1m    X_offset, X_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
[31m[1m_______________ test_preprocess_copy_data_no_checks[False-True] ________________[0m

is_sparse = True, to_copy = False

[1m    @pytest.mark.parametrize('is_sparse', (True, False))[0m
[1m    @pytest.mark.parametrize('to_copy', (True, False))[0m
[1m    def test_preprocess_copy_data_no_checks(is_sparse, to_copy):[0m
[1m        X, y = make_regression()[0m
[1m        X[X < 2.5] = 0.0[0m
[1m    [0m
[1m        if is_sparse:[0m
[1m            X = sparse.csr_matrix(X)[0m
[1m    [0m
[1m        X_, y_, _, _, _ = _preprocess_data(X, y, True,[0m
[1m>                                          copy=to_copy, check_input=False)[0m

X          = <100x100 sparse matrix of type '<class 'numpy.float64'>'
	with 65 stored elements in Compressed Sparse Row format>
is_sparse  = True
to_copy    = False
y          = array([ -23.38755832, -118.65504629, -104.69105103,   56.14393156,
        263.79868047,   20.72789796,   44.03060414,...37594,  -42.0130927 ,  -48.43148496,  -25.51120792,
       -161.2254673 ,    2.56791639,  -51.41959986, -326.22073597])

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_base.py[0m:336: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:129: in _preprocess_data
[1m    X_offset, X_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
[31m[1m___________________ test_sparse_input_dtype_enet_and_lassocv ___________________[0m

[1m    @pytest.mark.filterwarnings('ignore: You should specify a value')  # 0.22[0m
[1m    def test_sparse_input_dtype_enet_and_lassocv():[0m
[1m        X, y, _, _ = build_dataset(n_features=10)[0m
[1m        clf = ElasticNetCV(n_alphas=5)[0m
[1m>       clf.fit(sparse.csr_matrix(X), y)[0m

X          = array([[ 0.14404357,  1.45427351,  0.76103773,  0.12167502,  0.44386323,
         0.33367433,  1.49407907, -0.20515826...4228,  1.09634685, -0.2342158 , -0.34745065,
        -0.58126848, -1.63263453, -1.56776772, -1.17915793,  1.30142807]])
_          = array([ -3.98901761,  -1.79934252,  -4.50889504,   3.80409575,
        -4.30692954,  -1.36569993,   3.16515966,  -5.12...13295,   7.37129125,
        -0.19961247,   1.05742277,   6.22468706,  -0.3295225 ,
         0.51182501,   2.28039533])
clf        = ElasticNetCV(alphas=None, copy_X=True, cv='warn', eps=0.001,
       fit_intercept=True, l1_ratio=0.5, max_iter=1000, n...ormalize=False, positive=False, precompute='auto',
       random_state=None, selection='cyclic', tol=0.0001, verbose=0)
y          = array([ 3.42395794,  1.11801536, -4.7827952 , -1.46884083, -5.10772534,
       -6.77429909,  0.42197369, -2.06446699, ...528947, -1.3115771 ,  1.55433403, -1.94929045,
       -5.07781708, -1.8834792 ,  5.58800471,  6.66158983,  0.47103957])

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_coordinate_descent.py[0m:519: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/coordinate_descent.py[0m:1176: in fit
[1m    copy_X=self.copy_X))[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/coordinate_descent.py[0m:102: in _alpha_grid
[1m    return_mean=True)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:129: in _preprocess_data
[1m    X_offset, X_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:94: in mean_variance_axis
[1m    return _csc_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:156: TypeError
[31m[1m_____________________________ test_random_descent ______________________________[0m

[1m    def test_random_descent():[0m
[1m        # Test that both random and cyclic selection give the same results.[0m
[1m        # Ensure that the test models fully converge and check a wide[0m
[1m        # range of conditions.[0m
[1m    [0m
[1m        # This uses the coordinate descent algo using the gram trick.[0m
[1m        X, y, _, _ = build_dataset(n_samples=50, n_features=20)[0m
[1m        clf_cyclic = ElasticNet(selection='cyclic', tol=1e-8)[0m
[1m        clf_cyclic.fit(X, y)[0m
[1m        clf_random = ElasticNet(selection='random', tol=1e-8, random_state=42)[0m
[1m        clf_random.fit(X, y)[0m
[1m        assert_array_almost_equal(clf_cyclic.coef_, clf_random.coef_)[0m
[1m        assert_almost_equal(clf_cyclic.intercept_, clf_random.intercept_)[0m
[1m    [0m
[1m        # This uses the descent algo without the gram trick[0m
[1m        clf_cyclic = ElasticNet(selection='cyclic', tol=1e-8)[0m
[1m        clf_cyclic.fit(X.T, y[:20])[0m
[1m        clf_random = ElasticNet(selection='random', tol=1e-8, random_state=42)[0m
[1m        clf_random.fit(X.T, y[:20])[0m
[1m        assert_array_almost_equal(clf_cyclic.coef_, clf_random.coef_)[0m
[1m        assert_almost_equal(clf_cyclic.intercept_, clf_random.intercept_)[0m
[1m    [0m
[1m        # Sparse Case[0m
[1m        clf_cyclic = ElasticNet(selection='cyclic', tol=1e-8)[0m
[1m>       clf_cyclic.fit(sparse.csr_matrix(X), y)[0m

X          = array([[ -2.55298982e+00,   6.53618595e-01,   8.64436199e-01,
         -7.42165020e-01,   2.26975462e+00,  -1.45436567...523022e-01,
         -9.07300122e-01,   2.24252221e-01,  -1.67868836e+00,
          2.14965591e-01,   9.72192320e-02]])
_          = array([ 2.01865892,  8.5775755 , -0.09272261, -3.34022719, -2.70505769,
        0.76475958, -2.91641267,  4.97187404, ...695781, -2.64109836,  1.70272493, -3.37821669,
       -0.67054368,  0.53006192,  8.36864631, -2.49912447, -5.30537693])
clf_cyclic = ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
      max_iter=1000, normalize=False, positive=False, precompute=False,
      random_state=None, selection='cyclic', tol=1e-08, warm_start=False)
clf_random = ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
      max_iter=1000, normalize=False, positive=False, precompute=False,
      random_state=42, selection='random', tol=1e-08, warm_start=False)
y          = array([ 1.11801536, -1.46884083, -6.77429909, -2.06446699, -0.24925916,
        1.74195211,  1.56894898, -2.8037328 , ...655341,  4.10800197,  1.59278577, -5.30750584,
       -1.8823694 ,  7.37129125,  1.05742277, -0.3295225 ,  2.28039533])

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_coordinate_descent.py[0m:616: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/coordinate_descent.py[0m:721: in fit
[1m    check_input=check_input)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:487: in _pre_fit
[1m    copy=False, return_mean=True, check_input=check_input)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:129: in _preprocess_data
[1m    X_offset, X_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:94: in mean_variance_axis
[1m    return _csc_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:156: TypeError
[31m[1m_______________________________ test_saga_sparse _______________________________[0m

[1m    @pytest.mark.filterwarnings('ignore: Default multi_class will')  # 0.22[0m
[1m    @pytest.mark.filterwarnings('ignore: You should specify a value')  # 0.22[0m
[1m    def test_saga_sparse():[0m
[1m        # Test LogRegCV with solver='liblinear' works for sparse matrices[0m
[1m    [0m
[1m        X, y = make_classification(n_samples=10, n_features=5, random_state=0)[0m
[1m        clf = LogisticRegressionCV(solver='saga')[0m
[1m>       clf.fit(sparse.csr_matrix(X), y)[0m

X          = array([[-0.50965218, -0.14778398, -0.79249401, -0.52978546,  0.29484027],
       [-0.30230275, -0.80328386, -0.5120382...87 ,  0.99958558,  1.20960511, -0.98740462],
       [-1.04855297, -0.66261566,  0.82768797,  2.37124104, -2.3748206 ]])
clf        = LogisticRegressionCV(Cs=10, class_weight=None, cv='warn', dual=False,
           fit_intercept=True, intercept_scaling... penalty='l2',
           random_state=None, refit=True, scoring=None, solver='saga',
           tol=0.0001, verbose=0)
y          = array([0, 0, 1, 0, 1, 1, 0, 1, 1, 0])

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_logistic.py[0m:1060: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/logistic.py[0m:1731: in fit
[1m    max_squared_sum = row_norms(X, squared=True).max()[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py[0m:86: in row_norms
[1m    norms = csr_row_norms(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:31: TypeError
[31m[1m__________________________ test_logreg_l1_sparse_data __________________________[0m

[1m    def test_logreg_l1_sparse_data():[0m
[1m        # Because liblinear penalizes the intercept and saga does not, we do not[0m
[1m        # fit the intercept to make it possible to compare the coefficients of[0m
[1m        # the two models at convergence.[0m
[1m        rng = np.random.RandomState(42)[0m
[1m        n_samples = 50[0m
[1m        X, y = make_classification(n_samples=n_samples, n_features=20,[0m
[1m                                   random_state=0)[0m
[1m        X_noise = rng.normal(scale=0.1, size=(n_samples, 3))[0m
[1m        X_constant = np.zeros(shape=(n_samples, 2))[0m
[1m        X = np.concatenate((X, X_noise, X_constant), axis=1)[0m
[1m        X[X < 1] = 0[0m
[1m        X = sparse.csr_matrix(X)[0m
[1m    [0m
[1m        lr_liblinear = LogisticRegression(penalty="l1", C=1.0, solver='liblinear',[0m
[1m                                          fit_intercept=False, multi_class='ovr',[0m
[1m                                          tol=1e-10)[0m
[1m        lr_liblinear.fit(X, y)[0m
[1m    [0m
[1m        lr_saga = LogisticRegression(penalty="l1", C=1.0, solver='saga',[0m
[1m                                     fit_intercept=False, multi_class='ovr',[0m
[1m                                     max_iter=1000, tol=1e-10)[0m
[1m>       lr_saga.fit(X, y)[0m

X          = <50x25 sparse matrix of type '<class 'numpy.float64'>'
	with 149 stored elements in Compressed Sparse Row format>
X_constant = array([[ 0.,  0.],
       [ 0.,  0.],
       [ 0.,  0.],
       [ 0.,  0.],
       [ 0.,  0.],
       [ 0.,  0.],
    ...0.],
       [ 0.,  0.],
       [ 0.,  0.],
       [ 0.,  0.],
       [ 0.,  0.],
       [ 0.,  0.],
       [ 0.,  0.]])
X_noise    = array([[ 0.04967142, -0.01382643,  0.06476885],
       [ 0.15230299, -0.02341534, -0.0234137 ],
       [ 0.15792128,  ...6074832,  0.01846339],
       [ 0.02598828,  0.07818229, -0.12369507],
       [-0.13204566,  0.05219416,  0.02969847]])
lr_liblinear = LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=False,
          intercept_scaling=1, max_iter=...    n_jobs=None, penalty='l1', random_state=None, solver='liblinear',
          tol=1e-10, verbose=0, warm_start=False)
lr_saga    = LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=False,
          intercept_scaling=1, max_iter=...         n_jobs=None, penalty='l1', random_state=None, solver='saga',
          tol=1e-10, verbose=0, warm_start=False)
n_samples  = 50
rng        = <mtrand.RandomState object at 0x7fd3f4c36e80>
y          = array([1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0,
       1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1,
       1, 1, 0, 0])

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_logistic.py[0m:1135: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/logistic.py[0m:1306: in fit
[1m    max_squared_sum = row_norms(X, squared=True).max()[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py[0m:86: in row_norms
[1m    norms = csr_row_norms(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:31: TypeError
[31m[1m____________________________ test_saga_vs_liblinear ____________________________[0m

[1m    def test_saga_vs_liblinear():[0m
[1m        iris = load_iris()[0m
[1m        X, y = iris.data, iris.target[0m
[1m        X = np.concatenate([X] * 10)[0m
[1m        y = np.concatenate([y] * 10)[0m
[1m    [0m
[1m        X_bin = X[y <= 1][0m
[1m        y_bin = y[y <= 1] * 2 - 1[0m
[1m    [0m
[1m        X_sparse, y_sparse = make_classification(n_samples=50, n_features=20,[0m
[1m                                                 random_state=0)[0m
[1m        X_sparse = sparse.csr_matrix(X_sparse)[0m
[1m    [0m
[1m        for (X, y) in ((X_bin, y_bin), (X_sparse, y_sparse)):[0m
[1m            for penalty in ['l1', 'l2']:[0m
[1m                n_samples = X.shape[0][0m
[1m                # alpha=1e-3 is time consuming[0m
[1m                for alpha in np.logspace(-1, 1, 3):[0m
[1m                    saga = LogisticRegression([0m
[1m                        C=1. / (n_samples * alpha),[0m
[1m                        solver='saga',[0m
[1m                        multi_class='ovr',[0m
[1m                        max_iter=200,[0m
[1m                        fit_intercept=False,[0m
[1m                        penalty=penalty, random_state=0, tol=1e-24)[0m
[1m    [0m
[1m                    liblinear = LogisticRegression([0m
[1m                        C=1. / (n_samples * alpha),[0m
[1m                        solver='liblinear',[0m
[1m                        multi_class='ovr',[0m
[1m                        max_iter=200,[0m
[1m                        fit_intercept=False,[0m
[1m                        penalty=penalty, random_state=0, tol=1e-24)[0m
[1m    [0m
[1m>                   saga.fit(X, y)[0m

X          = <50x20 sparse matrix of type '<class 'numpy.float64'>'
	with 1000 stored elements in Compressed Sparse Row format>
X_bin      = array([[ 5.1,  3.5,  1.4,  0.2],
       [ 4.9,  3. ,  1.4,  0.2],
       [ 4.7,  3.2,  1.3,  0.2],
       ..., 
       [ 6.2,  2.9,  4.3,  1.3],
       [ 5.1,  2.5,  3. ,  1.1],
       [ 5.7,  2.8,  4.1,  1.3]])
X_sparse   = <50x20 sparse matrix of type '<class 'numpy.float64'>'
	with 1000 stored elements in Compressed Sparse Row format>
alpha      = 0.10000000000000001
iris       = {'target_names': array(['setosa', 'versicolor', 'virginica'], 
      dtype='<U10'), 'feature_names': ['sepal length (c...eseman et al"s AUTOCLASS II\n     conceptual clustering system finds 3 classes in the data.\n   - Many, many more ...'}
liblinear  = LogisticRegression(C=0.20000000000000001, class_weight=None, dual=False,
          fit_intercept=False, intercept_scal...'ovr', n_jobs=None, penalty='l1', random_state=0,
          solver='liblinear', tol=1e-24, verbose=0, warm_start=False)
n_samples  = 50
penalty    = 'l1'
saga       = LogisticRegression(C=0.20000000000000001, class_weight=None, dual=False,
          fit_intercept=False, intercept_scal...lass='ovr', n_jobs=None, penalty='l1', random_state=0,
          solver='saga', tol=1e-24, verbose=0, warm_start=False)
y          = array([1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0,
       1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1,
       1, 1, 0, 0])
y_bin      = array([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1, -1, -1, -1, ... 1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
        1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1])
y_sparse   = array([1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0,
       1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1,
       1, 1, 0, 0])

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_logistic.py[0m:1316: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/logistic.py[0m:1306: in fit
[1m    max_squared_sum = row_norms(X, squared=True).max()[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py[0m:86: in row_norms
[1m    norms = csr_row_norms(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:31: TypeError
[31m[1m_______________________ test_randomized_logistic_sparse ________________________[0m

[1m    @ignore_warnings(category=DeprecationWarning)[0m
[1m    def test_randomized_logistic_sparse():[0m
[1m        # Check randomized sparse logistic regression on sparse data[0m
[1m        iris = load_iris()[0m
[1m        X = iris.data[:, [0, 2]][0m
[1m        y = iris.target[0m
[1m        X = X[y != 2][0m
[1m        y = y[y != 2][0m
[1m    [0m
[1m        # center here because sparse matrices are usually not centered[0m
[1m        # labels should not be centered[0m
[1m        X, _, _, _, _ = _preprocess_data(X, y, True, True)[0m
[1m    [0m
[1m        X_sp = sparse.csr_matrix(X)[0m
[1m    [0m
[1m        F, _ = f_classif(X, y)[0m
[1m    [0m
[1m        scaling = 0.3[0m
[1m        clf = RandomizedLogisticRegression(verbose=False, C=1., random_state=42,[0m
[1m                                           scaling=scaling, n_resampling=50,[0m
[1m                                           tol=1e-3)[0m
[1m        feature_scores = clf.fit(X, y).scores_[0m
[1m        clf = RandomizedLogisticRegression(verbose=False, C=1., random_state=42,[0m
[1m                                           scaling=scaling, n_resampling=50,[0m
[1m                                           tol=1e-3)[0m
[1m>       feature_scores_sp = clf.fit(X_sp, y).scores_[0m

F          = array([  110.69115204,  1559.67488494])
X          = array([[-0.05810659, -0.10129776],
       [-0.0894309 , -0.10129776],
       [-0.12075521, -0.10823122],
       [-0.13... 0.09283895],
       [ 0.1141771 ,  0.0997724 ],
       [-0.05810659,  0.0096375 ],
       [ 0.03586633,  0.0859055 ]])
X_sp       = <100x2 sparse matrix of type '<class 'numpy.float64'>'
	with 200 stored elements in Compressed Sparse Row format>
_          = array([  8.98523504e-18,   5.40491051e-62])
clf        = RandomizedLogisticRegression(C=1.0, fit_intercept=True, memory=None,
               n_jobs=None, n_resampling=50, norm...2,
               sample_fraction=0.75, scaling=0.3, selection_threshold=0.25,
               tol=0.001, verbose=False)
feature_scores = array([ 0.18,  0.8 ])
iris       = {'target_names': array(['setosa', 'versicolor', 'virginica'], 
      dtype='<U10'), 'feature_names': ['sepal length (c...eseman et al"s AUTOCLASS II\n     conceptual clustering system finds 3 classes in the data.\n   - Many, many more ...'}
scaling    = 0.3
y          = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,...1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1])

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_randomized_l1.py[0m:190: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/randomized_l1.py[0m:102: in fit
[1m    self._preprocess_data(X, y, self.fit_intercept, self.normalize)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/randomized_l1.py[0m:542: in _preprocess_data
[1m    normalize=normalize)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:129: in _preprocess_data
[1m    X_offset, X_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
[31m[1m____________________________ test_ransac_sparse_coo ____________________________[0m

[1m    def test_ransac_sparse_coo():[0m
[1m        X_sparse = sparse.coo_matrix(X)[0m
[1m    [0m
[1m        base_estimator = LinearRegression()[0m
[1m        ransac_estimator = RANSACRegressor(base_estimator, min_samples=2,[0m
[1m                                           residual_threshold=5, random_state=0)[0m
[1m>       ransac_estimator.fit(X_sparse, y)[0m

X_sparse   = <400x1 sparse matrix of type '<class 'numpy.float64'>'
	with 400 stored elements in COOrdinate format>
base_estimator = LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None,
         normalize=False)
ransac_estimator = RANSACRegressor(base_estimator=LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None,
         normalize=False...les=2, random_state=0,
        residual_threshold=5, stop_n_inliers=inf, stop_probability=0.99,
        stop_score=inf)

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_ransac.py[0m:246: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/ransac.py[0m:354: in fit
[1m    base_estimator.fit(X_subset, y_subset)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:448: in fit
[1m    copy=self.copy_X, sample_weight=sample_weight)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:129: in _preprocess_data
[1m    X_offset, X_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
[31m[1m____________________________ test_ransac_sparse_csr ____________________________[0m

[1m    def test_ransac_sparse_csr():[0m
[1m        X_sparse = sparse.csr_matrix(X)[0m
[1m    [0m
[1m        base_estimator = LinearRegression()[0m
[1m        ransac_estimator = RANSACRegressor(base_estimator, min_samples=2,[0m
[1m                                           residual_threshold=5, random_state=0)[0m
[1m>       ransac_estimator.fit(X_sparse, y)[0m

X_sparse   = <400x1 sparse matrix of type '<class 'numpy.float64'>'
	with 400 stored elements in Compressed Sparse Row format>
base_estimator = LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None,
         normalize=False)
ransac_estimator = RANSACRegressor(base_estimator=LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None,
         normalize=False...les=2, random_state=0,
        residual_threshold=5, stop_n_inliers=inf, stop_probability=0.99,
        stop_score=inf)

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_ransac.py[0m:261: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/ransac.py[0m:354: in fit
[1m    base_estimator.fit(X_subset, y_subset)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:448: in fit
[1m    copy=self.copy_X, sample_weight=sample_weight)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:129: in _preprocess_data
[1m    X_offset, X_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
[31m[1m____________________________ test_ransac_sparse_csc ____________________________[0m

[1m    def test_ransac_sparse_csc():[0m
[1m        X_sparse = sparse.csc_matrix(X)[0m
[1m    [0m
[1m        base_estimator = LinearRegression()[0m
[1m        ransac_estimator = RANSACRegressor(base_estimator, min_samples=2,[0m
[1m                                           residual_threshold=5, random_state=0)[0m
[1m>       ransac_estimator.fit(X_sparse, y)[0m

X_sparse   = <400x1 sparse matrix of type '<class 'numpy.float64'>'
	with 400 stored elements in Compressed Sparse Column format>
base_estimator = LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None,
         normalize=False)
ransac_estimator = RANSACRegressor(base_estimator=LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None,
         normalize=False...les=2, random_state=0,
        residual_threshold=5, stop_n_inliers=inf, stop_probability=0.99,
        stop_score=inf)

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_ransac.py[0m:276: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/ransac.py[0m:354: in fit
[1m    base_estimator.fit(X_subset, y_subset)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:448: in fit
[1m    copy=self.copy_X, sample_weight=sample_weight)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:129: in _preprocess_data
[1m    X_offset, X_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
[31m[1m______________________ test_dense_sparse[_test_ridge_cv] _______________________[0m

test_func = <function _test_ridge_cv at 0x7fd3f8fef400>

[1m    @pytest.mark.filterwarnings('ignore: The default of the `iid`')  # 0.22[0m
[1m    @pytest.mark.filterwarnings('ignore: You should specify a value')  # 0.22[0m
[1m    @pytest.mark.parametrize([0m
[1m            'test_func',[0m
[1m            (_test_ridge_loo, _test_ridge_cv, _test_ridge_cv_normalize,[0m
[1m             _test_ridge_diabetes, _test_multi_ridge_diabetes,[0m
[1m             _test_ridge_classifiers, _test_tolerance))[0m
[1m    def test_dense_sparse(test_func):[0m
[1m>       check_dense_sparse(test_func)[0m

test_func  = <function _test_ridge_cv at 0x7fd3f8fef400>

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_ridge.py[0m:500: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_ridge.py[0m:486: in check_dense_sparse
[1m    ret_sparse = test_func(SPARSE_FILTER)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_ridge.py[0m:418: in _test_ridge_cv
[1m    ridge_cv.fit(filter_(X_diabetes), y_diabetes)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/ridge.py[0m:1148: in fit
[1m    estimator.fit(X, y, sample_weight=sample_weight)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/ridge.py[0m:1025: in fit
[1m    sample_weight=sample_weight)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:129: in _preprocess_data
[1m    X_offset, X_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
[31m[1m_________________ test_dense_sparse[_test_ridge_cv_normalize] __________________[0m

estimator = Ridge(alpha=0.10000000000000001, copy_X=True, fit_intercept=True,
   max_iter=None, normalize=True, random_state=None, solver='auto',
   tol=0.001)
X = <200x10 sparse matrix of type '<class 'numpy.float64'>'
	with 2000 stored elements in Compressed Sparse Row format>
y = array([ 321.,  215.,  127.,   64.,  175.,  275.,  179.,  232.,  142.,
         99.,  252.,  174.,  129.,   74.,  264.,...  85.,  114.,   93.,   99.,
         72.,  270.,  111.,   83.,   87.,   42.,  172.,   65.,  259.,
        279.,  141.])
scorer = {'score': <function _passthrough_scorer at 0x7fd3ff961d08>}
train = array([ 67,  68,  69,  70,  71,  72,  73,  74,  75,  76,  77,  78,  79,
        80,  81,  82,  83,  84,  85,  86,  87,...179, 180, 181, 182, 183,
       184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
       197, 198, 199])
test = array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19, 20, 21, 22, 23, 24, 25, ...39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
       51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66])
verbose = 0, parameters = {'alpha': 0.10000000000000001}
fit_params = {'sample_weight': None}, return_train_score = 'warn'
return_parameters = False, return_n_test_samples = True, return_times = True
return_estimator = False, error_score = 'raise-deprecating'

[1m    def _fit_and_score(estimator, X, y, scorer, train, test, verbose,[0m
[1m                       parameters, fit_params, return_train_score=False,[0m
[1m                       return_parameters=False, return_n_test_samples=False,[0m
[1m                       return_times=False, return_estimator=False,[0m
[1m                       error_score='raise-deprecating'):[0m
[1m        """Fit estimator and compute scores for a given dataset split.[0m
[1m    [0m
[1m        Parameters[0m
[1m        ----------[0m
[1m        estimator : estimator object implementing 'fit'[0m
[1m            The object to use to fit the data.[0m
[1m    [0m
[1m        X : array-like of shape at least 2D[0m
[1m            The data to fit.[0m
[1m    [0m
[1m        y : array-like, optional, default: None[0m
[1m            The target variable to try to predict in the case of[0m
[1m            supervised learning.[0m
[1m    [0m
[1m        scorer : A single callable or dict mapping scorer name to the callable[0m
[1m            If it is a single callable, the return value for ``train_scores`` and[0m
[1m            ``test_scores`` is a single float.[0m
[1m    [0m
[1m            For a dict, it should be one mapping the scorer name to the scorer[0m
[1m            callable object / function.[0m
[1m    [0m
[1m            The callable object / fn should have signature[0m
[1m            ``scorer(estimator, X, y)``.[0m
[1m    [0m
[1m        train : array-like, shape (n_train_samples,)[0m
[1m            Indices of training samples.[0m
[1m    [0m
[1m        test : array-like, shape (n_test_samples,)[0m
[1m            Indices of test samples.[0m
[1m    [0m
[1m        verbose : integer[0m
[1m            The verbosity level.[0m
[1m    [0m
[1m        error_score : 'raise' | 'raise-deprecating' or numeric[0m
[1m            Value to assign to the score if an error occurs in estimator fitting.[0m
[1m            If set to 'raise', the error is raised.[0m
[1m            If set to 'raise-deprecating', a FutureWarning is printed before the[0m
[1m            error is raised.[0m
[1m            If a numeric value is given, FitFailedWarning is raised. This parameter[0m
[1m            does not affect the refit step, which will always raise the error.[0m
[1m            Default is 'raise-deprecating' but from version 0.22 it will change[0m
[1m            to np.nan.[0m
[1m    [0m
[1m        parameters : dict or None[0m
[1m            Parameters to be set on the estimator.[0m
[1m    [0m
[1m        fit_params : dict or None[0m
[1m            Parameters that will be passed to ``estimator.fit``.[0m
[1m    [0m
[1m        return_train_score : boolean, optional, default: False[0m
[1m            Compute and return score on training set.[0m
[1m    [0m
[1m        return_parameters : boolean, optional, default: False[0m
[1m            Return parameters that has been used for the estimator.[0m
[1m    [0m
[1m        return_n_test_samples : boolean, optional, default: False[0m
[1m            Whether to return the ``n_test_samples``[0m
[1m    [0m
[1m        return_times : boolean, optional, default: False[0m
[1m            Whether to return the fit/score times.[0m
[1m    [0m
[1m        return_estimator : boolean, optional, default: False[0m
[1m            Whether to return the fitted estimator.[0m
[1m    [0m
[1m        Returns[0m
[1m        -------[0m
[1m        train_scores : dict of scorer name -> float, optional[0m
[1m            Score on training set (for all the scorers),[0m
[1m            returned only if `return_train_score` is `True`.[0m
[1m    [0m
[1m        test_scores : dict of scorer name -> float, optional[0m
[1m            Score on testing set (for all the scorers).[0m
[1m    [0m
[1m        n_test_samples : int[0m
[1m            Number of test samples.[0m
[1m    [0m
[1m        fit_time : float[0m
[1m            Time spent for fitting in seconds.[0m
[1m    [0m
[1m        score_time : float[0m
[1m            Time spent for scoring in seconds.[0m
[1m    [0m
[1m        parameters : dict or None, optional[0m
[1m            The parameters that have been evaluated.[0m
[1m    [0m
[1m        estimator : estimator object[0m
[1m            The fitted estimator[0m
[1m        """[0m
[1m        if verbose > 1:[0m
[1m            if parameters is None:[0m
[1m                msg = ''[0m
[1m            else:[0m
[1m                msg = '%s' % (', '.join('%s=%s' % (k, v)[0m
[1m                              for k, v in parameters.items()))[0m
[1m            print("[CV] %s %s" % (msg, (64 - len(msg)) * '.'))[0m
[1m    [0m
[1m        # Adjust length of sample weights[0m
[1m        fit_params = fit_params if fit_params is not None else {}[0m
[1m        fit_params = dict([(k, _index_param_value(X, v, train))[0m
[1m                          for k, v in fit_params.items()])[0m
[1m    [0m
[1m        train_scores = {}[0m
[1m        if parameters is not None:[0m
[1m            estimator.set_params(**parameters)[0m
[1m    [0m
[1m        start_time = time.time()[0m
[1m    [0m
[1m        X_train, y_train = _safe_split(estimator, X, y, train)[0m
[1m        X_test, y_test = _safe_split(estimator, X, y, test, train)[0m
[1m    [0m
[1m        is_multimetric = not callable(scorer)[0m
[1m        n_scorers = len(scorer.keys()) if is_multimetric else 1[0m
[1m    [0m
[1m        try:[0m
[1m            if y_train is None:[0m
[1m                estimator.fit(X_train, **fit_params)[0m
[1m            else:[0m
[1m>               estimator.fit(X_train, y_train, **fit_params)[0m

X          = <200x10 sparse matrix of type '<class 'numpy.float64'>'
	with 2000 stored elements in Compressed Sparse Row format>
X_test     = <67x10 sparse matrix of type '<class 'numpy.float64'>'
	with 670 stored elements in Compressed Sparse Row format>
X_train    = <133x10 sparse matrix of type '<class 'numpy.float64'>'
	with 1330 stored elements in Compressed Sparse Row format>
error_score = 'raise-deprecating'
estimator  = Ridge(alpha=0.10000000000000001, copy_X=True, fit_intercept=True,
   max_iter=None, normalize=True, random_state=None, solver='auto',
   tol=0.001)
fit_params = {'sample_weight': None}
fit_time   = 0.0022819042205810547
is_multimetric = True
n_scorers  = 1
parameters = {'alpha': 0.10000000000000001}
return_estimator = False
return_n_test_samples = True
return_parameters = False
return_times = True
return_train_score = 'warn'
score_time = 0.0
scorer     = {'score': <function _passthrough_scorer at 0x7fd3ff961d08>}
start_time = 1535809233.3676736
test       = array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19, 20, 21, 22, 23, 24, 25, ...39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
       51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66])
train      = array([ 67,  68,  69,  70,  71,  72,  73,  74,  75,  76,  77,  78,  79,
        80,  81,  82,  83,  84,  85,  86,  87,...179, 180, 181, 182, 183,
       184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
       197, 198, 199])
train_scores = {}
verbose    = 0
y          = array([ 321.,  215.,  127.,   64.,  175.,  275.,  179.,  232.,  142.,
         99.,  252.,  174.,  129.,   74.,  264.,...  85.,  114.,   93.,   99.,
         72.,  270.,  111.,   83.,   87.,   42.,  172.,   65.,  259.,
        279.,  141.])
y_test     = array([ 321.,  215.,  127.,   64.,  175.,  275.,  179.,  232.,  142.,
         99.,  252.,  174.,  129.,   74.,  264.,... 113.,  131.,
        195.,  171.,  122.,   61.,  230.,  235.,   52.,  121.,  144.,
        107.,  132.,  302.,   53.])
y_train    = array([ 317.,  137.,   57.,   98.,  170.,   88.,   90.,   67.,  163.,
        104.,  186.,  180.,  283.,  141.,  150.,... 236.,   85.,  114.,   93.,   99.,   72.,  270.,  111.,   83.,
         87.,   42.,  172.,   65.,  259.,  279.,  141.])

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/model_selection/_validation.py[0m:528: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Ridge(alpha=0.10000000000000001, copy_X=True, fit_intercept=True,
   max_iter=None, normalize=True, random_state=None, solver='auto',
   tol=0.001)
X = <133x10 sparse matrix of type '<class 'numpy.float64'>'
	with 1330 stored elements in Compressed Sparse Row format>
y = array([ 317.,  137.,   57.,   98.,  170.,   88.,   90.,   67.,  163.,
        104.,  186.,  180.,  283.,  141.,  150.,... 236.,   85.,  114.,   93.,   99.,   72.,  270.,  111.,   83.,
         87.,   42.,  172.,   65.,  259.,  279.,  141.])
sample_weight = None

[1m    def fit(self, X, y, sample_weight=None):[0m
[1m        """Fit Ridge regression model[0m
[1m    [0m
[1m            Parameters[0m
[1m            ----------[0m
[1m            X : {array-like, sparse matrix}, shape = [n_samples, n_features][0m
[1m                Training data[0m
[1m    [0m
[1m            y : array-like, shape = [n_samples] or [n_samples, n_targets][0m
[1m                Target values[0m
[1m    [0m
[1m            sample_weight : float or numpy array of shape [n_samples][0m
[1m                Individual weights for each sample[0m
[1m    [0m
[1m            Returns[0m
[1m            -------[0m
[1m            self : returns an instance of self.[0m
[1m            """[0m
[1m>       return super(Ridge, self).fit(X, y, sample_weight=sample_weight)[0m

X          = <133x10 sparse matrix of type '<class 'numpy.float64'>'
	with 1330 stored elements in Compressed Sparse Row format>
__class__  = <class 'sklearn.linear_model.ridge.Ridge'>
sample_weight = None
self       = Ridge(alpha=0.10000000000000001, copy_X=True, fit_intercept=True,
   max_iter=None, normalize=True, random_state=None, solver='auto',
   tol=0.001)
y          = array([ 317.,  137.,   57.,   98.,  170.,   88.,   90.,   67.,  163.,
        104.,  186.,  180.,  283.,  141.,  150.,... 236.,   85.,  114.,   93.,   99.,   72.,  270.,  111.,   83.,
         87.,   42.,  172.,   65.,  259.,  279.,  141.])

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/ridge.py[0m:680: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Ridge(alpha=0.10000000000000001, copy_X=True, fit_intercept=True,
   max_iter=None, normalize=True, random_state=None, solver='auto',
   tol=0.001)
X = <133x10 sparse matrix of type '<class 'numpy.float64'>'
	with 1330 stored elements in Compressed Sparse Row format>
y = array([ 317.,  137.,   57.,   98.,  170.,   88.,   90.,   67.,  163.,
        104.,  186.,  180.,  283.,  141.,  150.,... 236.,   85.,  114.,   93.,   99.,   72.,  270.,  111.,   83.,
         87.,   42.,  172.,   65.,  259.,  279.,  141.])
sample_weight = None

[1m    def fit(self, X, y, sample_weight=None):[0m
[1m    [0m
[1m        if self.solver in ('sag', 'saga'):[0m
[1m            _dtype = np.float64[0m
[1m        else:[0m
[1m            # all other solvers work at both float precision levels[0m
[1m            _dtype = [np.float64, np.float32][0m
[1m    [0m
[1m        X, y = check_X_y(X, y, ['csr', 'csc', 'coo'], dtype=_dtype,[0m
[1m                         multi_output=True, y_numeric=True)[0m
[1m    [0m
[1m        if ((sample_weight is not None) and[0m
[1m                np.atleast_1d(sample_weight).ndim > 1):[0m
[1m            raise ValueError("Sample weights must be 1D array or scalar")[0m
[1m    [0m
[1m        X, y, X_offset, y_offset, X_scale = self._preprocess_data([0m
[1m            X, y, self.fit_intercept, self.normalize, self.copy_X,[0m
[1m>           sample_weight=sample_weight)[0m

X          = <133x10 sparse matrix of type '<class 'numpy.float64'>'
	with 1330 stored elements in Compressed Sparse Row format>
_dtype     = [<class 'numpy.float64'>, <class 'numpy.float32'>]
sample_weight = None
self       = Ridge(alpha=0.10000000000000001, copy_X=True, fit_intercept=True,
   max_iter=None, normalize=True, random_state=None, solver='auto',
   tol=0.001)
y          = array([ 317.,  137.,   57.,   98.,  170.,   88.,   90.,   67.,  163.,
        104.,  186.,  180.,  283.,  141.,  150.,... 236.,   85.,  114.,   93.,   99.,   72.,  270.,  111.,   83.,
         87.,   42.,  172.,   65.,  259.,  279.,  141.])

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/ridge.py[0m:499: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

X = <133x10 sparse matrix of type '<class 'numpy.float64'>'
	with 1330 stored elements in Compressed Sparse Row format>
y = array([ 317.,  137.,   57.,   98.,  170.,   88.,   90.,   67.,  163.,
        104.,  186.,  180.,  283.,  141.,  150.,... 236.,   85.,  114.,   93.,   99.,   72.,  270.,  111.,   83.,
         87.,   42.,  172.,   65.,  259.,  279.,  141.])
fit_intercept = True, normalize = True, copy = True, sample_weight = None
return_mean = False, check_input = True

[1m    def _preprocess_data(X, y, fit_intercept, normalize=False, copy=True,[0m
[1m                         sample_weight=None, return_mean=False, check_input=True):[0m
[1m        """[0m
[1m        Centers data to have mean zero along axis 0. If fit_intercept=False or if[0m
[1m        the X is a sparse matrix, no centering is done, but normalization can still[0m
[1m        be applied. The function returns the statistics necessary to reconstruct[0m
[1m        the input data, which are X_offset, y_offset, X_scale, such that the output[0m
[1m    [0m
[1m            X = (X - X_offset) / X_scale[0m
[1m    [0m
[1m        X_scale is the L2 norm of X - X_offset. If sample_weight is not None,[0m
[1m        then the weighted mean of X and y is zero, and not the mean itself. If[0m
[1m        return_mean=True, the mean, eventually weighted, is returned, independently[0m
[1m        of whether X was centered (option used for optimization with sparse data in[0m
[1m        coordinate_descend).[0m
[1m    [0m
[1m        This is here because nearly all linear models will want their data to be[0m
[1m        centered. This function also systematically makes y consistent with X.dtype[0m
[1m        """[0m
[1m    [0m
[1m        if isinstance(sample_weight, numbers.Number):[0m
[1m            sample_weight = None[0m
[1m    [0m
[1m        if check_input:[0m
[1m            X = check_array(X, copy=copy, accept_sparse=['csr', 'csc'],[0m
[1m                            dtype=FLOAT_DTYPES)[0m
[1m        elif copy:[0m
[1m            if sp.issparse(X):[0m
[1m                X = X.copy()[0m
[1m            else:[0m
[1m                X = X.copy(order='K')[0m
[1m    [0m
[1m        y = np.asarray(y, dtype=X.dtype)[0m
[1m    [0m
[1m        if fit_intercept:[0m
[1m            if sp.issparse(X):[0m
[1m>               X_offset, X_var = mean_variance_axis(X, axis=0)[0m

X          = <133x10 sparse matrix of type '<class 'numpy.float64'>'
	with 1330 stored elements in Compressed Sparse Row format>
check_input = True
copy       = True
fit_intercept = True
normalize  = True
return_mean = False
sample_weight = None
y          = array([ 317.,  137.,   57.,   98.,  170.,   88.,   90.,   67.,  163.,
        104.,  186.,  180.,  283.,  141.,  150.,... 236.,   85.,  114.,   93.,   99.,   72.,  270.,  111.,   83.,
         87.,   42.,  172.,   65.,  259.,  279.,  141.])

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:129: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

X = <133x10 sparse matrix of type '<class 'numpy.float64'>'
	with 1330 stored elements in Compressed Sparse Row format>
axis = 0

[1m    def mean_variance_axis(X, axis):[0m
[1m        """Compute mean and variance along an axix on a CSR or CSC matrix[0m
[1m    [0m
[1m        Parameters[0m
[1m        ----------[0m
[1m        X : CSR or CSC sparse matrix, shape (n_samples, n_features)[0m
[1m            Input data.[0m
[1m    [0m
[1m        axis : int (either 0 or 1)[0m
[1m            Axis along which the axis should be computed.[0m
[1m    [0m
[1m        Returns[0m
[1m        -------[0m
[1m    [0m
[1m        means : float array with shape (n_features,)[0m
[1m            Feature-wise means[0m
[1m    [0m
[1m        variances : float array with shape (n_features,)[0m
[1m            Feature-wise variances[0m
[1m    [0m
[1m        """[0m
[1m        _raise_error_wrong_axis(axis)[0m
[1m    [0m
[1m        if isinstance(X, sp.csr_matrix):[0m
[1m            if axis == 0:[0m
[1m>               return _csr_mean_var_axis0(X)[0m

X          = <133x10 sparse matrix of type '<class 'numpy.float64'>'
	with 1330 stored elements in Compressed Sparse Row format>
axis       = 0

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError

[33mDuring handling of the above exception, another exception occurred:[0m

test_func = <function _test_ridge_cv_normalize at 0x7fd3f8fef378>

[1m    @pytest.mark.filterwarnings('ignore: The default of the `iid`')  # 0.22[0m
[1m    @pytest.mark.filterwarnings('ignore: You should specify a value')  # 0.22[0m
[1m    @pytest.mark.parametrize([0m
[1m            'test_func',[0m
[1m            (_test_ridge_loo, _test_ridge_cv, _test_ridge_cv_normalize,[0m
[1m             _test_ridge_diabetes, _test_multi_ridge_diabetes,[0m
[1m             _test_ridge_classifiers, _test_tolerance))[0m
[1m    def test_dense_sparse(test_func):[0m
[1m>       check_dense_sparse(test_func)[0m

test_func  = <function _test_ridge_cv_normalize at 0x7fd3f8fef378>

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_ridge.py[0m:500: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_ridge.py[0m:486: in check_dense_sparse
[1m    ret_sparse = test_func(SPARSE_FILTER)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_ridge.py[0m:408: in _test_ridge_cv_normalize
[1m    ridge_cv.fit(filter_(10. * X_diabetes), y_diabetes)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/ridge.py[0m:1160: in fit
[1m    gs.fit(X, y, sample_weight=sample_weight)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/model_selection/_search.py[0m:722: in fit
[1m    self._run_search(evaluate_candidates)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/model_selection/_search.py[0m:1191: in _run_search
[1m    evaluate_candidates(ParameterGrid(self.param_grid))[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/model_selection/_search.py[0m:711: in evaluate_candidates
[1m    cv.split(X, y, groups)))[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/parallel.py[0m:983: in __call__
[1m    if self.dispatch_one_batch(iterator):[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/parallel.py[0m:825: in dispatch_one_batch
[1m    self._dispatch(tasks)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/parallel.py[0m:782: in _dispatch
[1m    job = self._backend.apply_async(batch, callback=cb)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/_parallel_backends.py[0m:182: in apply_async
[1m    result = ImmediateResult(func)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/_parallel_backends.py[0m:545: in __init__
[1m    self.results = batch()[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/parallel.py[0m:261: in __call__
[1m    for func, args, kwargs in self.items][0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/parallel.py[0m:261: in <listcomp>
[1m    for func, args, kwargs in self.items][0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

estimator = Ridge(alpha=0.10000000000000001, copy_X=True, fit_intercept=True,
   max_iter=None, normalize=True, random_state=None, solver='auto',
   tol=0.001)
X = <200x10 sparse matrix of type '<class 'numpy.float64'>'
	with 2000 stored elements in Compressed Sparse Row format>
y = array([ 321.,  215.,  127.,   64.,  175.,  275.,  179.,  232.,  142.,
         99.,  252.,  174.,  129.,   74.,  264.,...  85.,  114.,   93.,   99.,
         72.,  270.,  111.,   83.,   87.,   42.,  172.,   65.,  259.,
        279.,  141.])
scorer = {'score': <function _passthrough_scorer at 0x7fd3ff961d08>}
train = array([ 67,  68,  69,  70,  71,  72,  73,  74,  75,  76,  77,  78,  79,
        80,  81,  82,  83,  84,  85,  86,  87,...179, 180, 181, 182, 183,
       184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
       197, 198, 199])
test = array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19, 20, 21, 22, 23, 24, 25, ...39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
       51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66])
verbose = 0, parameters = {'alpha': 0.10000000000000001}
fit_params = {'sample_weight': None}, return_train_score = 'warn'
return_parameters = False, return_n_test_samples = True, return_times = True
return_estimator = False, error_score = 'raise-deprecating'

[1m    def _fit_and_score(estimator, X, y, scorer, train, test, verbose,[0m
[1m                       parameters, fit_params, return_train_score=False,[0m
[1m                       return_parameters=False, return_n_test_samples=False,[0m
[1m                       return_times=False, return_estimator=False,[0m
[1m                       error_score='raise-deprecating'):[0m
[1m        """Fit estimator and compute scores for a given dataset split.[0m
[1m    [0m
[1m        Parameters[0m
[1m        ----------[0m
[1m        estimator : estimator object implementing 'fit'[0m
[1m            The object to use to fit the data.[0m
[1m    [0m
[1m        X : array-like of shape at least 2D[0m
[1m            The data to fit.[0m
[1m    [0m
[1m        y : array-like, optional, default: None[0m
[1m            The target variable to try to predict in the case of[0m
[1m            supervised learning.[0m
[1m    [0m
[1m        scorer : A single callable or dict mapping scorer name to the callable[0m
[1m            If it is a single callable, the return value for ``train_scores`` and[0m
[1m            ``test_scores`` is a single float.[0m
[1m    [0m
[1m            For a dict, it should be one mapping the scorer name to the scorer[0m
[1m            callable object / function.[0m
[1m    [0m
[1m            The callable object / fn should have signature[0m
[1m            ``scorer(estimator, X, y)``.[0m
[1m    [0m
[1m        train : array-like, shape (n_train_samples,)[0m
[1m            Indices of training samples.[0m
[1m    [0m
[1m        test : array-like, shape (n_test_samples,)[0m
[1m            Indices of test samples.[0m
[1m    [0m
[1m        verbose : integer[0m
[1m            The verbosity level.[0m
[1m    [0m
[1m        error_score : 'raise' | 'raise-deprecating' or numeric[0m
[1m            Value to assign to the score if an error occurs in estimator fitting.[0m
[1m            If set to 'raise', the error is raised.[0m
[1m            If set to 'raise-deprecating', a FutureWarning is printed before the[0m
[1m            error is raised.[0m
[1m            If a numeric value is given, FitFailedWarning is raised. This parameter[0m
[1m            does not affect the refit step, which will always raise the error.[0m
[1m            Default is 'raise-deprecating' but from version 0.22 it will change[0m
[1m            to np.nan.[0m
[1m    [0m
[1m        parameters : dict or None[0m
[1m            Parameters to be set on the estimator.[0m
[1m    [0m
[1m        fit_params : dict or None[0m
[1m            Parameters that will be passed to ``estimator.fit``.[0m
[1m    [0m
[1m        return_train_score : boolean, optional, default: False[0m
[1m            Compute and return score on training set.[0m
[1m    [0m
[1m        return_parameters : boolean, optional, default: False[0m
[1m            Return parameters that has been used for the estimator.[0m
[1m    [0m
[1m        return_n_test_samples : boolean, optional, default: False[0m
[1m            Whether to return the ``n_test_samples``[0m
[1m    [0m
[1m        return_times : boolean, optional, default: False[0m
[1m            Whether to return the fit/score times.[0m
[1m    [0m
[1m        return_estimator : boolean, optional, default: False[0m
[1m            Whether to return the fitted estimator.[0m
[1m    [0m
[1m        Returns[0m
[1m        -------[0m
[1m        train_scores : dict of scorer name -> float, optional[0m
[1m            Score on training set (for all the scorers),[0m
[1m            returned only if `return_train_score` is `True`.[0m
[1m    [0m
[1m        test_scores : dict of scorer name -> float, optional[0m
[1m            Score on testing set (for all the scorers).[0m
[1m    [0m
[1m        n_test_samples : int[0m
[1m            Number of test samples.[0m
[1m    [0m
[1m        fit_time : float[0m
[1m            Time spent for fitting in seconds.[0m
[1m    [0m
[1m        score_time : float[0m
[1m            Time spent for scoring in seconds.[0m
[1m    [0m
[1m        parameters : dict or None, optional[0m
[1m            The parameters that have been evaluated.[0m
[1m    [0m
[1m        estimator : estimator object[0m
[1m            The fitted estimator[0m
[1m        """[0m
[1m        if verbose > 1:[0m
[1m            if parameters is None:[0m
[1m                msg = ''[0m
[1m            else:[0m
[1m                msg = '%s' % (', '.join('%s=%s' % (k, v)[0m
[1m                              for k, v in parameters.items()))[0m
[1m            print("[CV] %s %s" % (msg, (64 - len(msg)) * '.'))[0m
[1m    [0m
[1m        # Adjust length of sample weights[0m
[1m        fit_params = fit_params if fit_params is not None else {}[0m
[1m        fit_params = dict([(k, _index_param_value(X, v, train))[0m
[1m                          for k, v in fit_params.items()])[0m
[1m    [0m
[1m        train_scores = {}[0m
[1m        if parameters is not None:[0m
[1m            estimator.set_params(**parameters)[0m
[1m    [0m
[1m        start_time = time.time()[0m
[1m    [0m
[1m        X_train, y_train = _safe_split(estimator, X, y, train)[0m
[1m        X_test, y_test = _safe_split(estimator, X, y, test, train)[0m
[1m    [0m
[1m        is_multimetric = not callable(scorer)[0m
[1m        n_scorers = len(scorer.keys()) if is_multimetric else 1[0m
[1m    [0m
[1m        try:[0m
[1m            if y_train is None:[0m
[1m                estimator.fit(X_train, **fit_params)[0m
[1m            else:[0m
[1m                estimator.fit(X_train, y_train, **fit_params)[0m
[1m    [0m
[1m        except Exception as e:[0m
[1m            # Note fit time as time until error[0m
[1m            fit_time = time.time() - start_time[0m
[1m            score_time = 0.0[0m
[1m            if error_score == 'raise':[0m
[1m                raise[0m
[1m            elif error_score == 'raise-deprecating':[0m
[1m                warnings.warn("From version 0.22, errors during fit will result "[0m
[1m                              "in a cross validation score of NaN by default. Use "[0m
[1m                              "error_score='raise' if you want an exception "[0m
[1m                              "raised or error_score=np.nan to adopt the "[0m
[1m                              "behavior from version 0.22.",[0m
[1m>                             FutureWarning)[0m
[31m[1mE               FutureWarning: From version 0.22, errors during fit will result in a cross validation score of NaN by default. Use error_score='raise' if you want an exception raised or error_score=np.nan to adopt the behavior from version 0.22.[0m

X          = <200x10 sparse matrix of type '<class 'numpy.float64'>'
	with 2000 stored elements in Compressed Sparse Row format>
X_test     = <67x10 sparse matrix of type '<class 'numpy.float64'>'
	with 670 stored elements in Compressed Sparse Row format>
X_train    = <133x10 sparse matrix of type '<class 'numpy.float64'>'
	with 1330 stored elements in Compressed Sparse Row format>
error_score = 'raise-deprecating'
estimator  = Ridge(alpha=0.10000000000000001, copy_X=True, fit_intercept=True,
   max_iter=None, normalize=True, random_state=None, solver='auto',
   tol=0.001)
fit_params = {'sample_weight': None}
fit_time   = 0.0022819042205810547
is_multimetric = True
n_scorers  = 1
parameters = {'alpha': 0.10000000000000001}
return_estimator = False
return_n_test_samples = True
return_parameters = False
return_times = True
return_train_score = 'warn'
score_time = 0.0
scorer     = {'score': <function _passthrough_scorer at 0x7fd3ff961d08>}
start_time = 1535809233.3676736
test       = array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19, 20, 21, 22, 23, 24, 25, ...39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
       51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66])
train      = array([ 67,  68,  69,  70,  71,  72,  73,  74,  75,  76,  77,  78,  79,
        80,  81,  82,  83,  84,  85,  86,  87,...179, 180, 181, 182, 183,
       184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
       197, 198, 199])
train_scores = {}
verbose    = 0
y          = array([ 321.,  215.,  127.,   64.,  175.,  275.,  179.,  232.,  142.,
         99.,  252.,  174.,  129.,   74.,  264.,...  85.,  114.,   93.,   99.,
         72.,  270.,  111.,   83.,   87.,   42.,  172.,   65.,  259.,
        279.,  141.])
y_test     = array([ 321.,  215.,  127.,   64.,  175.,  275.,  179.,  232.,  142.,
         99.,  252.,  174.,  129.,   74.,  264.,... 113.,  131.,
        195.,  171.,  122.,   61.,  230.,  235.,   52.,  121.,  144.,
        107.,  132.,  302.,   53.])
y_train    = array([ 317.,  137.,   57.,   98.,  170.,   88.,   90.,   67.,  163.,
        104.,  186.,  180.,  283.,  141.,  150.,... 236.,   85.,  114.,   93.,   99.,   72.,  270.,  111.,   83.,
         87.,   42.,  172.,   65.,  259.,  279.,  141.])

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/model_selection/_validation.py[0m:542: FutureWarning
[31m[1m__________________ test_dense_sparse[_test_ridge_classifiers] __________________[0m

test_func = <function _test_ridge_classifiers at 0x7fd3f8fef598>

[1m    @pytest.mark.filterwarnings('ignore: The default of the `iid`')  # 0.22[0m
[1m    @pytest.mark.filterwarnings('ignore: You should specify a value')  # 0.22[0m
[1m    @pytest.mark.parametrize([0m
[1m            'test_func',[0m
[1m            (_test_ridge_loo, _test_ridge_cv, _test_ridge_cv_normalize,[0m
[1m             _test_ridge_diabetes, _test_multi_ridge_diabetes,[0m
[1m             _test_ridge_classifiers, _test_tolerance))[0m
[1m    def test_dense_sparse(test_func):[0m
[1m>       check_dense_sparse(test_func)[0m

test_func  = <function _test_ridge_classifiers at 0x7fd3f8fef598>

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_ridge.py[0m:500: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_ridge.py[0m:484: in check_dense_sparse
[1m    ret_dense = test_func(DENSE_FILTER)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_ridge.py[0m:458: in _test_ridge_classifiers
[1m    reg.fit(filter_(X_iris), y_iris)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/ridge.py[0m:853: in fit
[1m    super(RidgeClassifier, self).fit(X, Y, sample_weight=sample_weight)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/ridge.py[0m:499: in fit
[1m    sample_weight=sample_weight)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:129: in _preprocess_data
[1m    X_offset, X_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
[31m[1m_______________________ test_ridge_fit_intercept_sparse ________________________[0m

[1m    def test_ridge_fit_intercept_sparse():[0m
[1m        X, y = make_regression(n_samples=1000, n_features=2, n_informative=2,[0m
[1m                               bias=10., random_state=42)[0m
[1m        X_csr = sp.csr_matrix(X)[0m
[1m    [0m
[1m        for solver in ['saga', 'sag']:[0m
[1m            dense = Ridge(alpha=1., tol=1.e-15, solver=solver, fit_intercept=True)[0m
[1m            sparse = Ridge(alpha=1., tol=1.e-15, solver=solver, fit_intercept=True)[0m
[1m            dense.fit(X, y)[0m
[1m>           sparse.fit(X_csr, y)[0m

X          = array([[ 0.43004165,  0.38193545],
       [ 1.5615112 ,  1.30174129],
       [-0.56629773, -0.99053633],
       ..., 
       [ 1.7722516 , -0.02751491],
       [ 0.56390912,  1.38427282],
       [ 1.69645637, -2.08192941]])
X_csr      = <1000x2 sparse matrix of type '<class 'numpy.float64'>'
	with 2000 stored elements in Compressed Sparse Row format>
dense      = Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
   normalize=False, random_state=None, solver='saga', tol=1e-15)
solver     = 'saga'
sparse     = Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
   normalize=False, random_state=None, solver='saga', tol=1e-15)
y          = array([  2.83875383e+01,   7.33022437e+01,  -3.40634991e+01,
        -1.62237930e+01,   2.18159607e+01,   1.83915876e+....28648029e+01,   9.25922058e+01,
        -5.11160570e+00,   2.05784555e+01,   7.00770000e+01,
        -6.35584151e+01])

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_ridge.py[0m:825: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/ridge.py[0m:680: in fit
[1m    return super(Ridge, self).fit(X, y, sample_weight=sample_weight)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/ridge.py[0m:499: in fit
[1m    sample_weight=sample_weight)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:129: in _preprocess_data
[1m    X_offset, X_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
[31m[1m__________________ test_sag_pobj_matches_logistic_regression ___________________[0m

[1m    @pytest.mark.filterwarnings('ignore:The max_iter was reached')[0m
[1m    def test_sag_pobj_matches_logistic_regression():[0m
[1m        """tests if the sag pobj matches log reg"""[0m
[1m        n_samples = 100[0m
[1m        alpha = 1.0[0m
[1m        max_iter = 20[0m
[1m        X, y = make_blobs(n_samples=n_samples, centers=2, random_state=0,[0m
[1m                          cluster_std=0.1)[0m
[1m    [0m
[1m        clf1 = LogisticRegression(solver='sag', fit_intercept=False, tol=.0000001,[0m
[1m                                  C=1. / alpha / n_samples, max_iter=max_iter,[0m
[1m                                  random_state=10, multi_class='ovr')[0m
[1m        clf2 = clone(clf1)[0m
[1m        clf3 = LogisticRegression(fit_intercept=False, tol=.0000001,[0m
[1m                                  C=1. / alpha / n_samples, max_iter=max_iter,[0m
[1m                                  random_state=10, multi_class='ovr',[0m
[1m                                  solver='lbfgs')[0m
[1m    [0m
[1m        clf1.fit(X, y)[0m
[1m>       clf2.fit(sp.csr_matrix(X), y)[0m

X          = array([[ 2.27159112,  1.03131645],
       [ 1.94052066,  0.85388166],
       [ 0.85099054,  4.38153636],
       [ 0.88... 0.67532334],
       [ 2.1502096 ,  0.90641878],
       [ 0.81488029,  4.2825133 ],
       [ 1.93272397,  0.98209996]])
alpha      = 1.0
clf1       = LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=False,
          intercept_scaling=1, max_iter..., n_jobs=None,
          penalty='l2', random_state=10, solver='sag', tol=1e-07,
          verbose=0, warm_start=False)
clf2       = LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=False,
          intercept_scaling=1, max_iter..., n_jobs=None,
          penalty='l2', random_state=10, solver='sag', tol=1e-07,
          verbose=0, warm_start=False)
clf3       = LogisticRegression(C=0.01, class_weight=None, dual=False, fit_intercept=False,
          intercept_scaling=1, max_iter...n_jobs=None,
          penalty='l2', random_state=10, solver='lbfgs', tol=1e-07,
          verbose=0, warm_start=False)
max_iter   = 20
n_samples  = 100
y          = array([1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1,
       0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1,...1, 0, 0, 1,
       0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1,
       1, 1, 0, 0, 1, 1, 0, 1])

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_sag.py[0m:323: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/logistic.py[0m:1306: in fit
[1m    max_squared_sum = row_norms(X, squared=True).max()[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py[0m:86: in row_norms
[1m    norms = csr_row_norms(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:31: TypeError
[31m[1m____________________ test_sag_pobj_matches_ridge_regression ____________________[0m

[1m    @pytest.mark.filterwarnings('ignore:The max_iter was reached')[0m
[1m    def test_sag_pobj_matches_ridge_regression():[0m
[1m        """tests if the sag pobj matches ridge reg"""[0m
[1m        n_samples = 100[0m
[1m        n_features = 10[0m
[1m        alpha = 1.0[0m
[1m        n_iter = 100[0m
[1m        fit_intercept = False[0m
[1m        rng = np.random.RandomState(10)[0m
[1m        X = rng.normal(size=(n_samples, n_features))[0m
[1m        true_w = rng.normal(size=n_features)[0m
[1m        y = X.dot(true_w)[0m
[1m    [0m
[1m        clf1 = Ridge(fit_intercept=fit_intercept, tol=.00000000001, solver='sag',[0m
[1m                     alpha=alpha, max_iter=n_iter, random_state=42)[0m
[1m        clf2 = clone(clf1)[0m
[1m        clf3 = Ridge(fit_intercept=fit_intercept, tol=.00001, solver='lsqr',[0m
[1m                     alpha=alpha, max_iter=n_iter, random_state=42)[0m
[1m    [0m
[1m        clf1.fit(X, y)[0m
[1m>       clf2.fit(sp.csr_matrix(X), y)[0m

X          = array([[ 1.3315865 ,  0.71527897, -1.54540029, -0.00838385,  0.62133597,
        -0.72008556,  0.26551159,  0.10854853...9389, -0.34151164,  0.06977371, -0.16035707,
        -1.01433918, -0.33182775,  1.4406974 , -0.39021786,  0.64245062]])
alpha      = 1.0
clf1       = Ridge(alpha=1.0, copy_X=True, fit_intercept=False, max_iter=100,
   normalize=False, random_state=42, solver='sag', tol=1e-11)
clf2       = Ridge(alpha=1.0, copy_X=True, fit_intercept=False, max_iter=100,
   normalize=False, random_state=42, solver='sag', tol=1e-11)
clf3       = Ridge(alpha=1.0, copy_X=True, fit_intercept=False, max_iter=100,
   normalize=False, random_state=42, solver='lsqr', tol=1e-05)
fit_intercept = False
n_features = 10
n_iter     = 100
n_samples  = 100
rng        = <mtrand.RandomState object at 0x7fd3f4c79a20>
true_w     = array([ 1.51325223, -0.14233359, -0.13941996,  1.17550754,  1.18378901,
        0.68340726, -1.2151136 ,  0.53156124,  0.24542898,  0.2519878 ])
y          = array([ 2.05437096,  3.94738376,  3.20567682,  0.23584009,  0.18655673,
       -0.57745812, -3.86031688,  5.37450002, ...870034, -1.77446461, -3.32881901, -2.09146767,
       -1.77769908, -0.48590975, -1.98647764,  1.95260862,  1.34480532])

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_sag.py[0m:355: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/ridge.py[0m:680: in fit
[1m    return super(Ridge, self).fit(X, y, sample_weight=sample_weight)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/ridge.py[0m:514: in fit
[1m    return_intercept=False)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/ridge.py[0m:424: in ridge_regression
[1m    max_squared_sum = row_norms(X, squared=True).max()[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py[0m:86: in row_norms
[1m    norms = csr_row_norms(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:31: TypeError
[31m[1m____________________ test_sag_regressor_computed_correctly _____________________[0m

[1m    @pytest.mark.filterwarnings('ignore:The max_iter was reached')[0m
[1m    def test_sag_regressor_computed_correctly():[0m
[1m        """tests if the sag regressor is computed correctly"""[0m
[1m        alpha = .1[0m
[1m        n_features = 10[0m
[1m        n_samples = 40[0m
[1m        max_iter = 50[0m
[1m        tol = .000001[0m
[1m        fit_intercept = True[0m
[1m        rng = np.random.RandomState(0)[0m
[1m        X = rng.normal(size=(n_samples, n_features))[0m
[1m        w = rng.normal(size=n_features)[0m
[1m        y = np.dot(X, w) + 2.[0m
[1m        step_size = get_step_size(X, alpha, fit_intercept, classification=False)[0m
[1m    [0m
[1m        clf1 = Ridge(fit_intercept=fit_intercept, tol=tol, solver='sag',[0m
[1m                     alpha=alpha * n_samples, max_iter=max_iter)[0m
[1m        clf2 = clone(clf1)[0m
[1m    [0m
[1m        clf1.fit(X, y)[0m
[1m>       clf2.fit(sp.csr_matrix(X), y)[0m

X          = array([[ 1.76405235,  0.40015721,  0.97873798,  2.2408932 ,  1.86755799,
        -0.97727788,  0.95008842, -0.15135721...751 , -0.35343175, -1.61647419, -0.29183736,
        -0.76149221,  0.85792392,  1.14110187,  1.46657872,  0.85255194]])
alpha      = 0.1
clf1       = Ridge(alpha=4.0, copy_X=True, fit_intercept=True, max_iter=50,
   normalize=False, random_state=None, solver='sag', tol=1e-06)
clf2       = Ridge(alpha=4.0, copy_X=True, fit_intercept=True, max_iter=50,
   normalize=False, random_state=None, solver='sag', tol=1e-06)
fit_intercept = True
max_iter   = 50
n_features = 10
n_samples  = 40
rng        = <mtrand.RandomState object at 0x7fd410648ef0>
step_size  = 0.045155233809644355
tol        = 1e-06
w          = array([-0.59865394, -1.11589699,  0.76666318,  0.35629282, -1.76853845,
        0.35548179,  0.81451982,  0.05892559, -0.18505367, -0.80764849])
y          = array([-1.15163838,  2.08812857, -2.77798963,  2.15852642,  3.84070338,
        1.97652444, -0.06590066,  0.16707971, ...418848,  4.53999856,  5.3514421 ,  0.90921334,
        3.88905752,  3.28016426,  3.34357531, -1.49348744,  1.11347773])

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_sag.py[0m:387: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/ridge.py[0m:680: in fit
[1m    return super(Ridge, self).fit(X, y, sample_weight=sample_weight)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/ridge.py[0m:499: in fit
[1m    sample_weight=sample_weight)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:129: in _preprocess_data
[1m    X_offset, X_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
[31m[1m______________________________ test_sag_regressor ______________________________[0m

[1m    @pytest.mark.filterwarnings('ignore:The max_iter was reached')[0m
[1m    def test_sag_regressor():[0m
[1m        """tests if the sag regressor performs well"""[0m
[1m        xmin, xmax = -5, 5[0m
[1m        n_samples = 20[0m
[1m        tol = .001[0m
[1m        max_iter = 20[0m
[1m        alpha = 0.1[0m
[1m        rng = np.random.RandomState(0)[0m
[1m        X = np.linspace(xmin, xmax, n_samples).reshape(n_samples, 1)[0m
[1m    [0m
[1m        # simple linear function without noise[0m
[1m        y = 0.5 * X.ravel()[0m
[1m    [0m
[1m        clf1 = Ridge(tol=tol, solver='sag', max_iter=max_iter,[0m
[1m                     alpha=alpha * n_samples)[0m
[1m        clf2 = clone(clf1)[0m
[1m        clf1.fit(X, y)[0m
[1m>       clf2.fit(sp.csr_matrix(X), y)[0m

X          = array([[-5.        ],
       [-4.47368421],
       [-3.94736842],
       [-3.42105263],
       [-2.89473684],
       [...842105],
       [ 2.89473684],
       [ 3.42105263],
       [ 3.94736842],
       [ 4.47368421],
       [ 5.        ]])
alpha      = 0.1
clf1       = Ridge(alpha=2.0, copy_X=True, fit_intercept=True, max_iter=20,
   normalize=False, random_state=None, solver='sag', tol=0.001)
clf2       = Ridge(alpha=2.0, copy_X=True, fit_intercept=True, max_iter=20,
   normalize=False, random_state=None, solver='sag', tol=0.001)
max_iter   = 20
n_samples  = 20
rng        = <mtrand.RandomState object at 0x7fd3f4bc6048>
tol        = 0.001
xmax       = 5
xmin       = -5
y          = array([-2.5       , -2.23684211, -1.97368421, -1.71052632, -1.44736842,
       -1.18421053, -0.92105263, -0.65789474, ...473684,  0.65789474,  0.92105263,  1.18421053,
        1.44736842,  1.71052632,  1.97368421,  2.23684211,  2.5       ])

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_sag.py[0m:473: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/ridge.py[0m:680: in fit
[1m    return super(Ridge, self).fit(X, y, sample_weight=sample_weight)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/ridge.py[0m:499: in fit
[1m    sample_weight=sample_weight)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:129: in _preprocess_data
[1m    X_offset, X_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
[31m[1m____________________ test_sag_classifier_computed_correctly ____________________[0m

[1m    @pytest.mark.filterwarnings('ignore:The max_iter was reached')[0m
[1m    def test_sag_classifier_computed_correctly():[0m
[1m        """tests if the binary classifier is computed correctly"""[0m
[1m        alpha = .1[0m
[1m        n_samples = 50[0m
[1m        n_iter = 50[0m
[1m        tol = .00001[0m
[1m        fit_intercept = True[0m
[1m        X, y = make_blobs(n_samples=n_samples, centers=2, random_state=0,[0m
[1m                          cluster_std=0.1)[0m
[1m        step_size = get_step_size(X, alpha, fit_intercept, classification=True)[0m
[1m        classes = np.unique(y)[0m
[1m        y_tmp = np.ones(n_samples)[0m
[1m        y_tmp[y != classes[1]] = -1[0m
[1m        y = y_tmp[0m
[1m    [0m
[1m        clf1 = LogisticRegression(solver='sag', C=1. / alpha / n_samples,[0m
[1m                                  max_iter=n_iter, tol=tol, random_state=77,[0m
[1m                                  fit_intercept=fit_intercept, multi_class='ovr')[0m
[1m        clf2 = clone(clf1)[0m
[1m    [0m
[1m        clf1.fit(X, y)[0m
[1m>       clf2.fit(sp.csr_matrix(X), y)[0m

X          = array([[ 1.94819226,  1.00310883],
       [ 2.01494983,  1.01990817],
       [ 1.05237385,  4.31595483],
       [ 1.12... 1.08725258],
       [ 0.87141478,  4.16178553],
       [ 2.17314548,  0.87967118],
       [ 0.94147886,  4.31942222]])
alpha      = 0.1
classes    = array([0, 1])
clf1       = LogisticRegression(C=0.2, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=5..., n_jobs=None,
          penalty='l2', random_state=77, solver='sag', tol=1e-05,
          verbose=0, warm_start=False)
clf2       = LogisticRegression(C=0.2, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=5..., n_jobs=None,
          penalty='l2', random_state=77, solver='sag', tol=1e-05,
          verbose=0, warm_start=False)
fit_intercept = True
n_iter     = 50
n_samples  = 50
step_size  = 0.17789783330240927
tol        = 1e-05
y          = array([ 1.,  1., -1., -1.,  1.,  1.,  1.,  1.,  1., -1., -1., -1., -1.,
        1., -1., -1., -1.,  1., -1., -1.,  1.,...,  1., -1.,  1., -1., -1., -1., -1.,  1.,  1., -1.,  1.,
       -1.,  1., -1.,  1.,  1., -1.,  1.,  1., -1.,  1., -1.])
y_tmp      = array([ 1.,  1., -1., -1.,  1.,  1.,  1.,  1.,  1., -1., -1., -1., -1.,
        1., -1., -1., -1.,  1., -1., -1.,  1.,...,  1., -1.,  1., -1., -1., -1., -1.,  1.,  1., -1.,  1.,
       -1.,  1., -1.,  1.,  1., -1.,  1.,  1., -1.,  1., -1.])

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_sag.py[0m:516: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/logistic.py[0m:1306: in fit
[1m    max_squared_sum = row_norms(X, squared=True).max()[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py[0m:86: in row_norms
[1m    norms = csr_row_norms(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:31: TypeError
[31m[1m____________________ test_sag_multiclass_computed_correctly ____________________[0m

[1m    @pytest.mark.filterwarnings('ignore:The max_iter was reached')[0m
[1m    def test_sag_multiclass_computed_correctly():[0m
[1m        """tests if the multiclass classifier is computed correctly"""[0m
[1m        alpha = .1[0m
[1m        n_samples = 20[0m
[1m        tol = .00001[0m
[1m        max_iter = 40[0m
[1m        fit_intercept = True[0m
[1m        X, y = make_blobs(n_samples=n_samples, centers=3, random_state=0,[0m
[1m                          cluster_std=0.1)[0m
[1m        step_size = get_step_size(X, alpha, fit_intercept, classification=True)[0m
[1m        classes = np.unique(y)[0m
[1m    [0m
[1m        clf1 = LogisticRegression(solver='sag', C=1. / alpha / n_samples,[0m
[1m                                  max_iter=max_iter, tol=tol, random_state=77,[0m
[1m                                  fit_intercept=fit_intercept, multi_class='ovr')[0m
[1m        clf2 = clone(clf1)[0m
[1m    [0m
[1m        clf1.fit(X, y)[0m
[1m>       clf2.fit(sp.csr_matrix(X), y)[0m

X          = array([[ 0.99067444,  4.44921468],
       [-1.56563669,  2.88765199],
       [ 1.00757685,  4.21837775],
       [ 2.07... 3.03812025],
       [-1.56169523,  2.93351716],
       [ 2.14171114,  0.82344716],
       [ 1.0206564 ,  4.33715476]])
alpha      = 0.1
classes    = array([0, 1, 2])
clf1       = LogisticRegression(C=0.5, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=4..., n_jobs=None,
          penalty='l2', random_state=77, solver='sag', tol=1e-05,
          verbose=0, warm_start=False)
clf2       = LogisticRegression(C=0.5, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=4..., n_jobs=None,
          penalty='l2', random_state=77, solver='sag', tol=1e-05,
          verbose=0, warm_start=False)
fit_intercept = True
max_iter   = 40
n_samples  = 20
step_size  = 0.18036747726466623
tol        = 1e-05
y          = array([0, 2, 0, 1, 1, 2, 2, 1, 0, 0, 1, 0, 1, 1, 0, 2, 2, 2, 1, 0])

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_sag.py[0m:556: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/logistic.py[0m:1306: in fit
[1m    max_squared_sum = row_norms(X, squared=True).max()[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py[0m:86: in row_norms
[1m    norms = csr_row_norms(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:31: TypeError
[31m[1m___________________________ test_classifier_results ____________________________[0m

[1m    @pytest.mark.filterwarnings('ignore: Default multi_class will')  # 0.22[0m
[1m    def test_classifier_results():[0m
[1m        """tests if classifier results match target"""[0m
[1m        alpha = .1[0m
[1m        n_features = 20[0m
[1m        n_samples = 10[0m
[1m        tol = .01[0m
[1m        max_iter = 200[0m
[1m        rng = np.random.RandomState(0)[0m
[1m        X = rng.normal(size=(n_samples, n_features))[0m
[1m        w = rng.normal(size=n_features)[0m
[1m        y = np.dot(X, w)[0m
[1m        y = np.sign(y)[0m
[1m        clf1 = LogisticRegression(solver='sag', C=1. / alpha / n_samples,[0m
[1m                                  max_iter=max_iter, tol=tol, random_state=77)[0m
[1m        clf2 = clone(clf1)[0m
[1m    [0m
[1m        clf1.fit(X, y)[0m
[1m>       clf2.fit(sp.csr_matrix(X), y)[0m

X          = array([[ 1.76405235,  0.40015721,  0.97873798,  2.2408932 ,  1.86755799,
        -0.97727788,  0.95008842, -0.15135721...5087, -0.03928282, -1.1680935 ,  0.52327666,
        -0.17154633,  0.77179055,  0.82350415,  2.16323595,  1.33652795]])
alpha      = 0.1
clf1       = LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=2...',
          n_jobs=None, penalty='l2', random_state=77, solver='sag',
          tol=0.01, verbose=0, warm_start=False)
clf2       = LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=2...',
          n_jobs=None, penalty='l2', random_state=77, solver='sag',
          tol=0.01, verbose=0, warm_start=False)
max_iter   = 200
n_features = 20
n_samples  = 10
rng        = <mtrand.RandomState object at 0x7fd410943080>
tol        = 0.01
w          = array([-0.36918184, -0.23937918,  1.0996596 ,  0.65526373,  0.64013153,
       -1.61695604, -0.02432612, -0.73803091, ...721822,  0.78632796, -0.4664191 , -0.94444626,
       -0.41004969, -0.01702041,  0.37915174,  2.25930895, -0.04225715])
y          = array([ 1.,  1., -1., -1., -1., -1.,  1., -1.,  1.,  1.])

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_sag.py[0m:614: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/logistic.py[0m:1306: in fit
[1m    max_squared_sum = row_norms(X, squared=True).max()[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py[0m:86: in row_norms
[1m    norms = csr_row_norms(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:31: TypeError
[31m[1m_____________________ test_binary_classifier_class_weight ______________________[0m

[1m    @pytest.mark.filterwarnings('ignore:The max_iter was reached')[0m
[1m    def test_binary_classifier_class_weight():[0m
[1m        """tests binary classifier with classweights for each class"""[0m
[1m        alpha = .1[0m
[1m        n_samples = 50[0m
[1m        n_iter = 20[0m
[1m        tol = .00001[0m
[1m        fit_intercept = True[0m
[1m        X, y = make_blobs(n_samples=n_samples, centers=2, random_state=10,[0m
[1m                          cluster_std=0.1)[0m
[1m        step_size = get_step_size(X, alpha, fit_intercept, classification=True)[0m
[1m        classes = np.unique(y)[0m
[1m        y_tmp = np.ones(n_samples)[0m
[1m        y_tmp[y != classes[1]] = -1[0m
[1m        y = y_tmp[0m
[1m    [0m
[1m        class_weight = {1: .45, -1: .55}[0m
[1m        clf1 = LogisticRegression(solver='sag', C=1. / alpha / n_samples,[0m
[1m                                  max_iter=n_iter, tol=tol, random_state=77,[0m
[1m                                  fit_intercept=fit_intercept, multi_class='ovr',[0m
[1m                                  class_weight=class_weight)[0m
[1m        clf2 = clone(clf1)[0m
[1m    [0m
[1m        clf1.fit(X, y)[0m
[1m>       clf2.fit(sp.csr_matrix(X), y)[0m

X          = array([[ 2.65138571,  5.0749849 ],
       [ 2.64974647,  4.92590476],
       [ 5.55726017, -9.56545968],
       [ 2.66...-9.46465728],
       [ 2.63671478,  4.96388708],
       [ 2.66637991,  4.76290644],
       [ 5.39928807, -9.52364059]])
alpha      = 0.1
class_weight = {-1: 0.55, 1: 0.45}
classes    = array([0, 1])
clf1       = LogisticRegression(C=0.2, class_weight={1: 0.45, -1: 0.55}, dual=False,
          fit_intercept=True, intercept_scalin...lass='ovr', n_jobs=None, penalty='l2', random_state=77,
          solver='sag', tol=1e-05, verbose=0, warm_start=False)
clf2       = LogisticRegression(C=0.2, class_weight={1: 0.45, -1: 0.55}, dual=False,
          fit_intercept=True, intercept_scalin...lass='ovr', n_jobs=None, penalty='l2', random_state=77,
          solver='sag', tol=1e-05, verbose=0, warm_start=False)
fit_intercept = True
n_iter     = 20
n_samples  = 50
step_size  = 0.031637497009352672
tol        = 1e-05
y          = array([ 1.,  1., -1.,  1.,  1.,  1.,  1., -1.,  1., -1., -1.,  1.,  1.,
       -1.,  1., -1., -1., -1.,  1.,  1., -1.,..., -1., -1., -1.,  1.,  1., -1.,  1., -1.,  1., -1., -1.,
       -1.,  1.,  1.,  1.,  1.,  1., -1., -1.,  1.,  1., -1.])
y_tmp      = array([ 1.,  1., -1.,  1.,  1.,  1.,  1., -1.,  1., -1., -1.,  1.,  1.,
       -1.,  1., -1., -1., -1.,  1.,  1., -1.,..., -1., -1., -1.,  1.,  1., -1.,  1., -1.,  1., -1., -1.,
       -1.,  1.,  1.,  1.,  1.,  1., -1., -1.,  1.,  1., -1.])

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_sag.py[0m:645: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/logistic.py[0m:1306: in fit
[1m    max_squared_sum = row_norms(X, squared=True).max()[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py[0m:86: in row_norms
[1m    norms = csr_row_norms(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:31: TypeError
[31m[1m___________________ test_multiclass_classifier_class_weight ____________________[0m

[1m    @pytest.mark.filterwarnings('ignore:The max_iter was reached')[0m
[1m    def test_multiclass_classifier_class_weight():[0m
[1m        """tests multiclass with classweights for each class"""[0m
[1m        alpha = .1[0m
[1m        n_samples = 20[0m
[1m        tol = .00001[0m
[1m        max_iter = 50[0m
[1m        class_weight = {0: .45, 1: .55, 2: .75}[0m
[1m        fit_intercept = True[0m
[1m        X, y = make_blobs(n_samples=n_samples, centers=3, random_state=0,[0m
[1m                          cluster_std=0.1)[0m
[1m        step_size = get_step_size(X, alpha, fit_intercept, classification=True)[0m
[1m        classes = np.unique(y)[0m
[1m    [0m
[1m        clf1 = LogisticRegression(solver='sag', C=1. / alpha / n_samples,[0m
[1m                                  max_iter=max_iter, tol=tol, random_state=77,[0m
[1m                                  fit_intercept=fit_intercept, multi_class='ovr',[0m
[1m                                  class_weight=class_weight)[0m
[1m        clf2 = clone(clf1)[0m
[1m        clf1.fit(X, y)[0m
[1m>       clf2.fit(sp.csr_matrix(X), y)[0m

X          = array([[ 0.99067444,  4.44921468],
       [-1.56563669,  2.88765199],
       [ 1.00757685,  4.21837775],
       [ 2.07... 3.03812025],
       [-1.56169523,  2.93351716],
       [ 2.14171114,  0.82344716],
       [ 1.0206564 ,  4.33715476]])
alpha      = 0.1
class_weight = {0: 0.45, 1: 0.55, 2: 0.75}
classes    = array([0, 1, 2])
clf1       = LogisticRegression(C=0.5, class_weight={0: 0.45, 1: 0.55, 2: 0.75},
          dual=False, fit_intercept=True, intercep...lass='ovr', n_jobs=None, penalty='l2', random_state=77,
          solver='sag', tol=1e-05, verbose=0, warm_start=False)
clf2       = LogisticRegression(C=0.5, class_weight={0: 0.45, 1: 0.55, 2: 0.75},
          dual=False, fit_intercept=True, intercep...lass='ovr', n_jobs=None, penalty='l2', random_state=77,
          solver='sag', tol=1e-05, verbose=0, warm_start=False)
fit_intercept = True
max_iter   = 50
n_samples  = 20
step_size  = 0.18036747726466623
tol        = 1e-05
y          = array([0, 2, 0, 1, 1, 2, 2, 1, 0, 0, 1, 0, 1, 1, 0, 2, 2, 2, 1, 0])

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_sag.py[0m:691: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/logistic.py[0m:1306: in fit
[1m    max_squared_sum = row_norms(X, squared=True).max()[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py[0m:86: in row_norms
[1m    norms = csr_row_norms(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:31: TypeError
[31m[1m____________________________ test_normalize_option _____________________________[0m

[1m    def test_normalize_option():[0m
[1m        # Check that the normalize option in enet works[0m
[1m        X = sp.csc_matrix([[-1], [0], [1]])[0m
[1m        y = [-1, 0, 1][0m
[1m        clf_dense = ElasticNet(fit_intercept=True, normalize=True)[0m
[1m        clf_sparse = ElasticNet(fit_intercept=True, normalize=True)[0m
[1m>       clf_dense.fit(X, y)[0m

X          = <3x1 sparse matrix of type '<class 'numpy.int64'>'
	with 2 stored elements in Compressed Sparse Column format>
clf_dense  = ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
      max_iter=1000, normalize=True, positive=False, precompute=False,
      random_state=None, selection='cyclic', tol=0.0001, warm_start=False)
clf_sparse = ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
      max_iter=1000, normalize=True, positive=False, precompute=False,
      random_state=None, selection='cyclic', tol=0.0001, warm_start=False)
y          = [-1, 0, 1]

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_sparse_coordinate_descent.py[0m:32: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/coordinate_descent.py[0m:721: in fit
[1m    check_input=check_input)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:487: in _pre_fit
[1m    copy=False, return_mean=True, check_input=check_input)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:129: in _preprocess_data
[1m    X_offset, X_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:94: in mean_variance_axis
[1m    return _csc_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:156: TypeError
[31m[1m_______________________________ test_lasso_zero ________________________________[0m

[1m    def test_lasso_zero():[0m
[1m        # Check that the sparse lasso can handle zero data without crashing[0m
[1m        X = sp.csc_matrix((3, 1))[0m
[1m        y = [0, 0, 0][0m
[1m        T = np.array([[1], [2], [3]])[0m
[1m>       clf = Lasso().fit(X, y)[0m

T          = array([[1],
       [2],
       [3]])
X          = <3x1 sparse matrix of type '<class 'numpy.float64'>'
	with 0 stored elements in Compressed Sparse Column format>
y          = [0, 0, 0]

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_sparse_coordinate_descent.py[0m:44: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/coordinate_descent.py[0m:721: in fit
[1m    check_input=check_input)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:487: in _pre_fit
[1m    copy=False, return_mean=True, check_input=check_input)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:129: in _preprocess_data
[1m    X_offset, X_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:94: in mean_variance_axis
[1m    return _csc_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:156: TypeError
[31m[1m___________________________ test_enet_toy_list_input ___________________________[0m

[1m    def test_enet_toy_list_input():[0m
[1m        # Test ElasticNet for various values of alpha and l1_ratio with list X[0m
[1m    [0m
[1m        X = np.array([[-1], [0], [1]])[0m
[1m        X = sp.csc_matrix(X)[0m
[1m        Y = [-1, 0, 1]       # just a straight line[0m
[1m        T = np.array([[2], [3], [4]])  # test sample[0m
[1m    [0m
[1m        # this should be the same as unregularized least squares[0m
[1m        clf = ElasticNet(alpha=0, l1_ratio=1.0)[0m
[1m        # catch warning about alpha=0.[0m
[1m        # this is discouraged but should work.[0m
[1m>       ignore_warnings(clf.fit)(X, Y)[0m

T          = array([[2],
       [3],
       [4]])
X          = <3x1 sparse matrix of type '<class 'numpy.int64'>'
	with 2 stored elements in Compressed Sparse Column format>
Y          = [-1, 0, 1]
clf        = ElasticNet(alpha=0, copy_X=True, fit_intercept=True, l1_ratio=1.0,
      max_iter=1000, normalize=False, positive=False, precompute=False,
      random_state=None, selection='cyclic', tol=0.0001, warm_start=False)

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_sparse_coordinate_descent.py[0m:63: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/testing.py[0m:350: in wrapper
[1m    return fn(*args, **kwargs)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/coordinate_descent.py[0m:721: in fit
[1m    check_input=check_input)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:487: in _pre_fit
[1m    copy=False, return_mean=True, check_input=check_input)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:129: in _preprocess_data
[1m    X_offset, X_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:94: in mean_variance_axis
[1m    return _csc_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:156: TypeError
[31m[1m_____________________ test_enet_toy_explicit_sparse_input ______________________[0m

[1m    def test_enet_toy_explicit_sparse_input():[0m
[1m        # Test ElasticNet for various values of alpha and l1_ratio with sparse X[0m
[1m        f = ignore_warnings[0m
[1m        # training samples[0m
[1m        X = sp.lil_matrix((3, 1))[0m
[1m        X[0, 0] = -1[0m
[1m        # X[1, 0] = 0[0m
[1m        X[2, 0] = 1[0m
[1m        Y = [-1, 0, 1]       # just a straight line (the identity function)[0m
[1m    [0m
[1m        # test samples[0m
[1m        T = sp.lil_matrix((3, 1))[0m
[1m        T[0, 0] = 2[0m
[1m        T[1, 0] = 3[0m
[1m        T[2, 0] = 4[0m
[1m    [0m
[1m        # this should be the same as lasso[0m
[1m        clf = ElasticNet(alpha=0, l1_ratio=1.0)[0m
[1m>       f(clf.fit)(X, Y)[0m

T          = <3x1 sparse matrix of type '<class 'numpy.float64'>'
	with 3 stored elements in LInked List format>
X          = <3x1 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in LInked List format>
Y          = [-1, 0, 1]
clf        = ElasticNet(alpha=0, copy_X=True, fit_intercept=True, l1_ratio=1.0,
      max_iter=1000, normalize=False, positive=False, precompute=False,
      random_state=None, selection='cyclic', tol=0.0001, warm_start=False)
f          = <function ignore_warnings at 0x7fd4027c86a8>

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_sparse_coordinate_descent.py[0m:102: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/testing.py[0m:350: in wrapper
[1m    return fn(*args, **kwargs)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/coordinate_descent.py[0m:721: in fit
[1m    check_input=check_input)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:487: in _pre_fit
[1m    copy=False, return_mean=True, check_input=check_input)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:129: in _preprocess_data
[1m    X_offset, X_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:94: in mean_variance_axis
[1m    return _csc_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:156: TypeError
[31m[1m_____________________ test_sparse_enet_not_as_toy_dataset ______________________[0m

[1m    def test_sparse_enet_not_as_toy_dataset():[0m
[1m        _test_sparse_enet_not_as_toy_dataset(alpha=0.1, fit_intercept=False,[0m
[1m                                             positive=False)[0m
[1m        _test_sparse_enet_not_as_toy_dataset(alpha=0.1, fit_intercept=True,[0m
[1m>                                            positive=False)[0m


[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_sparse_coordinate_descent.py[0m:186: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_sparse_coordinate_descent.py[0m:161: in _test_sparse_enet_not_as_toy_dataset
[1m    s_clf.fit(X_train, y_train)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/coordinate_descent.py[0m:721: in fit
[1m    check_input=check_input)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:487: in _pre_fit
[1m    copy=False, return_mean=True, check_input=check_input)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:129: in _preprocess_data
[1m    X_offset, X_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:94: in mean_variance_axis
[1m    return _csc_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:156: TypeError
[31m[1m____________________________ test_enet_multitarget _____________________________[0m

[1m    def test_enet_multitarget():[0m
[1m        n_targets = 3[0m
[1m        X, y = make_sparse_data(n_targets=n_targets)[0m
[1m    [0m
[1m        estimator = ElasticNet(alpha=0.01, fit_intercept=True, precompute=None)[0m
[1m        # XXX: There is a bug when precompute is not None![0m
[1m>       estimator.fit(X, y)[0m

X          = <100x100 sparse matrix of type '<class 'numpy.float64'>'
	with 4868 stored elements in Compressed Sparse Column format>
estimator  = ElasticNet(alpha=0.01, copy_X=True, fit_intercept=True, l1_ratio=0.5,
      max_iter=1000, normalize=False, positive=False, precompute=None,
      random_state=None, selection='cyclic', tol=0.0001, warm_start=False)
n_targets  = 3
y          = array([[ -1.57698144e+00,  -1.64983984e+00,   1.37173095e+00],
       [ -9.87994208e-01,   9.83699619e-01,   8.9231975...[  3.73260148e-01,   5.37491518e-01,   6.98914825e-02],
       [  1.25211617e+00,   2.35512980e-01,   2.09671630e+00]])

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_sparse_coordinate_descent.py[0m:223: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/coordinate_descent.py[0m:721: in fit
[1m    check_input=check_input)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:487: in _pre_fit
[1m    copy=False, return_mean=True, check_input=check_input)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:129: in _preprocess_data
[1m    X_offset, X_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:94: in mean_variance_axis
[1m    return _csc_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:156: TypeError
[31m[1m_______________ test_same_output_sparse_dense_lasso_and_enet_cv ________________[0m

[1m    def test_same_output_sparse_dense_lasso_and_enet_cv():[0m
[1m        X, y = make_sparse_data(n_samples=40, n_features=10)[0m
[1m        for normalize in [True, False]:[0m
[1m            clfs = ElasticNetCV(max_iter=100, cv=5, normalize=normalize)[0m
[1m>           ignore_warnings(clfs.fit)(X, y)[0m

X          = <40x10 sparse matrix of type '<class 'numpy.float64'>'
	with 216 stored elements in Compressed Sparse Column format>
clfs       = ElasticNetCV(alphas=None, copy_X=True, cv=5, eps=0.001, fit_intercept=True,
       l1_ratio=0.5, max_iter=100, n_alpha...normalize=True, positive=False, precompute='auto',
       random_state=None, selection='cyclic', tol=0.0001, verbose=0)
normalize  = True
y          = array([-2.74027373, -2.22669742, -1.9743981 ,  0.63551339, -1.03176071,
       -2.2151153 ,  2.70455472,  0.7846027 , ...330881, -0.52045518, -3.67679956, -0.30918174,
        0.13658924,  2.21146065,  0.58672127,  2.75087878, -1.5621421 ])

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_sparse_coordinate_descent.py[0m:254: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/testing.py[0m:350: in wrapper
[1m    return fn(*args, **kwargs)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/coordinate_descent.py[0m:1176: in fit
[1m    copy_X=self.copy_X))[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/coordinate_descent.py[0m:102: in _alpha_grid
[1m    return_mean=True)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:129: in _preprocess_data
[1m    X_offset, X_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:94: in mean_variance_axis
[1m    return _csc_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:156: TypeError
[31m[1m____________________ test_same_multiple_output_sparse_dense ____________________[0m

[1m    def test_same_multiple_output_sparse_dense():[0m
[1m        for normalize in [True, False]:[0m
[1m            l = ElasticNet(normalize=normalize)[0m
[1m            X = [[0, 1, 2, 3, 4],[0m
[1m                 [0, 2, 5, 8, 11],[0m
[1m                 [9, 10, 11, 12, 13],[0m
[1m                 [10, 11, 12, 13, 14]][0m
[1m            y = [[1, 2, 3, 4, 5],[0m
[1m                 [1, 3, 6, 9, 12],[0m
[1m                 [10, 11, 12, 13, 14],[0m
[1m                 [11, 12, 13, 14, 15]][0m
[1m            ignore_warnings(l.fit)(X, y)[0m
[1m            sample = np.array([1, 2, 3, 4, 5]).reshape(1, -1)[0m
[1m            predict_dense = l.predict(sample)[0m
[1m    [0m
[1m            l_sp = ElasticNet(normalize=normalize)[0m
[1m            X_sp = sp.coo_matrix(X)[0m
[1m>           ignore_warnings(l_sp.fit)(X_sp, y)[0m

X          = [[0, 1, 2, 3, 4], [0, 2, 5, 8, 11], [9, 10, 11, 12, 13], [10, 11, 12, 13, 14]]
X_sp       = <4x5 sparse matrix of type '<class 'numpy.int64'>'
	with 18 stored elements in COOrdinate format>
l          = ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
      max_iter=1000, normalize=True, positive=False, precompute=False,
      random_state=None, selection='cyclic', tol=0.0001, warm_start=False)
l_sp       = ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
      max_iter=1000, normalize=True, positive=False, precompute=False,
      random_state=None, selection='cyclic', tol=0.0001, warm_start=False)
normalize  = True
predict_dense = array([[ 3.16902833,  4.47208229,  6.07819023,  7.68429816,  9.29040609]])
sample     = array([[1, 2, 3, 4, 5]])
y          = [[1, 2, 3, 4, 5], [1, 3, 6, 9, 12], [10, 11, 12, 13, 14], [11, 12, 13, 14, 15]]

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_sparse_coordinate_descent.py[0m:289: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/testing.py[0m:350: in wrapper
[1m    return fn(*args, **kwargs)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/coordinate_descent.py[0m:721: in fit
[1m    check_input=check_input)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:487: in _pre_fit
[1m    copy=False, return_mean=True, check_input=check_input)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:129: in _preprocess_data
[1m    X_offset, X_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:94: in mean_variance_axis
[1m    return _csc_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:156: TypeError
[31m[1m______________________________ test_sparse_input _______________________________[0m

[1m    def test_sparse_input():[0m
[1m        X = sparse_rand(100, 3, density=0.1, format='csr')[0m
[1m    [0m
[1m        # Should not error[0m
[1m        for eigen_solver in eigen_solvers:[0m
[1m            for path_method in path_methods:[0m
[1m                clf = manifold.Isomap(n_components=2,[0m
[1m                                      eigen_solver=eigen_solver,[0m
[1m                                      path_method=path_method)[0m
[1m>               clf.fit(X)[0m

X          = <100x3 sparse matrix of type '<class 'numpy.float64'>'
	with 30 stored elements in Compressed Sparse Row format>
clf        = Isomap(eigen_solver='auto', max_iter=None, n_components=2, n_jobs=None,
    n_neighbors=5, neighbors_algorithm='auto', path_method='auto', tol=0)
eigen_solver = 'auto'
path_method = 'auto'

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/manifold/tests/test_isomap.py[0m:138: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/manifold/isomap.py[0m:180: in fit
[1m    self._fit_transform(X)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/manifold/isomap.py[0m:130: in _fit_transform
[1m    mode='distance', n_jobs=self.n_jobs)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/graph.py[0m:105: in kneighbors_graph
[1m    return X.kneighbors_graph(X=query, n_neighbors=n_neighbors, mode=mode)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/base.py[0m:542: in kneighbors_graph
[1m    X, n_neighbors, return_distance=True)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = NearestNeighbors(algorithm='auto', leaf_size=30, metric='minkowski',
         metric_params=None, n_jobs=None, n_neighbors=5, p=2, radius=1.0)
X = <100x3 sparse matrix of type '<class 'numpy.float64'>'
	with 30 stored elements in Compressed Sparse Row format>
n_neighbors = 6, return_distance = True

[1m    def kneighbors(self, X=None, n_neighbors=None, return_distance=True):[0m
[1m        """Finds the K-neighbors of a point.[0m
[1m            Returns indices of and distances to the neighbors of each point.[0m
[1m    [0m
[1m            Parameters[0m
[1m            ----------[0m
[1m            X : array-like, shape (n_query, n_features), \[0m
[1m                    or (n_query, n_indexed) if metric == 'precomputed'[0m
[1m                The query point or points.[0m
[1m                If not provided, neighbors of each indexed point are returned.[0m
[1m                In this case, the query point is not considered its own neighbor.[0m
[1m    [0m
[1m            n_neighbors : int[0m
[1m                Number of neighbors to get (default is the value[0m
[1m                passed to the constructor).[0m
[1m    [0m
[1m            return_distance : boolean, optional. Defaults to True.[0m
[1m                If False, distances will not be returned[0m
[1m    [0m
[1m            Returns[0m
[1m            -------[0m
[1m            dist : array[0m
[1m                Array representing the lengths to points, only present if[0m
[1m                return_distance=True[0m
[1m    [0m
[1m            ind : array[0m
[1m                Indices of the nearest points in the population matrix.[0m
[1m    [0m
[1m            Examples[0m
[1m            --------[0m
[1m            In the following example, we construct a NeighborsClassifier[0m
[1m            class from an array representing our data set and ask who's[0m
[1m            the closest point to [1,1,1][0m
[1m    [0m
[1m            >>> samples = [[0., 0., 0.], [0., .5, 0.], [1., 1., .5]][0m
[1m            >>> from sklearn.neighbors import NearestNeighbors[0m
[1m            >>> neigh = NearestNeighbors(n_neighbors=1)[0m
[1m            >>> neigh.fit(samples) # doctest: +ELLIPSIS[0m
[1m            NearestNeighbors(algorithm='auto', leaf_size=30, ...)[0m
[1m            >>> print(neigh.kneighbors([[1., 1., 1.]])) # doctest: +ELLIPSIS[0m
[1m            (array([[0.5]]), array([[2]]))[0m
[1m    [0m
[1m            As you can see, it returns [[0.5]], and [[2]], which means that the[0m
[1m            element is at distance 0.5 and is the third element of samples[0m
[1m            (indexes start at 0). You can also query for multiple points:[0m
[1m    [0m
[1m            >>> X = [[0., 1., 0.], [1., 0., 1.]][0m
[1m            >>> neigh.kneighbors(X, return_distance=False) # doctest: +ELLIPSIS[0m
[1m            array([[1],[0m
[1m                   [2]]...)[0m
[1m    [0m
[1m            """[0m
[1m        check_is_fitted(self, "_fit_method")[0m
[1m    [0m
[1m        if n_neighbors is None:[0m
[1m            n_neighbors = self.n_neighbors[0m
[1m        elif n_neighbors <= 0:[0m
[1m            raise ValueError([0m
[1m                "Expected n_neighbors > 0. Got %d" %[0m
[1m                n_neighbors[0m
[1m            )[0m
[1m        else:[0m
[1m            if not np.issubdtype(type(n_neighbors), np.integer):[0m
[1m                raise TypeError([0m
[1m                    "n_neighbors does not take %s value, "[0m
[1m                    "enter integer value" %[0m
[1m                    type(n_neighbors))[0m
[1m    [0m
[1m        if X is not None:[0m
[1m            query_is_train = False[0m
[1m            X = check_array(X, accept_sparse='csr')[0m
[1m        else:[0m
[1m            query_is_train = True[0m
[1m            X = self._fit_X[0m
[1m            # Include an extra neighbor to account for the sample itself being[0m
[1m            # returned, which is removed later[0m
[1m            n_neighbors += 1[0m
[1m    [0m
[1m        train_size = self._fit_X.shape[0][0m
[1m        if n_neighbors > train_size:[0m
[1m            raise ValueError([0m
[1m                "Expected n_neighbors <= n_samples, "[0m
[1m                " but n_samples = %d, n_neighbors = %d" %[0m
[1m                (train_size, n_neighbors)[0m
[1m            )[0m
[1m        n_samples, _ = X.shape[0m
[1m        sample_range = np.arange(n_samples)[:, None][0m
[1m    [0m
[1m        n_jobs = effective_n_jobs(self.n_jobs)[0m
[1m        if self._fit_method == 'brute':[0m
[1m    [0m
[1m            reduce_func = partial(self._kneighbors_reduce_func,[0m
[1m                                  n_neighbors=n_neighbors,[0m
[1m                                  return_distance=return_distance)[0m
[1m    [0m
[1m            # for efficiency, use squared euclidean distances[0m
[1m            kwds = ({'squared': True} if self.effective_metric_ == 'euclidean'[0m
[1m                    else self.effective_metric_params_)[0m
[1m    [0m
[1m            result = pairwise_distances_chunked([0m
[1m                X, self._fit_X, reduce_func=reduce_func,[0m
[1m                metric=self.effective_metric_, n_jobs=n_jobs,[0m
[1m                **kwds)[0m
[1m    [0m
[1m        elif self._fit_method in ['ball_tree', 'kd_tree']:[0m
[1m            if issparse(X):[0m
[1m                raise ValueError([0m
[1m                    "%s does not work with sparse matrices. Densify the data, "[0m
[1m                    "or set algorithm='brute'" % self._fit_method)[0m
[1m            if LooseVersion(joblib_version) < LooseVersion('0.12'):[0m
[1m                # Deal with change of API in joblib[0m
[1m                delayed_query = delayed(self._tree.query,[0m
[1m                                        check_pickle=False)[0m
[1m                parallel_kwargs = {"backend": "threading"}[0m
[1m            else:[0m
[1m                delayed_query = delayed(self._tree.query)[0m
[1m                parallel_kwargs = {"prefer": "threads"}[0m
[1m            result = Parallel(n_jobs, **parallel_kwargs)([0m
[1m                delayed_query([0m
[1m                    X[s], n_neighbors, return_distance)[0m
[1m                for s in gen_even_slices(X.shape[0], n_jobs)[0m
[1m            )[0m
[1m        else:[0m
[1m            raise ValueError("internal: _fit_method not recognized")[0m
[1m    [0m
[1m        if return_distance:[0m
[1m>           dist, neigh_ind = zip(*result)[0m
[31m[1mE           TypeError: type object argument after * must be a sequence, not generator[0m

X          = <100x3 sparse matrix of type '<class 'numpy.float64'>'
	with 30 stored elements in Compressed Sparse Row format>
_          = 3
kwds       = {'squared': True}
n_jobs     = 1
n_neighbors = 6
n_samples  = 100
query_is_train = True
reduce_func = functools.partial(<bound method NearestNeighbors._kneighbors_reduce_func of NearestNeighbors(algorithm='auto', leaf_si...wski',
         metric_params=None, n_jobs=None, n_neighbors=5, p=2, radius=1.0)>, return_distance=True, n_neighbors=6)
result     = <generator object pairwise_distances_chunked at 0x7fd4106c9318>
return_distance = True
sample_range = array([[ 0],
       [ 1],
       [ 2],
       [ 3],
       [ 4],
       [ 5],
       [ 6],
       [ 7],
       [ 8],
 ...,
       [91],
       [92],
       [93],
       [94],
       [95],
       [96],
       [97],
       [98],
       [99]])
self       = NearestNeighbors(algorithm='auto', leaf_size=30, metric='minkowski',
         metric_params=None, n_jobs=None, n_neighbors=5, p=2, radius=1.0)
train_size = 100

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/base.py[0m:443: TypeError
[31m[1m_____________________________ test_fit_csr_matrix ______________________________[0m

[1m    def test_fit_csr_matrix():[0m
[1m        # X can be a sparse matrix.[0m
[1m        random_state = check_random_state(0)[0m
[1m        X = random_state.randn(100, 2)[0m
[1m        X[(np.random.randint(0, 100, 50), np.random.randint(0, 2, 50))] = 0.0[0m
[1m        X_csr = sp.csr_matrix(X)[0m
[1m        tsne = TSNE(n_components=2, perplexity=10, learning_rate=100.0,[0m
[1m                    random_state=0, method='exact')[0m
[1m>       X_embedded = tsne.fit_transform(X_csr)[0m

X          = array([[ 0.        ,  0.40015721],
       [ 0.97873798,  2.2408932 ],
       [ 1.86755799, -0.97727788],
       [ 0.95...-1.1680935 ],
       [ 0.52327666, -0.17154633],
       [ 0.        ,  0.        ],
       [ 2.16323595,  0.        ]])
X_csr      = <100x2 sparse matrix of type '<class 'numpy.float64'>'
	with 158 stored elements in Compressed Sparse Row format>
random_state = <mtrand.RandomState object at 0x7fd410905128>
tsne       = TSNE(angle=0.5, early_exaggeration=12.0, init='random', learning_rate=100.0,
   method='exact', metric='euclidean', mi...d_norm=1e-07, n_components=2,
   n_iter=1000, n_iter_without_progress=300, perplexity=10, random_state=0,
   verbose=0)

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/manifold/tests/test_t_sne.py[0m:280: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/manifold/t_sne.py[0m:894: in fit_transform
[1m    embedding = self._fit(X)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/manifold/t_sne.py[0m:724: in _fit
[1m    squared=True)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:1402: in pairwise_distances
[1m    return _parallel_pairwise(X, Y, func, n_jobs, **kwds)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:1069: in _parallel_pairwise
[1m    return func(X, Y, **kwds)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:234: in euclidean_distances
[1m    XX = row_norms(X, squared=True)[:, np.newaxis][0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py[0m:86: in row_norms
[1m    norms = csr_row_norms(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:31: TypeError
[31m[1m_______________________________ test_silhouette ________________________________[0m

[1m    def test_silhouette():[0m
[1m        # Tests the Silhouette Coefficient.[0m
[1m        dataset = datasets.load_iris()[0m
[1m        X_dense = dataset.data[0m
[1m        X_csr = csr_matrix(X_dense)[0m
[1m        X_dok = sp.dok_matrix(X_dense)[0m
[1m        X_lil = sp.lil_matrix(X_dense)[0m
[1m        y = dataset.target[0m
[1m    [0m
[1m        for X in [X_dense, X_csr, X_dok, X_lil]:[0m
[1m>           D = pairwise_distances(X, metric='euclidean')[0m

D          = array([[ 0.        ,  0.53851648,  0.50990195, ...,  4.45982062,
         4.65080638,  4.14004831],
       [ 0.5385164...   ,  0.76811457],
       [ 4.14004831,  4.15331193,  4.29883705, ...,  0.64031242,
         0.76811457,  0.        ]])
X          = <150x4 sparse matrix of type '<class 'numpy.float64'>'
	with 600 stored elements in Compressed Sparse Row format>
X_csr      = <150x4 sparse matrix of type '<class 'numpy.float64'>'
	with 600 stored elements in Compressed Sparse Row format>
X_dense    = array([[ 5.1,  3.5,  1.4,  0.2],
       [ 4.9,  3. ,  1.4,  0.2],
       [ 4.7,  3.2,  1.3,  0.2],
       [ 4.6,  3.1,...  2.5,  5. ,  1.9],
       [ 6.5,  3. ,  5.2,  2. ],
       [ 6.2,  3.4,  5.4,  2.3],
       [ 5.9,  3. ,  5.1,  1.8]])
X_dok      = <150x4 sparse matrix of type '<class 'numpy.float64'>'
	with 600 stored elements in Dictionary Of Keys format>
X_lil      = <150x4 sparse matrix of type '<class 'numpy.float64'>'
	with 600 stored elements in LInked List format>
dataset    = {'target_names': array(['setosa', 'versicolor', 'virginica'], 
      dtype='<U10'), 'feature_names': ['sepal length (c...eseman et al"s AUTOCLASS II\n     conceptual clustering system finds 3 classes in the data.\n   - Many, many more ...'}
score_dense_with_sampling = 0.4391351898567129
score_dense_without_sampling = 0.5034774406932957
score_euclidean = 0.4391351898567129
score_precomputed = 0.4391351898567129
y          = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,...       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2])

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/cluster/tests/test_unsupervised.py[0m:30: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:1402: in pairwise_distances
[1m    return _parallel_pairwise(X, Y, func, n_jobs, **kwds)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:1069: in _parallel_pairwise
[1m    return func(X, Y, **kwds)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:234: in euclidean_distances
[1m    XX = row_norms(X, squared=True)[:, np.newaxis][0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py[0m:86: in row_norms
[1m    norms = csr_row_norms(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:31: TypeError
[31m[1m___________________________ test_pairwise_distances ____________________________[0m

[1m    def test_pairwise_distances():[0m
[1m        # Test the pairwise_distance helper function.[0m
[1m        rng = np.random.RandomState(0)[0m
[1m        # Euclidean distance should be equivalent to calling the function.[0m
[1m        X = rng.random_sample((5, 4))[0m
[1m        S = pairwise_distances(X, metric="euclidean")[0m
[1m        S2 = euclidean_distances(X)[0m
[1m        assert_array_almost_equal(S, S2)[0m
[1m        # Euclidean distance, with Y != X.[0m
[1m        Y = rng.random_sample((2, 4))[0m
[1m        S = pairwise_distances(X, Y, metric="euclidean")[0m
[1m        S2 = euclidean_distances(X, Y)[0m
[1m        assert_array_almost_equal(S, S2)[0m
[1m        # Test with tuples as X and Y[0m
[1m        X_tuples = tuple([tuple([v for v in row]) for row in X])[0m
[1m        Y_tuples = tuple([tuple([v for v in row]) for row in Y])[0m
[1m        S2 = pairwise_distances(X_tuples, Y_tuples, metric="euclidean")[0m
[1m        assert_array_almost_equal(S, S2)[0m
[1m        # "cityblock" uses scikit-learn metric, cityblock (function) is[0m
[1m        # scipy.spatial.[0m
[1m        S = pairwise_distances(X, metric="cityblock")[0m
[1m        S2 = pairwise_distances(X, metric=cityblock)[0m
[1m        assert_equal(S.shape[0], S.shape[1])[0m
[1m        assert_equal(S.shape[0], X.shape[0])[0m
[1m        assert_array_almost_equal(S, S2)[0m
[1m        # The manhattan metric should be equivalent to cityblock.[0m
[1m        S = pairwise_distances(X, Y, metric="manhattan")[0m
[1m        S2 = pairwise_distances(X, Y, metric=cityblock)[0m
[1m        assert_equal(S.shape[0], X.shape[0])[0m
[1m        assert_equal(S.shape[1], Y.shape[0])[0m
[1m        assert_array_almost_equal(S, S2)[0m
[1m        # Using size_threshold argument should raise[0m
[1m        # a deprecation warning[0m
[1m        assert_warns(DeprecationWarning,[0m
[1m                     manhattan_distances, X, Y, size_threshold=10)[0m
[1m        # Test cosine as a string metric versus cosine callable[0m
[1m        # The string "cosine" uses sklearn.metric,[0m
[1m        # while the function cosine is scipy.spatial[0m
[1m        S = pairwise_distances(X, Y, metric="cosine")[0m
[1m        S2 = pairwise_distances(X, Y, metric=cosine)[0m
[1m        assert_equal(S.shape[0], X.shape[0])[0m
[1m        assert_equal(S.shape[1], Y.shape[0])[0m
[1m        assert_array_almost_equal(S, S2)[0m
[1m        # Test with sparse X and Y,[0m
[1m        # currently only supported for Euclidean, L1 and cosine.[0m
[1m        X_sparse = csr_matrix(X)[0m
[1m        Y_sparse = csr_matrix(Y)[0m
[1m>       S = pairwise_distances(X_sparse, Y_sparse, metric="euclidean")[0m

S          = array([[ 0.03990445,  0.1990705 ],
       [ 0.06548875,  0.0591883 ],
       [ 0.0739297 ,  0.40251451],
       [ 0.17759942,  0.40421509],
       [ 0.22718654,  0.11404092]])
S2         = array([[ 0.03990445,  0.1990705 ],
       [ 0.06548875,  0.0591883 ],
       [ 0.0739297 ,  0.40251451],
       [ 0.17759942,  0.40421509],
       [ 0.22718654,  0.11404092]])
X          = array([[ 0.5488135 ,  0.71518937,  0.60276338,  0.54488318],
       [ 0.4236548 ,  0.64589411,  0.43758721,  0.891773 ...    [ 0.56804456,  0.92559664,  0.07103606,  0.0871293 ],
       [ 0.0202184 ,  0.83261985,  0.77815675,  0.87001215]])
X_sparse   = <5x4 sparse matrix of type '<class 'numpy.float64'>'
	with 20 stored elements in Compressed Sparse Row format>
X_tuples   = ((0.54881350392732475, 0.71518936637241948, 0.60276337607164387, 0.54488318299689686), (0.42365479933890471, 0.6458941...8197886942, 0.087129299701540708), (0.020218397440325719, 0.832619845547938, 0.77815675094985048, 0.87001214824681916))
Y          = array([[ 0.97861834,  0.79915856,  0.46147936,  0.78052918],
       [ 0.11827443,  0.63992102,  0.14335329,  0.94466892]])
Y_sparse   = <2x4 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>
Y_tuples   = ((0.978618342232764, 0.7991585642167236, 0.46147936225293185, 0.78052917628645546), (0.11827442586893322, 0.63992102132752382, 0.1433532874090464, 0.94466891704958389))
rng        = <mtrand.RandomState object at 0x7fd3f4c3d2e8>

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/tests/test_pairwise.py[0m:103: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:1402: in pairwise_distances
[1m    return _parallel_pairwise(X, Y, func, n_jobs, **kwds)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:1069: in _parallel_pairwise
[1m    return func(X, Y, **kwds)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:234: in euclidean_distances
[1m    XX = row_norms(X, squared=True)[:, np.newaxis][0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py[0m:86: in row_norms
[1m    norms = csr_row_norms(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:31: TypeError
[31m[1m__________________________ test_pairwise_kernels[rbf] __________________________[0m

metric = 'rbf'

[1m    @pytest.mark.parametrize([0m
[1m            'metric',[0m
[1m            ["rbf", "laplacian", "sigmoid", "polynomial", "linear",[0m
[1m             "chi2", "additive_chi2"])[0m
[1m    def test_pairwise_kernels(metric):[0m
[1m        # Test the pairwise_kernels helper function.[0m
[1m    [0m
[1m        rng = np.random.RandomState(0)[0m
[1m        X = rng.random_sample((5, 4))[0m
[1m        Y = rng.random_sample((2, 4))[0m
[1m        function = PAIRWISE_KERNEL_FUNCTIONS[metric][0m
[1m        # Test with Y=None[0m
[1m        K1 = pairwise_kernels(X, metric=metric)[0m
[1m        K2 = function(X)[0m
[1m        assert_array_almost_equal(K1, K2)[0m
[1m        # Test with Y=Y[0m
[1m        K1 = pairwise_kernels(X, Y=Y, metric=metric)[0m
[1m        K2 = function(X, Y=Y)[0m
[1m        assert_array_almost_equal(K1, K2)[0m
[1m        # Test with tuples as X and Y[0m
[1m        X_tuples = tuple([tuple([v for v in row]) for row in X])[0m
[1m        Y_tuples = tuple([tuple([v for v in row]) for row in Y])[0m
[1m        K2 = pairwise_kernels(X_tuples, Y_tuples, metric=metric)[0m
[1m        assert_array_almost_equal(K1, K2)[0m
[1m    [0m
[1m        # Test with sparse X and Y[0m
[1m        X_sparse = csr_matrix(X)[0m
[1m        Y_sparse = csr_matrix(Y)[0m
[1m        if metric in ["chi2", "additive_chi2"]:[0m
[1m            # these don't support sparse matrices yet[0m
[1m            assert_raises(ValueError, pairwise_kernels,[0m
[1m                          X_sparse, Y=Y_sparse, metric=metric)[0m
[1m            return[0m
[1m>       K1 = pairwise_kernels(X_sparse, Y=Y_sparse, metric=metric)[0m

K1         = array([[ 0.93536513,  0.86894202],
       [ 0.91749776,  0.9553609 ],
       [ 0.91726709,  0.70933364],
       [ 0.81509411,  0.77404372],
       [ 0.77337945,  0.89241481]])
K2         = array([[ 0.93536513,  0.86894202],
       [ 0.91749776,  0.9553609 ],
       [ 0.91726709,  0.70933364],
       [ 0.81509411,  0.77404372],
       [ 0.77337945,  0.89241481]])
X          = array([[ 0.5488135 ,  0.71518937,  0.60276338,  0.54488318],
       [ 0.4236548 ,  0.64589411,  0.43758721,  0.891773 ...    [ 0.56804456,  0.92559664,  0.07103606,  0.0871293 ],
       [ 0.0202184 ,  0.83261985,  0.77815675,  0.87001215]])
X_sparse   = <5x4 sparse matrix of type '<class 'numpy.float64'>'
	with 20 stored elements in Compressed Sparse Row format>
X_tuples   = ((0.54881350392732475, 0.71518936637241948, 0.60276337607164387, 0.54488318299689686), (0.42365479933890471, 0.6458941...8197886942, 0.087129299701540708), (0.020218397440325719, 0.832619845547938, 0.77815675094985048, 0.87001214824681916))
Y          = array([[ 0.97861834,  0.79915856,  0.46147936,  0.78052918],
       [ 0.11827443,  0.63992102,  0.14335329,  0.94466892]])
Y_sparse   = <2x4 sparse matrix of type '<class 'numpy.float64'>'
	with 8 stored elements in Compressed Sparse Row format>
Y_tuples   = ((0.978618342232764, 0.7991585642167236, 0.46147936225293185, 0.78052917628645546), (0.11827442586893322, 0.63992102132752382, 0.1433532874090464, 0.94466891704958389))
function   = <function rbf_kernel at 0x7fd3ff9566a8>
metric     = 'rbf'
rng        = <mtrand.RandomState object at 0x7fd410650400>

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/tests/test_pairwise.py[0m:267: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:1559: in pairwise_kernels
[1m    return _parallel_pairwise(X, Y, func, n_jobs, **kwds)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:1069: in _parallel_pairwise
[1m    return func(X, Y, **kwds)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:823: in rbf_kernel
[1m    K = euclidean_distances(X, Y, squared=True)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:234: in euclidean_distances
[1m    XX = row_norms(X, squared=True)[:, np.newaxis][0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py[0m:86: in row_norms
[1m    norms = csr_row_norms(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:31: TypeError
[31m[1m_____________ test_paired_distances[l2-paired_euclidean_distances] _____________[0m

metric = 'l2', func = <function paired_euclidean_distances at 0x7fd3ff9562f0>

[1m    @pytest.mark.parametrize('metric, func', iteritems(PAIRED_DISTANCES))[0m
[1m    def test_paired_distances(metric, func):[0m
[1m        # Test the pairwise_distance helper function.[0m
[1m        rng = np.random.RandomState(0)[0m
[1m        # Euclidean distance should be equivalent to calling the function.[0m
[1m        X = rng.random_sample((5, 4))[0m
[1m        # Euclidean distance, with Y != X.[0m
[1m        Y = rng.random_sample((5, 4))[0m
[1m    [0m
[1m        S = paired_distances(X, Y, metric=metric)[0m
[1m        S2 = func(X, Y)[0m
[1m        assert_array_almost_equal(S, S2)[0m
[1m>       S3 = func(csr_matrix(X), csr_matrix(Y))[0m

S          = array([ 0.51698475,  0.42739259,  0.7309401 ,  0.6513463 ,  0.67799396])
S2         = array([ 0.51698475,  0.42739259,  0.7309401 ,  0.6513463 ,  0.67799396])
X          = array([[ 0.5488135 ,  0.71518937,  0.60276338,  0.54488318],
       [ 0.4236548 ,  0.64589411,  0.43758721,  0.891773 ...    [ 0.56804456,  0.92559664,  0.07103606,  0.0871293 ],
       [ 0.0202184 ,  0.83261985,  0.77815675,  0.87001215]])
Y          = array([[ 0.97861834,  0.79915856,  0.46147936,  0.78052918],
       [ 0.11827443,  0.63992102,  0.14335329,  0.9446689...    [ 0.45615033,  0.56843395,  0.0187898 ,  0.6176355 ],
       [ 0.61209572,  0.616934  ,  0.94374808,  0.6818203 ]])
func       = <function paired_euclidean_distances at 0x7fd3ff9562f0>
metric     = 'l2'
rng        = <mtrand.RandomState object at 0x7fd3f4c754a8>

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/tests/test_pairwise.py[0m:314: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:581: in paired_euclidean_distances
[1m    return row_norms(X - Y)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py[0m:86: in row_norms
[1m    norms = csr_row_norms(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:31: TypeError
[31m[1m____________ test_paired_distances[cosine-paired_cosine_distances] _____________[0m

metric = 'cosine', func = <function paired_cosine_distances at 0x7fd3ff956400>

[1m    @pytest.mark.parametrize('metric, func', iteritems(PAIRED_DISTANCES))[0m
[1m    def test_paired_distances(metric, func):[0m
[1m        # Test the pairwise_distance helper function.[0m
[1m        rng = np.random.RandomState(0)[0m
[1m        # Euclidean distance should be equivalent to calling the function.[0m
[1m        X = rng.random_sample((5, 4))[0m
[1m        # Euclidean distance, with Y != X.[0m
[1m        Y = rng.random_sample((5, 4))[0m
[1m    [0m
[1m        S = paired_distances(X, Y, metric=metric)[0m
[1m        S2 = func(X, Y)[0m
[1m        assert_array_almost_equal(S, S2)[0m
[1m>       S3 = func(csr_matrix(X), csr_matrix(Y))[0m

S          = array([ 0.03990445,  0.0591883 ,  0.137955  ,  0.19443128,  0.11023879])
S2         = array([ 0.03990445,  0.0591883 ,  0.137955  ,  0.19443128,  0.11023879])
X          = array([[ 0.5488135 ,  0.71518937,  0.60276338,  0.54488318],
       [ 0.4236548 ,  0.64589411,  0.43758721,  0.891773 ...    [ 0.56804456,  0.92559664,  0.07103606,  0.0871293 ],
       [ 0.0202184 ,  0.83261985,  0.77815675,  0.87001215]])
Y          = array([[ 0.97861834,  0.79915856,  0.46147936,  0.78052918],
       [ 0.11827443,  0.63992102,  0.14335329,  0.9446689...    [ 0.45615033,  0.56843395,  0.0187898 ,  0.6176355 ],
       [ 0.61209572,  0.616934  ,  0.94374808,  0.6818203 ]])
func       = <function paired_cosine_distances at 0x7fd3ff956400>
metric     = 'cosine'
rng        = <mtrand.RandomState object at 0x7fd41077ca58>

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/tests/test_pairwise.py[0m:314: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:630: in paired_cosine_distances
[1m    return .5 * row_norms(normalize(X) - normalize(Y), squared=True)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py[0m:86: in row_norms
[1m    norms = csr_row_norms(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:31: TypeError
[31m[1m_________ test_paired_distances[euclidean-paired_euclidean_distances] __________[0m

metric = 'euclidean'
func = <function paired_euclidean_distances at 0x7fd3ff9562f0>

[1m    @pytest.mark.parametrize('metric, func', iteritems(PAIRED_DISTANCES))[0m
[1m    def test_paired_distances(metric, func):[0m
[1m        # Test the pairwise_distance helper function.[0m
[1m        rng = np.random.RandomState(0)[0m
[1m        # Euclidean distance should be equivalent to calling the function.[0m
[1m        X = rng.random_sample((5, 4))[0m
[1m        # Euclidean distance, with Y != X.[0m
[1m        Y = rng.random_sample((5, 4))[0m
[1m    [0m
[1m        S = paired_distances(X, Y, metric=metric)[0m
[1m        S2 = func(X, Y)[0m
[1m        assert_array_almost_equal(S, S2)[0m
[1m>       S3 = func(csr_matrix(X), csr_matrix(Y))[0m

S          = array([ 0.51698475,  0.42739259,  0.7309401 ,  0.6513463 ,  0.67799396])
S2         = array([ 0.51698475,  0.42739259,  0.7309401 ,  0.6513463 ,  0.67799396])
X          = array([[ 0.5488135 ,  0.71518937,  0.60276338,  0.54488318],
       [ 0.4236548 ,  0.64589411,  0.43758721,  0.891773 ...    [ 0.56804456,  0.92559664,  0.07103606,  0.0871293 ],
       [ 0.0202184 ,  0.83261985,  0.77815675,  0.87001215]])
Y          = array([[ 0.97861834,  0.79915856,  0.46147936,  0.78052918],
       [ 0.11827443,  0.63992102,  0.14335329,  0.9446689...    [ 0.45615033,  0.56843395,  0.0187898 ,  0.6176355 ],
       [ 0.61209572,  0.616934  ,  0.94374808,  0.6818203 ]])
func       = <function paired_euclidean_distances at 0x7fd3ff9562f0>
metric     = 'euclidean'
rng        = <mtrand.RandomState object at 0x7fd3f534f320>

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/tests/test_pairwise.py[0m:314: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:581: in paired_euclidean_distances
[1m    return row_norms(X - Y)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py[0m:86: in row_norms
[1m    norms = csr_row_norms(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:31: TypeError
[31m[1m______________________ test_pairwise_distances_argmin_min ______________________[0m

[1m    def test_pairwise_distances_argmin_min():[0m
[1m        # Check pairwise minimum distances computation for any metric[0m
[1m        X = [[0], [1]][0m
[1m        Y = [[-1], [2]][0m
[1m    [0m
[1m        Xsp = dok_matrix(X)[0m
[1m        Ysp = csr_matrix(Y, dtype=np.float32)[0m
[1m    [0m
[1m        # euclidean metric[0m
[1m        D, E = pairwise_distances_argmin_min(X, Y, metric="euclidean")[0m
[1m        D2 = pairwise_distances_argmin(X, Y, metric="euclidean")[0m
[1m        assert_array_almost_equal(D, [0, 1])[0m
[1m        assert_array_almost_equal(D2, [0, 1])[0m
[1m        assert_array_almost_equal(D, [0, 1])[0m
[1m        assert_array_almost_equal(E, [1., 1.])[0m
[1m    [0m
[1m        # sparse matrix case[0m
[1m>       Dsp, Esp = pairwise_distances_argmin_min(Xsp, Ysp, metric="euclidean")[0m

D          = array([0, 1])
D2         = array([0, 1])
E          = array([ 1.,  1.])
X          = [[0], [1]]
Xsp        = <2x1 sparse matrix of type '<class 'numpy.int64'>'
	with 1 stored elements in Dictionary Of Keys format>
Y          = [[-1], [2]]
Ysp        = <2x1 sparse matrix of type '<class 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/tests/test_pairwise.py[0m:360: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

X = <2x1 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>
Y = <2x1 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>
axis = 1, metric = 'euclidean', batch_size = None, metric_kwargs = {}

[1m    def pairwise_distances_argmin_min(X, Y, axis=1, metric="euclidean",[0m
[1m                                      batch_size=None, metric_kwargs=None):[0m
[1m        """Compute minimum distances between one point and a set of points.[0m
[1m    [0m
[1m        This function computes for each row in X, the index of the row of Y which[0m
[1m        is closest (according to the specified distance). The minimal distances are[0m
[1m        also returned.[0m
[1m    [0m
[1m        This is mostly equivalent to calling:[0m
[1m    [0m
[1m            (pairwise_distances(X, Y=Y, metric=metric).argmin(axis=axis),[0m
[1m             pairwise_distances(X, Y=Y, metric=metric).min(axis=axis))[0m
[1m    [0m
[1m        but uses much less memory, and is faster for large arrays.[0m
[1m    [0m
[1m        Parameters[0m
[1m        ----------[0m
[1m        X : {array-like, sparse matrix}, shape (n_samples1, n_features)[0m
[1m            Array containing points.[0m
[1m    [0m
[1m        Y : {array-like, sparse matrix}, shape (n_samples2, n_features)[0m
[1m            Arrays containing points.[0m
[1m    [0m
[1m        axis : int, optional, default 1[0m
[1m            Axis along which the argmin and distances are to be computed.[0m
[1m    [0m
[1m        metric : string or callable, default 'euclidean'[0m
[1m            metric to use for distance computation. Any metric from scikit-learn[0m
[1m            or scipy.spatial.distance can be used.[0m
[1m    [0m
[1m            If metric is a callable function, it is called on each[0m
[1m            pair of instances (rows) and the resulting value recorded. The callable[0m
[1m            should take two arrays as input and return one value indicating the[0m
[1m            distance between them. This works for Scipy's metrics, but is less[0m
[1m            efficient than passing the metric name as a string.[0m
[1m    [0m
[1m            Distance matrices are not supported.[0m
[1m    [0m
[1m            Valid values for metric are:[0m
[1m    [0m
[1m            - from scikit-learn: ['cityblock', 'cosine', 'euclidean', 'l1', 'l2',[0m
[1m              'manhattan'][0m
[1m    [0m
[1m            - from scipy.spatial.distance: ['braycurtis', 'canberra', 'chebyshev',[0m
[1m              'correlation', 'dice', 'hamming', 'jaccard', 'kulsinski',[0m
[1m              'mahalanobis', 'minkowski', 'rogerstanimoto', 'russellrao',[0m
[1m              'seuclidean', 'sokalmichener', 'sokalsneath', 'sqeuclidean',[0m
[1m              'yule'][0m
[1m    [0m
[1m            See the documentation for scipy.spatial.distance for details on these[0m
[1m            metrics.[0m
[1m    [0m
[1m        batch_size : integer[0m
[1m            .. deprecated:: 0.20[0m
[1m                Deprecated for removal in 0.22.[0m
[1m                Use sklearn.set_config(working_memory=...) instead.[0m
[1m    [0m
[1m        metric_kwargs : dict, optional[0m
[1m            Keyword arguments to pass to specified metric function.[0m
[1m    [0m
[1m        Returns[0m
[1m        -------[0m
[1m        argmin : numpy.ndarray[0m
[1m            Y[argmin[i], :] is the row in Y that is closest to X[i, :].[0m
[1m    [0m
[1m        distances : numpy.ndarray[0m
[1m            distances[i] is the distance between the i-th row in X and the[0m
[1m            argmin[i]-th row in Y.[0m
[1m    [0m
[1m        See also[0m
[1m        --------[0m
[1m        sklearn.metrics.pairwise_distances[0m
[1m        sklearn.metrics.pairwise_distances_argmin[0m
[1m        """[0m
[1m        if batch_size is not None:[0m
[1m            warnings.warn("'batch_size' is ignored. It was deprecated in version "[0m
[1m                          "0.20 and will be removed in version 0.22. "[0m
[1m                          "Use sklearn.set_config(working_memory=...) instead.",[0m
[1m                          DeprecationWarning)[0m
[1m        X, Y = check_pairwise_arrays(X, Y)[0m
[1m    [0m
[1m        if metric_kwargs is None:[0m
[1m            metric_kwargs = {}[0m
[1m    [0m
[1m        if axis == 0:[0m
[1m            X, Y = Y, X[0m
[1m    [0m
[1m        indices, values = zip(*pairwise_distances_chunked([0m
[1m            X, Y, reduce_func=_argmin_min_reduce, metric=metric,[0m
[1m>           **metric_kwargs))[0m
[31m[1mE       TypeError: type object argument after * must be a sequence, not generator[0m

X          = <2x1 sparse matrix of type '<class 'numpy.float64'>'
	with 1 stored elements in Compressed Sparse Row format>
Y          = <2x1 sparse matrix of type '<class 'numpy.float64'>'
	with 2 stored elements in Compressed Sparse Row format>
axis       = 1
batch_size = None
metric     = 'euclidean'
metric_kwargs = {}

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:356: TypeError
[31m[1m___________________________ test_euclidean_distances ___________________________[0m

[1m    def test_euclidean_distances():[0m
[1m        # Check the pairwise Euclidean distances computation[0m
[1m        X = [[0]][0m
[1m        Y = [[1], [2]][0m
[1m        D = euclidean_distances(X, Y)[0m
[1m        assert_array_almost_equal(D, [[1., 2.]])[0m
[1m    [0m
[1m        X = csr_matrix(X)[0m
[1m        Y = csr_matrix(Y)[0m
[1m>       D = euclidean_distances(X, Y)[0m

D          = array([[ 1.,  2.]])
X          = <1x1 sparse matrix of type '<class 'numpy.int64'>'
	with 0 stored elements in Compressed Sparse Row format>
Y          = <2x1 sparse matrix of type '<class 'numpy.int64'>'
	with 2 stored elements in Compressed Sparse Row format>

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/tests/test_pairwise.py[0m:532: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:234: in euclidean_distances
[1m    XX = row_norms(X, squared=True)[:, np.newaxis][0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py[0m:86: in row_norms
[1m    norms = csr_row_norms(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:31: TypeError
[31m[1m________________________ test_kernel_sparse[rbf_kernel] ________________________[0m

kernel = <function rbf_kernel at 0x7fd3ff9566a8>

[1m    @pytest.mark.parametrize([0m
[1m            'kernel',[0m
[1m            (linear_kernel, polynomial_kernel, rbf_kernel,[0m
[1m             laplacian_kernel, sigmoid_kernel, cosine_similarity))[0m
[1m    def test_kernel_sparse(kernel):[0m
[1m        rng = np.random.RandomState(0)[0m
[1m        X = rng.random_sample((5, 4))[0m
[1m        X_sparse = csr_matrix(X)[0m
[1m        K = kernel(X, X)[0m
[1m>       K2 = kernel(X_sparse, X_sparse)[0m

K          = array([[ 1.        ,  0.95885007,  0.92355062,  0.87439033,  0.89814963],
       [ 0.95885007,  1.        ,  0.8569325...963,  0.74732968,  1.        ,  0.70087841],
       [ 0.89814963,  0.92448159,  0.73926534,  0.70087841,  1.        ]])
X          = array([[ 0.5488135 ,  0.71518937,  0.60276338,  0.54488318],
       [ 0.4236548 ,  0.64589411,  0.43758721,  0.891773 ...    [ 0.56804456,  0.92559664,  0.07103606,  0.0871293 ],
       [ 0.0202184 ,  0.83261985,  0.77815675,  0.87001215]])
X_sparse   = <5x4 sparse matrix of type '<class 'numpy.float64'>'
	with 20 stored elements in Compressed Sparse Row format>
kernel     = <function rbf_kernel at 0x7fd3ff9566a8>
rng        = <mtrand.RandomState object at 0x7fd410810c18>

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/tests/test_pairwise.py[0m:684: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:823: in rbf_kernel
[1m    K = euclidean_distances(X, Y, squared=True)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:234: in euclidean_distances
[1m    XX = row_norms(X, squared=True)[:, np.newaxis][0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py[0m:86: in row_norms
[1m    norms = csr_row_norms(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:31: TypeError
[31m[1m____________________________ test_cross_val_predict ____________________________[0m

[1m    @pytest.mark.filterwarnings('ignore: Default solver will be changed')  # 0.22[0m
[1m    @pytest.mark.filterwarnings('ignore: Default multi_class will')  # 0.22[0m
[1m    @pytest.mark.filterwarnings('ignore: You should specify a value')  # 0.22[0m
[1m    def test_cross_val_predict():[0m
[1m        boston = load_boston()[0m
[1m        X, y = boston.data, boston.target[0m
[1m        cv = KFold()[0m
[1m    [0m
[1m        est = Ridge()[0m
[1m    [0m
[1m        # Naive loop (should be same as cross_val_predict):[0m
[1m        preds2 = np.zeros_like(y)[0m
[1m        for train, test in cv.split(X, y):[0m
[1m            est.fit(X[train], y[train])[0m
[1m            preds2[test] = est.predict(X[test])[0m
[1m    [0m
[1m        preds = cross_val_predict(est, X, y, cv=cv)[0m
[1m        assert_array_almost_equal(preds, preds2)[0m
[1m    [0m
[1m        preds = cross_val_predict(est, X, y)[0m
[1m        assert_equal(len(preds), len(y))[0m
[1m    [0m
[1m        cv = LeaveOneOut()[0m
[1m        preds = cross_val_predict(est, X, y, cv=cv)[0m
[1m        assert_equal(len(preds), len(y))[0m
[1m    [0m
[1m        Xsp = X.copy()[0m
[1m        Xsp *= (Xsp > np.median(Xsp))[0m
[1m        Xsp = coo_matrix(Xsp)[0m
[1m>       preds = cross_val_predict(est, Xsp, y)[0m

X          = array([[  6.32000000e-03,   1.80000000e+01,   2.31000000e+00, ...,
          1.53000000e+01,   3.96900000e+02,   4.980....74100000e-02,   0.00000000e+00,   1.19300000e+01, ...,
          2.10000000e+01,   3.96900000e+02,   7.88000000e+00]])
Xsp        = <506x13 sparse matrix of type '<class 'numpy.float64'>'
	with 3289 stored elements in COOrdinate format>
boston     = {'data': array([[  6.32000000e-03,   1.80000000e+01,   2.31000000e+00, ...,
          1.53000000e+01,   3.96900000e+02...dtype='<U7'), 'filename': '/home/travis/build/scikit-learn/scikit-learn/sklearn/datasets/data/boston_house_prices.csv'}
cv         = LeaveOneOut()
est        = Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
   normalize=False, random_state=None, solver='auto', tol=0.001)
preds      = array([ 30.35880423,  24.84051784,  30.48260093,  28.84173193,
        28.05481573,  25.3881856 ,  22.9589976 ,  19.06...34686,  18.61912718,
        20.65247431,  23.97520435,  22.74821516,  28.03191731,
        26.54783727,  22.89984438])
preds2     = array([  31.26457399,   24.0390198 ,   29.54407187,   28.78193563,
         27.5350344 ,   25.64567352,   22.46881089,...  15.75653097,
         19.70484257,   25.82816744,   21.42509527,   29.06015656,
         27.17272727,   20.33380663])
test       = array([338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350,
       351, 352, 353, 354, 355, 356, 357, 358,..., 484, 485, 486, 487, 488, 489, 490, 491, 492, 493,
       494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505])
train      = array([  0,   1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,
        13,  14,  15,  16,  17,  18,  19,  20,..., 316, 317, 318, 319, 320, 321, 322, 323, 324,
       325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337])
y          = array([ 24. ,  21.6,  34.7,  33.4,  36.2,  28.7,  22.9,  27.1,  16.5,
        18.9,  15. ,  18.9,  21.7,  20.4,  18.2,... 13.6,  20.1,  21.8,  24.5,
        23.1,  19.7,  18.3,  21.2,  17.5,  16.8,  22.4,  20.6,  23.9,
        22. ,  11.9])

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/model_selection/tests/test_validation.py[0m:822: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/model_selection/_validation.py[0m:777: in cross_val_predict
[1m    for train, test in cv.split(X, y, groups))[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/parallel.py[0m:983: in __call__
[1m    if self.dispatch_one_batch(iterator):[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/parallel.py[0m:825: in dispatch_one_batch
[1m    self._dispatch(tasks)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/parallel.py[0m:782: in _dispatch
[1m    job = self._backend.apply_async(batch, callback=cb)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/_parallel_backends.py[0m:182: in apply_async
[1m    result = ImmediateResult(func)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/_parallel_backends.py[0m:545: in __init__
[1m    self.results = batch()[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/parallel.py[0m:261: in __call__
[1m    for func, args, kwargs in self.items][0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/parallel.py[0m:261: in <listcomp>
[1m    for func, args, kwargs in self.items][0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/model_selection/_validation.py[0m:850: in _fit_and_predict
[1m    estimator.fit(X_train, y_train, **fit_params)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/ridge.py[0m:680: in fit
[1m    return super(Ridge, self).fit(X, y, sample_weight=sample_weight)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/ridge.py[0m:499: in fit
[1m    sample_weight=sample_weight)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:129: in _preprocess_data
[1m    X_offset, X_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
[31m[1m________________________ test_novelty_true_common_tests ________________________[0m

[1m    @pytest.mark.filterwarnings([0m
[1m        'ignore:default contamination parameter 0.1:FutureWarning')[0m
[1m    # XXX: Remove in 0.22[0m
[1m    def test_novelty_true_common_tests():[0m
[1m    [0m
[1m        # the common tests are run for the default LOF (novelty=False).[0m
[1m        # here we run these common tests for LOF when novelty=True[0m
[1m>       check_estimator(neighbors.LocalOutlierFactor(novelty=True))[0m


[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/tests/test_lof.py[0m:246: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/estimator_checks.py[0m:303: in check_estimator
[1m    check(name, estimator)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/estimator_checks.py[0m:506: in check_estimator_sparse_data
[1m    estimator.fit(X, y)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/lof.py[0m:257: in fit
[1m    self.kneighbors(None, n_neighbors=self.n_neighbors_))[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = LocalOutlierFactor(algorithm='auto', contamination='legacy', leaf_size=30,
          metric='minkowski', metric_params=None, n_jobs=None,
          n_neighbors=20, novelty=True, p=2)
X = <40x10 sparse matrix of type '<class 'numpy.float64'>'
	with 74 stored elements in Compressed Sparse Row format>
n_neighbors = 21, return_distance = True

[1m    def kneighbors(self, X=None, n_neighbors=None, return_distance=True):[0m
[1m        """Finds the K-neighbors of a point.[0m
[1m            Returns indices of and distances to the neighbors of each point.[0m
[1m    [0m
[1m            Parameters[0m
[1m            ----------[0m
[1m            X : array-like, shape (n_query, n_features), \[0m
[1m                    or (n_query, n_indexed) if metric == 'precomputed'[0m
[1m                The query point or points.[0m
[1m                If not provided, neighbors of each indexed point are returned.[0m
[1m                In this case, the query point is not considered its own neighbor.[0m
[1m    [0m
[1m            n_neighbors : int[0m
[1m                Number of neighbors to get (default is the value[0m
[1m                passed to the constructor).[0m
[1m    [0m
[1m            return_distance : boolean, optional. Defaults to True.[0m
[1m                If False, distances will not be returned[0m
[1m    [0m
[1m            Returns[0m
[1m            -------[0m
[1m            dist : array[0m
[1m                Array representing the lengths to points, only present if[0m
[1m                return_distance=True[0m
[1m    [0m
[1m            ind : array[0m
[1m                Indices of the nearest points in the population matrix.[0m
[1m    [0m
[1m            Examples[0m
[1m            --------[0m
[1m            In the following example, we construct a NeighborsClassifier[0m
[1m            class from an array representing our data set and ask who's[0m
[1m            the closest point to [1,1,1][0m
[1m    [0m
[1m            >>> samples = [[0., 0., 0.], [0., .5, 0.], [1., 1., .5]][0m
[1m            >>> from sklearn.neighbors import NearestNeighbors[0m
[1m            >>> neigh = NearestNeighbors(n_neighbors=1)[0m
[1m            >>> neigh.fit(samples) # doctest: +ELLIPSIS[0m
[1m            NearestNeighbors(algorithm='auto', leaf_size=30, ...)[0m
[1m            >>> print(neigh.kneighbors([[1., 1., 1.]])) # doctest: +ELLIPSIS[0m
[1m            (array([[0.5]]), array([[2]]))[0m
[1m    [0m
[1m            As you can see, it returns [[0.5]], and [[2]], which means that the[0m
[1m            element is at distance 0.5 and is the third element of samples[0m
[1m            (indexes start at 0). You can also query for multiple points:[0m
[1m    [0m
[1m            >>> X = [[0., 1., 0.], [1., 0., 1.]][0m
[1m            >>> neigh.kneighbors(X, return_distance=False) # doctest: +ELLIPSIS[0m
[1m            array([[1],[0m
[1m                   [2]]...)[0m
[1m    [0m
[1m            """[0m
[1m        check_is_fitted(self, "_fit_method")[0m
[1m    [0m
[1m        if n_neighbors is None:[0m
[1m            n_neighbors = self.n_neighbors[0m
[1m        elif n_neighbors <= 0:[0m
[1m            raise ValueError([0m
[1m                "Expected n_neighbors > 0. Got %d" %[0m
[1m                n_neighbors[0m
[1m            )[0m
[1m        else:[0m
[1m            if not np.issubdtype(type(n_neighbors), np.integer):[0m
[1m                raise TypeError([0m
[1m                    "n_neighbors does not take %s value, "[0m
[1m                    "enter integer value" %[0m
[1m                    type(n_neighbors))[0m
[1m    [0m
[1m        if X is not None:[0m
[1m            query_is_train = False[0m
[1m            X = check_array(X, accept_sparse='csr')[0m
[1m        else:[0m
[1m            query_is_train = True[0m
[1m            X = self._fit_X[0m
[1m            # Include an extra neighbor to account for the sample itself being[0m
[1m            # returned, which is removed later[0m
[1m            n_neighbors += 1[0m
[1m    [0m
[1m        train_size = self._fit_X.shape[0][0m
[1m        if n_neighbors > train_size:[0m
[1m            raise ValueError([0m
[1m                "Expected n_neighbors <= n_samples, "[0m
[1m                " but n_samples = %d, n_neighbors = %d" %[0m
[1m                (train_size, n_neighbors)[0m
[1m            )[0m
[1m        n_samples, _ = X.shape[0m
[1m        sample_range = np.arange(n_samples)[:, None][0m
[1m    [0m
[1m        n_jobs = effective_n_jobs(self.n_jobs)[0m
[1m        if self._fit_method == 'brute':[0m
[1m    [0m
[1m            reduce_func = partial(self._kneighbors_reduce_func,[0m
[1m                                  n_neighbors=n_neighbors,[0m
[1m                                  return_distance=return_distance)[0m
[1m    [0m
[1m            # for efficiency, use squared euclidean distances[0m
[1m            kwds = ({'squared': True} if self.effective_metric_ == 'euclidean'[0m
[1m                    else self.effective_metric_params_)[0m
[1m    [0m
[1m            result = pairwise_distances_chunked([0m
[1m                X, self._fit_X, reduce_func=reduce_func,[0m
[1m                metric=self.effective_metric_, n_jobs=n_jobs,[0m
[1m                **kwds)[0m
[1m    [0m
[1m        elif self._fit_method in ['ball_tree', 'kd_tree']:[0m
[1m            if issparse(X):[0m
[1m                raise ValueError([0m
[1m                    "%s does not work with sparse matrices. Densify the data, "[0m
[1m                    "or set algorithm='brute'" % self._fit_method)[0m
[1m            if LooseVersion(joblib_version) < LooseVersion('0.12'):[0m
[1m                # Deal with change of API in joblib[0m
[1m                delayed_query = delayed(self._tree.query,[0m
[1m                                        check_pickle=False)[0m
[1m                parallel_kwargs = {"backend": "threading"}[0m
[1m            else:[0m
[1m                delayed_query = delayed(self._tree.query)[0m
[1m                parallel_kwargs = {"prefer": "threads"}[0m
[1m            result = Parallel(n_jobs, **parallel_kwargs)([0m
[1m                delayed_query([0m
[1m                    X[s], n_neighbors, return_distance)[0m
[1m                for s in gen_even_slices(X.shape[0], n_jobs)[0m
[1m            )[0m
[1m        else:[0m
[1m            raise ValueError("internal: _fit_method not recognized")[0m
[1m    [0m
[1m        if return_distance:[0m
[1m>           dist, neigh_ind = zip(*result)[0m
[31m[1mE           TypeError: type object argument after * must be a sequence, not generator[0m

X          = <40x10 sparse matrix of type '<class 'numpy.float64'>'
	with 74 stored elements in Compressed Sparse Row format>
_          = 10
kwds       = {'squared': True}
n_jobs     = 1
n_neighbors = 21
n_samples  = 40
query_is_train = True
reduce_func = functools.partial(<bound method LocalOutlierFactor._kneighbors_reduce_func of LocalOutlierFactor(algorithm='auto', con..., metric_params=None, n_jobs=None,
          n_neighbors=20, novelty=True, p=2)>, return_distance=True, n_neighbors=21)
result     = <generator object pairwise_distances_chunked at 0x7fd4107e0ca8>
return_distance = True
sample_range = array([[ 0],
       [ 1],
       [ 2],
       [ 3],
       [ 4],
       [ 5],
       [ 6],
       [ 7],
       [ 8],
 ...,
       [31],
       [32],
       [33],
       [34],
       [35],
       [36],
       [37],
       [38],
       [39]])
self       = LocalOutlierFactor(algorithm='auto', contamination='legacy', leaf_size=30,
          metric='minkowski', metric_params=None, n_jobs=None,
          n_neighbors=20, novelty=True, p=2)
train_size = 40

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/base.py[0m:443: TypeError
----------------------------- Captured stdout call -----------------------------
Estimator LocalOutlierFactor doesn't seem to fail gracefully on sparse data: error message state explicitly that sparse input is not supported if this is not the case.
[31m[1m___________________________ test_classification_toy ____________________________[0m

[1m    def test_classification_toy():[0m
[1m        # Check classification on a toy dataset, including sparse versions.[0m
[1m        clf = NearestCentroid()[0m
[1m        clf.fit(X, y)[0m
[1m        assert_array_equal(clf.predict(T), true_result)[0m
[1m    [0m
[1m        # Same test, but with a sparse matrix to fit and test.[0m
[1m        clf = NearestCentroid()[0m
[1m        clf.fit(X_csr, y)[0m
[1m>       assert_array_equal(clf.predict(T_csr), true_result)[0m

clf        = NearestCentroid(metric='euclidean', shrink_threshold=None)

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/tests/test_nearest_centroid.py[0m:40: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/nearest_centroid.py[0m:194: in predict
[1m    X, self.centroids_, metric=self.metric).argmin(axis=1)][0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:1402: in pairwise_distances
[1m    return _parallel_pairwise(X, Y, func, n_jobs, **kwds)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:1069: in _parallel_pairwise
[1m    return func(X, Y, **kwds)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:234: in euclidean_distances
[1m    XX = row_norms(X, squared=True)[:, np.newaxis][0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py[0m:86: in row_norms
[1m    norms = csr_row_norms(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:31: TypeError
[31m[1m______________________ test_kneighbors_classifier_sparse _______________________[0m

n_samples = 40, n_features = 5, n_test_pts = 10, n_neighbors = 5
random_state = 0

[1m    def test_kneighbors_classifier_sparse(n_samples=40,[0m
[1m                                          n_features=5,[0m
[1m                                          n_test_pts=10,[0m
[1m                                          n_neighbors=5,[0m
[1m                                          random_state=0):[0m
[1m        # Test k-NN classifier on sparse matrices[0m
[1m        # Like the above, but with various types of sparse matrices[0m
[1m        rng = np.random.RandomState(random_state)[0m
[1m        X = 2 * rng.rand(n_samples, n_features) - 1[0m
[1m        X *= X > .2[0m
[1m        y = ((X ** 2).sum(axis=1) < .5).astype(np.int)[0m
[1m    [0m
[1m        for sparsemat in SPARSE_TYPES:[0m
[1m            knn = neighbors.KNeighborsClassifier(n_neighbors=n_neighbors,[0m
[1m                                                 algorithm='auto')[0m
[1m            knn.fit(sparsemat(X), y)[0m
[1m            epsilon = 1e-5 * (2 * rng.rand(1, n_features) - 1)[0m
[1m            for sparsev in SPARSE_TYPES + (np.asarray,):[0m
[1m                X_eps = sparsev(X[:n_test_pts] + epsilon)[0m
[1m>               y_pred = knn.predict(X_eps)[0m

X          = array([[ 0.        ,  0.43037873,  0.20552675,  0.        , -0.        ],
       [ 0.29178823, -0.        ,  0.783546 ...   , -0.        ,  0.88874478,  0.47910159],
       [-0.        , -0.        , -0.        , -0.        , -0.        ]])
X_eps      = <10x5 sparse matrix of type '<class 'numpy.float64'>'
	with 50 stored elements (blocksize = 1x1) in Block Sparse Row format>
epsilon    = array([[ -3.76408236e-06,   3.92686978e-06,  -2.44496321e-06,
         -6.40792645e-06,  -9.50642543e-06]])
knn        = KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=None, n_neighbors=5, p=2,
           weights='uniform')
n_features = 5
n_neighbors = 5
n_samples  = 40
n_test_pts = 10
random_state = 0
rng        = <mtrand.RandomState object at 0x7fd4105bc2b0>
sparsemat  = <class 'scipy.sparse.bsr.bsr_matrix'>
sparsev    = <class 'scipy.sparse.bsr.bsr_matrix'>
y          = array([1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0,
       0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1])

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/tests/test_neighbors.py[0m:526: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/classification.py[0m:149: in predict
[1m    neigh_dist, neigh_ind = self.kneighbors(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=None, n_neighbors=5, p=2,
           weights='uniform')
X = <10x5 sparse matrix of type '<class 'numpy.float64'>'
	with 50 stored elements in Compressed Sparse Row format>
n_neighbors = 5, return_distance = True

[1m    def kneighbors(self, X=None, n_neighbors=None, return_distance=True):[0m
[1m        """Finds the K-neighbors of a point.[0m
[1m            Returns indices of and distances to the neighbors of each point.[0m
[1m    [0m
[1m            Parameters[0m
[1m            ----------[0m
[1m            X : array-like, shape (n_query, n_features), \[0m
[1m                    or (n_query, n_indexed) if metric == 'precomputed'[0m
[1m                The query point or points.[0m
[1m                If not provided, neighbors of each indexed point are returned.[0m
[1m                In this case, the query point is not considered its own neighbor.[0m
[1m    [0m
[1m            n_neighbors : int[0m
[1m                Number of neighbors to get (default is the value[0m
[1m                passed to the constructor).[0m
[1m    [0m
[1m            return_distance : boolean, optional. Defaults to True.[0m
[1m                If False, distances will not be returned[0m
[1m    [0m
[1m            Returns[0m
[1m            -------[0m
[1m            dist : array[0m
[1m                Array representing the lengths to points, only present if[0m
[1m                return_distance=True[0m
[1m    [0m
[1m            ind : array[0m
[1m                Indices of the nearest points in the population matrix.[0m
[1m    [0m
[1m            Examples[0m
[1m            --------[0m
[1m            In the following example, we construct a NeighborsClassifier[0m
[1m            class from an array representing our data set and ask who's[0m
[1m            the closest point to [1,1,1][0m
[1m    [0m
[1m            >>> samples = [[0., 0., 0.], [0., .5, 0.], [1., 1., .5]][0m
[1m            >>> from sklearn.neighbors import NearestNeighbors[0m
[1m            >>> neigh = NearestNeighbors(n_neighbors=1)[0m
[1m            >>> neigh.fit(samples) # doctest: +ELLIPSIS[0m
[1m            NearestNeighbors(algorithm='auto', leaf_size=30, ...)[0m
[1m            >>> print(neigh.kneighbors([[1., 1., 1.]])) # doctest: +ELLIPSIS[0m
[1m            (array([[0.5]]), array([[2]]))[0m
[1m    [0m
[1m            As you can see, it returns [[0.5]], and [[2]], which means that the[0m
[1m            element is at distance 0.5 and is the third element of samples[0m
[1m            (indexes start at 0). You can also query for multiple points:[0m
[1m    [0m
[1m            >>> X = [[0., 1., 0.], [1., 0., 1.]][0m
[1m            >>> neigh.kneighbors(X, return_distance=False) # doctest: +ELLIPSIS[0m
[1m            array([[1],[0m
[1m                   [2]]...)[0m
[1m    [0m
[1m            """[0m
[1m        check_is_fitted(self, "_fit_method")[0m
[1m    [0m
[1m        if n_neighbors is None:[0m
[1m            n_neighbors = self.n_neighbors[0m
[1m        elif n_neighbors <= 0:[0m
[1m            raise ValueError([0m
[1m                "Expected n_neighbors > 0. Got %d" %[0m
[1m                n_neighbors[0m
[1m            )[0m
[1m        else:[0m
[1m            if not np.issubdtype(type(n_neighbors), np.integer):[0m
[1m                raise TypeError([0m
[1m                    "n_neighbors does not take %s value, "[0m
[1m                    "enter integer value" %[0m
[1m                    type(n_neighbors))[0m
[1m    [0m
[1m        if X is not None:[0m
[1m            query_is_train = False[0m
[1m            X = check_array(X, accept_sparse='csr')[0m
[1m        else:[0m
[1m            query_is_train = True[0m
[1m            X = self._fit_X[0m
[1m            # Include an extra neighbor to account for the sample itself being[0m
[1m            # returned, which is removed later[0m
[1m            n_neighbors += 1[0m
[1m    [0m
[1m        train_size = self._fit_X.shape[0][0m
[1m        if n_neighbors > train_size:[0m
[1m            raise ValueError([0m
[1m                "Expected n_neighbors <= n_samples, "[0m
[1m                " but n_samples = %d, n_neighbors = %d" %[0m
[1m                (train_size, n_neighbors)[0m
[1m            )[0m
[1m        n_samples, _ = X.shape[0m
[1m        sample_range = np.arange(n_samples)[:, None][0m
[1m    [0m
[1m        n_jobs = effective_n_jobs(self.n_jobs)[0m
[1m        if self._fit_method == 'brute':[0m
[1m    [0m
[1m            reduce_func = partial(self._kneighbors_reduce_func,[0m
[1m                                  n_neighbors=n_neighbors,[0m
[1m                                  return_distance=return_distance)[0m
[1m    [0m
[1m            # for efficiency, use squared euclidean distances[0m
[1m            kwds = ({'squared': True} if self.effective_metric_ == 'euclidean'[0m
[1m                    else self.effective_metric_params_)[0m
[1m    [0m
[1m            result = pairwise_distances_chunked([0m
[1m                X, self._fit_X, reduce_func=reduce_func,[0m
[1m                metric=self.effective_metric_, n_jobs=n_jobs,[0m
[1m                **kwds)[0m
[1m    [0m
[1m        elif self._fit_method in ['ball_tree', 'kd_tree']:[0m
[1m            if issparse(X):[0m
[1m                raise ValueError([0m
[1m                    "%s does not work with sparse matrices. Densify the data, "[0m
[1m                    "or set algorithm='brute'" % self._fit_method)[0m
[1m            if LooseVersion(joblib_version) < LooseVersion('0.12'):[0m
[1m                # Deal with change of API in joblib[0m
[1m                delayed_query = delayed(self._tree.query,[0m
[1m                                        check_pickle=False)[0m
[1m                parallel_kwargs = {"backend": "threading"}[0m
[1m            else:[0m
[1m                delayed_query = delayed(self._tree.query)[0m
[1m                parallel_kwargs = {"prefer": "threads"}[0m
[1m            result = Parallel(n_jobs, **parallel_kwargs)([0m
[1m                delayed_query([0m
[1m                    X[s], n_neighbors, return_distance)[0m
[1m                for s in gen_even_slices(X.shape[0], n_jobs)[0m
[1m            )[0m
[1m        else:[0m
[1m            raise ValueError("internal: _fit_method not recognized")[0m
[1m    [0m
[1m        if return_distance:[0m
[1m>           dist, neigh_ind = zip(*result)[0m
[31m[1mE           TypeError: type object argument after * must be a sequence, not generator[0m

X          = <10x5 sparse matrix of type '<class 'numpy.float64'>'
	with 50 stored elements in Compressed Sparse Row format>
_          = 5
kwds       = {'squared': True}
n_jobs     = 1
n_neighbors = 5
n_samples  = 10
query_is_train = False
reduce_func = functools.partial(<bound method KNeighborsClassifier._kneighbors_reduce_func of KNeighborsClassifier(algorithm='auto',...tric_params=None, n_jobs=None, n_neighbors=5, p=2,
           weights='uniform')>, return_distance=True, n_neighbors=5)
result     = <generator object pairwise_distances_chunked at 0x7fd4106ba948>
return_distance = True
sample_range = array([[0],
       [1],
       [2],
       [3],
       [4],
       [5],
       [6],
       [7],
       [8],
       [9]])
self       = KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=None, n_neighbors=5, p=2,
           weights='uniform')
train_size = 40

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/base.py[0m:443: TypeError
[31m[1m_______________________ test_kneighbors_regressor_sparse _______________________[0m

n_samples = 40, n_features = 5, n_test_pts = 10, n_neighbors = 5
random_state = 0

[1m    def test_kneighbors_regressor_sparse(n_samples=40,[0m
[1m                                         n_features=5,[0m
[1m                                         n_test_pts=10,[0m
[1m                                         n_neighbors=5,[0m
[1m                                         random_state=0):[0m
[1m        # Test radius-based regression on sparse matrices[0m
[1m        # Like the above, but with various types of sparse matrices[0m
[1m        rng = np.random.RandomState(random_state)[0m
[1m        X = 2 * rng.rand(n_samples, n_features) - 1[0m
[1m        y = ((X ** 2).sum(axis=1) < .25).astype(np.int)[0m
[1m    [0m
[1m        for sparsemat in SPARSE_TYPES:[0m
[1m            knn = neighbors.KNeighborsRegressor(n_neighbors=n_neighbors,[0m
[1m                                                algorithm='auto')[0m
[1m            knn.fit(sparsemat(X), y)[0m
[1m    [0m
[1m            knn_pre = neighbors.KNeighborsRegressor(n_neighbors=n_neighbors,[0m
[1m                                                    metric='precomputed')[0m
[1m            knn_pre.fit(pairwise_distances(X, metric='euclidean'), y)[0m
[1m    [0m
[1m            for sparsev in SPARSE_OR_DENSE:[0m
[1m                X2 = sparsev(X)[0m
[1m>               assert_true(np.mean(knn.predict(X2).round() == y) > 0.95)[0m

X          = array([[ 0.09762701,  0.43037873,  0.20552675,  0.08976637, -0.1526904 ],
       [ 0.29178823, -0.12482558,  0.783546 ...25 , -0.62761399,  0.88874478,  0.47910159],
       [-0.01908238, -0.54517074, -0.49128704, -0.88394168, -0.13116675]])
X2         = <40x5 sparse matrix of type '<class 'numpy.float64'>'
	with 200 stored elements (blocksize = 1x1) in Block Sparse Row format>
knn        = KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
          metric_params=None, n_jobs=None, n_neighbors=5, p=2,
          weights='uniform')
knn_pre    = KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='precomputed',
          metric_params=None, n_jobs=None, n_neighbors=5, p=2,
          weights='uniform')
n_features = 5
n_neighbors = 5
n_samples  = 40
n_test_pts = 10
random_state = 0
rng        = <mtrand.RandomState object at 0x7fd410770978>
sparsemat  = <class 'scipy.sparse.bsr.bsr_matrix'>
sparsev    = <class 'scipy.sparse.bsr.bsr_matrix'>
y          = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/tests/test_neighbors.py[0m:776: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/regression.py[0m:157: in predict
[1m    neigh_dist, neigh_ind = self.kneighbors(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
          metric_params=None, n_jobs=None, n_neighbors=5, p=2,
          weights='uniform')
X = <40x5 sparse matrix of type '<class 'numpy.float64'>'
	with 200 stored elements in Compressed Sparse Row format>
n_neighbors = 5, return_distance = True

[1m    def kneighbors(self, X=None, n_neighbors=None, return_distance=True):[0m
[1m        """Finds the K-neighbors of a point.[0m
[1m            Returns indices of and distances to the neighbors of each point.[0m
[1m    [0m
[1m            Parameters[0m
[1m            ----------[0m
[1m            X : array-like, shape (n_query, n_features), \[0m
[1m                    or (n_query, n_indexed) if metric == 'precomputed'[0m
[1m                The query point or points.[0m
[1m                If not provided, neighbors of each indexed point are returned.[0m
[1m                In this case, the query point is not considered its own neighbor.[0m
[1m    [0m
[1m            n_neighbors : int[0m
[1m                Number of neighbors to get (default is the value[0m
[1m                passed to the constructor).[0m
[1m    [0m
[1m            return_distance : boolean, optional. Defaults to True.[0m
[1m                If False, distances will not be returned[0m
[1m    [0m
[1m            Returns[0m
[1m            -------[0m
[1m            dist : array[0m
[1m                Array representing the lengths to points, only present if[0m
[1m                return_distance=True[0m
[1m    [0m
[1m            ind : array[0m
[1m                Indices of the nearest points in the population matrix.[0m
[1m    [0m
[1m            Examples[0m
[1m            --------[0m
[1m            In the following example, we construct a NeighborsClassifier[0m
[1m            class from an array representing our data set and ask who's[0m
[1m            the closest point to [1,1,1][0m
[1m    [0m
[1m            >>> samples = [[0., 0., 0.], [0., .5, 0.], [1., 1., .5]][0m
[1m            >>> from sklearn.neighbors import NearestNeighbors[0m
[1m            >>> neigh = NearestNeighbors(n_neighbors=1)[0m
[1m            >>> neigh.fit(samples) # doctest: +ELLIPSIS[0m
[1m            NearestNeighbors(algorithm='auto', leaf_size=30, ...)[0m
[1m            >>> print(neigh.kneighbors([[1., 1., 1.]])) # doctest: +ELLIPSIS[0m
[1m            (array([[0.5]]), array([[2]]))[0m
[1m    [0m
[1m            As you can see, it returns [[0.5]], and [[2]], which means that the[0m
[1m            element is at distance 0.5 and is the third element of samples[0m
[1m            (indexes start at 0). You can also query for multiple points:[0m
[1m    [0m
[1m            >>> X = [[0., 1., 0.], [1., 0., 1.]][0m
[1m            >>> neigh.kneighbors(X, return_distance=False) # doctest: +ELLIPSIS[0m
[1m            array([[1],[0m
[1m                   [2]]...)[0m
[1m    [0m
[1m            """[0m
[1m        check_is_fitted(self, "_fit_method")[0m
[1m    [0m
[1m        if n_neighbors is None:[0m
[1m            n_neighbors = self.n_neighbors[0m
[1m        elif n_neighbors <= 0:[0m
[1m            raise ValueError([0m
[1m                "Expected n_neighbors > 0. Got %d" %[0m
[1m                n_neighbors[0m
[1m            )[0m
[1m        else:[0m
[1m            if not np.issubdtype(type(n_neighbors), np.integer):[0m
[1m                raise TypeError([0m
[1m                    "n_neighbors does not take %s value, "[0m
[1m                    "enter integer value" %[0m
[1m                    type(n_neighbors))[0m
[1m    [0m
[1m        if X is not None:[0m
[1m            query_is_train = False[0m
[1m            X = check_array(X, accept_sparse='csr')[0m
[1m        else:[0m
[1m            query_is_train = True[0m
[1m            X = self._fit_X[0m
[1m            # Include an extra neighbor to account for the sample itself being[0m
[1m            # returned, which is removed later[0m
[1m            n_neighbors += 1[0m
[1m    [0m
[1m        train_size = self._fit_X.shape[0][0m
[1m        if n_neighbors > train_size:[0m
[1m            raise ValueError([0m
[1m                "Expected n_neighbors <= n_samples, "[0m
[1m                " but n_samples = %d, n_neighbors = %d" %[0m
[1m                (train_size, n_neighbors)[0m
[1m            )[0m
[1m        n_samples, _ = X.shape[0m
[1m        sample_range = np.arange(n_samples)[:, None][0m
[1m    [0m
[1m        n_jobs = effective_n_jobs(self.n_jobs)[0m
[1m        if self._fit_method == 'brute':[0m
[1m    [0m
[1m            reduce_func = partial(self._kneighbors_reduce_func,[0m
[1m                                  n_neighbors=n_neighbors,[0m
[1m                                  return_distance=return_distance)[0m
[1m    [0m
[1m            # for efficiency, use squared euclidean distances[0m
[1m            kwds = ({'squared': True} if self.effective_metric_ == 'euclidean'[0m
[1m                    else self.effective_metric_params_)[0m
[1m    [0m
[1m            result = pairwise_distances_chunked([0m
[1m                X, self._fit_X, reduce_func=reduce_func,[0m
[1m                metric=self.effective_metric_, n_jobs=n_jobs,[0m
[1m                **kwds)[0m
[1m    [0m
[1m        elif self._fit_method in ['ball_tree', 'kd_tree']:[0m
[1m            if issparse(X):[0m
[1m                raise ValueError([0m
[1m                    "%s does not work with sparse matrices. Densify the data, "[0m
[1m                    "or set algorithm='brute'" % self._fit_method)[0m
[1m            if LooseVersion(joblib_version) < LooseVersion('0.12'):[0m
[1m                # Deal with change of API in joblib[0m
[1m                delayed_query = delayed(self._tree.query,[0m
[1m                                        check_pickle=False)[0m
[1m                parallel_kwargs = {"backend": "threading"}[0m
[1m            else:[0m
[1m                delayed_query = delayed(self._tree.query)[0m
[1m                parallel_kwargs = {"prefer": "threads"}[0m
[1m            result = Parallel(n_jobs, **parallel_kwargs)([0m
[1m                delayed_query([0m
[1m                    X[s], n_neighbors, return_distance)[0m
[1m                for s in gen_even_slices(X.shape[0], n_jobs)[0m
[1m            )[0m
[1m        else:[0m
[1m            raise ValueError("internal: _fit_method not recognized")[0m
[1m    [0m
[1m        if return_distance:[0m
[1m>           dist, neigh_ind = zip(*result)[0m
[31m[1mE           TypeError: type object argument after * must be a sequence, not generator[0m

X          = <40x5 sparse matrix of type '<class 'numpy.float64'>'
	with 200 stored elements in Compressed Sparse Row format>
_          = 5
kwds       = {'squared': True}
n_jobs     = 1
n_neighbors = 5
n_samples  = 40
query_is_train = False
reduce_func = functools.partial(<bound method KNeighborsRegressor._kneighbors_reduce_func of KNeighborsRegressor(algorithm='auto', l...etric_params=None, n_jobs=None, n_neighbors=5, p=2,
          weights='uniform')>, return_distance=True, n_neighbors=5)
result     = <generator object pairwise_distances_chunked at 0x7fd410771948>
return_distance = True
sample_range = array([[ 0],
       [ 1],
       [ 2],
       [ 3],
       [ 4],
       [ 5],
       [ 6],
       [ 7],
       [ 8],
 ...,
       [31],
       [32],
       [33],
       [34],
       [35],
       [36],
       [37],
       [38],
       [39]])
self       = KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
          metric_params=None, n_jobs=None, n_neighbors=5, p=2,
          weights='uniform')
train_size = 40

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/base.py[0m:443: TypeError
[31m[1m_________________________ test_kneighbors_graph_sparse _________________________[0m

seed = 36

[1m    def test_kneighbors_graph_sparse(seed=36):[0m
[1m        # Test kneighbors_graph to build the k-Nearest Neighbor graph[0m
[1m        # for sparse input.[0m
[1m        rng = np.random.RandomState(seed)[0m
[1m        X = rng.randn(10, 10)[0m
[1m        Xcsr = csr_matrix(X)[0m
[1m    [0m
[1m        for n_neighbors in [1, 2, 3]:[0m
[1m            for mode in ["connectivity", "distance"]:[0m
[1m                assert_array_almost_equal([0m
[1m                    neighbors.kneighbors_graph(X,[0m
[1m                                               n_neighbors,[0m
[1m                                               mode=mode).toarray(),[0m
[1m                    neighbors.kneighbors_graph(Xcsr,[0m
[1m                                               n_neighbors,[0m
[1m>                                              mode=mode).toarray())[0m

X          = array([[  6.76413266e-01,   1.52109919e+00,  -5.11876245e-01,
          1.15019464e+00,  -5.90716807e-01,  -7.68765252...308301e-02,  -1.49913674e+00,
          1.53843799e+00,  -5.55942607e-01,  -4.66182097e-01,
          4.64604595e-01]])
Xcsr       = <10x10 sparse matrix of type '<class 'numpy.float64'>'
	with 100 stored elements in Compressed Sparse Row format>
mode       = 'connectivity'
n_neighbors = 1
rng        = <mtrand.RandomState object at 0x7fd410643240>
seed       = 36

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/tests/test_neighbors.py[0m:882: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/testing.py[0m:350: in wrapper
[1m    return fn(*args, **kwargs)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/graph.py[0m:105: in kneighbors_graph
[1m    return X.kneighbors_graph(X=query, n_neighbors=n_neighbors, mode=mode)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/base.py[0m:538: in kneighbors_graph
[1m    A_ind = self.kneighbors(X, n_neighbors, return_distance=False)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/base.py[0m:446: in kneighbors
[1m    result = np.vstack(result)[0m
[31m[1m/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/shape_base.py[0m:230: in vstack
[1m    return _nx.concatenate([atleast_2d(_m) for _m in tup], 0)[0m
[31m[1m/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/core/shape_base.py[0m:230: in <listcomp>
[1m    return _nx.concatenate([atleast_2d(_m) for _m in tup], 0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:1282: in pairwise_distances_chunked
[1m    n_jobs=n_jobs, **kwds)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:1402: in pairwise_distances
[1m    return _parallel_pairwise(X, Y, func, n_jobs, **kwds)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:1069: in _parallel_pairwise
[1m    return func(X, Y, **kwds)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:234: in euclidean_distances
[1m    XX = row_norms(X, squared=True)[:, np.newaxis][0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py[0m:86: in row_norms
[1m    norms = csr_row_norms(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:31: TypeError
[31m[1m______________________ test_radius_neighbors_graph_sparse ______________________[0m

seed = 36

[1m    def test_radius_neighbors_graph_sparse(seed=36):[0m
[1m        # Test radius_neighbors_graph to build the Nearest Neighbor graph[0m
[1m        # for sparse input.[0m
[1m        rng = np.random.RandomState(seed)[0m
[1m        X = rng.randn(10, 10)[0m
[1m        Xcsr = csr_matrix(X)[0m
[1m    [0m
[1m        for n_neighbors in [1, 2, 3]:[0m
[1m            for mode in ["connectivity", "distance"]:[0m
[1m                assert_array_almost_equal([0m
[1m                    neighbors.radius_neighbors_graph(X,[0m
[1m                                                     n_neighbors,[0m
[1m                                                     mode=mode).toarray(),[0m
[1m                    neighbors.radius_neighbors_graph(Xcsr,[0m
[1m                                                     n_neighbors,[0m
[1m>                                                    mode=mode).toarray())[0m

X          = array([[  6.76413266e-01,   1.52109919e+00,  -5.11876245e-01,
          1.15019464e+00,  -5.90716807e-01,  -7.68765252...308301e-02,  -1.49913674e+00,
          1.53843799e+00,  -5.55942607e-01,  -4.66182097e-01,
          4.64604595e-01]])
Xcsr       = <10x10 sparse matrix of type '<class 'numpy.float64'>'
	with 100 stored elements in Compressed Sparse Row format>
mode       = 'connectivity'
n_neighbors = 1
rng        = <mtrand.RandomState object at 0x7fd41057e1d0>
seed       = 36

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/tests/test_neighbors.py[0m:920: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/testing.py[0m:350: in wrapper
[1m    return fn(*args, **kwargs)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/graph.py[0m:184: in radius_neighbors_graph
[1m    return X.radius_neighbors_graph(query, radius, mode)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/base.py[0m:806: in radius_neighbors_graph
[1m    return_distance=False)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/base.py[0m:699: in radius_neighbors
[1m    neigh_ind_list = sum(results, [])[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:1282: in pairwise_distances_chunked
[1m    n_jobs=n_jobs, **kwds)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:1402: in pairwise_distances
[1m    return _parallel_pairwise(X, Y, func, n_jobs, **kwds)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:1069: in _parallel_pairwise
[1m    return func(X, Y, **kwds)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:234: in euclidean_distances
[1m    XX = row_norms(X, squared=True)[:, np.newaxis][0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py[0m:86: in row_norms
[1m    norms = csr_row_norms(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:31: TypeError
[31m[1m__________________ test_valid_brute_metric_for_auto_algorithm __________________[0m

[1m    def test_valid_brute_metric_for_auto_algorithm():[0m
[1m        X = rng.rand(12, 12)[0m
[1m        Xcsr = csr_matrix(X)[0m
[1m    [0m
[1m        # check that there is a metric that is valid for brute[0m
[1m        # but not ball_tree (so we actually test something)[0m
[1m        assert_in("cosine", VALID_METRICS['brute'])[0m
[1m        assert_false("cosine" in VALID_METRICS['ball_tree'])[0m
[1m    [0m
[1m        # Metric which don't required any additional parameter[0m
[1m        require_params = ['mahalanobis', 'wminkowski', 'seuclidean'][0m
[1m        for metric in VALID_METRICS['brute']:[0m
[1m            if metric != 'precomputed' and metric not in require_params:[0m
[1m                nn = neighbors.NearestNeighbors(n_neighbors=3, algorithm='auto',[0m
[1m                                                metric=metric).fit(X)[0m
[1m                nn.kneighbors(X)[0m
[1m            elif metric == 'precomputed':[0m
[1m                X_precomputed = rng.random_sample((10, 4))[0m
[1m                Y_precomputed = rng.random_sample((3, 4))[0m
[1m                DXX = metrics.pairwise_distances(X_precomputed, metric='euclidean')[0m
[1m                DYX = metrics.pairwise_distances(Y_precomputed, X_precomputed,[0m
[1m                                                 metric='euclidean')[0m
[1m                nb_p = neighbors.NearestNeighbors(n_neighbors=3)[0m
[1m                nb_p.fit(DXX)[0m
[1m                nb_p.kneighbors(DYX)[0m
[1m    [0m
[1m        for metric in VALID_METRICS_SPARSE['brute']:[0m
[1m            if metric != 'precomputed' and metric not in require_params:[0m
[1m                nn = neighbors.NearestNeighbors(n_neighbors=3, algorithm='auto',[0m
[1m                                                metric=metric).fit(Xcsr)[0m
[1m>               nn.kneighbors(Xcsr)[0m

DXX        = array([[ 0.        ,  0.24008461,  0.57644324,  0.71390123,  0.66833222,
         0.82216467,  1.23427235,  1.0463978 ...3354,  0.26264926,  0.57558479,  0.91850161,
         0.74230849,  0.94239276,  0.91409935,  1.01219057,  0.        ]])
DYX        = array([[ 0.94287037,  0.95975369,  0.71209129,  0.34936129,  0.705285  ,
         1.00517076,  0.33341792,  0.60655913...3506,  1.05875753,  0.54358901,  0.57428877,
         0.94586768,  0.56558478,  0.3327503 ,  0.89335383,  1.02732501]])
X          = array([[  3.93122415e-01,   5.89711818e-01,   8.81567270e-01,
          9.29066157e-01,   5.35296202e-02,   1.81622395...    3.84273175e-01,   7.03407031e-01,   3.53074961e-01,
          1.54425425e-01,   3.12689843e-01,   8.84324226e-01]])
X_precomputed = array([[ 0.95853234,  0.20751273,  0.78846839,  0.27334874],
       [ 0.88713154,  0.16554561,  0.66595992,  0.0842112...    [ 0.1442401 ,  0.8400167 ,  0.66157765,  0.05902325],
       [ 0.81098173,  0.62775572,  0.90498232,  0.74872231]])
Xcsr       = <12x12 sparse matrix of type '<class 'numpy.float64'>'
	with 144 stored elements in Compressed Sparse Row format>
Y_precomputed = array([[ 0.56112093,  0.83654718,  0.27805024,  0.54695006],
       [ 0.29361682,  0.96820439,  0.2261963 ,  0.01573824],
       [ 0.32585484,  0.5025094 ,  0.02836293,  0.5592483 ]])
metric     = 'l2'
nb_p       = NearestNeighbors(algorithm='auto', leaf_size=30, metric='minkowski',
         metric_params=None, n_jobs=None, n_neighbors=3, p=2, radius=1.0)
nn         = NearestNeighbors(algorithm='auto', leaf_size=30, metric='l2',
         metric_params=None, n_jobs=None, n_neighbors=3, p=2, radius=1.0)
require_params = ['mahalanobis', 'wminkowski', 'seuclidean']

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/tests/test_neighbors.py[0m:1072: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = NearestNeighbors(algorithm='auto', leaf_size=30, metric='l2',
         metric_params=None, n_jobs=None, n_neighbors=3, p=2, radius=1.0)
X = <12x12 sparse matrix of type '<class 'numpy.float64'>'
	with 144 stored elements in Compressed Sparse Row format>
n_neighbors = 3, return_distance = True

[1m    def kneighbors(self, X=None, n_neighbors=None, return_distance=True):[0m
[1m        """Finds the K-neighbors of a point.[0m
[1m            Returns indices of and distances to the neighbors of each point.[0m
[1m    [0m
[1m            Parameters[0m
[1m            ----------[0m
[1m            X : array-like, shape (n_query, n_features), \[0m
[1m                    or (n_query, n_indexed) if metric == 'precomputed'[0m
[1m                The query point or points.[0m
[1m                If not provided, neighbors of each indexed point are returned.[0m
[1m                In this case, the query point is not considered its own neighbor.[0m
[1m    [0m
[1m            n_neighbors : int[0m
[1m                Number of neighbors to get (default is the value[0m
[1m                passed to the constructor).[0m
[1m    [0m
[1m            return_distance : boolean, optional. Defaults to True.[0m
[1m                If False, distances will not be returned[0m
[1m    [0m
[1m            Returns[0m
[1m            -------[0m
[1m            dist : array[0m
[1m                Array representing the lengths to points, only present if[0m
[1m                return_distance=True[0m
[1m    [0m
[1m            ind : array[0m
[1m                Indices of the nearest points in the population matrix.[0m
[1m    [0m
[1m            Examples[0m
[1m            --------[0m
[1m            In the following example, we construct a NeighborsClassifier[0m
[1m            class from an array representing our data set and ask who's[0m
[1m            the closest point to [1,1,1][0m
[1m    [0m
[1m            >>> samples = [[0., 0., 0.], [0., .5, 0.], [1., 1., .5]][0m
[1m            >>> from sklearn.neighbors import NearestNeighbors[0m
[1m            >>> neigh = NearestNeighbors(n_neighbors=1)[0m
[1m            >>> neigh.fit(samples) # doctest: +ELLIPSIS[0m
[1m            NearestNeighbors(algorithm='auto', leaf_size=30, ...)[0m
[1m            >>> print(neigh.kneighbors([[1., 1., 1.]])) # doctest: +ELLIPSIS[0m
[1m            (array([[0.5]]), array([[2]]))[0m
[1m    [0m
[1m            As you can see, it returns [[0.5]], and [[2]], which means that the[0m
[1m            element is at distance 0.5 and is the third element of samples[0m
[1m            (indexes start at 0). You can also query for multiple points:[0m
[1m    [0m
[1m            >>> X = [[0., 1., 0.], [1., 0., 1.]][0m
[1m            >>> neigh.kneighbors(X, return_distance=False) # doctest: +ELLIPSIS[0m
[1m            array([[1],[0m
[1m                   [2]]...)[0m
[1m    [0m
[1m            """[0m
[1m        check_is_fitted(self, "_fit_method")[0m
[1m    [0m
[1m        if n_neighbors is None:[0m
[1m            n_neighbors = self.n_neighbors[0m
[1m        elif n_neighbors <= 0:[0m
[1m            raise ValueError([0m
[1m                "Expected n_neighbors > 0. Got %d" %[0m
[1m                n_neighbors[0m
[1m            )[0m
[1m        else:[0m
[1m            if not np.issubdtype(type(n_neighbors), np.integer):[0m
[1m                raise TypeError([0m
[1m                    "n_neighbors does not take %s value, "[0m
[1m                    "enter integer value" %[0m
[1m                    type(n_neighbors))[0m
[1m    [0m
[1m        if X is not None:[0m
[1m            query_is_train = False[0m
[1m            X = check_array(X, accept_sparse='csr')[0m
[1m        else:[0m
[1m            query_is_train = True[0m
[1m            X = self._fit_X[0m
[1m            # Include an extra neighbor to account for the sample itself being[0m
[1m            # returned, which is removed later[0m
[1m            n_neighbors += 1[0m
[1m    [0m
[1m        train_size = self._fit_X.shape[0][0m
[1m        if n_neighbors > train_size:[0m
[1m            raise ValueError([0m
[1m                "Expected n_neighbors <= n_samples, "[0m
[1m                " but n_samples = %d, n_neighbors = %d" %[0m
[1m                (train_size, n_neighbors)[0m
[1m            )[0m
[1m        n_samples, _ = X.shape[0m
[1m        sample_range = np.arange(n_samples)[:, None][0m
[1m    [0m
[1m        n_jobs = effective_n_jobs(self.n_jobs)[0m
[1m        if self._fit_method == 'brute':[0m
[1m    [0m
[1m            reduce_func = partial(self._kneighbors_reduce_func,[0m
[1m                                  n_neighbors=n_neighbors,[0m
[1m                                  return_distance=return_distance)[0m
[1m    [0m
[1m            # for efficiency, use squared euclidean distances[0m
[1m            kwds = ({'squared': True} if self.effective_metric_ == 'euclidean'[0m
[1m                    else self.effective_metric_params_)[0m
[1m    [0m
[1m            result = pairwise_distances_chunked([0m
[1m                X, self._fit_X, reduce_func=reduce_func,[0m
[1m                metric=self.effective_metric_, n_jobs=n_jobs,[0m
[1m                **kwds)[0m
[1m    [0m
[1m        elif self._fit_method in ['ball_tree', 'kd_tree']:[0m
[1m            if issparse(X):[0m
[1m                raise ValueError([0m
[1m                    "%s does not work with sparse matrices. Densify the data, "[0m
[1m                    "or set algorithm='brute'" % self._fit_method)[0m
[1m            if LooseVersion(joblib_version) < LooseVersion('0.12'):[0m
[1m                # Deal with change of API in joblib[0m
[1m                delayed_query = delayed(self._tree.query,[0m
[1m                                        check_pickle=False)[0m
[1m                parallel_kwargs = {"backend": "threading"}[0m
[1m            else:[0m
[1m                delayed_query = delayed(self._tree.query)[0m
[1m                parallel_kwargs = {"prefer": "threads"}[0m
[1m            result = Parallel(n_jobs, **parallel_kwargs)([0m
[1m                delayed_query([0m
[1m                    X[s], n_neighbors, return_distance)[0m
[1m                for s in gen_even_slices(X.shape[0], n_jobs)[0m
[1m            )[0m
[1m        else:[0m
[1m            raise ValueError("internal: _fit_method not recognized")[0m
[1m    [0m
[1m        if return_distance:[0m
[1m>           dist, neigh_ind = zip(*result)[0m
[31m[1mE           TypeError: type object argument after * must be a sequence, not generator[0m

X          = <12x12 sparse matrix of type '<class 'numpy.float64'>'
	with 144 stored elements in Compressed Sparse Row format>
_          = 12
kwds       = {}
n_jobs     = 1
n_neighbors = 3
n_samples  = 12
query_is_train = False
reduce_func = functools.partial(<bound method NearestNeighbors._kneighbors_reduce_func of NearestNeighbors(algorithm='auto', leaf_si...='l2',
         metric_params=None, n_jobs=None, n_neighbors=3, p=2, radius=1.0)>, return_distance=True, n_neighbors=3)
result     = <generator object pairwise_distances_chunked at 0x7fd410771558>
return_distance = True
sample_range = array([[ 0],
       [ 1],
       [ 2],
       [ 3],
       [ 4],
       [ 5],
       [ 6],
       [ 7],
       [ 8],
       [ 9],
       [10],
       [11]])
self       = NearestNeighbors(algorithm='auto', leaf_size=30, metric='l2',
         metric_params=None, n_jobs=None, n_neighbors=3, p=2, radius=1.0)
train_size = 12

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/base.py[0m:443: TypeError
[31m[1m______________ test_missing_value_handling[est3-scale-True-False] ______________[0m

est = StandardScaler(copy=True, with_mean=False, with_std=True)
func = <function scale at 0x7fd40114b7b8>, support_sparse = True
strictly_positive = False

[1m    @pytest.mark.parametrize([0m
[1m        "est, func, support_sparse, strictly_positive",[0m
[1m        [(MaxAbsScaler(), maxabs_scale, True, False),[0m
[1m         (MinMaxScaler(), minmax_scale, False, False),[0m
[1m         (StandardScaler(), scale, False, False),[0m
[1m         (StandardScaler(with_mean=False), scale, True, False),[0m
[1m         (PowerTransformer('yeo-johnson'), power_transform, False, False),[0m
[1m         (PowerTransformer('box-cox'), power_transform, False, True),[0m
[1m         (QuantileTransformer(n_quantiles=10), quantile_transform, True, False),[0m
[1m         (RobustScaler(), robust_scale, False, False),[0m
[1m         (RobustScaler(with_centering=False), robust_scale, True, False)][0m
[1m    )[0m
[1m    def test_missing_value_handling(est, func, support_sparse, strictly_positive):[0m
[1m        # check that the preprocessing method let pass nan[0m
[1m        rng = np.random.RandomState(42)[0m
[1m        X = iris.data.copy()[0m
[1m        n_missing = 50[0m
[1m        X[rng.randint(X.shape[0], size=n_missing),[0m
[1m          rng.randint(X.shape[1], size=n_missing)] = np.nan[0m
[1m        if strictly_positive:[0m
[1m            X += np.nanmin(X) + 0.1[0m
[1m        X_train, X_test = train_test_split(X, random_state=1)[0m
[1m        # sanity check[0m
[1m        assert not np.all(np.isnan(X_train), axis=0).any()[0m
[1m        assert np.any(np.isnan(X_train), axis=0).all()[0m
[1m        assert np.any(np.isnan(X_test), axis=0).all()[0m
[1m        X_test[:, 0] = np.nan  # make sure this boundary case is tested[0m
[1m    [0m
[1m        with pytest.warns(None) as records:[0m
[1m            Xt = est.fit(X_train).transform(X_test)[0m
[1m        # ensure no warnings are raised[0m
[1m        assert len(records) == 0[0m
[1m        # missing values should still be missing, and only them[0m
[1m        assert_array_equal(np.isnan(Xt), np.isnan(X_test))[0m
[1m    [0m
[1m        # check that the function leads to the same results as the class[0m
[1m        with pytest.warns(None) as records:[0m
[1m            Xt_class = est.transform(X_train)[0m
[1m        assert len(records) == 0[0m
[1m        Xt_func = func(X_train, **est.get_params())[0m
[1m        assert_array_equal(np.isnan(Xt_func), np.isnan(Xt_class))[0m
[1m        assert_allclose(Xt_func[~np.isnan(Xt_func)], Xt_class[~np.isnan(Xt_class)])[0m
[1m    [0m
[1m        # check that the inverse transform keep NaN[0m
[1m        Xt_inv = est.inverse_transform(Xt)[0m
[1m        assert_array_equal(np.isnan(Xt_inv), np.isnan(X_test))[0m
[1m        # FIXME: we can introduce equal_nan=True in recent version of numpy.[0m
[1m        # For the moment which just check that non-NaN values are almost equal.[0m
[1m        assert_allclose(Xt_inv[~np.isnan(Xt_inv)], X_test[~np.isnan(X_test)])[0m
[1m    [0m
[1m        for i in range(X.shape[1]):[0m
[1m            # train only on non-NaN[0m
[1m            est.fit(_get_valid_samples_by_column(X_train, i))[0m
[1m            # check transforming with NaN works even when training without NaN[0m
[1m            with pytest.warns(None) as records:[0m
[1m                Xt_col = est.transform(X_test[:, [i]])[0m
[1m            assert len(records) == 0[0m
[1m            assert_allclose(Xt_col, Xt[:, [i]])[0m
[1m            # check non-NaN is handled as before - the 1st column is all nan[0m
[1m            if not np.isnan(X_test[:, i]).all():[0m
[1m                Xt_col_nonan = est.transform([0m
[1m                    _get_valid_samples_by_column(X_test, i))[0m
[1m                assert_array_equal(Xt_col_nonan,[0m
[1m                                   Xt_col[~np.isnan(Xt_col.squeeze())])[0m
[1m    [0m
[1m        if support_sparse:[0m
[1m            est_dense = clone(est)[0m
[1m            est_sparse = clone(est)[0m
[1m    [0m
[1m            with pytest.warns(None) as records:[0m
[1m                Xt_dense = est_dense.fit(X_train).transform(X_test)[0m
[1m                Xt_inv_dense = est_dense.inverse_transform(Xt_dense)[0m
[1m            assert len(records) == 0[0m
[1m            for sparse_constructor in (sparse.csr_matrix, sparse.csc_matrix,[0m
[1m                                       sparse.bsr_matrix, sparse.coo_matrix,[0m
[1m                                       sparse.dia_matrix, sparse.dok_matrix,[0m
[1m                                       sparse.lil_matrix):[0m
[1m                # check that the dense and sparse inputs lead to the same results[0m
[1m                # precompute the matrix to avoid catching side warnings[0m
[1m                X_train_sp = sparse_constructor(X_train)[0m
[1m                X_test_sp = sparse_constructor(X_test)[0m
[1m                with pytest.warns(None) as records:[0m
[1m                    warnings.simplefilter('ignore', PendingDeprecationWarning)[0m
[1m>                   Xt_sp = est_sparse.fit(X_train_sp).transform(X_test_sp)[0m

X          = array([[ 5.1,  3.5,  1.4,  0.2],
       [ 4.9,  nan,  1.4,  0.2],
       [ 4.7,  3.2,  1.3,  0.2],
       [ 4.6,  3.1,...  2.5,  5. ,  1.9],
       [ 6.5,  3. ,  5.2,  2. ],
       [ 6.2,  3.4,  5.4,  2.3],
       [ 5.9,  3. ,  nan,  1.8]])
X_test     = array([[ nan,  4. ,  1.2,  nan],
       [ nan,  2.5,  3. ,  1.1],
       [ nan,  3. ,  4.4,  1.4],
       [ nan,  3.9,...  2.8,  5.1,  2.4],
       [ nan,  3.7,  1.5,  nan],
       [ nan,  2.3,  4. ,  1.3],
       [ nan,  3.4,  1.4,  0.2]])
X_test_sp  = <38x4 sparse matrix of type '<class 'numpy.float64'>'
	with 152 stored elements in Compressed Sparse Row format>
X_train    = array([[ 6.5,  2.8,  4.6,  nan],
       [ 6.7,  2.5,  5.8,  1.8],
       [ 6.8,  3. ,  5.5,  2.1],
       [ 5.1,  nan,...  3.1,  5.5,  1.8],
       [ nan,  2.5,  4.9,  1.5],
       [ 6.7,  3.1,  5.6,  2.4],
       [ 4.9,  nan,  1.4,  0.1]])
X_train_sp = <112x4 sparse matrix of type '<class 'numpy.float64'>'
	with 448 stored elements in Compressed Sparse Row format>
Xt         = array([[        nan,  9.39442688,  0.6754881 ,         nan],
       [        nan,  5.8715168 ,  1.68872024,  1.3798869...    [        nan,  5.40179546,  2.25162699,  1.63077551],
       [        nan,  7.98526285,  0.78806945,  0.25088854]])
Xt_class   = array([[  7.80049824,   6.57609882,   2.58937104,          nan],
       [  8.04051357,   5.8715168 ,   3.26485914,   2....04051357,   7.28068084,   3.15227779,   3.01066247],
       [  5.88037559,          nan,   0.78806945,   0.12544427]])
Xt_col     = array([[        nan],
       [ 1.37988697],
       [ 1.75621978],
       [ 0.50177708],
       [ 2.50888539],
       [...988697],
       [ 2.63432966],
       [ 3.01066247],
       [        nan],
       [ 1.63077551],
       [ 0.25088854]])
Xt_col_nonan = array([[ 1.37988697],
       [ 1.75621978],
       [ 0.50177708],
       [ 2.50888539],
       [ 2.00710832],
       [...52182 ],
       [ 1.37988697],
       [ 2.63432966],
       [ 3.01066247],
       [ 1.63077551],
       [ 0.25088854]])
Xt_dense   = array([[        nan,  9.39442688,  0.6754881 ,         nan],
       [        nan,  5.8715168 ,  1.68872024,  1.3798869...    [        nan,  5.40179546,  2.25162699,  1.63077551],
       [        nan,  7.98526285,  0.78806945,  0.25088854]])
Xt_func    = array([[  7.80049824,   6.57609882,   2.58937104,          nan],
       [  8.04051357,   5.8715168 ,   3.26485914,   2....04051357,   7.28068084,   3.15227779,   3.01066247],
       [  5.88037559,          nan,   0.78806945,   0.12544427]])
Xt_inv     = array([[ nan,  4. ,  1.2,  nan],
       [ nan,  2.5,  3. ,  1.1],
       [ nan,  3. ,  4.4,  1.4],
       [ nan,  3.9,...  2.8,  5.1,  2.4],
       [ nan,  3.7,  1.5,  nan],
       [ nan,  2.3,  4. ,  1.3],
       [ nan,  3.4,  1.4,  0.2]])
Xt_inv_dense = array([[ nan,  4. ,  1.2,  nan],
       [ nan,  2.5,  3. ,  1.1],
       [ nan,  3. ,  4.4,  1.4],
       [ nan,  3.9,...  2.8,  5.1,  2.4],
       [ nan,  3.7,  1.5,  nan],
       [ nan,  2.3,  4. ,  1.3],
       [ nan,  3.4,  1.4,  0.2]])
est        = StandardScaler(copy=True, with_mean=False, with_std=True)
est_dense  = StandardScaler(copy=True, with_mean=False, with_std=True)
est_sparse = StandardScaler(copy=True, with_mean=False, with_std=True)
func       = <function scale at 0x7fd40114b7b8>
i          = 3
n_missing  = 50
records    = WarningsChecker(record=True)
rng        = <mtrand.RandomState object at 0x7fd4105795f8>
sparse_constructor = <class 'scipy.sparse.csr.csr_matrix'>
strictly_positive = False
support_sparse = True

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/tests/test_common.py[0m:121: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/data.py[0m:617: in fit
[1m    return self.partial_fit(X, y)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/data.py[0m:674: in partial_fit
[1m    self.mean_, self.var_ = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
[31m[1m_____________ test_standard_scaler_partial_fit_numerical_stability _____________[0m

[1m    def test_standard_scaler_partial_fit_numerical_stability():[0m
[1m        # Test if the incremental computation introduces significative errors[0m
[1m        # for large datasets with values of large magniture[0m
[1m        rng = np.random.RandomState(0)[0m
[1m        n_features = 2[0m
[1m        n_samples = 100[0m
[1m        offsets = rng.uniform(-1e15, 1e15, size=n_features)[0m
[1m        scales = rng.uniform(1e3, 1e6, size=n_features)[0m
[1m        X = rng.randn(n_samples, n_features) * scales + offsets[0m
[1m    [0m
[1m        scaler_batch = StandardScaler().fit(X)[0m
[1m        scaler_incr = StandardScaler()[0m
[1m        for chunk in X:[0m
[1m            scaler_incr = scaler_incr.partial_fit(chunk.reshape(1, n_features))[0m
[1m    [0m
[1m        # Regardless of abs values, they must not be more diff 6 significant digits[0m
[1m        tol = 10 ** (-6)[0m
[1m        assert_allclose(scaler_incr.mean_, scaler_batch.mean_, rtol=tol)[0m
[1m        assert_allclose(scaler_incr.var_, scaler_batch.var_, rtol=tol)[0m
[1m        assert_allclose(scaler_incr.scale_, scaler_batch.scale_, rtol=tol)[0m
[1m        # NOTE Be aware that for much larger offsets std is very unstable (last[0m
[1m        # assert) while mean is OK.[0m
[1m    [0m
[1m        # Sparse input[0m
[1m        size = (100, 3)[0m
[1m        scale = 1e20[0m
[1m        X = rng.randint(0, 2, size).astype(np.float64) * scale[0m
[1m        X_csr = sparse.csr_matrix(X)[0m
[1m        X_csc = sparse.csc_matrix(X)[0m
[1m    [0m
[1m        for X in [X_csr, X_csc]:[0m
[1m            # with_mean=False is required with sparse input[0m
[1m>           scaler = StandardScaler(with_mean=False).fit(X)[0m

X          = <100x3 sparse matrix of type '<class 'numpy.float64'>'
	with 149 stored elements in Compressed Sparse Row format>
X_csc      = <100x3 sparse matrix of type '<class 'numpy.float64'>'
	with 149 stored elements in Compressed Sparse Column format>
X_csr      = <100x3 sparse matrix of type '<class 'numpy.float64'>'
	with 149 stored elements in Compressed Sparse Row format>
chunk      = array([  9.76270085e+13,   4.30378733e+14])
n_features = 2
n_samples  = 100
offsets    = array([  9.76270079e+13,   4.30378733e+14])
rng        = <mtrand.RandomState object at 0x7fd4108a8908>
scale      = 1e+20
scaler_batch = StandardScaler(copy=True, with_mean=True, with_std=True)
scaler_incr = StandardScaler(copy=True, with_mean=True, with_std=True)
scales     = array([ 603160.61269557,  545338.2998139 ])
size       = (100, 3)
tol        = 1e-06

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/tests/test_data.py[0m:464: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/data.py[0m:617: in fit
[1m    return self.partial_fit(X, y)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/data.py[0m:674: in partial_fit
[1m    self.mean_, self.var_ = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
[31m[1m________________________ test_scaler_without_centering _________________________[0m

[1m    def test_scaler_without_centering():[0m
[1m        rng = np.random.RandomState(42)[0m
[1m        X = rng.randn(4, 5)[0m
[1m        X[:, 0] = 0.0  # first feature is always of zero[0m
[1m        X_csr = sparse.csr_matrix(X)[0m
[1m        X_csc = sparse.csc_matrix(X)[0m
[1m    [0m
[1m        assert_raises(ValueError, StandardScaler().fit, X_csr)[0m
[1m        assert_raises(ValueError, StandardScaler().fit, X_csc)[0m
[1m    [0m
[1m        null_transform = StandardScaler(with_mean=False, with_std=False, copy=True)[0m
[1m        X_null = null_transform.fit_transform(X_csr)[0m
[1m        assert_array_equal(X_null.data, X_csr.data)[0m
[1m        X_orig = null_transform.inverse_transform(X_null)[0m
[1m        assert_array_equal(X_orig.data, X_csr.data)[0m
[1m    [0m
[1m        scaler = StandardScaler(with_mean=False).fit(X)[0m
[1m        X_scaled = scaler.transform(X, copy=True)[0m
[1m        assert_false(np.any(np.isnan(X_scaled)))[0m
[1m    [0m
[1m>       scaler_csr = StandardScaler(with_mean=False).fit(X_csr)[0m

X          = array([[ 0.        , -0.1382643 ,  0.64768854,  1.52302986, -0.23415337],
       [ 0.        ,  1.57921282,  0.7674347...975,  0.24196227, -1.91328024, -1.72491783],
       [ 0.        , -1.01283112,  0.31424733, -0.90802408, -1.4123037 ]])
X_csc      = <4x5 sparse matrix of type '<class 'numpy.float64'>'
	with 16 stored elements in Compressed Sparse Column format>
X_csr      = <4x5 sparse matrix of type '<class 'numpy.float64'>'
	with 16 stored elements in Compressed Sparse Row format>
X_null     = <4x5 sparse matrix of type '<class 'numpy.float64'>'
	with 16 stored elements in Compressed Sparse Row format>
X_orig     = <4x5 sparse matrix of type '<class 'numpy.float64'>'
	with 16 stored elements in Compressed Sparse Row format>
X_scaled   = array([[ 0.        , -0.14269591,  2.93937148,  1.21901489, -0.25707116],
       [ 0.        ,  1.62982929,  3.4828094...719,  1.09808489, -1.53136664, -1.89374431],
       [ 0.        , -1.04529409,  1.42613246, -0.72677162, -1.55053304]])
null_transform = StandardScaler(copy=True, with_mean=False, with_std=False)
rng        = <mtrand.RandomState object at 0x7fd3f8cf4e10>
scaler     = StandardScaler(copy=True, with_mean=False, with_std=True)

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/tests/test_data.py[0m:660: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/data.py[0m:617: in fit
[1m    return self.partial_fit(X, y)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/data.py[0m:674: in partial_fit
[1m    self.mean_, self.var_ = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
[31m[1m__________ test_scaler_n_samples_seen_with_nan[csc_matrix-True-False] __________[0m

with_mean = False, with_std = True
array_constructor = <class 'scipy.sparse.csc.csc_matrix'>

[1m    @pytest.mark.parametrize("with_mean", [True, False])[0m
[1m    @pytest.mark.parametrize("with_std", [True, False])[0m
[1m    @pytest.mark.parametrize("array_constructor",[0m
[1m                             [np.asarray, sparse.csc_matrix, sparse.csr_matrix])[0m
[1m    def test_scaler_n_samples_seen_with_nan(with_mean, with_std,[0m
[1m                                            array_constructor):[0m
[1m        X = np.array([[0, 1, 3],[0m
[1m                      [np.nan, 6, 10],[0m
[1m                      [5, 4, np.nan],[0m
[1m                      [8, 0, np.nan]],[0m
[1m                     dtype=np.float64)[0m
[1m        X = array_constructor(X)[0m
[1m    [0m
[1m        if sparse.issparse(X) and with_mean:[0m
[1m            pytest.skip("'with_mean=True' cannot be used with sparse matrix.")[0m
[1m    [0m
[1m        transformer = StandardScaler(with_mean=with_mean, with_std=with_std)[0m
[1m>       transformer.fit(X)[0m

X          = <4x3 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Column format>
array_constructor = <class 'scipy.sparse.csc.csc_matrix'>
transformer = StandardScaler(copy=True, with_mean=False, with_std=True)
with_mean  = False
with_std   = True

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/tests/test_data.py[0m:721: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/data.py[0m:617: in fit
[1m    return self.partial_fit(X, y)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/data.py[0m:674: in partial_fit
[1m    self.mean_, self.var_ = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:94: in mean_variance_axis
[1m    return _csc_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:156: TypeError
[31m[1m__________ test_scaler_n_samples_seen_with_nan[csr_matrix-True-False] __________[0m

with_mean = False, with_std = True
array_constructor = <class 'scipy.sparse.csr.csr_matrix'>

[1m    @pytest.mark.parametrize("with_mean", [True, False])[0m
[1m    @pytest.mark.parametrize("with_std", [True, False])[0m
[1m    @pytest.mark.parametrize("array_constructor",[0m
[1m                             [np.asarray, sparse.csc_matrix, sparse.csr_matrix])[0m
[1m    def test_scaler_n_samples_seen_with_nan(with_mean, with_std,[0m
[1m                                            array_constructor):[0m
[1m        X = np.array([[0, 1, 3],[0m
[1m                      [np.nan, 6, 10],[0m
[1m                      [5, 4, np.nan],[0m
[1m                      [8, 0, np.nan]],[0m
[1m                     dtype=np.float64)[0m
[1m        X = array_constructor(X)[0m
[1m    [0m
[1m        if sparse.issparse(X) and with_mean:[0m
[1m            pytest.skip("'with_mean=True' cannot be used with sparse matrix.")[0m
[1m    [0m
[1m        transformer = StandardScaler(with_mean=with_mean, with_std=with_std)[0m
[1m>       transformer.fit(X)[0m

X          = <4x3 sparse matrix of type '<class 'numpy.float64'>'
	with 10 stored elements in Compressed Sparse Row format>
array_constructor = <class 'scipy.sparse.csr.csr_matrix'>
transformer = StandardScaler(copy=True, with_mean=False, with_std=True)
with_mean  = False
with_std   = True

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/tests/test_data.py[0m:721: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/data.py[0m:617: in fit
[1m    return self.partial_fit(X, y)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/data.py[0m:674: in partial_fit
[1m    self.mean_, self.var_ = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
[31m[1m_______________________________ test_scaler_int ________________________________[0m

[1m    def test_scaler_int():[0m
[1m        # test that scaler converts integer input to floating[0m
[1m        # for both sparse and dense matrices[0m
[1m        rng = np.random.RandomState(42)[0m
[1m        X = rng.randint(20, size=(4, 5))[0m
[1m        X[:, 0] = 0  # first feature is always of zero[0m
[1m        X_csr = sparse.csr_matrix(X)[0m
[1m        X_csc = sparse.csc_matrix(X)[0m
[1m    [0m
[1m        null_transform = StandardScaler(with_mean=False, with_std=False, copy=True)[0m
[1m        clean_warning_registry()[0m
[1m        with warnings.catch_warnings(record=True):[0m
[1m            X_null = null_transform.fit_transform(X_csr)[0m
[1m        assert_array_equal(X_null.data, X_csr.data)[0m
[1m        X_orig = null_transform.inverse_transform(X_null)[0m
[1m        assert_array_equal(X_orig.data, X_csr.data)[0m
[1m    [0m
[1m        clean_warning_registry()[0m
[1m        with warnings.catch_warnings(record=True):[0m
[1m            scaler = StandardScaler(with_mean=False).fit(X)[0m
[1m            X_scaled = scaler.transform(X, copy=True)[0m
[1m        assert_false(np.any(np.isnan(X_scaled)))[0m
[1m    [0m
[1m        clean_warning_registry()[0m
[1m        with warnings.catch_warnings(record=True):[0m
[1m>           scaler_csr = StandardScaler(with_mean=False).fit(X_csr)[0m

X          = array([[ 0, 19, 14, 10,  7],
       [ 0, 18, 10, 10,  3],
       [ 0,  2,  1, 11,  5],
       [ 0,  0, 11, 11, 16]])
X_csc      = <4x5 sparse matrix of type '<class 'numpy.int64'>'
	with 15 stored elements in Compressed Sparse Column format>
X_csr      = <4x5 sparse matrix of type '<class 'numpy.int64'>'
	with 15 stored elements in Compressed Sparse Row format>
X_null     = <4x5 sparse matrix of type '<class 'numpy.float64'>'
	with 15 stored elements in Compressed Sparse Row format>
X_orig     = <4x5 sparse matrix of type '<class 'numpy.float64'>'
	with 15 stored elements in Compressed Sparse Row format>
X_scaled   = array([[  0.        ,   2.16261949,   2.88797949,  20.        ,   1.4088329 ],
       [  0.        ,   2.04879742,   2...       ,
          1.00630921],
       [  0.        ,   0.        ,   2.26912674,  22.        ,
          3.22018947]])
null_transform = StandardScaler(copy=True, with_mean=False, with_std=False)
rng        = <mtrand.RandomState object at 0x7fd4107f6898>
scaler     = StandardScaler(copy=True, with_mean=False, with_std=True)

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/tests/test_data.py[0m:808: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/data.py[0m:617: in fit
[1m    return self.partial_fit(X, y)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/data.py[0m:674: in partial_fit
[1m    self.mean_, self.var_ = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
[31m[1m___________________________ test_scaler_without_copy ___________________________[0m

[1m    def test_scaler_without_copy():[0m
[1m        # Check that StandardScaler.fit does not change input[0m
[1m        rng = np.random.RandomState(42)[0m
[1m        X = rng.randn(4, 5)[0m
[1m        X[:, 0] = 0.0  # first feature is always of zero[0m
[1m        X_csr = sparse.csr_matrix(X)[0m
[1m        X_csc = sparse.csc_matrix(X)[0m
[1m    [0m
[1m        X_copy = X.copy()[0m
[1m        StandardScaler(copy=False).fit(X)[0m
[1m        assert_array_equal(X, X_copy)[0m
[1m    [0m
[1m        X_csr_copy = X_csr.copy()[0m
[1m>       StandardScaler(with_mean=False, copy=False).fit(X_csr)[0m

X          = array([[ 0.        , -0.1382643 ,  0.64768854,  1.52302986, -0.23415337],
       [ 0.        ,  1.57921282,  0.7674347...975,  0.24196227, -1.91328024, -1.72491783],
       [ 0.        , -1.01283112,  0.31424733, -0.90802408, -1.4123037 ]])
X_copy     = array([[ 0.        , -0.1382643 ,  0.64768854,  1.52302986, -0.23415337],
       [ 0.        ,  1.57921282,  0.7674347...975,  0.24196227, -1.91328024, -1.72491783],
       [ 0.        , -1.01283112,  0.31424733, -0.90802408, -1.4123037 ]])
X_csc      = <4x5 sparse matrix of type '<class 'numpy.float64'>'
	with 16 stored elements in Compressed Sparse Column format>
X_csr      = <4x5 sparse matrix of type '<class 'numpy.float64'>'
	with 16 stored elements in Compressed Sparse Row format>
X_csr_copy = <4x5 sparse matrix of type '<class 'numpy.float64'>'
	with 16 stored elements in Compressed Sparse Row format>
rng        = <mtrand.RandomState object at 0x7fd3f4c79b00>

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/tests/test_data.py[0m:869: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/data.py[0m:617: in fit
[1m    return self.partial_fit(X, y)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/data.py[0m:674: in partial_fit
[1m    self.mean_, self.var_ = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
[31m[1m____________________ test_scale_function_without_centering _____________________[0m

[1m    def test_scale_function_without_centering():[0m
[1m        rng = np.random.RandomState(42)[0m
[1m        X = rng.randn(4, 5)[0m
[1m        X[:, 0] = 0.0  # first feature is always of zero[0m
[1m        X_csr = sparse.csr_matrix(X)[0m
[1m    [0m
[1m        X_scaled = scale(X, with_mean=False)[0m
[1m        assert_false(np.any(np.isnan(X_scaled)))[0m
[1m    [0m
[1m>       X_csr_scaled = scale(X_csr, with_mean=False)[0m

X          = array([[ 0.        , -0.1382643 ,  0.64768854,  1.52302986, -0.23415337],
       [ 0.        ,  1.57921282,  0.7674347...975,  0.24196227, -1.91328024, -1.72491783],
       [ 0.        , -1.01283112,  0.31424733, -0.90802408, -1.4123037 ]])
X_csr      = <4x5 sparse matrix of type '<class 'numpy.float64'>'
	with 16 stored elements in Compressed Sparse Row format>
X_scaled   = array([[ 0.        , -0.14269591,  2.93937148,  1.21901489, -0.25707116],
       [ 0.        ,  1.62982929,  3.4828094...719,  1.09808489, -1.53136664, -1.89374431],
       [ 0.        , -1.04529409,  1.42613246, -0.72677162, -1.55053304]])
rng        = <mtrand.RandomState object at 0x7fd40f952e48>

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/tests/test_data.py[0m:1393: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/data.py[0m:155: in scale
[1m    _, var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:94: in mean_variance_axis
[1m    return _csc_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:156: TypeError
[31m[1m test_non_meta_estimators[AffinityPropagation-AffinityPropagation-check_estimator_sparse_data] [0m

name = 'AffinityPropagation'
Estimator = <class 'sklearn.cluster.affinity_propagation_.AffinityPropagation'>
check = <function check_estimator_sparse_data at 0x7fd3f85b7730>

[1m    @pytest.mark.parametrize([0m
[1m            "name, Estimator, check",[0m
[1m            _generate_checks_per_estimator(_yield_all_checks,[0m
[1m                                           _tested_non_meta_estimators()),[0m
[1m            ids=_rename_partial[0m
[1m    )[0m
[1m    def test_non_meta_estimators(name, Estimator, check):[0m
[1m        # Common tests for non-meta estimators[0m
[1m        with ignore_warnings(category=(DeprecationWarning, ConvergenceWarning,[0m
[1m                                       UserWarning, FutureWarning)):[0m
[1m            estimator = Estimator()[0m
[1m            set_checking_parameters(estimator)[0m
[1m>           check(name, estimator)[0m

Estimator  = <class 'sklearn.cluster.affinity_propagation_.AffinityPropagation'>
check      = <function check_estimator_sparse_data at 0x7fd3f85b7730>
estimator  = AffinityPropagation(affinity='euclidean', convergence_iter=15, copy=True,
          damping=0.5, max_iter=5, preference=None, verbose=False)
name       = 'AffinityPropagation'

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_common.py[0m:100: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/estimator_checks.py[0m:506: in check_estimator_sparse_data
[1m    estimator.fit(X, y)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/affinity_propagation_.py[0m:371: in fit
[1m    self.affinity_matrix_ = -euclidean_distances(X, squared=True)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:234: in euclidean_distances
[1m    XX = row_norms(X, squared=True)[:, np.newaxis][0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py[0m:86: in row_norms
[1m    norms = csr_row_norms(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:31: TypeError
----------------------------- Captured stdout call -----------------------------
Estimator AffinityPropagation doesn't seem to fail gracefully on sparse data: error message state explicitly that sparse input is not supported if this is not the case.
[31m[1m_____ test_non_meta_estimators[DBSCAN-DBSCAN-check_estimator_sparse_data] ______[0m

name = 'DBSCAN', Estimator = <class 'sklearn.cluster.dbscan_.DBSCAN'>
check = <function check_estimator_sparse_data at 0x7fd3f85b7730>

[1m    @pytest.mark.parametrize([0m
[1m            "name, Estimator, check",[0m
[1m            _generate_checks_per_estimator(_yield_all_checks,[0m
[1m                                           _tested_non_meta_estimators()),[0m
[1m            ids=_rename_partial[0m
[1m    )[0m
[1m    def test_non_meta_estimators(name, Estimator, check):[0m
[1m        # Common tests for non-meta estimators[0m
[1m        with ignore_warnings(category=(DeprecationWarning, ConvergenceWarning,[0m
[1m                                       UserWarning, FutureWarning)):[0m
[1m            estimator = Estimator()[0m
[1m            set_checking_parameters(estimator)[0m
[1m>           check(name, estimator)[0m

Estimator  = <class 'sklearn.cluster.dbscan_.DBSCAN'>
check      = <function check_estimator_sparse_data at 0x7fd3f85b7730>
estimator  = DBSCAN(algorithm='auto', eps=0.5, leaf_size=30, metric='euclidean',
    metric_params=None, min_samples=5, n_jobs=None, p=None)
name       = 'DBSCAN'

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_common.py[0m:100: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/estimator_checks.py[0m:506: in check_estimator_sparse_data
[1m    estimator.fit(X, y)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/dbscan_.py[0m:334: in fit
[1m    **self.get_params())[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/dbscan_.py[0m:165: in dbscan
[1m    return_distance=False)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/base.py[0m:699: in radius_neighbors
[1m    neigh_ind_list = sum(results, [])[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:1282: in pairwise_distances_chunked
[1m    n_jobs=n_jobs, **kwds)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:1402: in pairwise_distances
[1m    return _parallel_pairwise(X, Y, func, n_jobs, **kwds)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:1069: in _parallel_pairwise
[1m    return func(X, Y, **kwds)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:234: in euclidean_distances
[1m    XX = row_norms(X, squared=True)[:, np.newaxis][0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py[0m:86: in row_norms
[1m    norms = csr_row_norms(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:31: TypeError
----------------------------- Captured stdout call -----------------------------
Estimator DBSCAN doesn't seem to fail gracefully on sparse data: error message state explicitly that sparse input is not supported if this is not the case.
[31m[1m_ test_non_meta_estimators[ElasticNet-ElasticNet-check_estimator_sparse_data] __[0m

name = 'ElasticNet'
Estimator = <class 'sklearn.linear_model.coordinate_descent.ElasticNet'>
check = <function check_estimator_sparse_data at 0x7fd3f85b7730>

[1m    @pytest.mark.parametrize([0m
[1m            "name, Estimator, check",[0m
[1m            _generate_checks_per_estimator(_yield_all_checks,[0m
[1m                                           _tested_non_meta_estimators()),[0m
[1m            ids=_rename_partial[0m
[1m    )[0m
[1m    def test_non_meta_estimators(name, Estimator, check):[0m
[1m        # Common tests for non-meta estimators[0m
[1m        with ignore_warnings(category=(DeprecationWarning, ConvergenceWarning,[0m
[1m                                       UserWarning, FutureWarning)):[0m
[1m            estimator = Estimator()[0m
[1m            set_checking_parameters(estimator)[0m
[1m>           check(name, estimator)[0m

Estimator  = <class 'sklearn.linear_model.coordinate_descent.ElasticNet'>
check      = <function check_estimator_sparse_data at 0x7fd3f85b7730>
estimator  = ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
      max_iter=5, normalize=False, positive=False, precompute=False,
      random_state=None, selection='cyclic', tol=0.0001, warm_start=False)
name       = 'ElasticNet'

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_common.py[0m:100: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/estimator_checks.py[0m:506: in check_estimator_sparse_data
[1m    estimator.fit(X, y)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/coordinate_descent.py[0m:721: in fit
[1m    check_input=check_input)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:487: in _pre_fit
[1m    copy=False, return_mean=True, check_input=check_input)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:129: in _preprocess_data
[1m    X_offset, X_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:94: in mean_variance_axis
[1m    return _csc_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:156: TypeError
----------------------------- Captured stdout call -----------------------------
Estimator ElasticNet doesn't seem to fail gracefully on sparse data: error message state explicitly that sparse input is not supported if this is not the case.
[31m[1m test_non_meta_estimators[ElasticNetCV-ElasticNetCV-check_estimator_sparse_data] [0m

name = 'ElasticNetCV'
Estimator = <class 'sklearn.linear_model.coordinate_descent.ElasticNetCV'>
check = <function check_estimator_sparse_data at 0x7fd3f85b7730>

[1m    @pytest.mark.parametrize([0m
[1m            "name, Estimator, check",[0m
[1m            _generate_checks_per_estimator(_yield_all_checks,[0m
[1m                                           _tested_non_meta_estimators()),[0m
[1m            ids=_rename_partial[0m
[1m    )[0m
[1m    def test_non_meta_estimators(name, Estimator, check):[0m
[1m        # Common tests for non-meta estimators[0m
[1m        with ignore_warnings(category=(DeprecationWarning, ConvergenceWarning,[0m
[1m                                       UserWarning, FutureWarning)):[0m
[1m            estimator = Estimator()[0m
[1m            set_checking_parameters(estimator)[0m
[1m>           check(name, estimator)[0m

Estimator  = <class 'sklearn.linear_model.coordinate_descent.ElasticNetCV'>
check      = <function check_estimator_sparse_data at 0x7fd3f85b7730>
estimator  = ElasticNetCV(alphas=None, copy_X=True, cv='warn', eps=0.001,
       fit_intercept=True, l1_ratio=0.5, max_iter=5, n_al...ormalize=False, positive=False, precompute='auto',
       random_state=None, selection='cyclic', tol=0.0001, verbose=0)
name       = 'ElasticNetCV'

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_common.py[0m:100: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/estimator_checks.py[0m:506: in check_estimator_sparse_data
[1m    estimator.fit(X, y)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/coordinate_descent.py[0m:1176: in fit
[1m    copy_X=self.copy_X))[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/coordinate_descent.py[0m:102: in _alpha_grid
[1m    return_mean=True)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:129: in _preprocess_data
[1m    X_offset, X_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:94: in mean_variance_axis
[1m    return _csc_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:156: TypeError
----------------------------- Captured stdout call -----------------------------
Estimator ElasticNetCV doesn't seem to fail gracefully on sparse data: error message state explicitly that sparse input is not supported if this is not the case.
[31m[1m_____ test_non_meta_estimators[Isomap-Isomap-check_estimator_sparse_data] ______[0m

name = 'Isomap', Estimator = <class 'sklearn.manifold.isomap.Isomap'>
check = <function check_estimator_sparse_data at 0x7fd3f85b7730>

[1m    @pytest.mark.parametrize([0m
[1m            "name, Estimator, check",[0m
[1m            _generate_checks_per_estimator(_yield_all_checks,[0m
[1m                                           _tested_non_meta_estimators()),[0m
[1m            ids=_rename_partial[0m
[1m    )[0m
[1m    def test_non_meta_estimators(name, Estimator, check):[0m
[1m        # Common tests for non-meta estimators[0m
[1m        with ignore_warnings(category=(DeprecationWarning, ConvergenceWarning,[0m
[1m                                       UserWarning, FutureWarning)):[0m
[1m            estimator = Estimator()[0m
[1m            set_checking_parameters(estimator)[0m
[1m>           check(name, estimator)[0m

Estimator  = <class 'sklearn.manifold.isomap.Isomap'>
check      = <function check_estimator_sparse_data at 0x7fd3f85b7730>
estimator  = Isomap(eigen_solver='auto', max_iter=None, n_components=2, n_jobs=None,
    n_neighbors=5, neighbors_algorithm='auto', path_method='auto', tol=0)
name       = 'Isomap'

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_common.py[0m:100: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/estimator_checks.py[0m:506: in check_estimator_sparse_data
[1m    estimator.fit(X, y)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/manifold/isomap.py[0m:180: in fit
[1m    self._fit_transform(X)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/manifold/isomap.py[0m:130: in _fit_transform
[1m    mode='distance', n_jobs=self.n_jobs)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/graph.py[0m:105: in kneighbors_graph
[1m    return X.kneighbors_graph(X=query, n_neighbors=n_neighbors, mode=mode)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/base.py[0m:542: in kneighbors_graph
[1m    X, n_neighbors, return_distance=True)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = NearestNeighbors(algorithm='auto', leaf_size=30, metric='minkowski',
         metric_params=None, n_jobs=None, n_neighbors=5, p=2, radius=1.0)
X = <40x10 sparse matrix of type '<class 'numpy.float64'>'
	with 74 stored elements in Compressed Sparse Row format>
n_neighbors = 6, return_distance = True

[1m    def kneighbors(self, X=None, n_neighbors=None, return_distance=True):[0m
[1m        """Finds the K-neighbors of a point.[0m
[1m            Returns indices of and distances to the neighbors of each point.[0m
[1m    [0m
[1m            Parameters[0m
[1m            ----------[0m
[1m            X : array-like, shape (n_query, n_features), \[0m
[1m                    or (n_query, n_indexed) if metric == 'precomputed'[0m
[1m                The query point or points.[0m
[1m                If not provided, neighbors of each indexed point are returned.[0m
[1m                In this case, the query point is not considered its own neighbor.[0m
[1m    [0m
[1m            n_neighbors : int[0m
[1m                Number of neighbors to get (default is the value[0m
[1m                passed to the constructor).[0m
[1m    [0m
[1m            return_distance : boolean, optional. Defaults to True.[0m
[1m                If False, distances will not be returned[0m
[1m    [0m
[1m            Returns[0m
[1m            -------[0m
[1m            dist : array[0m
[1m                Array representing the lengths to points, only present if[0m
[1m                return_distance=True[0m
[1m    [0m
[1m            ind : array[0m
[1m                Indices of the nearest points in the population matrix.[0m
[1m    [0m
[1m            Examples[0m
[1m            --------[0m
[1m            In the following example, we construct a NeighborsClassifier[0m
[1m            class from an array representing our data set and ask who's[0m
[1m            the closest point to [1,1,1][0m
[1m    [0m
[1m            >>> samples = [[0., 0., 0.], [0., .5, 0.], [1., 1., .5]][0m
[1m            >>> from sklearn.neighbors import NearestNeighbors[0m
[1m            >>> neigh = NearestNeighbors(n_neighbors=1)[0m
[1m            >>> neigh.fit(samples) # doctest: +ELLIPSIS[0m
[1m            NearestNeighbors(algorithm='auto', leaf_size=30, ...)[0m
[1m            >>> print(neigh.kneighbors([[1., 1., 1.]])) # doctest: +ELLIPSIS[0m
[1m            (array([[0.5]]), array([[2]]))[0m
[1m    [0m
[1m            As you can see, it returns [[0.5]], and [[2]], which means that the[0m
[1m            element is at distance 0.5 and is the third element of samples[0m
[1m            (indexes start at 0). You can also query for multiple points:[0m
[1m    [0m
[1m            >>> X = [[0., 1., 0.], [1., 0., 1.]][0m
[1m            >>> neigh.kneighbors(X, return_distance=False) # doctest: +ELLIPSIS[0m
[1m            array([[1],[0m
[1m                   [2]]...)[0m
[1m    [0m
[1m            """[0m
[1m        check_is_fitted(self, "_fit_method")[0m
[1m    [0m
[1m        if n_neighbors is None:[0m
[1m            n_neighbors = self.n_neighbors[0m
[1m        elif n_neighbors <= 0:[0m
[1m            raise ValueError([0m
[1m                "Expected n_neighbors > 0. Got %d" %[0m
[1m                n_neighbors[0m
[1m            )[0m
[1m        else:[0m
[1m            if not np.issubdtype(type(n_neighbors), np.integer):[0m
[1m                raise TypeError([0m
[1m                    "n_neighbors does not take %s value, "[0m
[1m                    "enter integer value" %[0m
[1m                    type(n_neighbors))[0m
[1m    [0m
[1m        if X is not None:[0m
[1m            query_is_train = False[0m
[1m            X = check_array(X, accept_sparse='csr')[0m
[1m        else:[0m
[1m            query_is_train = True[0m
[1m            X = self._fit_X[0m
[1m            # Include an extra neighbor to account for the sample itself being[0m
[1m            # returned, which is removed later[0m
[1m            n_neighbors += 1[0m
[1m    [0m
[1m        train_size = self._fit_X.shape[0][0m
[1m        if n_neighbors > train_size:[0m
[1m            raise ValueError([0m
[1m                "Expected n_neighbors <= n_samples, "[0m
[1m                " but n_samples = %d, n_neighbors = %d" %[0m
[1m                (train_size, n_neighbors)[0m
[1m            )[0m
[1m        n_samples, _ = X.shape[0m
[1m        sample_range = np.arange(n_samples)[:, None][0m
[1m    [0m
[1m        n_jobs = effective_n_jobs(self.n_jobs)[0m
[1m        if self._fit_method == 'brute':[0m
[1m    [0m
[1m            reduce_func = partial(self._kneighbors_reduce_func,[0m
[1m                                  n_neighbors=n_neighbors,[0m
[1m                                  return_distance=return_distance)[0m
[1m    [0m
[1m            # for efficiency, use squared euclidean distances[0m
[1m            kwds = ({'squared': True} if self.effective_metric_ == 'euclidean'[0m
[1m                    else self.effective_metric_params_)[0m
[1m    [0m
[1m            result = pairwise_distances_chunked([0m
[1m                X, self._fit_X, reduce_func=reduce_func,[0m
[1m                metric=self.effective_metric_, n_jobs=n_jobs,[0m
[1m                **kwds)[0m
[1m    [0m
[1m        elif self._fit_method in ['ball_tree', 'kd_tree']:[0m
[1m            if issparse(X):[0m
[1m                raise ValueError([0m
[1m                    "%s does not work with sparse matrices. Densify the data, "[0m
[1m                    "or set algorithm='brute'" % self._fit_method)[0m
[1m            if LooseVersion(joblib_version) < LooseVersion('0.12'):[0m
[1m                # Deal with change of API in joblib[0m
[1m                delayed_query = delayed(self._tree.query,[0m
[1m                                        check_pickle=False)[0m
[1m                parallel_kwargs = {"backend": "threading"}[0m
[1m            else:[0m
[1m                delayed_query = delayed(self._tree.query)[0m
[1m                parallel_kwargs = {"prefer": "threads"}[0m
[1m            result = Parallel(n_jobs, **parallel_kwargs)([0m
[1m                delayed_query([0m
[1m                    X[s], n_neighbors, return_distance)[0m
[1m                for s in gen_even_slices(X.shape[0], n_jobs)[0m
[1m            )[0m
[1m        else:[0m
[1m            raise ValueError("internal: _fit_method not recognized")[0m
[1m    [0m
[1m        if return_distance:[0m
[1m>           dist, neigh_ind = zip(*result)[0m
[31m[1mE           TypeError: type object argument after * must be a sequence, not generator[0m

X          = <40x10 sparse matrix of type '<class 'numpy.float64'>'
	with 74 stored elements in Compressed Sparse Row format>
_          = 10
kwds       = {'squared': True}
n_jobs     = 1
n_neighbors = 6
n_samples  = 40
query_is_train = True
reduce_func = functools.partial(<bound method NearestNeighbors._kneighbors_reduce_func of NearestNeighbors(algorithm='auto', leaf_si...wski',
         metric_params=None, n_jobs=None, n_neighbors=5, p=2, radius=1.0)>, return_distance=True, n_neighbors=6)
result     = <generator object pairwise_distances_chunked at 0x7fd410713750>
return_distance = True
sample_range = array([[ 0],
       [ 1],
       [ 2],
       [ 3],
       [ 4],
       [ 5],
       [ 6],
       [ 7],
       [ 8],
 ...,
       [31],
       [32],
       [33],
       [34],
       [35],
       [36],
       [37],
       [38],
       [39]])
self       = NearestNeighbors(algorithm='auto', leaf_size=30, metric='minkowski',
         metric_params=None, n_jobs=None, n_neighbors=5, p=2, radius=1.0)
train_size = 40

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/base.py[0m:443: TypeError
----------------------------- Captured stdout call -----------------------------
Estimator Isomap doesn't seem to fail gracefully on sparse data: error message state explicitly that sparse input is not supported if this is not the case.
[31m[1m_____ test_non_meta_estimators[KMeans-KMeans-check_estimator_sparse_data] ______[0m

name = 'KMeans', Estimator = <class 'sklearn.cluster.k_means_.KMeans'>
check = <function check_estimator_sparse_data at 0x7fd3f85b7730>

[1m    @pytest.mark.parametrize([0m
[1m            "name, Estimator, check",[0m
[1m            _generate_checks_per_estimator(_yield_all_checks,[0m
[1m                                           _tested_non_meta_estimators()),[0m
[1m            ids=_rename_partial[0m
[1m    )[0m
[1m    def test_non_meta_estimators(name, Estimator, check):[0m
[1m        # Common tests for non-meta estimators[0m
[1m        with ignore_warnings(category=(DeprecationWarning, ConvergenceWarning,[0m
[1m                                       UserWarning, FutureWarning)):[0m
[1m            estimator = Estimator()[0m
[1m            set_checking_parameters(estimator)[0m
[1m>           check(name, estimator)[0m

Estimator  = <class 'sklearn.cluster.k_means_.KMeans'>
check      = <function check_estimator_sparse_data at 0x7fd3f85b7730>
estimator  = KMeans(algorithm='auto', copy_x=True, init='k-means++', max_iter=5,
    n_clusters=8, n_init=2, n_jobs=None, precompute_distances='auto',
    random_state=None, tol=0.0001, verbose=0)
name       = 'KMeans'

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_common.py[0m:100: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/estimator_checks.py[0m:506: in check_estimator_sparse_data
[1m    estimator.fit(X, y)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/k_means_.py[0m:968: in fit
[1m    return_n_iter=True)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/k_means_.py[0m:317: in k_means
[1m    tol = _tolerance(X, tol)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/k_means_.py[0m:165: in _tolerance
[1m    variances = mean_variance_axis(X, axis=0)[1][0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
----------------------------- Captured stdout call -----------------------------
Estimator KMeans doesn't seem to fail gracefully on sparse data: error message state explicitly that sparse input is not supported if this is not the case.
[31m[1m test_non_meta_estimators[KNeighborsClassifier-KNeighborsClassifier-check_estimator_sparse_data] [0m

name = 'KNeighborsClassifier'
Estimator = <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
check = <function check_estimator_sparse_data at 0x7fd3f85b7730>

[1m    @pytest.mark.parametrize([0m
[1m            "name, Estimator, check",[0m
[1m            _generate_checks_per_estimator(_yield_all_checks,[0m
[1m                                           _tested_non_meta_estimators()),[0m
[1m            ids=_rename_partial[0m
[1m    )[0m
[1m    def test_non_meta_estimators(name, Estimator, check):[0m
[1m        # Common tests for non-meta estimators[0m
[1m        with ignore_warnings(category=(DeprecationWarning, ConvergenceWarning,[0m
[1m                                       UserWarning, FutureWarning)):[0m
[1m            estimator = Estimator()[0m
[1m            set_checking_parameters(estimator)[0m
[1m>           check(name, estimator)[0m

Estimator  = <class 'sklearn.neighbors.classification.KNeighborsClassifier'>
check      = <function check_estimator_sparse_data at 0x7fd3f85b7730>
estimator  = KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=None, n_neighbors=5, p=2,
           weights='uniform')
name       = 'KNeighborsClassifier'

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_common.py[0m:100: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/estimator_checks.py[0m:508: in check_estimator_sparse_data
[1m    pred = estimator.predict(X)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/classification.py[0m:149: in predict
[1m    neigh_dist, neigh_ind = self.kneighbors(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=None, n_neighbors=5, p=2,
           weights='uniform')
X = <40x10 sparse matrix of type '<class 'numpy.float64'>'
	with 74 stored elements in Compressed Sparse Row format>
n_neighbors = 5, return_distance = True

[1m    def kneighbors(self, X=None, n_neighbors=None, return_distance=True):[0m
[1m        """Finds the K-neighbors of a point.[0m
[1m            Returns indices of and distances to the neighbors of each point.[0m
[1m    [0m
[1m            Parameters[0m
[1m            ----------[0m
[1m            X : array-like, shape (n_query, n_features), \[0m
[1m                    or (n_query, n_indexed) if metric == 'precomputed'[0m
[1m                The query point or points.[0m
[1m                If not provided, neighbors of each indexed point are returned.[0m
[1m                In this case, the query point is not considered its own neighbor.[0m
[1m    [0m
[1m            n_neighbors : int[0m
[1m                Number of neighbors to get (default is the value[0m
[1m                passed to the constructor).[0m
[1m    [0m
[1m            return_distance : boolean, optional. Defaults to True.[0m
[1m                If False, distances will not be returned[0m
[1m    [0m
[1m            Returns[0m
[1m            -------[0m
[1m            dist : array[0m
[1m                Array representing the lengths to points, only present if[0m
[1m                return_distance=True[0m
[1m    [0m
[1m            ind : array[0m
[1m                Indices of the nearest points in the population matrix.[0m
[1m    [0m
[1m            Examples[0m
[1m            --------[0m
[1m            In the following example, we construct a NeighborsClassifier[0m
[1m            class from an array representing our data set and ask who's[0m
[1m            the closest point to [1,1,1][0m
[1m    [0m
[1m            >>> samples = [[0., 0., 0.], [0., .5, 0.], [1., 1., .5]][0m
[1m            >>> from sklearn.neighbors import NearestNeighbors[0m
[1m            >>> neigh = NearestNeighbors(n_neighbors=1)[0m
[1m            >>> neigh.fit(samples) # doctest: +ELLIPSIS[0m
[1m            NearestNeighbors(algorithm='auto', leaf_size=30, ...)[0m
[1m            >>> print(neigh.kneighbors([[1., 1., 1.]])) # doctest: +ELLIPSIS[0m
[1m            (array([[0.5]]), array([[2]]))[0m
[1m    [0m
[1m            As you can see, it returns [[0.5]], and [[2]], which means that the[0m
[1m            element is at distance 0.5 and is the third element of samples[0m
[1m            (indexes start at 0). You can also query for multiple points:[0m
[1m    [0m
[1m            >>> X = [[0., 1., 0.], [1., 0., 1.]][0m
[1m            >>> neigh.kneighbors(X, return_distance=False) # doctest: +ELLIPSIS[0m
[1m            array([[1],[0m
[1m                   [2]]...)[0m
[1m    [0m
[1m            """[0m
[1m        check_is_fitted(self, "_fit_method")[0m
[1m    [0m
[1m        if n_neighbors is None:[0m
[1m            n_neighbors = self.n_neighbors[0m
[1m        elif n_neighbors <= 0:[0m
[1m            raise ValueError([0m
[1m                "Expected n_neighbors > 0. Got %d" %[0m
[1m                n_neighbors[0m
[1m            )[0m
[1m        else:[0m
[1m            if not np.issubdtype(type(n_neighbors), np.integer):[0m
[1m                raise TypeError([0m
[1m                    "n_neighbors does not take %s value, "[0m
[1m                    "enter integer value" %[0m
[1m                    type(n_neighbors))[0m
[1m    [0m
[1m        if X is not None:[0m
[1m            query_is_train = False[0m
[1m            X = check_array(X, accept_sparse='csr')[0m
[1m        else:[0m
[1m            query_is_train = True[0m
[1m            X = self._fit_X[0m
[1m            # Include an extra neighbor to account for the sample itself being[0m
[1m            # returned, which is removed later[0m
[1m            n_neighbors += 1[0m
[1m    [0m
[1m        train_size = self._fit_X.shape[0][0m
[1m        if n_neighbors > train_size:[0m
[1m            raise ValueError([0m
[1m                "Expected n_neighbors <= n_samples, "[0m
[1m                " but n_samples = %d, n_neighbors = %d" %[0m
[1m                (train_size, n_neighbors)[0m
[1m            )[0m
[1m        n_samples, _ = X.shape[0m
[1m        sample_range = np.arange(n_samples)[:, None][0m
[1m    [0m
[1m        n_jobs = effective_n_jobs(self.n_jobs)[0m
[1m        if self._fit_method == 'brute':[0m
[1m    [0m
[1m            reduce_func = partial(self._kneighbors_reduce_func,[0m
[1m                                  n_neighbors=n_neighbors,[0m
[1m                                  return_distance=return_distance)[0m
[1m    [0m
[1m            # for efficiency, use squared euclidean distances[0m
[1m            kwds = ({'squared': True} if self.effective_metric_ == 'euclidean'[0m
[1m                    else self.effective_metric_params_)[0m
[1m    [0m
[1m            result = pairwise_distances_chunked([0m
[1m                X, self._fit_X, reduce_func=reduce_func,[0m
[1m                metric=self.effective_metric_, n_jobs=n_jobs,[0m
[1m                **kwds)[0m
[1m    [0m
[1m        elif self._fit_method in ['ball_tree', 'kd_tree']:[0m
[1m            if issparse(X):[0m
[1m                raise ValueError([0m
[1m                    "%s does not work with sparse matrices. Densify the data, "[0m
[1m                    "or set algorithm='brute'" % self._fit_method)[0m
[1m            if LooseVersion(joblib_version) < LooseVersion('0.12'):[0m
[1m                # Deal with change of API in joblib[0m
[1m                delayed_query = delayed(self._tree.query,[0m
[1m                                        check_pickle=False)[0m
[1m                parallel_kwargs = {"backend": "threading"}[0m
[1m            else:[0m
[1m                delayed_query = delayed(self._tree.query)[0m
[1m                parallel_kwargs = {"prefer": "threads"}[0m
[1m            result = Parallel(n_jobs, **parallel_kwargs)([0m
[1m                delayed_query([0m
[1m                    X[s], n_neighbors, return_distance)[0m
[1m                for s in gen_even_slices(X.shape[0], n_jobs)[0m
[1m            )[0m
[1m        else:[0m
[1m            raise ValueError("internal: _fit_method not recognized")[0m
[1m    [0m
[1m        if return_distance:[0m
[1m>           dist, neigh_ind = zip(*result)[0m
[31m[1mE           TypeError: type object argument after * must be a sequence, not generator[0m

X          = <40x10 sparse matrix of type '<class 'numpy.float64'>'
	with 74 stored elements in Compressed Sparse Row format>
_          = 10
kwds       = {'squared': True}
n_jobs     = 1
n_neighbors = 5
n_samples  = 40
query_is_train = False
reduce_func = functools.partial(<bound method KNeighborsClassifier._kneighbors_reduce_func of KNeighborsClassifier(algorithm='auto',...tric_params=None, n_jobs=None, n_neighbors=5, p=2,
           weights='uniform')>, return_distance=True, n_neighbors=5)
result     = <generator object pairwise_distances_chunked at 0x7fd41052dfc0>
return_distance = True
sample_range = array([[ 0],
       [ 1],
       [ 2],
       [ 3],
       [ 4],
       [ 5],
       [ 6],
       [ 7],
       [ 8],
 ...,
       [31],
       [32],
       [33],
       [34],
       [35],
       [36],
       [37],
       [38],
       [39]])
self       = KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=None, n_neighbors=5, p=2,
           weights='uniform')
train_size = 40

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/base.py[0m:443: TypeError
----------------------------- Captured stdout call -----------------------------
Estimator KNeighborsClassifier doesn't seem to fail gracefully on sparse data: error message state explicitly that sparse input is not supported if this is not the case.
[31m[1m test_non_meta_estimators[KNeighborsRegressor-KNeighborsRegressor-check_estimator_sparse_data] [0m

name = 'KNeighborsRegressor'
Estimator = <class 'sklearn.neighbors.regression.KNeighborsRegressor'>
check = <function check_estimator_sparse_data at 0x7fd3f85b7730>

[1m    @pytest.mark.parametrize([0m
[1m            "name, Estimator, check",[0m
[1m            _generate_checks_per_estimator(_yield_all_checks,[0m
[1m                                           _tested_non_meta_estimators()),[0m
[1m            ids=_rename_partial[0m
[1m    )[0m
[1m    def test_non_meta_estimators(name, Estimator, check):[0m
[1m        # Common tests for non-meta estimators[0m
[1m        with ignore_warnings(category=(DeprecationWarning, ConvergenceWarning,[0m
[1m                                       UserWarning, FutureWarning)):[0m
[1m            estimator = Estimator()[0m
[1m            set_checking_parameters(estimator)[0m
[1m>           check(name, estimator)[0m

Estimator  = <class 'sklearn.neighbors.regression.KNeighborsRegressor'>
check      = <function check_estimator_sparse_data at 0x7fd3f85b7730>
estimator  = KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
          metric_params=None, n_jobs=None, n_neighbors=5, p=2,
          weights='uniform')
name       = 'KNeighborsRegressor'

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_common.py[0m:100: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/estimator_checks.py[0m:508: in check_estimator_sparse_data
[1m    pred = estimator.predict(X)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/regression.py[0m:157: in predict
[1m    neigh_dist, neigh_ind = self.kneighbors(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
          metric_params=None, n_jobs=None, n_neighbors=5, p=2,
          weights='uniform')
X = <40x10 sparse matrix of type '<class 'numpy.float64'>'
	with 74 stored elements in Compressed Sparse Row format>
n_neighbors = 5, return_distance = True

[1m    def kneighbors(self, X=None, n_neighbors=None, return_distance=True):[0m
[1m        """Finds the K-neighbors of a point.[0m
[1m            Returns indices of and distances to the neighbors of each point.[0m
[1m    [0m
[1m            Parameters[0m
[1m            ----------[0m
[1m            X : array-like, shape (n_query, n_features), \[0m
[1m                    or (n_query, n_indexed) if metric == 'precomputed'[0m
[1m                The query point or points.[0m
[1m                If not provided, neighbors of each indexed point are returned.[0m
[1m                In this case, the query point is not considered its own neighbor.[0m
[1m    [0m
[1m            n_neighbors : int[0m
[1m                Number of neighbors to get (default is the value[0m
[1m                passed to the constructor).[0m
[1m    [0m
[1m            return_distance : boolean, optional. Defaults to True.[0m
[1m                If False, distances will not be returned[0m
[1m    [0m
[1m            Returns[0m
[1m            -------[0m
[1m            dist : array[0m
[1m                Array representing the lengths to points, only present if[0m
[1m                return_distance=True[0m
[1m    [0m
[1m            ind : array[0m
[1m                Indices of the nearest points in the population matrix.[0m
[1m    [0m
[1m            Examples[0m
[1m            --------[0m
[1m            In the following example, we construct a NeighborsClassifier[0m
[1m            class from an array representing our data set and ask who's[0m
[1m            the closest point to [1,1,1][0m
[1m    [0m
[1m            >>> samples = [[0., 0., 0.], [0., .5, 0.], [1., 1., .5]][0m
[1m            >>> from sklearn.neighbors import NearestNeighbors[0m
[1m            >>> neigh = NearestNeighbors(n_neighbors=1)[0m
[1m            >>> neigh.fit(samples) # doctest: +ELLIPSIS[0m
[1m            NearestNeighbors(algorithm='auto', leaf_size=30, ...)[0m
[1m            >>> print(neigh.kneighbors([[1., 1., 1.]])) # doctest: +ELLIPSIS[0m
[1m            (array([[0.5]]), array([[2]]))[0m
[1m    [0m
[1m            As you can see, it returns [[0.5]], and [[2]], which means that the[0m
[1m            element is at distance 0.5 and is the third element of samples[0m
[1m            (indexes start at 0). You can also query for multiple points:[0m
[1m    [0m
[1m            >>> X = [[0., 1., 0.], [1., 0., 1.]][0m
[1m            >>> neigh.kneighbors(X, return_distance=False) # doctest: +ELLIPSIS[0m
[1m            array([[1],[0m
[1m                   [2]]...)[0m
[1m    [0m
[1m            """[0m
[1m        check_is_fitted(self, "_fit_method")[0m
[1m    [0m
[1m        if n_neighbors is None:[0m
[1m            n_neighbors = self.n_neighbors[0m
[1m        elif n_neighbors <= 0:[0m
[1m            raise ValueError([0m
[1m                "Expected n_neighbors > 0. Got %d" %[0m
[1m                n_neighbors[0m
[1m            )[0m
[1m        else:[0m
[1m            if not np.issubdtype(type(n_neighbors), np.integer):[0m
[1m                raise TypeError([0m
[1m                    "n_neighbors does not take %s value, "[0m
[1m                    "enter integer value" %[0m
[1m                    type(n_neighbors))[0m
[1m    [0m
[1m        if X is not None:[0m
[1m            query_is_train = False[0m
[1m            X = check_array(X, accept_sparse='csr')[0m
[1m        else:[0m
[1m            query_is_train = True[0m
[1m            X = self._fit_X[0m
[1m            # Include an extra neighbor to account for the sample itself being[0m
[1m            # returned, which is removed later[0m
[1m            n_neighbors += 1[0m
[1m    [0m
[1m        train_size = self._fit_X.shape[0][0m
[1m        if n_neighbors > train_size:[0m
[1m            raise ValueError([0m
[1m                "Expected n_neighbors <= n_samples, "[0m
[1m                " but n_samples = %d, n_neighbors = %d" %[0m
[1m                (train_size, n_neighbors)[0m
[1m            )[0m
[1m        n_samples, _ = X.shape[0m
[1m        sample_range = np.arange(n_samples)[:, None][0m
[1m    [0m
[1m        n_jobs = effective_n_jobs(self.n_jobs)[0m
[1m        if self._fit_method == 'brute':[0m
[1m    [0m
[1m            reduce_func = partial(self._kneighbors_reduce_func,[0m
[1m                                  n_neighbors=n_neighbors,[0m
[1m                                  return_distance=return_distance)[0m
[1m    [0m
[1m            # for efficiency, use squared euclidean distances[0m
[1m            kwds = ({'squared': True} if self.effective_metric_ == 'euclidean'[0m
[1m                    else self.effective_metric_params_)[0m
[1m    [0m
[1m            result = pairwise_distances_chunked([0m
[1m                X, self._fit_X, reduce_func=reduce_func,[0m
[1m                metric=self.effective_metric_, n_jobs=n_jobs,[0m
[1m                **kwds)[0m
[1m    [0m
[1m        elif self._fit_method in ['ball_tree', 'kd_tree']:[0m
[1m            if issparse(X):[0m
[1m                raise ValueError([0m
[1m                    "%s does not work with sparse matrices. Densify the data, "[0m
[1m                    "or set algorithm='brute'" % self._fit_method)[0m
[1m            if LooseVersion(joblib_version) < LooseVersion('0.12'):[0m
[1m                # Deal with change of API in joblib[0m
[1m                delayed_query = delayed(self._tree.query,[0m
[1m                                        check_pickle=False)[0m
[1m                parallel_kwargs = {"backend": "threading"}[0m
[1m            else:[0m
[1m                delayed_query = delayed(self._tree.query)[0m
[1m                parallel_kwargs = {"prefer": "threads"}[0m
[1m            result = Parallel(n_jobs, **parallel_kwargs)([0m
[1m                delayed_query([0m
[1m                    X[s], n_neighbors, return_distance)[0m
[1m                for s in gen_even_slices(X.shape[0], n_jobs)[0m
[1m            )[0m
[1m        else:[0m
[1m            raise ValueError("internal: _fit_method not recognized")[0m
[1m    [0m
[1m        if return_distance:[0m
[1m>           dist, neigh_ind = zip(*result)[0m
[31m[1mE           TypeError: type object argument after * must be a sequence, not generator[0m

X          = <40x10 sparse matrix of type '<class 'numpy.float64'>'
	with 74 stored elements in Compressed Sparse Row format>
_          = 10
kwds       = {'squared': True}
n_jobs     = 1
n_neighbors = 5
n_samples  = 40
query_is_train = False
reduce_func = functools.partial(<bound method KNeighborsRegressor._kneighbors_reduce_func of KNeighborsRegressor(algorithm='auto', l...etric_params=None, n_jobs=None, n_neighbors=5, p=2,
          weights='uniform')>, return_distance=True, n_neighbors=5)
result     = <generator object pairwise_distances_chunked at 0x7fd4105275a0>
return_distance = True
sample_range = array([[ 0],
       [ 1],
       [ 2],
       [ 3],
       [ 4],
       [ 5],
       [ 6],
       [ 7],
       [ 8],
 ...,
       [31],
       [32],
       [33],
       [34],
       [35],
       [36],
       [37],
       [38],
       [39]])
self       = KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
          metric_params=None, n_jobs=None, n_neighbors=5, p=2,
          weights='uniform')
train_size = 40

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/base.py[0m:443: TypeError
----------------------------- Captured stdout call -----------------------------
Estimator KNeighborsRegressor doesn't seem to fail gracefully on sparse data: error message state explicitly that sparse input is not supported if this is not the case.
[31m[1m______ test_non_meta_estimators[Lasso-Lasso-check_estimator_sparse_data] _______[0m

name = 'Lasso'
Estimator = <class 'sklearn.linear_model.coordinate_descent.Lasso'>
check = <function check_estimator_sparse_data at 0x7fd3f85b7730>

[1m    @pytest.mark.parametrize([0m
[1m            "name, Estimator, check",[0m
[1m            _generate_checks_per_estimator(_yield_all_checks,[0m
[1m                                           _tested_non_meta_estimators()),[0m
[1m            ids=_rename_partial[0m
[1m    )[0m
[1m    def test_non_meta_estimators(name, Estimator, check):[0m
[1m        # Common tests for non-meta estimators[0m
[1m        with ignore_warnings(category=(DeprecationWarning, ConvergenceWarning,[0m
[1m                                       UserWarning, FutureWarning)):[0m
[1m            estimator = Estimator()[0m
[1m            set_checking_parameters(estimator)[0m
[1m>           check(name, estimator)[0m

Estimator  = <class 'sklearn.linear_model.coordinate_descent.Lasso'>
check      = <function check_estimator_sparse_data at 0x7fd3f85b7730>
estimator  = Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=5, normalize=False,
   positive=False, precompute=False, random_state=None, selection='cyclic',
   tol=0.0001, warm_start=False)
name       = 'Lasso'

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_common.py[0m:100: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/estimator_checks.py[0m:506: in check_estimator_sparse_data
[1m    estimator.fit(X, y)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/coordinate_descent.py[0m:721: in fit
[1m    check_input=check_input)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:487: in _pre_fit
[1m    copy=False, return_mean=True, check_input=check_input)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:129: in _preprocess_data
[1m    X_offset, X_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:94: in mean_variance_axis
[1m    return _csc_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:156: TypeError
----------------------------- Captured stdout call -----------------------------
Estimator Lasso doesn't seem to fail gracefully on sparse data: error message state explicitly that sparse input is not supported if this is not the case.
[31m[1m____ test_non_meta_estimators[LassoCV-LassoCV-check_estimator_sparse_data] _____[0m

name = 'LassoCV'
Estimator = <class 'sklearn.linear_model.coordinate_descent.LassoCV'>
check = <function check_estimator_sparse_data at 0x7fd3f85b7730>

[1m    @pytest.mark.parametrize([0m
[1m            "name, Estimator, check",[0m
[1m            _generate_checks_per_estimator(_yield_all_checks,[0m
[1m                                           _tested_non_meta_estimators()),[0m
[1m            ids=_rename_partial[0m
[1m    )[0m
[1m    def test_non_meta_estimators(name, Estimator, check):[0m
[1m        # Common tests for non-meta estimators[0m
[1m        with ignore_warnings(category=(DeprecationWarning, ConvergenceWarning,[0m
[1m                                       UserWarning, FutureWarning)):[0m
[1m            estimator = Estimator()[0m
[1m            set_checking_parameters(estimator)[0m
[1m>           check(name, estimator)[0m

Estimator  = <class 'sklearn.linear_model.coordinate_descent.LassoCV'>
check      = <function check_estimator_sparse_data at 0x7fd3f85b7730>
estimator  = LassoCV(alphas=None, copy_X=True, cv='warn', eps=0.001, fit_intercept=True,
    max_iter=5, n_alphas=100, n_jobs=None,...ize=False, positive=False,
    precompute='auto', random_state=None, selection='cyclic', tol=0.0001,
    verbose=False)
name       = 'LassoCV'

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_common.py[0m:100: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/estimator_checks.py[0m:506: in check_estimator_sparse_data
[1m    estimator.fit(X, y)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/coordinate_descent.py[0m:1176: in fit
[1m    copy_X=self.copy_X))[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/coordinate_descent.py[0m:102: in _alpha_grid
[1m    return_mean=True)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:129: in _preprocess_data
[1m    X_offset, X_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:94: in mean_variance_axis
[1m    return _csc_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:156: TypeError
----------------------------- Captured stdout call -----------------------------
Estimator LassoCV doesn't seem to fail gracefully on sparse data: error message state explicitly that sparse input is not supported if this is not the case.
[31m[1m test_non_meta_estimators[LinearRegression-LinearRegression-check_estimator_sparse_data] [0m

name = 'LinearRegression'
Estimator = <class 'sklearn.linear_model.base.LinearRegression'>
check = <function check_estimator_sparse_data at 0x7fd3f85b7730>

[1m    @pytest.mark.parametrize([0m
[1m            "name, Estimator, check",[0m
[1m            _generate_checks_per_estimator(_yield_all_checks,[0m
[1m                                           _tested_non_meta_estimators()),[0m
[1m            ids=_rename_partial[0m
[1m    )[0m
[1m    def test_non_meta_estimators(name, Estimator, check):[0m
[1m        # Common tests for non-meta estimators[0m
[1m        with ignore_warnings(category=(DeprecationWarning, ConvergenceWarning,[0m
[1m                                       UserWarning, FutureWarning)):[0m
[1m            estimator = Estimator()[0m
[1m            set_checking_parameters(estimator)[0m
[1m>           check(name, estimator)[0m

Estimator  = <class 'sklearn.linear_model.base.LinearRegression'>
check      = <function check_estimator_sparse_data at 0x7fd3f85b7730>
estimator  = LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None,
         normalize=False)
name       = 'LinearRegression'

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_common.py[0m:100: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/estimator_checks.py[0m:506: in check_estimator_sparse_data
[1m    estimator.fit(X, y)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:448: in fit
[1m    copy=self.copy_X, sample_weight=sample_weight)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:129: in _preprocess_data
[1m    X_offset, X_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
----------------------------- Captured stdout call -----------------------------
Estimator LinearRegression doesn't seem to fail gracefully on sparse data: error message state explicitly that sparse input is not supported if this is not the case.
[31m[1m test_non_meta_estimators[LocalOutlierFactor-LocalOutlierFactor-check_estimator_sparse_data] [0m

name = 'LocalOutlierFactor'
Estimator = <class 'sklearn.neighbors.lof.LocalOutlierFactor'>
check = <function check_estimator_sparse_data at 0x7fd3f85b7730>

[1m    @pytest.mark.parametrize([0m
[1m            "name, Estimator, check",[0m
[1m            _generate_checks_per_estimator(_yield_all_checks,[0m
[1m                                           _tested_non_meta_estimators()),[0m
[1m            ids=_rename_partial[0m
[1m    )[0m
[1m    def test_non_meta_estimators(name, Estimator, check):[0m
[1m        # Common tests for non-meta estimators[0m
[1m        with ignore_warnings(category=(DeprecationWarning, ConvergenceWarning,[0m
[1m                                       UserWarning, FutureWarning)):[0m
[1m            estimator = Estimator()[0m
[1m            set_checking_parameters(estimator)[0m
[1m>           check(name, estimator)[0m

Estimator  = <class 'sklearn.neighbors.lof.LocalOutlierFactor'>
check      = <function check_estimator_sparse_data at 0x7fd3f85b7730>
estimator  = LocalOutlierFactor(algorithm='auto', contamination='legacy', leaf_size=30,
          metric='minkowski', metric_params=None, n_jobs=None,
          n_neighbors=20, novelty=False, p=2)
name       = 'LocalOutlierFactor'

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_common.py[0m:100: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/estimator_checks.py[0m:506: in check_estimator_sparse_data
[1m    estimator.fit(X, y)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/lof.py[0m:257: in fit
[1m    self.kneighbors(None, n_neighbors=self.n_neighbors_))[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = LocalOutlierFactor(algorithm='auto', contamination='legacy', leaf_size=30,
          metric='minkowski', metric_params=None, n_jobs=None,
          n_neighbors=20, novelty=False, p=2)
X = <40x10 sparse matrix of type '<class 'numpy.float64'>'
	with 74 stored elements in Compressed Sparse Row format>
n_neighbors = 21, return_distance = True

[1m    def kneighbors(self, X=None, n_neighbors=None, return_distance=True):[0m
[1m        """Finds the K-neighbors of a point.[0m
[1m            Returns indices of and distances to the neighbors of each point.[0m
[1m    [0m
[1m            Parameters[0m
[1m            ----------[0m
[1m            X : array-like, shape (n_query, n_features), \[0m
[1m                    or (n_query, n_indexed) if metric == 'precomputed'[0m
[1m                The query point or points.[0m
[1m                If not provided, neighbors of each indexed point are returned.[0m
[1m                In this case, the query point is not considered its own neighbor.[0m
[1m    [0m
[1m            n_neighbors : int[0m
[1m                Number of neighbors to get (default is the value[0m
[1m                passed to the constructor).[0m
[1m    [0m
[1m            return_distance : boolean, optional. Defaults to True.[0m
[1m                If False, distances will not be returned[0m
[1m    [0m
[1m            Returns[0m
[1m            -------[0m
[1m            dist : array[0m
[1m                Array representing the lengths to points, only present if[0m
[1m                return_distance=True[0m
[1m    [0m
[1m            ind : array[0m
[1m                Indices of the nearest points in the population matrix.[0m
[1m    [0m
[1m            Examples[0m
[1m            --------[0m
[1m            In the following example, we construct a NeighborsClassifier[0m
[1m            class from an array representing our data set and ask who's[0m
[1m            the closest point to [1,1,1][0m
[1m    [0m
[1m            >>> samples = [[0., 0., 0.], [0., .5, 0.], [1., 1., .5]][0m
[1m            >>> from sklearn.neighbors import NearestNeighbors[0m
[1m            >>> neigh = NearestNeighbors(n_neighbors=1)[0m
[1m            >>> neigh.fit(samples) # doctest: +ELLIPSIS[0m
[1m            NearestNeighbors(algorithm='auto', leaf_size=30, ...)[0m
[1m            >>> print(neigh.kneighbors([[1., 1., 1.]])) # doctest: +ELLIPSIS[0m
[1m            (array([[0.5]]), array([[2]]))[0m
[1m    [0m
[1m            As you can see, it returns [[0.5]], and [[2]], which means that the[0m
[1m            element is at distance 0.5 and is the third element of samples[0m
[1m            (indexes start at 0). You can also query for multiple points:[0m
[1m    [0m
[1m            >>> X = [[0., 1., 0.], [1., 0., 1.]][0m
[1m            >>> neigh.kneighbors(X, return_distance=False) # doctest: +ELLIPSIS[0m
[1m            array([[1],[0m
[1m                   [2]]...)[0m
[1m    [0m
[1m            """[0m
[1m        check_is_fitted(self, "_fit_method")[0m
[1m    [0m
[1m        if n_neighbors is None:[0m
[1m            n_neighbors = self.n_neighbors[0m
[1m        elif n_neighbors <= 0:[0m
[1m            raise ValueError([0m
[1m                "Expected n_neighbors > 0. Got %d" %[0m
[1m                n_neighbors[0m
[1m            )[0m
[1m        else:[0m
[1m            if not np.issubdtype(type(n_neighbors), np.integer):[0m
[1m                raise TypeError([0m
[1m                    "n_neighbors does not take %s value, "[0m
[1m                    "enter integer value" %[0m
[1m                    type(n_neighbors))[0m
[1m    [0m
[1m        if X is not None:[0m
[1m            query_is_train = False[0m
[1m            X = check_array(X, accept_sparse='csr')[0m
[1m        else:[0m
[1m            query_is_train = True[0m
[1m            X = self._fit_X[0m
[1m            # Include an extra neighbor to account for the sample itself being[0m
[1m            # returned, which is removed later[0m
[1m            n_neighbors += 1[0m
[1m    [0m
[1m        train_size = self._fit_X.shape[0][0m
[1m        if n_neighbors > train_size:[0m
[1m            raise ValueError([0m
[1m                "Expected n_neighbors <= n_samples, "[0m
[1m                " but n_samples = %d, n_neighbors = %d" %[0m
[1m                (train_size, n_neighbors)[0m
[1m            )[0m
[1m        n_samples, _ = X.shape[0m
[1m        sample_range = np.arange(n_samples)[:, None][0m
[1m    [0m
[1m        n_jobs = effective_n_jobs(self.n_jobs)[0m
[1m        if self._fit_method == 'brute':[0m
[1m    [0m
[1m            reduce_func = partial(self._kneighbors_reduce_func,[0m
[1m                                  n_neighbors=n_neighbors,[0m
[1m                                  return_distance=return_distance)[0m
[1m    [0m
[1m            # for efficiency, use squared euclidean distances[0m
[1m            kwds = ({'squared': True} if self.effective_metric_ == 'euclidean'[0m
[1m                    else self.effective_metric_params_)[0m
[1m    [0m
[1m            result = pairwise_distances_chunked([0m
[1m                X, self._fit_X, reduce_func=reduce_func,[0m
[1m                metric=self.effective_metric_, n_jobs=n_jobs,[0m
[1m                **kwds)[0m
[1m    [0m
[1m        elif self._fit_method in ['ball_tree', 'kd_tree']:[0m
[1m            if issparse(X):[0m
[1m                raise ValueError([0m
[1m                    "%s does not work with sparse matrices. Densify the data, "[0m
[1m                    "or set algorithm='brute'" % self._fit_method)[0m
[1m            if LooseVersion(joblib_version) < LooseVersion('0.12'):[0m
[1m                # Deal with change of API in joblib[0m
[1m                delayed_query = delayed(self._tree.query,[0m
[1m                                        check_pickle=False)[0m
[1m                parallel_kwargs = {"backend": "threading"}[0m
[1m            else:[0m
[1m                delayed_query = delayed(self._tree.query)[0m
[1m                parallel_kwargs = {"prefer": "threads"}[0m
[1m            result = Parallel(n_jobs, **parallel_kwargs)([0m
[1m                delayed_query([0m
[1m                    X[s], n_neighbors, return_distance)[0m
[1m                for s in gen_even_slices(X.shape[0], n_jobs)[0m
[1m            )[0m
[1m        else:[0m
[1m            raise ValueError("internal: _fit_method not recognized")[0m
[1m    [0m
[1m        if return_distance:[0m
[1m>           dist, neigh_ind = zip(*result)[0m
[31m[1mE           TypeError: type object argument after * must be a sequence, not generator[0m

X          = <40x10 sparse matrix of type '<class 'numpy.float64'>'
	with 74 stored elements in Compressed Sparse Row format>
_          = 10
kwds       = {'squared': True}
n_jobs     = 1
n_neighbors = 21
n_samples  = 40
query_is_train = True
reduce_func = functools.partial(<bound method LocalOutlierFactor._kneighbors_reduce_func of LocalOutlierFactor(algorithm='auto', con... metric_params=None, n_jobs=None,
          n_neighbors=20, novelty=False, p=2)>, return_distance=True, n_neighbors=21)
result     = <generator object pairwise_distances_chunked at 0x7fd41059a288>
return_distance = True
sample_range = array([[ 0],
       [ 1],
       [ 2],
       [ 3],
       [ 4],
       [ 5],
       [ 6],
       [ 7],
       [ 8],
 ...,
       [31],
       [32],
       [33],
       [34],
       [35],
       [36],
       [37],
       [38],
       [39]])
self       = LocalOutlierFactor(algorithm='auto', contamination='legacy', leaf_size=30,
          metric='minkowski', metric_params=None, n_jobs=None,
          n_neighbors=20, novelty=False, p=2)
train_size = 40

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/base.py[0m:443: TypeError
----------------------------- Captured stdout call -----------------------------
Estimator LocalOutlierFactor doesn't seem to fail gracefully on sparse data: error message state explicitly that sparse input is not supported if this is not the case.
[31m[1m test_non_meta_estimators[MiniBatchKMeans-MiniBatchKMeans-check_estimator_sparse_data] [0m

name = 'MiniBatchKMeans'
Estimator = <class 'sklearn.cluster.k_means_.MiniBatchKMeans'>
check = <function check_estimator_sparse_data at 0x7fd3f85b7730>

[1m    @pytest.mark.parametrize([0m
[1m            "name, Estimator, check",[0m
[1m            _generate_checks_per_estimator(_yield_all_checks,[0m
[1m                                           _tested_non_meta_estimators()),[0m
[1m            ids=_rename_partial[0m
[1m    )[0m
[1m    def test_non_meta_estimators(name, Estimator, check):[0m
[1m        # Common tests for non-meta estimators[0m
[1m        with ignore_warnings(category=(DeprecationWarning, ConvergenceWarning,[0m
[1m                                       UserWarning, FutureWarning)):[0m
[1m            estimator = Estimator()[0m
[1m            set_checking_parameters(estimator)[0m
[1m>           check(name, estimator)[0m

Estimator  = <class 'sklearn.cluster.k_means_.MiniBatchKMeans'>
check      = <function check_estimator_sparse_data at 0x7fd3f85b7730>
estimator  = MiniBatchKMeans(batch_size=100, compute_labels=True, init='k-means++',
        init_size=None, max_iter=5, max_no_improvement=10, n_clusters=8,
        n_init=2, random_state=None, reassignment_ratio=0.01, tol=0.0,
        verbose=0)
name       = 'MiniBatchKMeans'

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_common.py[0m:100: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/estimator_checks.py[0m:506: in check_estimator_sparse_data
[1m    estimator.fit(X, y)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/k_means_.py[0m:1508: in fit
[1m    x_squared_norms = row_norms(X, squared=True)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py[0m:86: in row_norms
[1m    norms = csr_row_norms(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:31: TypeError
----------------------------- Captured stdout call -----------------------------
Estimator MiniBatchKMeans doesn't seem to fail gracefully on sparse data: error message state explicitly that sparse input is not supported if this is not the case.
[31m[1m test_non_meta_estimators[NearestCentroid-NearestCentroid-check_estimator_sparse_data] [0m

name = 'NearestCentroid'
Estimator = <class 'sklearn.neighbors.nearest_centroid.NearestCentroid'>
check = <function check_estimator_sparse_data at 0x7fd3f85b7730>

[1m    @pytest.mark.parametrize([0m
[1m            "name, Estimator, check",[0m
[1m            _generate_checks_per_estimator(_yield_all_checks,[0m
[1m                                           _tested_non_meta_estimators()),[0m
[1m            ids=_rename_partial[0m
[1m    )[0m
[1m    def test_non_meta_estimators(name, Estimator, check):[0m
[1m        # Common tests for non-meta estimators[0m
[1m        with ignore_warnings(category=(DeprecationWarning, ConvergenceWarning,[0m
[1m                                       UserWarning, FutureWarning)):[0m
[1m            estimator = Estimator()[0m
[1m            set_checking_parameters(estimator)[0m
[1m>           check(name, estimator)[0m

Estimator  = <class 'sklearn.neighbors.nearest_centroid.NearestCentroid'>
check      = <function check_estimator_sparse_data at 0x7fd3f85b7730>
estimator  = NearestCentroid(metric='euclidean', shrink_threshold=None)
name       = 'NearestCentroid'

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_common.py[0m:100: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/estimator_checks.py[0m:508: in check_estimator_sparse_data
[1m    pred = estimator.predict(X)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/nearest_centroid.py[0m:194: in predict
[1m    X, self.centroids_, metric=self.metric).argmin(axis=1)][0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:1402: in pairwise_distances
[1m    return _parallel_pairwise(X, Y, func, n_jobs, **kwds)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:1069: in _parallel_pairwise
[1m    return func(X, Y, **kwds)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:234: in euclidean_distances
[1m    XX = row_norms(X, squared=True)[:, np.newaxis][0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py[0m:86: in row_norms
[1m    norms = csr_row_norms(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:31: TypeError
----------------------------- Captured stdout call -----------------------------
Estimator NearestCentroid doesn't seem to fail gracefully on sparse data: error message state explicitly that sparse input is not supported if this is not the case.
[31m[1m___ test_non_meta_estimators[Nystroem-Nystroem-check_estimator_sparse_data] ____[0m

name = 'Nystroem', Estimator = <class 'sklearn.kernel_approximation.Nystroem'>
check = <function check_estimator_sparse_data at 0x7fd3f85b7730>

[1m    @pytest.mark.parametrize([0m
[1m            "name, Estimator, check",[0m
[1m            _generate_checks_per_estimator(_yield_all_checks,[0m
[1m                                           _tested_non_meta_estimators()),[0m
[1m            ids=_rename_partial[0m
[1m    )[0m
[1m    def test_non_meta_estimators(name, Estimator, check):[0m
[1m        # Common tests for non-meta estimators[0m
[1m        with ignore_warnings(category=(DeprecationWarning, ConvergenceWarning,[0m
[1m                                       UserWarning, FutureWarning)):[0m
[1m            estimator = Estimator()[0m
[1m            set_checking_parameters(estimator)[0m
[1m>           check(name, estimator)[0m

Estimator  = <class 'sklearn.kernel_approximation.Nystroem'>
check      = <function check_estimator_sparse_data at 0x7fd3f85b7730>
estimator  = Nystroem(coef0=None, degree=None, gamma=None, kernel='rbf',
     kernel_params=None, n_components=100, random_state=None)
name       = 'Nystroem'

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_common.py[0m:100: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/estimator_checks.py[0m:506: in check_estimator_sparse_data
[1m    estimator.fit(X, y)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/kernel_approximation.py[0m:574: in fit
[1m    **self._get_kernel_params())[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:1559: in pairwise_kernels
[1m    return _parallel_pairwise(X, Y, func, n_jobs, **kwds)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:1069: in _parallel_pairwise
[1m    return func(X, Y, **kwds)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:823: in rbf_kernel
[1m    K = euclidean_distances(X, Y, squared=True)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:234: in euclidean_distances
[1m    XX = row_norms(X, squared=True)[:, np.newaxis][0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py[0m:86: in row_norms
[1m    norms = csr_row_norms(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:31: TypeError
----------------------------- Captured stdout call -----------------------------
Estimator Nystroem doesn't seem to fail gracefully on sparse data: error message state explicitly that sparse input is not supported if this is not the case.
[31m[1m test_non_meta_estimators[RANSACRegressor-RANSACRegressor-check_estimator_sparse_data] [0m

name = 'RANSACRegressor'
Estimator = <class 'sklearn.linear_model.ransac.RANSACRegressor'>
check = <function check_estimator_sparse_data at 0x7fd3f85b7730>

[1m    @pytest.mark.parametrize([0m
[1m            "name, Estimator, check",[0m
[1m            _generate_checks_per_estimator(_yield_all_checks,[0m
[1m                                           _tested_non_meta_estimators()),[0m
[1m            ids=_rename_partial[0m
[1m    )[0m
[1m    def test_non_meta_estimators(name, Estimator, check):[0m
[1m        # Common tests for non-meta estimators[0m
[1m        with ignore_warnings(category=(DeprecationWarning, ConvergenceWarning,[0m
[1m                                       UserWarning, FutureWarning)):[0m
[1m            estimator = Estimator()[0m
[1m            set_checking_parameters(estimator)[0m
[1m>           check(name, estimator)[0m

Estimator  = <class 'sklearn.linear_model.ransac.RANSACRegressor'>
check      = <function check_estimator_sparse_data at 0x7fd3f85b7730>
estimator  = RANSACRegressor(base_estimator=None, is_data_valid=None, is_model_valid=None,
        loss='absolute_loss', max_skips=...es=None, random_state=None, residual_threshold=None,
        stop_n_inliers=inf, stop_probability=0.99, stop_score=inf)
name       = 'RANSACRegressor'

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_common.py[0m:100: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/estimator_checks.py[0m:506: in check_estimator_sparse_data
[1m    estimator.fit(X, y)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/ransac.py[0m:354: in fit
[1m    base_estimator.fit(X_subset, y_subset)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:448: in fit
[1m    copy=self.copy_X, sample_weight=sample_weight)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:129: in _preprocess_data
[1m    X_offset, X_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
----------------------------- Captured stdout call -----------------------------
Estimator RANSACRegressor doesn't seem to fail gracefully on sparse data: error message state explicitly that sparse input is not supported if this is not the case.
[31m[1m test_non_meta_estimators[RadiusNeighborsClassifier-RadiusNeighborsClassifier-check_estimator_sparse_data] [0m

name = 'RadiusNeighborsClassifier'
Estimator = <class 'sklearn.neighbors.classification.RadiusNeighborsClassifier'>
check = <function check_estimator_sparse_data at 0x7fd3f85b7730>

[1m    @pytest.mark.parametrize([0m
[1m            "name, Estimator, check",[0m
[1m            _generate_checks_per_estimator(_yield_all_checks,[0m
[1m                                           _tested_non_meta_estimators()),[0m
[1m            ids=_rename_partial[0m
[1m    )[0m
[1m    def test_non_meta_estimators(name, Estimator, check):[0m
[1m        # Common tests for non-meta estimators[0m
[1m        with ignore_warnings(category=(DeprecationWarning, ConvergenceWarning,[0m
[1m                                       UserWarning, FutureWarning)):[0m
[1m            estimator = Estimator()[0m
[1m            set_checking_parameters(estimator)[0m
[1m>           check(name, estimator)[0m

Estimator  = <class 'sklearn.neighbors.classification.RadiusNeighborsClassifier'>
check      = <function check_estimator_sparse_data at 0x7fd3f85b7730>
estimator  = RadiusNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
             metric_params=None, n_jobs=None, outlier_label=None, p=2,
             radius=1.0, weights='uniform')
name       = 'RadiusNeighborsClassifier'

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_common.py[0m:100: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/estimator_checks.py[0m:508: in check_estimator_sparse_data
[1m    pred = estimator.predict(X)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/classification.py[0m:356: in predict
[1m    neigh_dist, neigh_ind = self.radius_neighbors(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = RadiusNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
             metric_params=None, n_jobs=None, outlier_label=None, p=2,
             radius=1.0, weights='uniform')
X = <40x10 sparse matrix of type '<class 'numpy.float64'>'
	with 74 stored elements in Compressed Sparse Row format>
radius = 1.0, return_distance = True

[1m    def radius_neighbors(self, X=None, radius=None, return_distance=True):[0m
[1m        """Finds the neighbors within a given radius of a point or points.[0m
[1m    [0m
[1m            Return the indices and distances of each point from the dataset[0m
[1m            lying in a ball with size ``radius`` around the points of the query[0m
[1m            array. Points lying on the boundary are included in the results.[0m
[1m    [0m
[1m            The result points are *not* necessarily sorted by distance to their[0m
[1m            query point.[0m
[1m    [0m
[1m            Parameters[0m
[1m            ----------[0m
[1m            X : array-like, (n_samples, n_features), optional[0m
[1m                The query point or points.[0m
[1m                If not provided, neighbors of each indexed point are returned.[0m
[1m                In this case, the query point is not considered its own neighbor.[0m
[1m    [0m
[1m            radius : float[0m
[1m                Limiting distance of neighbors to return.[0m
[1m                (default is the value passed to the constructor).[0m
[1m    [0m
[1m            return_distance : boolean, optional. Defaults to True.[0m
[1m                If False, distances will not be returned[0m
[1m    [0m
[1m            Returns[0m
[1m            -------[0m
[1m            dist : array, shape (n_samples,) of arrays[0m
[1m                Array representing the distances to each point, only present if[0m
[1m                return_distance=True. The distance values are computed according[0m
[1m                to the ``metric`` constructor parameter.[0m
[1m    [0m
[1m            ind : array, shape (n_samples,) of arrays[0m
[1m                An array of arrays of indices of the approximate nearest points[0m
[1m                from the population matrix that lie within a ball of size[0m
[1m                ``radius`` around the query points.[0m
[1m    [0m
[1m            Examples[0m
[1m            --------[0m
[1m            In the following example, we construct a NeighborsClassifier[0m
[1m            class from an array representing our data set and ask who's[0m
[1m            the closest point to [1, 1, 1]:[0m
[1m    [0m
[1m            >>> import numpy as np[0m
[1m            >>> samples = [[0., 0., 0.], [0., .5, 0.], [1., 1., .5]][0m
[1m            >>> from sklearn.neighbors import NearestNeighbors[0m
[1m            >>> neigh = NearestNeighbors(radius=1.6)[0m
[1m            >>> neigh.fit(samples) # doctest: +ELLIPSIS[0m
[1m            NearestNeighbors(algorithm='auto', leaf_size=30, ...)[0m
[1m            >>> rng = neigh.radius_neighbors([[1., 1., 1.]])[0m
[1m            >>> print(np.asarray(rng[0][0])) # doctest: +ELLIPSIS[0m
[1m            [1.5 0.5][0m
[1m            >>> print(np.asarray(rng[1][0])) # doctest: +ELLIPSIS[0m
[1m            [1 2][0m
[1m    [0m
[1m            The first array returned contains the distances to all points which[0m
[1m            are closer than 1.6, while the second array returned contains their[0m
[1m            indices.  In general, multiple points can be queried at the same time.[0m
[1m    [0m
[1m            Notes[0m
[1m            -----[0m
[1m            Because the number of neighbors of each point is not necessarily[0m
[1m            equal, the results for multiple query points cannot be fit in a[0m
[1m            standard data array.[0m
[1m            For efficiency, `radius_neighbors` returns arrays of objects, where[0m
[1m            each object is a 1D array of indices or distances.[0m
[1m            """[0m
[1m        check_is_fitted(self, "_fit_method")[0m
[1m    [0m
[1m        if X is not None:[0m
[1m            query_is_train = False[0m
[1m            X = check_array(X, accept_sparse='csr')[0m
[1m        else:[0m
[1m            query_is_train = True[0m
[1m            X = self._fit_X[0m
[1m    [0m
[1m        if radius is None:[0m
[1m            radius = self.radius[0m
[1m    [0m
[1m        if self._fit_method == 'brute':[0m
[1m            # for efficiency, use squared euclidean distances[0m
[1m            if self.effective_metric_ == 'euclidean':[0m
[1m                radius *= radius[0m
[1m                kwds = {'squared': True}[0m
[1m            else:[0m
[1m                kwds = self.effective_metric_params_[0m
[1m    [0m
[1m            reduce_func = partial(self._radius_neighbors_reduce_func,[0m
[1m                                  radius=radius,[0m
[1m                                  return_distance=return_distance)[0m
[1m    [0m
[1m            results = pairwise_distances_chunked([0m
[1m                X, self._fit_X, reduce_func=reduce_func,[0m
[1m                metric=self.effective_metric_, n_jobs=self.n_jobs,[0m
[1m                **kwds)[0m
[1m            if return_distance:[0m
[1m>               dist_chunks, neigh_ind_chunks = zip(*results)[0m
[31m[1mE               TypeError: type object argument after * must be a sequence, not generator[0m

X          = <40x10 sparse matrix of type '<class 'numpy.float64'>'
	with 74 stored elements in Compressed Sparse Row format>
kwds       = {'squared': True}
query_is_train = False
radius     = 1.0
reduce_func = functools.partial(<bound method RadiusNeighborsClassifier._radius_neighbors_reduce_func of RadiusNeighborsClassifier(a..., n_jobs=None, outlier_label=None, p=2,
             radius=1.0, weights='uniform')>, radius=1.0, return_distance=True)
results    = <generator object pairwise_distances_chunked at 0x7fd40fb7c630>
return_distance = True
self       = RadiusNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
             metric_params=None, n_jobs=None, outlier_label=None, p=2,
             radius=1.0, weights='uniform')

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/base.py[0m:688: TypeError
----------------------------- Captured stdout call -----------------------------
Estimator RadiusNeighborsClassifier doesn't seem to fail gracefully on sparse data: error message state explicitly that sparse input is not supported if this is not the case.
[31m[1m test_non_meta_estimators[RadiusNeighborsRegressor-RadiusNeighborsRegressor-check_estimator_sparse_data] [0m

name = 'RadiusNeighborsRegressor'
Estimator = <class 'sklearn.neighbors.regression.RadiusNeighborsRegressor'>
check = <function check_estimator_sparse_data at 0x7fd3f85b7730>

[1m    @pytest.mark.parametrize([0m
[1m            "name, Estimator, check",[0m
[1m            _generate_checks_per_estimator(_yield_all_checks,[0m
[1m                                           _tested_non_meta_estimators()),[0m
[1m            ids=_rename_partial[0m
[1m    )[0m
[1m    def test_non_meta_estimators(name, Estimator, check):[0m
[1m        # Common tests for non-meta estimators[0m
[1m        with ignore_warnings(category=(DeprecationWarning, ConvergenceWarning,[0m
[1m                                       UserWarning, FutureWarning)):[0m
[1m            estimator = Estimator()[0m
[1m            set_checking_parameters(estimator)[0m
[1m>           check(name, estimator)[0m

Estimator  = <class 'sklearn.neighbors.regression.RadiusNeighborsRegressor'>
check      = <function check_estimator_sparse_data at 0x7fd3f85b7730>
estimator  = RadiusNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
             metric_params=None, n_jobs=None, p=2, radius=1.0,
             weights='uniform')
name       = 'RadiusNeighborsRegressor'

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_common.py[0m:100: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/estimator_checks.py[0m:508: in check_estimator_sparse_data
[1m    pred = estimator.predict(X)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/regression.py[0m:303: in predict
[1m    neigh_dist, neigh_ind = self.radius_neighbors(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = RadiusNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
             metric_params=None, n_jobs=None, p=2, radius=1.0,
             weights='uniform')
X = <40x10 sparse matrix of type '<class 'numpy.float64'>'
	with 74 stored elements in Compressed Sparse Row format>
radius = 1.0, return_distance = True

[1m    def radius_neighbors(self, X=None, radius=None, return_distance=True):[0m
[1m        """Finds the neighbors within a given radius of a point or points.[0m
[1m    [0m
[1m            Return the indices and distances of each point from the dataset[0m
[1m            lying in a ball with size ``radius`` around the points of the query[0m
[1m            array. Points lying on the boundary are included in the results.[0m
[1m    [0m
[1m            The result points are *not* necessarily sorted by distance to their[0m
[1m            query point.[0m
[1m    [0m
[1m            Parameters[0m
[1m            ----------[0m
[1m            X : array-like, (n_samples, n_features), optional[0m
[1m                The query point or points.[0m
[1m                If not provided, neighbors of each indexed point are returned.[0m
[1m                In this case, the query point is not considered its own neighbor.[0m
[1m    [0m
[1m            radius : float[0m
[1m                Limiting distance of neighbors to return.[0m
[1m                (default is the value passed to the constructor).[0m
[1m    [0m
[1m            return_distance : boolean, optional. Defaults to True.[0m
[1m                If False, distances will not be returned[0m
[1m    [0m
[1m            Returns[0m
[1m            -------[0m
[1m            dist : array, shape (n_samples,) of arrays[0m
[1m                Array representing the distances to each point, only present if[0m
[1m                return_distance=True. The distance values are computed according[0m
[1m                to the ``metric`` constructor parameter.[0m
[1m    [0m
[1m            ind : array, shape (n_samples,) of arrays[0m
[1m                An array of arrays of indices of the approximate nearest points[0m
[1m                from the population matrix that lie within a ball of size[0m
[1m                ``radius`` around the query points.[0m
[1m    [0m
[1m            Examples[0m
[1m            --------[0m
[1m            In the following example, we construct a NeighborsClassifier[0m
[1m            class from an array representing our data set and ask who's[0m
[1m            the closest point to [1, 1, 1]:[0m
[1m    [0m
[1m            >>> import numpy as np[0m
[1m            >>> samples = [[0., 0., 0.], [0., .5, 0.], [1., 1., .5]][0m
[1m            >>> from sklearn.neighbors import NearestNeighbors[0m
[1m            >>> neigh = NearestNeighbors(radius=1.6)[0m
[1m            >>> neigh.fit(samples) # doctest: +ELLIPSIS[0m
[1m            NearestNeighbors(algorithm='auto', leaf_size=30, ...)[0m
[1m            >>> rng = neigh.radius_neighbors([[1., 1., 1.]])[0m
[1m            >>> print(np.asarray(rng[0][0])) # doctest: +ELLIPSIS[0m
[1m            [1.5 0.5][0m
[1m            >>> print(np.asarray(rng[1][0])) # doctest: +ELLIPSIS[0m
[1m            [1 2][0m
[1m    [0m
[1m            The first array returned contains the distances to all points which[0m
[1m            are closer than 1.6, while the second array returned contains their[0m
[1m            indices.  In general, multiple points can be queried at the same time.[0m
[1m    [0m
[1m            Notes[0m
[1m            -----[0m
[1m            Because the number of neighbors of each point is not necessarily[0m
[1m            equal, the results for multiple query points cannot be fit in a[0m
[1m            standard data array.[0m
[1m            For efficiency, `radius_neighbors` returns arrays of objects, where[0m
[1m            each object is a 1D array of indices or distances.[0m
[1m            """[0m
[1m        check_is_fitted(self, "_fit_method")[0m
[1m    [0m
[1m        if X is not None:[0m
[1m            query_is_train = False[0m
[1m            X = check_array(X, accept_sparse='csr')[0m
[1m        else:[0m
[1m            query_is_train = True[0m
[1m            X = self._fit_X[0m
[1m    [0m
[1m        if radius is None:[0m
[1m            radius = self.radius[0m
[1m    [0m
[1m        if self._fit_method == 'brute':[0m
[1m            # for efficiency, use squared euclidean distances[0m
[1m            if self.effective_metric_ == 'euclidean':[0m
[1m                radius *= radius[0m
[1m                kwds = {'squared': True}[0m
[1m            else:[0m
[1m                kwds = self.effective_metric_params_[0m
[1m    [0m
[1m            reduce_func = partial(self._radius_neighbors_reduce_func,[0m
[1m                                  radius=radius,[0m
[1m                                  return_distance=return_distance)[0m
[1m    [0m
[1m            results = pairwise_distances_chunked([0m
[1m                X, self._fit_X, reduce_func=reduce_func,[0m
[1m                metric=self.effective_metric_, n_jobs=self.n_jobs,[0m
[1m                **kwds)[0m
[1m            if return_distance:[0m
[1m>               dist_chunks, neigh_ind_chunks = zip(*results)[0m
[31m[1mE               TypeError: type object argument after * must be a sequence, not generator[0m

X          = <40x10 sparse matrix of type '<class 'numpy.float64'>'
	with 74 stored elements in Compressed Sparse Row format>
kwds       = {'squared': True}
query_is_train = False
radius     = 1.0
reduce_func = functools.partial(<bound method RadiusNeighborsRegressor._radius_neighbors_reduce_func of RadiusNeighborsRegressor(alg...  metric_params=None, n_jobs=None, p=2, radius=1.0,
             weights='uniform')>, radius=1.0, return_distance=True)
results    = <generator object pairwise_distances_chunked at 0x7fd40fb7cee8>
return_distance = True
self       = RadiusNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
             metric_params=None, n_jobs=None, p=2, radius=1.0,
             weights='uniform')

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/base.py[0m:688: TypeError
----------------------------- Captured stdout call -----------------------------
Estimator RadiusNeighborsRegressor doesn't seem to fail gracefully on sparse data: error message state explicitly that sparse input is not supported if this is not the case.
[31m[1m test_non_meta_estimators[RandomizedLasso-RandomizedLasso-check_estimator_sparse_data] [0m

name = 'RandomizedLasso'
Estimator = <class 'sklearn.linear_model.randomized_l1.RandomizedLasso'>
check = <function check_estimator_sparse_data at 0x7fd3f85b7730>

[1m    @pytest.mark.parametrize([0m
[1m            "name, Estimator, check",[0m
[1m            _generate_checks_per_estimator(_yield_all_checks,[0m
[1m                                           _tested_non_meta_estimators()),[0m
[1m            ids=_rename_partial[0m
[1m    )[0m
[1m    def test_non_meta_estimators(name, Estimator, check):[0m
[1m        # Common tests for non-meta estimators[0m
[1m        with ignore_warnings(category=(DeprecationWarning, ConvergenceWarning,[0m
[1m                                       UserWarning, FutureWarning)):[0m
[1m            estimator = Estimator()[0m
[1m            set_checking_parameters(estimator)[0m
[1m>           check(name, estimator)[0m

Estimator  = <class 'sklearn.linear_model.randomized_l1.RandomizedLasso'>
check      = <function check_estimator_sparse_data at 0x7fd3f85b7730>
estimator  = RandomizedLasso(alpha='aic', eps=2.2204460492503131e-16, fit_intercept=True,
        max_iter=5, memory=None, n_jobs=N...='auto',
        random_state=None, sample_fraction=0.75, scaling=0.5,
        selection_threshold=0.25, verbose=False)
name       = 'RandomizedLasso'

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_common.py[0m:100: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/estimator_checks.py[0m:506: in check_estimator_sparse_data
[1m    estimator.fit(X, y)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/randomized_l1.py[0m:102: in fit
[1m    self._preprocess_data(X, y, self.fit_intercept, self.normalize)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:129: in _preprocess_data
[1m    X_offset, X_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
----------------------------- Captured stdout call -----------------------------
Estimator RandomizedLasso doesn't seem to fail gracefully on sparse data: error message state explicitly that sparse input is not supported if this is not the case.
[31m[1m test_non_meta_estimators[RandomizedLogisticRegression-RandomizedLogisticRegression-check_estimator_sparse_data] [0m

name = 'RandomizedLogisticRegression'
Estimator = <class 'sklearn.linear_model.randomized_l1.RandomizedLogisticRegression'>
check = <function check_estimator_sparse_data at 0x7fd3f85b7730>

[1m    @pytest.mark.parametrize([0m
[1m            "name, Estimator, check",[0m
[1m            _generate_checks_per_estimator(_yield_all_checks,[0m
[1m                                           _tested_non_meta_estimators()),[0m
[1m            ids=_rename_partial[0m
[1m    )[0m
[1m    def test_non_meta_estimators(name, Estimator, check):[0m
[1m        # Common tests for non-meta estimators[0m
[1m        with ignore_warnings(category=(DeprecationWarning, ConvergenceWarning,[0m
[1m                                       UserWarning, FutureWarning)):[0m
[1m            estimator = Estimator()[0m
[1m            set_checking_parameters(estimator)[0m
[1m>           check(name, estimator)[0m

Estimator  = <class 'sklearn.linear_model.randomized_l1.RandomizedLogisticRegression'>
check      = <function check_estimator_sparse_data at 0x7fd3f85b7730>
estimator  = RandomizedLogisticRegression(C=1, fit_intercept=True, memory=None,
               n_jobs=None, n_resampling=5, normali...e,
               sample_fraction=0.75, scaling=0.5, selection_threshold=0.25,
               tol=0.001, verbose=False)
name       = 'RandomizedLogisticRegression'

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_common.py[0m:100: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/estimator_checks.py[0m:506: in check_estimator_sparse_data
[1m    estimator.fit(X, y)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/randomized_l1.py[0m:102: in fit
[1m    self._preprocess_data(X, y, self.fit_intercept, self.normalize)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/randomized_l1.py[0m:542: in _preprocess_data
[1m    normalize=normalize)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:129: in _preprocess_data
[1m    X_offset, X_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
----------------------------- Captured stdout call -----------------------------
Estimator RandomizedLogisticRegression doesn't seem to fail gracefully on sparse data: error message state explicitly that sparse input is not supported if this is not the case.
[31m[1m______ test_non_meta_estimators[Ridge-Ridge-check_estimator_sparse_data] _______[0m

name = 'Ridge', Estimator = <class 'sklearn.linear_model.ridge.Ridge'>
check = <function check_estimator_sparse_data at 0x7fd3f85b7730>

[1m    @pytest.mark.parametrize([0m
[1m            "name, Estimator, check",[0m
[1m            _generate_checks_per_estimator(_yield_all_checks,[0m
[1m                                           _tested_non_meta_estimators()),[0m
[1m            ids=_rename_partial[0m
[1m    )[0m
[1m    def test_non_meta_estimators(name, Estimator, check):[0m
[1m        # Common tests for non-meta estimators[0m
[1m        with ignore_warnings(category=(DeprecationWarning, ConvergenceWarning,[0m
[1m                                       UserWarning, FutureWarning)):[0m
[1m            estimator = Estimator()[0m
[1m            set_checking_parameters(estimator)[0m
[1m>           check(name, estimator)[0m

Estimator  = <class 'sklearn.linear_model.ridge.Ridge'>
check      = <function check_estimator_sparse_data at 0x7fd3f85b7730>
estimator  = Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
   normalize=False, random_state=None, solver='auto', tol=0.001)
name       = 'Ridge'

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_common.py[0m:100: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/estimator_checks.py[0m:506: in check_estimator_sparse_data
[1m    estimator.fit(X, y)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/ridge.py[0m:680: in fit
[1m    return super(Ridge, self).fit(X, y, sample_weight=sample_weight)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/ridge.py[0m:499: in fit
[1m    sample_weight=sample_weight)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:129: in _preprocess_data
[1m    X_offset, X_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
----------------------------- Captured stdout call -----------------------------
Estimator Ridge doesn't seem to fail gracefully on sparse data: error message state explicitly that sparse input is not supported if this is not the case.
[31m[1m____ test_non_meta_estimators[RidgeCV-RidgeCV-check_estimator_sparse_data] _____[0m

name = 'RidgeCV', Estimator = <class 'sklearn.linear_model.ridge.RidgeCV'>
check = <function check_estimator_sparse_data at 0x7fd3f85b7730>

[1m    @pytest.mark.parametrize([0m
[1m            "name, Estimator, check",[0m
[1m            _generate_checks_per_estimator(_yield_all_checks,[0m
[1m                                           _tested_non_meta_estimators()),[0m
[1m            ids=_rename_partial[0m
[1m    )[0m
[1m    def test_non_meta_estimators(name, Estimator, check):[0m
[1m        # Common tests for non-meta estimators[0m
[1m        with ignore_warnings(category=(DeprecationWarning, ConvergenceWarning,[0m
[1m                                       UserWarning, FutureWarning)):[0m
[1m            estimator = Estimator()[0m
[1m            set_checking_parameters(estimator)[0m
[1m>           check(name, estimator)[0m

Estimator  = <class 'sklearn.linear_model.ridge.RidgeCV'>
check      = <function check_estimator_sparse_data at 0x7fd3f85b7730>
estimator  = RidgeCV(alphas=array([  0.1,   1. ,  10. ]), cv=None, fit_intercept=True,
    gcv_mode=None, normalize=False, scoring=None, store_cv_values=False)
name       = 'RidgeCV'

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_common.py[0m:100: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/estimator_checks.py[0m:506: in check_estimator_sparse_data
[1m    estimator.fit(X, y)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/ridge.py[0m:1148: in fit
[1m    estimator.fit(X, y, sample_weight=sample_weight)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/ridge.py[0m:1025: in fit
[1m    sample_weight=sample_weight)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:129: in _preprocess_data
[1m    X_offset, X_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
----------------------------- Captured stdout call -----------------------------
Estimator RidgeCV doesn't seem to fail gracefully on sparse data: error message state explicitly that sparse input is not supported if this is not the case.
[31m[1m test_non_meta_estimators[RidgeClassifier-RidgeClassifier-check_estimator_sparse_data] [0m

name = 'RidgeClassifier'
Estimator = <class 'sklearn.linear_model.ridge.RidgeClassifier'>
check = <function check_estimator_sparse_data at 0x7fd3f85b7730>

[1m    @pytest.mark.parametrize([0m
[1m            "name, Estimator, check",[0m
[1m            _generate_checks_per_estimator(_yield_all_checks,[0m
[1m                                           _tested_non_meta_estimators()),[0m
[1m            ids=_rename_partial[0m
[1m    )[0m
[1m    def test_non_meta_estimators(name, Estimator, check):[0m
[1m        # Common tests for non-meta estimators[0m
[1m        with ignore_warnings(category=(DeprecationWarning, ConvergenceWarning,[0m
[1m                                       UserWarning, FutureWarning)):[0m
[1m            estimator = Estimator()[0m
[1m            set_checking_parameters(estimator)[0m
[1m>           check(name, estimator)[0m

Estimator  = <class 'sklearn.linear_model.ridge.RidgeClassifier'>
check      = <function check_estimator_sparse_data at 0x7fd3f85b7730>
estimator  = RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
        max_iter=None, normalize=False, random_state=None, solver='auto',
        tol=0.001)
name       = 'RidgeClassifier'

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_common.py[0m:100: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/estimator_checks.py[0m:506: in check_estimator_sparse_data
[1m    estimator.fit(X, y)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/ridge.py[0m:853: in fit
[1m    super(RidgeClassifier, self).fit(X, Y, sample_weight=sample_weight)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/ridge.py[0m:499: in fit
[1m    sample_weight=sample_weight)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:129: in _preprocess_data
[1m    X_offset, X_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
----------------------------- Captured stdout call -----------------------------
Estimator RidgeClassifier doesn't seem to fail gracefully on sparse data: error message state explicitly that sparse input is not supported if this is not the case.
[31m[1m test_non_meta_estimators[RidgeClassifierCV-RidgeClassifierCV-check_estimator_sparse_data] [0m

name = 'RidgeClassifierCV'
Estimator = <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>
check = <function check_estimator_sparse_data at 0x7fd3f85b7730>

[1m    @pytest.mark.parametrize([0m
[1m            "name, Estimator, check",[0m
[1m            _generate_checks_per_estimator(_yield_all_checks,[0m
[1m                                           _tested_non_meta_estimators()),[0m
[1m            ids=_rename_partial[0m
[1m    )[0m
[1m    def test_non_meta_estimators(name, Estimator, check):[0m
[1m        # Common tests for non-meta estimators[0m
[1m        with ignore_warnings(category=(DeprecationWarning, ConvergenceWarning,[0m
[1m                                       UserWarning, FutureWarning)):[0m
[1m            estimator = Estimator()[0m
[1m            set_checking_parameters(estimator)[0m
[1m>           check(name, estimator)[0m

Estimator  = <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>
check      = <function check_estimator_sparse_data at 0x7fd3f85b7730>
estimator  = RidgeClassifierCV(alphas=array([  0.1,   1. ,  10. ]), class_weight=None,
         cv=None, fit_intercept=True, normalize=False, scoring=None,
         store_cv_values=False)
name       = 'RidgeClassifierCV'

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_common.py[0m:100: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/estimator_checks.py[0m:506: in check_estimator_sparse_data
[1m    estimator.fit(X, y)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/ridge.py[0m:1424: in fit
[1m    _BaseRidgeCV.fit(self, X, Y, sample_weight=sample_weight)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/ridge.py[0m:1148: in fit
[1m    estimator.fit(X, y, sample_weight=sample_weight)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/ridge.py[0m:1025: in fit
[1m    sample_weight=sample_weight)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:129: in _preprocess_data
[1m    X_offset, X_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
----------------------------- Captured stdout call -----------------------------
Estimator RidgeClassifierCV doesn't seem to fail gracefully on sparse data: error message state explicitly that sparse input is not supported if this is not the case.
[31m[1m test_non_meta_estimators[SpectralClustering-SpectralClustering-check_estimator_sparse_data] [0m

name = 'SpectralClustering'
Estimator = <class 'sklearn.cluster.spectral.SpectralClustering'>
check = <function check_estimator_sparse_data at 0x7fd3f85b7730>

[1m    @pytest.mark.parametrize([0m
[1m            "name, Estimator, check",[0m
[1m            _generate_checks_per_estimator(_yield_all_checks,[0m
[1m                                           _tested_non_meta_estimators()),[0m
[1m            ids=_rename_partial[0m
[1m    )[0m
[1m    def test_non_meta_estimators(name, Estimator, check):[0m
[1m        # Common tests for non-meta estimators[0m
[1m        with ignore_warnings(category=(DeprecationWarning, ConvergenceWarning,[0m
[1m                                       UserWarning, FutureWarning)):[0m
[1m            estimator = Estimator()[0m
[1m            set_checking_parameters(estimator)[0m
[1m>           check(name, estimator)[0m

Estimator  = <class 'sklearn.cluster.spectral.SpectralClustering'>
check      = <function check_estimator_sparse_data at 0x7fd3f85b7730>
estimator  = SpectralClustering(affinity='rbf', assign_labels='kmeans', coef0=1, degree=3,
          eigen_solver=None, eigen_tol=0...ma=1.0, kernel_params=None,
          n_clusters=8, n_init=2, n_jobs=None, n_neighbors=10,
          random_state=None)
name       = 'SpectralClustering'

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_common.py[0m:100: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/estimator_checks.py[0m:506: in check_estimator_sparse_data
[1m    estimator.fit(X, y)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/spectral.py[0m:484: in fit
[1m    **params)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:1559: in pairwise_kernels
[1m    return _parallel_pairwise(X, Y, func, n_jobs, **kwds)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:1069: in _parallel_pairwise
[1m    return func(X, Y, **kwds)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:823: in rbf_kernel
[1m    K = euclidean_distances(X, Y, squared=True)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py[0m:234: in euclidean_distances
[1m    XX = row_norms(X, squared=True)[:, np.newaxis][0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py[0m:86: in row_norms
[1m    norms = csr_row_norms(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:31: TypeError
----------------------------- Captured stdout call -----------------------------
Estimator SpectralClustering doesn't seem to fail gracefully on sparse data: error message state explicitly that sparse input is not supported if this is not the case.
[31m[1m test_non_meta_estimators[StandardScaler-StandardScaler-check_estimator_sparse_data] [0m

name = 'StandardScaler'
Estimator = <class 'sklearn.preprocessing.data.StandardScaler'>
check = <function check_estimator_sparse_data at 0x7fd3f85b7730>

[1m    @pytest.mark.parametrize([0m
[1m            "name, Estimator, check",[0m
[1m            _generate_checks_per_estimator(_yield_all_checks,[0m
[1m                                           _tested_non_meta_estimators()),[0m
[1m            ids=_rename_partial[0m
[1m    )[0m
[1m    def test_non_meta_estimators(name, Estimator, check):[0m
[1m        # Common tests for non-meta estimators[0m
[1m        with ignore_warnings(category=(DeprecationWarning, ConvergenceWarning,[0m
[1m                                       UserWarning, FutureWarning)):[0m
[1m            estimator = Estimator()[0m
[1m            set_checking_parameters(estimator)[0m
[1m>           check(name, estimator)[0m

Estimator  = <class 'sklearn.preprocessing.data.StandardScaler'>
check      = <function check_estimator_sparse_data at 0x7fd3f85b7730>
estimator  = StandardScaler(copy=True, with_mean=True, with_std=True)
name       = 'StandardScaler'

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_common.py[0m:100: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/estimator_checks.py[0m:506: in check_estimator_sparse_data
[1m    estimator.fit(X, y)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/data.py[0m:617: in fit
[1m    return self.partial_fit(X, y)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/data.py[0m:674: in partial_fit
[1m    self.mean_, self.var_ = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
----------------------------- Captured stdout call -----------------------------
Estimator StandardScaler doesn't seem to fail gracefully on sparse data: error message state explicitly that sparse input is not supported if this is not the case.
[31m[1m test_non_meta_estimators[TransformedTargetRegressor-TransformedTargetRegressor-check_estimator_sparse_data] [0m

name = 'TransformedTargetRegressor'
Estimator = <class 'sklearn.compose._target.TransformedTargetRegressor'>
check = <function check_estimator_sparse_data at 0x7fd3f85b7730>

[1m    @pytest.mark.parametrize([0m
[1m            "name, Estimator, check",[0m
[1m            _generate_checks_per_estimator(_yield_all_checks,[0m
[1m                                           _tested_non_meta_estimators()),[0m
[1m            ids=_rename_partial[0m
[1m    )[0m
[1m    def test_non_meta_estimators(name, Estimator, check):[0m
[1m        # Common tests for non-meta estimators[0m
[1m        with ignore_warnings(category=(DeprecationWarning, ConvergenceWarning,[0m
[1m                                       UserWarning, FutureWarning)):[0m
[1m            estimator = Estimator()[0m
[1m            set_checking_parameters(estimator)[0m
[1m>           check(name, estimator)[0m

Estimator  = <class 'sklearn.compose._target.TransformedTargetRegressor'>
check      = <function check_estimator_sparse_data at 0x7fd3f85b7730>
estimator  = TransformedTargetRegressor(check_inverse=True, func=None, inverse_func=None,
              regressor=None, transformer=None)
name       = 'TransformedTargetRegressor'

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_common.py[0m:100: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/estimator_checks.py[0m:506: in check_estimator_sparse_data
[1m    estimator.fit(X, y)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/compose/_target.py[0m:194: in fit
[1m    self.regressor_.fit(X, y_trans)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:448: in fit
[1m    copy=self.copy_X, sample_weight=sample_weight)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:129: in _preprocess_data
[1m    X_offset, X_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
----------------------------- Captured stdout call -----------------------------
Estimator TransformedTargetRegressor doesn't seem to fail gracefully on sparse data: error message state explicitly that sparse input is not supported if this is not the case.
[31m[1m test_non_meta_estimators[VarianceThreshold-VarianceThreshold-check_estimator_sparse_data] [0m

name = 'VarianceThreshold'
Estimator = <class 'sklearn.feature_selection.variance_threshold.VarianceThreshold'>
check = <function check_estimator_sparse_data at 0x7fd3f85b7730>

[1m    @pytest.mark.parametrize([0m
[1m            "name, Estimator, check",[0m
[1m            _generate_checks_per_estimator(_yield_all_checks,[0m
[1m                                           _tested_non_meta_estimators()),[0m
[1m            ids=_rename_partial[0m
[1m    )[0m
[1m    def test_non_meta_estimators(name, Estimator, check):[0m
[1m        # Common tests for non-meta estimators[0m
[1m        with ignore_warnings(category=(DeprecationWarning, ConvergenceWarning,[0m
[1m                                       UserWarning, FutureWarning)):[0m
[1m            estimator = Estimator()[0m
[1m            set_checking_parameters(estimator)[0m
[1m>           check(name, estimator)[0m

Estimator  = <class 'sklearn.feature_selection.variance_threshold.VarianceThreshold'>
check      = <function check_estimator_sparse_data at 0x7fd3f85b7730>
estimator  = VarianceThreshold(threshold=0.0)
name       = 'VarianceThreshold'

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_common.py[0m:100: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/estimator_checks.py[0m:506: in check_estimator_sparse_data
[1m    estimator.fit(X, y)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/feature_selection/variance_threshold.py[0m:67: in fit
[1m    _, self.variances_ = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
----------------------------- Captured stdout call -----------------------------
Estimator VarianceThreshold doesn't seem to fail gracefully on sparse data: error message state explicitly that sparse input is not supported if this is not the case.
[31m[1m_____________________ test_multi_target_sparse_regression ______________________[0m

[1m    def test_multi_target_sparse_regression():[0m
[1m        X, y = datasets.make_regression(n_targets=3)[0m
[1m        X_train, y_train = X[:50], y[:50][0m
[1m        X_test = X[50:][0m
[1m    [0m
[1m        for sparse in [sp.csr_matrix, sp.csc_matrix, sp.coo_matrix, sp.dok_matrix,[0m
[1m                       sp.lil_matrix]:[0m
[1m            rgr = MultiOutputRegressor(Lasso(random_state=0))[0m
[1m            rgr_sparse = MultiOutputRegressor(Lasso(random_state=0))[0m
[1m    [0m
[1m            rgr.fit(X_train, y_train)[0m
[1m>           rgr_sparse.fit(sparse(X_train), y_train)[0m

X          = array([[-0.26761405,  0.02990717,  0.46430007, ..., -1.21989941,
         0.24201873, -0.68947811],
       [ 0.3646816...604,  0.54475158],
       [-0.49397001, -0.44566503,  0.94447244, ...,  1.24979603,
        -0.06175918,  0.4135674 ]])
X_test     = array([[-0.42410973,  0.04082743,  0.37035152, ..., -1.8624657 ,
         0.56202659,  0.31702987],
       [-0.7590199...604,  0.54475158],
       [-0.49397001, -0.44566503,  0.94447244, ...,  1.24979603,
        -0.06175918,  0.4135674 ]])
X_train    = array([[-0.26761405,  0.02990717,  0.46430007, ..., -1.21989941,
         0.24201873, -0.68947811],
       [ 0.3646816...208, -1.20127498],
       [-0.15286147,  1.49400248, -0.11573433, ..., -0.94368857,
         1.7842231 , -0.46991313]])
rgr        = MultiOutputRegressor(estimator=Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
   normalize=False, po...=False, precompute=False, random_state=0,
   selection='cyclic', tol=0.0001, warm_start=False),
           n_jobs=None)
rgr_sparse = MultiOutputRegressor(estimator=Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
   normalize=False, po...=False, precompute=False, random_state=0,
   selection='cyclic', tol=0.0001, warm_start=False),
           n_jobs=None)
sparse     = <class 'scipy.sparse.csr.csr_matrix'>
y          = array([[ 361.6602767 ,  217.37763726,  216.39021085],
       [-189.13777452, -105.78538205,  -71.4844529 ],
       [-2...62303092],
       [-295.53609042, -127.05736868, -169.85510515],
       [-135.7306095 ,  121.55251941,  138.18346516]])
y_train    = array([[ 361.6602767 ,  217.37763726,  216.39021085],
       [-189.13777452, -105.78538205,  -71.4844529 ],
       [-2...61402753],
       [-192.78095553,   21.01954077,  -92.66237009],
       [ 149.45914057,   20.98100456,   19.63438262]])

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_multioutput.py[0m:97: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/multioutput.py[0m:169: in fit
[1m    for i in range(y.shape[1]))[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/parallel.py[0m:983: in __call__
[1m    if self.dispatch_one_batch(iterator):[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/parallel.py[0m:825: in dispatch_one_batch
[1m    self._dispatch(tasks)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/parallel.py[0m:782: in _dispatch
[1m    job = self._backend.apply_async(batch, callback=cb)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/_parallel_backends.py[0m:182: in apply_async
[1m    result = ImmediateResult(func)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/_parallel_backends.py[0m:545: in __init__
[1m    self.results = batch()[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/parallel.py[0m:261: in __call__
[1m    for func, args, kwargs in self.items][0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/parallel.py[0m:261: in <listcomp>
[1m    for func, args, kwargs in self.items][0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/multioutput.py[0m:40: in _fit_estimator
[1m    estimator.fit(X, y)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/coordinate_descent.py[0m:721: in fit
[1m    check_input=check_input)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:487: in _pre_fit
[1m    copy=False, return_mean=True, check_input=check_input)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:129: in _preprocess_data
[1m    X_offset, X_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:94: in mean_variance_axis
[1m    return _csc_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:156: TypeError
[31m[1m___________ test_base_chain_fit_and_predict_with_sparse_data_and_cv ____________[0m

[1m    @pytest.mark.filterwarnings('ignore: Default solver will be changed')  # 0.22[0m
[1m    @pytest.mark.filterwarnings('ignore: Default multi_class will')  # 0.22[0m
[1m    def test_base_chain_fit_and_predict_with_sparse_data_and_cv():[0m
[1m        # Fit base chain with sparse data cross_val_predict[0m
[1m        X, Y = generate_multilabel_dataset_with_correlations()[0m
[1m        X_sparse = sp.csr_matrix(X)[0m
[1m        base_chains = [ClassifierChain(LogisticRegression(), cv=3),[0m
[1m                       RegressorChain(Ridge(), cv=3)][0m
[1m        for chain in base_chains:[0m
[1m>           chain.fit(X_sparse, Y)[0m

X          = array([[ 0.83122917, -1.19111403,  1.94512639, ..., -1.04616065,
         0.19652082, -0.71217646],
       [-1.7883219...266, -1.00619016],
       [-1.08628488, -1.20595377, -1.19448098, ...,  0.88972995,
        -1.08459736, -1.89365993]])
X_sparse   = <1000x100 sparse matrix of type '<class 'numpy.float64'>'
	with 100000 stored elements in Compressed Sparse Row format>
Y          = array([[0, 0, 1, 1],
       [0, 1, 1, 0],
       [1, 0, 1, 1],
       ..., 
       [1, 1, 1, 0],
       [0, 0, 1, 0],
       [0, 1, 0, 0]])
Y_pred     = array([[ 0.,  1.,  1.,  0.],
       [ 0.,  1.,  0.,  0.],
       [ 0.,  1.,  1.,  1.],
       ..., 
       [ 0.,  1.,  0.,  0.],
       [ 0.,  1.,  1.,  0.],
       [ 0.,  1.,  1.,  0.]])
base_chains = [ClassifierChain(base_estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
         ...r=None,
   normalize=False, random_state=None, solver='auto', tol=0.001),
        cv=3, order=None, random_state=None)]
chain      = RegressorChain(base_estimator=Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
   normalize=False, random_state=None, solver='auto', tol=0.001),
        cv=3, order=None, random_state=None)

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_multioutput.py[0m:460: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/multioutput.py[0m:711: in fit
[1m    super(RegressorChain, self).fit(X, Y)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/multioutput.py[0m:429: in fit
[1m    estimator.fit(X_aug[:, :(X.shape[1] + chain_idx)], y)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/ridge.py[0m:680: in fit
[1m    return super(Ridge, self).fit(X, y, sample_weight=sample_weight)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/ridge.py[0m:499: in fit
[1m    sample_weight=sample_weight)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:129: in _preprocess_data
[1m    X_offset, X_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
[31m[1m______________________________ test_feature_union ______________________________[0m

[1m    def test_feature_union():[0m
[1m        # basic sanity check for feature union[0m
[1m        iris = load_iris()[0m
[1m        X = iris.data[0m
[1m        X -= X.mean(axis=0)[0m
[1m        y = iris.target[0m
[1m        svd = TruncatedSVD(n_components=2, random_state=0)[0m
[1m        select = SelectKBest(k=1)[0m
[1m        fs = FeatureUnion([("svd", svd), ("select", select)])[0m
[1m        fs.fit(X, y)[0m
[1m        X_transformed = fs.transform(X)[0m
[1m        assert_equal(X_transformed.shape, (X.shape[0], 3))[0m
[1m    [0m
[1m        # check if it does the expected thing[0m
[1m        assert_array_almost_equal(X_transformed[:, :-1], svd.fit_transform(X))[0m
[1m        assert_array_equal(X_transformed[:, -1],[0m
[1m                           select.fit_transform(X, y).ravel())[0m
[1m    [0m
[1m        # test if it also works for sparse input[0m
[1m        # We use a different svd object to control the random_state stream[0m
[1m        fs = FeatureUnion([("svd", svd), ("select", select)])[0m
[1m        X_sp = sparse.csr_matrix(X)[0m
[1m>       X_sp_transformed = fs.fit_transform(X_sp, y)[0m

X          = array([[ -7.43333333e-01,   4.42666667e-01,  -2.35800000e+00,
         -9.99333333e-01],
       [ -9.43333333e-01,  -5...0,
          1.10066667e+00],
       [  5.66666667e-02,  -5.73333333e-02,   1.34200000e+00,
          6.00666667e-01]])
X_sp       = <150x4 sparse matrix of type '<class 'numpy.float64'>'
	with 600 stored elements in Compressed Sparse Row format>
X_transformed = array([[-2.68412563,  0.31939725, -2.358     ],
       [-2.71414169, -0.17700123, -2.358     ],
       [-2.88899057, -...7885885,  1.442     ],
       [ 1.90094161,  0.11662796,  1.642     ],
       [ 1.39018886, -0.28266094,  1.342     ]])
fs         = FeatureUnion(n_jobs=None,
       transformer_list=[('svd', TruncatedSVD(algorithm='randomized', n_components=2, n_iter...0)), ('select', SelectKBest(k=1, score_func=<function f_classif at 0x7fd3ff9e31e0>))],
       transformer_weights=None)
iris       = {'target_names': array(['setosa', 'versicolor', 'virginica'], 
      dtype='<U10'), 'feature_names': ['sepal length (c...eseman et al"s AUTOCLASS II\n     conceptual clustering system finds 3 classes in the data.\n   - Many, many more ...'}
select     = SelectKBest(k=1, score_func=<function f_classif at 0x7fd3ff9e31e0>)
svd        = TruncatedSVD(algorithm='randomized', n_components=2, n_iter=5, random_state=0,
       tol=0.0)
y          = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,...       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2])

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_pipeline.py[0m:449: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/pipeline.py[0m:792: in fit_transform
[1m    for name, trans, weight in self._iter())[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/parallel.py[0m:983: in __call__
[1m    if self.dispatch_one_batch(iterator):[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/parallel.py[0m:825: in dispatch_one_batch
[1m    self._dispatch(tasks)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/parallel.py[0m:782: in _dispatch
[1m    job = self._backend.apply_async(batch, callback=cb)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/_parallel_backends.py[0m:182: in apply_async
[1m    result = ImmediateResult(func)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/_parallel_backends.py[0m:545: in __init__
[1m    self.results = batch()[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/parallel.py[0m:261: in __call__
[1m    for func, args, kwargs in self.items][0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/parallel.py[0m:261: in <listcomp>
[1m    for func, args, kwargs in self.items][0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/pipeline.py[0m:614: in _fit_transform_one
[1m    res = transformer.fit_transform(X, y, **fit_params)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/truncated_svd.py[0m:187: in fit_transform
[1m    _, full_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
[31m[1m_________________________ test_check_estimator_clones __________________________[0m

[1m    def test_check_estimator_clones():[0m
[1m        # check that check_estimator doesn't modify the estimator it receives[0m
[1m        from sklearn.datasets import load_iris[0m
[1m        iris = load_iris()[0m
[1m    [0m
[1m        for Estimator in [GaussianMixture, LinearRegression,[0m
[1m                          RandomForestClassifier, NMF, SGDClassifier,[0m
[1m                          MiniBatchKMeans]:[0m
[1m            with ignore_warnings(category=(FutureWarning, DeprecationWarning)):[0m
[1m                # when 'est = SGDClassifier()'[0m
[1m                est = Estimator()[0m
[1m                set_checking_parameters(est)[0m
[1m                set_random_state(est)[0m
[1m                # without fitting[0m
[1m                old_hash = joblib.hash(est)[0m
[1m>               check_estimator(est)[0m

Estimator  = <class 'sklearn.linear_model.base.LinearRegression'>
est        = LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None,
         normalize=False)
iris       = {'target_names': array(['setosa', 'versicolor', 'virginica'], 
      dtype='<U10'), 'feature_names': ['sepal length (c...eseman et al"s AUTOCLASS II\n     conceptual clustering system finds 3 classes in the data.\n   - Many, many more ...'}
load_iris  = <function load_iris at 0x7fd3fce90ae8>
old_hash   = '1a9fdeae1f7564b541a702cdc1a00f7e'

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/tests/test_estimator_checks.py[0m:390: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/estimator_checks.py[0m:303: in check_estimator
[1m    check(name, estimator)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/estimator_checks.py[0m:506: in check_estimator_sparse_data
[1m    estimator.fit(X, y)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:448: in fit
[1m    copy=self.copy_X, sample_weight=sample_weight)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py[0m:129: in _preprocess_data
[1m    X_offset, X_var = mean_variance_axis(X, axis=0)[0m
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
----------------------------- Captured stdout call -----------------------------
Estimator LinearRegression doesn't seem to fail gracefully on sparse data: error message state explicitly that sparse input is not supported if this is not the case.
[31m[1m___________________________ test_row_norms[float64] ____________________________[0m

dtype = <class 'numpy.float64'>

[1m    @pytest.mark.parametrize('dtype',[0m
[1m                             (np.float32, np.float64))[0m
[1m    def test_row_norms(dtype):[0m
[1m        X = np.random.RandomState(42).randn(100, 100)[0m
[1m        if dtype is np.float32:[0m
[1m            precision = 4[0m
[1m        else:[0m
[1m            precision = 5[0m
[1m    [0m
[1m        X = X.astype(dtype)[0m
[1m        sq_norm = (X ** 2).sum(axis=1)[0m
[1m    [0m
[1m        assert_array_almost_equal(sq_norm, row_norms(X, squared=True),[0m
[1m                                  precision)[0m
[1m        assert_array_almost_equal(np.sqrt(sq_norm), row_norms(X), precision)[0m
[1m    [0m
[1m        for csr_index_dtype in [np.int32, np.int64]:[0m
[1m            Xcsr = sparse.csr_matrix(X, dtype=dtype)[0m
[1m            # csr_matrix will use int32 indices by default,[0m
[1m            # up-casting those to int64 when necessary[0m
[1m            if csr_index_dtype is np.int64:[0m
[1m                Xcsr.indptr = Xcsr.indptr.astype(csr_index_dtype)[0m
[1m                Xcsr.indices = Xcsr.indices.astype(csr_index_dtype)[0m
[1m            assert Xcsr.indices.dtype == csr_index_dtype[0m
[1m            assert Xcsr.indptr.dtype == csr_index_dtype[0m
[1m>           assert_array_almost_equal(sq_norm, row_norms(Xcsr, squared=True),[0m
[1m                                      precision)[0m

X          = array([[ 0.49671415, -0.1382643 ,  0.64768854, ...,  0.26105527,
         0.00511346, -0.23458713],
       [-1.4153707...837,  0.94661831],
       [ 0.93465471,  0.36992561, -1.11732701, ..., -0.70531672,
         0.49576557,  0.64438845]])
Xcsr       = <100x100 sparse matrix of type '<class 'numpy.float64'>'
	with 10000 stored elements in Compressed Sparse Row format>
csr_index_dtype = <class 'numpy.int32'>
dtype      = <class 'numpy.float64'>
precision  = 5
sq_norm    = array([  82.73062939,   90.08871467,  116.8124199 ,   78.52337727,
        112.33434765,   85.76877929,  112.81570219,...70018,   78.24675103,   87.55254419,  107.08583624,
        102.74556784,   82.66536089,   81.11410228,   99.20362025])

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/tests/test_extmath.py[0m:223: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py[0m:86: in row_norms
[1m    norms = csr_row_norms(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:31: TypeError
[31m[1m___________________________ test_mean_variance_axis0 ___________________________[0m

[1m    def test_mean_variance_axis0():[0m
[1m        X, _ = make_classification(5, 4, random_state=0)[0m
[1m        # Sparsify the array a little bit[0m
[1m        X[0, 0] = 0[0m
[1m        X[2, 1] = 0[0m
[1m        X[4, 3] = 0[0m
[1m        X_lil = sp.lil_matrix(X)[0m
[1m        X_lil[1, 0] = 0[0m
[1m        X[1, 0] = 0[0m
[1m    [0m
[1m        assert_raises(TypeError, mean_variance_axis, X_lil, axis=0)[0m
[1m    [0m
[1m        X_csr = sp.csr_matrix(X_lil)[0m
[1m        X_csc = sp.csc_matrix(X_lil)[0m
[1m    [0m
[1m        expected_dtypes = [(np.float32, np.float32),[0m
[1m                           (np.float64, np.float64),[0m
[1m                           (np.int32, np.float64),[0m
[1m                           (np.int64, np.float64)][0m
[1m    [0m
[1m        for input_dtype, output_dtype in expected_dtypes:[0m
[1m            X_test = X.astype(input_dtype)[0m
[1m            for X_sparse in (X_csr, X_csc):[0m
[1m                X_sparse = X_sparse.astype(input_dtype)[0m
[1m>               X_means, X_vars = mean_variance_axis(X_sparse, axis=0)[0m

X          = array([[ 0.        ,  1.29667533, -0.3874711 ,  1.38366234],
       [ 0.        , -1.27678873, -1.19224399, -1.6644701...    [-0.44918122,  0.43722442,  1.05699092,  0.69448021],
       [-0.08405649,  0.16957429, -0.55744457,  0.        ]])
X_csc      = <5x4 sparse matrix of type '<class 'numpy.float64'>'
	with 16 stored elements in Compressed Sparse Column format>
X_csr      = <5x4 sparse matrix of type '<class 'numpy.float64'>'
	with 16 stored elements in Compressed Sparse Row format>
X_lil      = <5x4 sparse matrix of type '<class 'numpy.float64'>'
	with 16 stored elements in LInked List format>
X_means    = array([-0.08053406,  0.12533706, -0.02323486,  0.05793567], dtype=float32)
X_sparse   = <5x4 sparse matrix of type '<class 'numpy.float64'>'
	with 16 stored elements in Compressed Sparse Row format>
X_test     = array([[ 0.        ,  1.29667533, -0.3874711 ,  1.38366234],
       [ 0.        , -1.27678873, -1.19224399, -1.6644701...    [-0.44918122,  0.43722442,  1.05699092,  0.69448021],
       [-0.08405649,  0.16957429, -0.55744457,  0.        ]])
X_vars     = array([ 0.03868969,  0.69058609,  0.78522789,  1.03317535], dtype=float32)
_          = array([0, 1, 0, 1, 0])
expected_dtypes = [(<class 'numpy.float32'>, <class 'numpy.float32'>), (<class 'numpy.float64'>, <class 'numpy.float64'>), (<class 'numpy.int32'>, <class 'numpy.float64'>), (<class 'numpy.int64'>, <class 'numpy.float64'>)]
input_dtype = <class 'numpy.float64'>
output_dtype = <class 'numpy.float64'>

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/tests/test_sparsefuncs.py[0m:50: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
[31m[1m___________________________ test_mean_variance_axis1 ___________________________[0m

[1m    def test_mean_variance_axis1():[0m
[1m        X, _ = make_classification(5, 4, random_state=0)[0m
[1m        # Sparsify the array a little bit[0m
[1m        X[0, 0] = 0[0m
[1m        X[2, 1] = 0[0m
[1m        X[4, 3] = 0[0m
[1m        X_lil = sp.lil_matrix(X)[0m
[1m        X_lil[1, 0] = 0[0m
[1m        X[1, 0] = 0[0m
[1m    [0m
[1m        assert_raises(TypeError, mean_variance_axis, X_lil, axis=1)[0m
[1m    [0m
[1m        X_csr = sp.csr_matrix(X_lil)[0m
[1m        X_csc = sp.csc_matrix(X_lil)[0m
[1m    [0m
[1m        expected_dtypes = [(np.float32, np.float32),[0m
[1m                           (np.float64, np.float64),[0m
[1m                           (np.int32, np.float64),[0m
[1m                           (np.int64, np.float64)][0m
[1m    [0m
[1m        for input_dtype, output_dtype in expected_dtypes:[0m
[1m            X_test = X.astype(input_dtype)[0m
[1m            for X_sparse in (X_csr, X_csc):[0m
[1m                X_sparse = X_sparse.astype(input_dtype)[0m
[1m>               X_means, X_vars = mean_variance_axis(X_sparse, axis=0)[0m

X          = array([[ 0.        ,  1.29667533, -0.3874711 ,  1.38366234],
       [ 0.        , -1.27678873, -1.19224399, -1.6644701...    [-0.44918122,  0.43722442,  1.05699092,  0.69448021],
       [-0.08405649,  0.16957429, -0.55744457,  0.        ]])
X_csc      = <5x4 sparse matrix of type '<class 'numpy.float64'>'
	with 16 stored elements in Compressed Sparse Column format>
X_csr      = <5x4 sparse matrix of type '<class 'numpy.float64'>'
	with 16 stored elements in Compressed Sparse Row format>
X_lil      = <5x4 sparse matrix of type '<class 'numpy.float64'>'
	with 16 stored elements in LInked List format>
X_means    = array([-0.08053406,  0.12533706, -0.02323486,  0.05793567], dtype=float32)
X_sparse   = <5x4 sparse matrix of type '<class 'numpy.float64'>'
	with 16 stored elements in Compressed Sparse Row format>
X_test     = array([[ 0.        ,  1.29667533, -0.3874711 ,  1.38366234],
       [ 0.        , -1.27678873, -1.19224399, -1.6644701...    [-0.44918122,  0.43722442,  1.05699092,  0.69448021],
       [-0.08405649,  0.16957429, -0.55744457,  0.        ]])
X_vars     = array([ 0.03868969,  0.69058609,  0.78522789,  1.03317535], dtype=float32)
_          = array([0, 1, 0, 1, 0])
expected_dtypes = [(<class 'numpy.float32'>, <class 'numpy.float32'>), (<class 'numpy.float64'>, <class 'numpy.float64'>), (<class 'numpy.int32'>, <class 'numpy.float64'>), (<class 'numpy.int64'>, <class 'numpy.float64'>)]
input_dtype = <class 'numpy.float64'>
output_dtype = <class 'numpy.float64'>

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/tests/test_sparsefuncs.py[0m:81: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
[31m[1m_________________________ test_incr_mean_variance_axis _________________________[0m

[1m    def test_incr_mean_variance_axis():[0m
[1m        for axis in [0, 1]:[0m
[1m            rng = np.random.RandomState(0)[0m
[1m            n_features = 50[0m
[1m            n_samples = 10[0m
[1m            data_chunks = [rng.randint(0, 2, size=n_features)[0m
[1m                           for i in range(n_samples)][0m
[1m    [0m
[1m            # default params for incr_mean_variance[0m
[1m            last_mean = np.zeros(n_features)[0m
[1m            last_var = np.zeros_like(last_mean)[0m
[1m            last_n = np.zeros_like(last_mean, dtype=np.int64)[0m
[1m    [0m
[1m            # Test errors[0m
[1m            X = np.array(data_chunks[0])[0m
[1m            X = np.atleast_2d(X)[0m
[1m            X_lil = sp.lil_matrix(X)[0m
[1m            X_csr = sp.csr_matrix(X_lil)[0m
[1m            assert_raises(TypeError, incr_mean_variance_axis, axis,[0m
[1m                          last_mean, last_var, last_n)[0m
[1m            assert_raises(TypeError, incr_mean_variance_axis, axis,[0m
[1m                          last_mean, last_var, last_n)[0m
[1m            assert_raises(TypeError, incr_mean_variance_axis, X_lil, axis,[0m
[1m                          last_mean, last_var, last_n)[0m
[1m    [0m
[1m            # Test _incr_mean_and_var with a 1 row input[0m
[1m>           X_means, X_vars = mean_variance_axis(X_csr, axis)[0m

X          = array([[0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1,
        1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1,
        1, 1, 1, 1, 0, 1]])
X_csr      = <1x50 sparse matrix of type '<class 'numpy.int64'>'
	with 30 stored elements in Compressed Sparse Row format>
X_lil      = <1x50 sparse matrix of type '<class 'numpy.int64'>'
	with 30 stored elements in LInked List format>
axis       = 0
data_chunks = [array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1,
       0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1...0, 1, 1, 1, 1, 1,
       0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0,
       0, 0, 1, 1]), ...]
last_mean  = array([ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
        0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,...,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
        0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.])
last_n     = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0])
last_var   = array([ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
        0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,...,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
        0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.])
n_features = 50
n_samples  = 10
rng        = <mtrand.RandomState object at 0x7fd3f4937240>

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/tests/test_sparsefuncs.py[0m:114: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:89: in mean_variance_axis
[1m    return _csr_mean_var_axis0(X)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:76: TypeError
[31m[1m____________ test_incr_mean_variance_axis_ignore_nan[csc_matrix-0] _____________[0m

axis = 0, sparse_constructor = <class 'scipy.sparse.csc.csc_matrix'>

[1m    @pytest.mark.parametrize("axis", [0, 1])[0m
[1m    @pytest.mark.parametrize("sparse_constructor", [sp.csc_matrix, sp.csr_matrix])[0m
[1m    def test_incr_mean_variance_axis_ignore_nan(axis, sparse_constructor):[0m
[1m        old_means = np.array([535., 535., 535., 535.])[0m
[1m        old_variances = np.array([4225., 4225., 4225., 4225.])[0m
[1m        old_sample_count = np.array([2, 2, 2, 2], dtype=np.int64)[0m
[1m    [0m
[1m        X = sparse_constructor([0m
[1m            np.array([[170, 170, 170, 170],[0m
[1m                      [430, 430, 430, 430],[0m
[1m                      [300, 300, 300, 300]]))[0m
[1m    [0m
[1m        X_nan = sparse_constructor([0m
[1m            np.array([[170, np.nan, 170, 170],[0m
[1m                      [np.nan, 170, 430, 430],[0m
[1m                      [430, 430, np.nan, 300],[0m
[1m                      [300, 300, 300, np.nan]]))[0m
[1m    [0m
[1m        # we avoid creating specific data for axis 0 and 1: translating the data is[0m
[1m        # enough.[0m
[1m        if axis:[0m
[1m            X = X.T[0m
[1m            X_nan = X_nan.T[0m
[1m    [0m
[1m        # take a copy of the old statistics since they are modified in place.[0m
[1m        X_means, X_vars, X_sample_count = incr_mean_variance_axis([0m
[1m            X, axis, old_means.copy(), old_variances.copy(),[0m
[1m>           old_sample_count.copy())[0m

X          = <3x4 sparse matrix of type '<class 'numpy.int64'>'
	with 12 stored elements in Compressed Sparse Column format>
X_nan      = <4x4 sparse matrix of type '<class 'numpy.float64'>'
	with 16 stored elements in Compressed Sparse Column format>
axis       = 0
old_means  = array([ 535.,  535.,  535.,  535.])
old_sample_count = array([2, 2, 2, 2])
old_variances = array([ 4225.,  4225.,  4225.,  4225.])
sparse_constructor = <class 'scipy.sparse.csc.csc_matrix'>

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/tests/test_sparsefuncs.py[0m:181: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:156: in incr_mean_variance_axis
[1m    last_var=last_var, last_n=last_n)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:264: TypeError
[31m[1m____________ test_incr_mean_variance_axis_ignore_nan[csc_matrix-1] _____________[0m

axis = 1, sparse_constructor = <class 'scipy.sparse.csc.csc_matrix'>

[1m    @pytest.mark.parametrize("axis", [0, 1])[0m
[1m    @pytest.mark.parametrize("sparse_constructor", [sp.csc_matrix, sp.csr_matrix])[0m
[1m    def test_incr_mean_variance_axis_ignore_nan(axis, sparse_constructor):[0m
[1m        old_means = np.array([535., 535., 535., 535.])[0m
[1m        old_variances = np.array([4225., 4225., 4225., 4225.])[0m
[1m        old_sample_count = np.array([2, 2, 2, 2], dtype=np.int64)[0m
[1m    [0m
[1m        X = sparse_constructor([0m
[1m            np.array([[170, 170, 170, 170],[0m
[1m                      [430, 430, 430, 430],[0m
[1m                      [300, 300, 300, 300]]))[0m
[1m    [0m
[1m        X_nan = sparse_constructor([0m
[1m            np.array([[170, np.nan, 170, 170],[0m
[1m                      [np.nan, 170, 430, 430],[0m
[1m                      [430, 430, np.nan, 300],[0m
[1m                      [300, 300, 300, np.nan]]))[0m
[1m    [0m
[1m        # we avoid creating specific data for axis 0 and 1: translating the data is[0m
[1m        # enough.[0m
[1m        if axis:[0m
[1m            X = X.T[0m
[1m            X_nan = X_nan.T[0m
[1m    [0m
[1m        # take a copy of the old statistics since they are modified in place.[0m
[1m        X_means, X_vars, X_sample_count = incr_mean_variance_axis([0m
[1m            X, axis, old_means.copy(), old_variances.copy(),[0m
[1m>           old_sample_count.copy())[0m

X          = <4x3 sparse matrix of type '<class 'numpy.int64'>'
	with 12 stored elements in Compressed Sparse Row format>
X_nan      = <4x4 sparse matrix of type '<class 'numpy.float64'>'
	with 16 stored elements in Compressed Sparse Row format>
axis       = 1
old_means  = array([ 535.,  535.,  535.,  535.])
old_sample_count = array([2, 2, 2, 2])
old_variances = array([ 4225.,  4225.,  4225.,  4225.])
sparse_constructor = <class 'scipy.sparse.csc.csc_matrix'>

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/tests/test_sparsefuncs.py[0m:181: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:152: in incr_mean_variance_axis
[1m    last_var=last_var, last_n=last_n)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:264: TypeError
[31m[1m____________ test_incr_mean_variance_axis_ignore_nan[csr_matrix-0] _____________[0m

axis = 0, sparse_constructor = <class 'scipy.sparse.csr.csr_matrix'>

[1m    @pytest.mark.parametrize("axis", [0, 1])[0m
[1m    @pytest.mark.parametrize("sparse_constructor", [sp.csc_matrix, sp.csr_matrix])[0m
[1m    def test_incr_mean_variance_axis_ignore_nan(axis, sparse_constructor):[0m
[1m        old_means = np.array([535., 535., 535., 535.])[0m
[1m        old_variances = np.array([4225., 4225., 4225., 4225.])[0m
[1m        old_sample_count = np.array([2, 2, 2, 2], dtype=np.int64)[0m
[1m    [0m
[1m        X = sparse_constructor([0m
[1m            np.array([[170, 170, 170, 170],[0m
[1m                      [430, 430, 430, 430],[0m
[1m                      [300, 300, 300, 300]]))[0m
[1m    [0m
[1m        X_nan = sparse_constructor([0m
[1m            np.array([[170, np.nan, 170, 170],[0m
[1m                      [np.nan, 170, 430, 430],[0m
[1m                      [430, 430, np.nan, 300],[0m
[1m                      [300, 300, 300, np.nan]]))[0m
[1m    [0m
[1m        # we avoid creating specific data for axis 0 and 1: translating the data is[0m
[1m        # enough.[0m
[1m        if axis:[0m
[1m            X = X.T[0m
[1m            X_nan = X_nan.T[0m
[1m    [0m
[1m        # take a copy of the old statistics since they are modified in place.[0m
[1m        X_means, X_vars, X_sample_count = incr_mean_variance_axis([0m
[1m            X, axis, old_means.copy(), old_variances.copy(),[0m
[1m>           old_sample_count.copy())[0m

X          = <3x4 sparse matrix of type '<class 'numpy.int64'>'
	with 12 stored elements in Compressed Sparse Row format>
X_nan      = <4x4 sparse matrix of type '<class 'numpy.float64'>'
	with 16 stored elements in Compressed Sparse Row format>
axis       = 0
old_means  = array([ 535.,  535.,  535.,  535.])
old_sample_count = array([2, 2, 2, 2])
old_variances = array([ 4225.,  4225.,  4225.,  4225.])
sparse_constructor = <class 'scipy.sparse.csr.csr_matrix'>

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/tests/test_sparsefuncs.py[0m:181: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:149: in incr_mean_variance_axis
[1m    last_var=last_var, last_n=last_n)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:264: TypeError
[31m[1m____________ test_incr_mean_variance_axis_ignore_nan[csr_matrix-1] _____________[0m

axis = 1, sparse_constructor = <class 'scipy.sparse.csr.csr_matrix'>

[1m    @pytest.mark.parametrize("axis", [0, 1])[0m
[1m    @pytest.mark.parametrize("sparse_constructor", [sp.csc_matrix, sp.csr_matrix])[0m
[1m    def test_incr_mean_variance_axis_ignore_nan(axis, sparse_constructor):[0m
[1m        old_means = np.array([535., 535., 535., 535.])[0m
[1m        old_variances = np.array([4225., 4225., 4225., 4225.])[0m
[1m        old_sample_count = np.array([2, 2, 2, 2], dtype=np.int64)[0m
[1m    [0m
[1m        X = sparse_constructor([0m
[1m            np.array([[170, 170, 170, 170],[0m
[1m                      [430, 430, 430, 430],[0m
[1m                      [300, 300, 300, 300]]))[0m
[1m    [0m
[1m        X_nan = sparse_constructor([0m
[1m            np.array([[170, np.nan, 170, 170],[0m
[1m                      [np.nan, 170, 430, 430],[0m
[1m                      [430, 430, np.nan, 300],[0m
[1m                      [300, 300, 300, np.nan]]))[0m
[1m    [0m
[1m        # we avoid creating specific data for axis 0 and 1: translating the data is[0m
[1m        # enough.[0m
[1m        if axis:[0m
[1m            X = X.T[0m
[1m            X_nan = X_nan.T[0m
[1m    [0m
[1m        # take a copy of the old statistics since they are modified in place.[0m
[1m        X_means, X_vars, X_sample_count = incr_mean_variance_axis([0m
[1m            X, axis, old_means.copy(), old_variances.copy(),[0m
[1m>           old_sample_count.copy())[0m

X          = <4x3 sparse matrix of type '<class 'numpy.int64'>'
	with 12 stored elements in Compressed Sparse Column format>
X_nan      = <4x4 sparse matrix of type '<class 'numpy.float64'>'
	with 16 stored elements in Compressed Sparse Column format>
axis       = 1
old_means  = array([ 535.,  535.,  535.,  535.])
old_sample_count = array([2, 2, 2, 2])
old_variances = array([ 4225.,  4225.,  4225.,  4225.])
sparse_constructor = <class 'scipy.sparse.csr.csr_matrix'>

[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/tests/test_sparsefuncs.py[0m:181: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[31m[1m/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py[0m:159: in incr_mean_variance_axis
[1m    last_var=last_var, last_n=last_n)[0m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

[1m>   ???[0m
[31m[1mE   TypeError: astype() got an unexpected keyword argument 'copy'[0m

__builtins__ = <builtins>
__doc__    = None
__file__   = '/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so'
__loader__ = <_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>
__name__   = 'sklearn.utils.sparsefuncs_fast'
__package__ = 'sklearn.utils'
__spec__   = ModuleSpec(name='sklearn.utils.sparsefuncs_fast', loader=<_frozen_importlib.ExtensionFileLoader object at 0x7fd401dbd358>, origin='/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs_fast.cpython-34m.so')
__test__   = {}
_csc_mean_variance_axis0 = <cyfunction _csc_mean_variance_axis0 at 0x7fd401147ad8>
_csr_mean_variance_axis0 = <cyfunction _csr_mean_variance_axis0 at 0x7fd4011476c8>
_csr_row_norms = <cyfunction _csr_row_norms at 0x7fd4011472b8>
_incr_mean_variance_axis0 = <cyfunction _incr_mean_variance_axis0 at 0x7fd401147ee8>
_inplace_csr_row_normalize_l1 = <cyfunction _inplace_csr_row_normalize_l1 at 0x7fd401148388>
_inplace_csr_row_normalize_l2 = <cyfunction _inplace_csr_row_normalize_l2 at 0x7fd401148798>
assign_rows_csr = <cyfunction assign_rows_csr at 0x7fd401148a08>
csc_mean_variance_axis0 = <built-in function csc_mean_variance_axis0>
csr_mean_variance_axis0 = <built-in function csr_mean_variance_axis0>
csr_row_norms = <built-in function csr_row_norms>
incr_mean_variance_axis0 = <built-in function incr_mean_variance_axis0>
inplace_csr_row_normalize_l1 = <built-in function inplace_csr_row_normalize_l1>
inplace_csr_row_normalize_l2 = <built-in function inplace_csr_row_normalize_l2>
np         = <module 'numpy' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/numpy/__init__.py'>
sp         = <module 'scipy.sparse' from '/home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/scipy/sparse/__init__.py'>

[31m[1msklearn/utils/sparsefuncs_fast.pyx[0m:264: TypeError

----------- coverage: platform linux, python 3.4.5-final-0 -----------
Name                                                                                                                Stmts   Miss  Cover
---------------------------------------------------------------------------------------------------------------------------------------
/home/travis/build/scikit-learn/scikit-learn/sklearn/__check_build/__init__.py                                         18      3    83%
/home/travis/build/scikit-learn/scikit-learn/sklearn/__check_build/setup.py                                             9      2    78%
/home/travis/build/scikit-learn/scikit-learn/sklearn/__init__.py                                                       32     11    66%
/home/travis/build/scikit-learn/scikit-learn/sklearn/_build_utils/__init__.py                                          49     22    55%
/home/travis/build/scikit-learn/scikit-learn/sklearn/_config.py                                                        16      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/base.py                                                          163      5    97%
/home/travis/build/scikit-learn/scikit-learn/sklearn/calibration.py                                                   178      2    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/__init__.py                                               10      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/_feature_agglomeration.py                                 26      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/affinity_propagation_.py                                 121      1    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/bicluster.py                                             175      9    95%
/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/birch.py                                                 231      1    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/dbscan_.py                                                54      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/hierarchical.py                                          307      2    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/k_means_.py                                              445     27    94%
/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/mean_shift_.py                                           104      5    95%
/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/optics_.py                                               199      3    98%
/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/setup.py                                                  22      2    91%
/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/spectral.py                                              101      5    95%
/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/tests/__init__.py                                          0      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/tests/common.py                                            8      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/tests/test_affinity_propagation.py                        79      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/tests/test_bicluster.py                                  151     10    93%
/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/tests/test_birch.py                                      105      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/tests/test_dbscan.py                                     196      3    98%
/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/tests/test_feature_agglomeration.py                       27      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/tests/test_hierarchical.py                               332      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/tests/test_k_means.py                                    507     57    89%
/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/tests/test_mean_shift.py                                  76      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/tests/test_optics.py                                      94      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/tests/test_spectral.py                                   108      4    96%
/home/travis/build/scikit-learn/scikit-learn/sklearn/compose/__init__.py                                                3      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/compose/_column_transformer.py                                   215     19    91%
/home/travis/build/scikit-learn/scikit-learn/sklearn/compose/_target.py                                                56      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/compose/tests/__init__.py                                          0      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/compose/tests/test_column_transformer.py                         475     89    81%
/home/travis/build/scikit-learn/scikit-learn/sklearn/compose/tests/test_target.py                                     156      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/covariance/__init__.py                                             6      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/covariance/elliptic_envelope.py                                   37      1    97%
/home/travis/build/scikit-learn/scikit-learn/sklearn/covariance/empirical_covariance_.py                               70      1    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/covariance/graph_lasso_.py                                       232     13    94%
/home/travis/build/scikit-learn/scikit-learn/sklearn/covariance/robust_covariance.py                                  218     16    93%
/home/travis/build/scikit-learn/scikit-learn/sklearn/covariance/shrunk_covariance_.py                                 127     10    92%
/home/travis/build/scikit-learn/scikit-learn/sklearn/covariance/tests/__init__.py                                       0      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/covariance/tests/test_covariance.py                              184      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/covariance/tests/test_elliptic_envelope.py                        36      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/covariance/tests/test_graph_lasso.py                              93      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/covariance/tests/test_graphical_lasso.py                          91      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/covariance/tests/test_robust_covariance.py                        67      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/cross_decomposition/__init__.py                                    2      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/cross_decomposition/cca_.py                                        5      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/cross_decomposition/pls_.py                                      215      5    98%
/home/travis/build/scikit-learn/scikit-learn/sklearn/cross_decomposition/tests/__init__.py                              0      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/cross_decomposition/tests/test_pls.py                            189      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/datasets/__init__.py                                              49      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/datasets/base.py                                                 200      1    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/datasets/california_housing.py                                    42      3    93%
/home/travis/build/scikit-learn/scikit-learn/sklearn/datasets/covtype.py                                               51     27    47%
/home/travis/build/scikit-learn/scikit-learn/sklearn/datasets/kddcup99.py                                             115     80    30%
/home/travis/build/scikit-learn/scikit-learn/sklearn/datasets/lfw.py                                                  162     22    86%
/home/travis/build/scikit-learn/scikit-learn/sklearn/datasets/mlcomp.py                                                51     42    18%
/home/travis/build/scikit-learn/scikit-learn/sklearn/datasets/mldata.py                                                82      9    89%
/home/travis/build/scikit-learn/scikit-learn/sklearn/datasets/olivetti_faces.py                                        41     29    29%
/home/travis/build/scikit-learn/scikit-learn/sklearn/datasets/openml.py                                               210     13    94%
/home/travis/build/scikit-learn/scikit-learn/sklearn/datasets/rcv1.py                                                 115     81    30%
/home/travis/build/scikit-learn/scikit-learn/sklearn/datasets/samples_generator.py                                    401     22    95%
/home/travis/build/scikit-learn/scikit-learn/sklearn/datasets/setup.py                                                 17      2    88%
/home/travis/build/scikit-learn/scikit-learn/sklearn/datasets/species_distributions.py                                 75     54    28%
/home/travis/build/scikit-learn/scikit-learn/sklearn/datasets/svmlight_format.py                                      137      7    95%
/home/travis/build/scikit-learn/scikit-learn/sklearn/datasets/tests/__init__.py                                         0      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/datasets/tests/test_20news.py                                     54     31    43%
/home/travis/build/scikit-learn/scikit-learn/sklearn/datasets/tests/test_base.py                                      175      5    97%
/home/travis/build/scikit-learn/scikit-learn/sklearn/datasets/tests/test_california_housing.py                         15      4    73%
/home/travis/build/scikit-learn/scikit-learn/sklearn/datasets/tests/test_common.py                                      5      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/datasets/tests/test_covtype.py                                    21     10    52%
/home/travis/build/scikit-learn/scikit-learn/sklearn/datasets/tests/test_kddcup99.py                                   34     20    41%
/home/travis/build/scikit-learn/scikit-learn/sklearn/datasets/tests/test_lfw.py                                        92      3    97%
/home/travis/build/scikit-learn/scikit-learn/sklearn/datasets/tests/test_mldata.py                                     90      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/datasets/tests/test_openml.py                                    267      3    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/datasets/tests/test_rcv1.py                                       50     33    34%
/home/travis/build/scikit-learn/scikit-learn/sklearn/datasets/tests/test_samples_generator.py                         259      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/datasets/tests/test_svmlight_format.py                           314      5    98%
/home/travis/build/scikit-learn/scikit-learn/sklearn/datasets/twenty_newsgroups.py                                    162    121    25%
/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/__init__.py                                         12      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/base.py                                             49      1    98%
/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/dict_learning.py                                   330     26    92%
/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/factor_analysis.py                                 112      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/fastica_.py                                        182      7    96%
/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/incremental_pca.py                                  74      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/kernel_pca.py                                       92      2    98%
/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/nmf.py                                             399     11    97%
/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/online_lda.py                                      241      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/pca.py                                             160      4    98%
/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/setup.py                                            15      2    87%
/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/sparse_pca.py                                       81      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/tests/__init__.py                                    0      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_dict_learning.py                        243      1    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_factor_analysis.py                       52      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py                              170      4    98%
/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_incremental_pca.py                      199      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_kernel_pca.py                           119      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_nmf.py                                  314      3    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_online_lda.py                           233      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_pca.py                                  439      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_sparse_pca.py                           154     19    88%
/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_truncated_svd.py                        129     41    68%
/home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/truncated_svd.py                                    48      4    92%
/home/travis/build/scikit-learn/scikit-learn/sklearn/discriminant_analysis.py                                         235      2    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/dummy.py                                                         172      3    98%
/home/travis/build/scikit-learn/scikit-learn/sklearn/ensemble/__init__.py                                              20      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/ensemble/bagging.py                                              264      5    98%
/home/travis/build/scikit-learn/scikit-learn/sklearn/ensemble/base.py                                                  54      1    98%
/home/travis/build/scikit-learn/scikit-learn/sklearn/ensemble/forest.py                                               343      6    98%
/home/travis/build/scikit-learn/scikit-learn/sklearn/ensemble/gradient_boosting.py                                    667     26    96%
/home/travis/build/scikit-learn/scikit-learn/sklearn/ensemble/iforest.py                                              111      2    98%
/home/travis/build/scikit-learn/scikit-learn/sklearn/ensemble/partial_dependence.py                                   160    106    34%
/home/travis/build/scikit-learn/scikit-learn/sklearn/ensemble/setup.py                                                 10      2    80%
/home/travis/build/scikit-learn/scikit-learn/sklearn/ensemble/tests/__init__.py                                         0      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/ensemble/tests/test_bagging.py                                   382      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/ensemble/tests/test_base.py                                       73      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/ensemble/tests/test_forest.py                                    699      3    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/ensemble/tests/test_gradient_boosting.py                         727      7    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/ensemble/tests/test_gradient_boosting_loss_functions.py          121      6    95%
/home/travis/build/scikit-learn/scikit-learn/sklearn/ensemble/tests/test_iforest.py                                   165      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/ensemble/tests/test_partial_dependence.py                         97     37    62%
/home/travis/build/scikit-learn/scikit-learn/sklearn/ensemble/tests/test_voting_classifier.py                         262      1    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/ensemble/tests/test_weight_boosting.py                           257      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/ensemble/voting_classifier.py                                     91      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/ensemble/weight_boosting.py                                      284     11    96%
/home/travis/build/scikit-learn/scikit-learn/sklearn/exceptions.py                                                     11      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/__init__.py                                              1      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/_arff.py                                               423    199    53%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/_pilutil.py                                            152     72    53%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/conftest.py                                              2      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/funcsigs.py                                            424    350    17%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/__init__.py                                      15      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/_compat.py                                       11      1    91%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/_dask.py                                        158    121    23%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/_memmapping_reducer.py                          180     80    56%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/_memory_helpers.py                               65     63     3%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/_multiprocessing_helpers.py                      26      9    65%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/_parallel_backends.py                           250     60    76%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/_store_backends.py                              190     76    60%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/backports.py                                     48     33    31%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/compressor.py                                   309    108    65%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/disk.py                                          60     33    45%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/executor.py                                      29      9    69%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/externals/__init__.py                             0      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/externals/cloudpickle/__init__.py                 3      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/externals/cloudpickle/cloudpickle.py            562    427    24%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/externals/loky/__init__.py                        5      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/externals/loky/_base.py                         279    169    39%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/externals/loky/backend/__init__.py               11      2    82%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/externals/loky/backend/_posix_reduction.py       41     11    73%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/externals/loky/backend/_posix_wait.py            60     39    35%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/externals/loky/backend/_win_reduction.py         64     53    17%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/externals/loky/backend/_win_wait.py              28     24    14%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/externals/loky/backend/compat.py                 12      4    67%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/externals/loky/backend/compat_posix.py            4      1    75%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/externals/loky/backend/compat_win32.py           35     32     9%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/externals/loky/backend/context.py               134     70    48%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/externals/loky/backend/fork_exec.py               7      1    86%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/externals/loky/backend/managers.py               18     13    28%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/externals/loky/backend/popen_loky_posix.py      150     46    69%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/externals/loky/backend/popen_loky_win32.py       83     63    24%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/externals/loky/backend/process.py                52     31    40%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/externals/loky/backend/queues.py                132     45    66%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/externals/loky/backend/reduction.py              99     34    66%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/externals/loky/backend/semaphore_tracker.py     129     56    57%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/externals/loky/backend/semlock.py               179    133    26%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/externals/loky/backend/spawn.py                 107     53    50%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/externals/loky/backend/synchronize.py           221    135    39%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/externals/loky/backend/utils.py                  65     32    51%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/externals/loky/cloudpickle_wrapper.py            34     23    32%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/externals/loky/process_executor.py              498    168    66%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/externals/loky/reusable_executor.py              91     16    82%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/format_stack.py                                 209    188    10%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/func_inspect.py                                 176     71    60%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/hashing.py                                      114     31    73%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/logger.py                                        76     40    47%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/memory.py                                       358    134    63%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/my_exceptions.py                                 53     20    62%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/numpy_pickle.py                                 203     45    78%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/numpy_pickle_compat.py                          100     71    29%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/numpy_pickle_utils.py                            93     21    77%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/parallel.py                                     369     70    81%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/pool.py                                         116     83    28%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/joblib/testing.py                                       40     22    45%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/setup.py                                                 9      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/externals/six.py                                                 296    136    54%
/home/travis/build/scikit-learn/scikit-learn/sklearn/feature_extraction/__init__.py                                     5      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/feature_extraction/dict_vectorizer.py                            125      3    98%
/home/travis/build/scikit-learn/scikit-learn/sklearn/feature_extraction/hashing.py                                     47      2    96%
/home/travis/build/scikit-learn/scikit-learn/sklearn/feature_extraction/image.py                                      154      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/feature_extraction/setup.py                                       13      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/feature_extraction/stop_words.py                                   1      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/feature_extraction/tests/__init__.py                               0      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/feature_extraction/tests/test_dict_vectorizer.py                  68      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/feature_extraction/tests/test_feature_hasher.py                  100      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/feature_extraction/tests/test_image.py                           217      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/feature_extraction/tests/test_text.py                            637      9    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/feature_extraction/text.py                                       460     16    97%
/home/travis/build/scikit-learn/scikit-learn/sklearn/feature_selection/__init__.py                                     16      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/feature_selection/base.py                                         39      1    97%
/home/travis/build/scikit-learn/scikit-learn/sklearn/feature_selection/from_model.py                                   85      6    93%
/home/travis/build/scikit-learn/scikit-learn/sklearn/feature_selection/mutual_info_.py                                113      1    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/feature_selection/rfe.py                                         129      3    98%
/home/travis/build/scikit-learn/scikit-learn/sklearn/feature_selection/tests/__init__.py                                0      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/feature_selection/tests/test_base.py                              72      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/feature_selection/tests/test_chi2.py                              53      2    96%
/home/travis/build/scikit-learn/scikit-learn/sklearn/feature_selection/tests/test_feature_select.py                   389      6    98%
/home/travis/build/scikit-learn/scikit-learn/sklearn/feature_selection/tests/test_from_model.py                       189      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/feature_selection/tests/test_mutual_info.py                       92      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/feature_selection/tests/test_rfe.py                              236      3    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/feature_selection/tests/test_variance_threshold.py                14      2    86%
/home/travis/build/scikit-learn/scikit-learn/sklearn/feature_selection/univariate_selection.py                        188      1    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/feature_selection/variance_threshold.py                           23      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/gaussian_process/__init__.py                                       7      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/gaussian_process/correlation_models.py                            79     70    11%
/home/travis/build/scikit-learn/scikit-learn/sklearn/gaussian_process/gpc.py                                          190     15    92%
/home/travis/build/scikit-learn/scikit-learn/sklearn/gaussian_process/gpr.py                                          152     12    92%
/home/travis/build/scikit-learn/scikit-learn/sklearn/gaussian_process/kernels.py                                      544     46    92%
/home/travis/build/scikit-learn/scikit-learn/sklearn/gaussian_process/regression_models.py                             20     14    30%
/home/travis/build/scikit-learn/scikit-learn/sklearn/gaussian_process/tests/__init__.py                                 0      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/gaussian_process/tests/test_gpc.py                                77      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/gaussian_process/tests/test_gpr.py                               179      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/gaussian_process/tests/test_kernels.py                           161      2    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/impute.py                                                        223      4    98%
/home/travis/build/scikit-learn/scikit-learn/sklearn/isotonic.py                                                       98      1    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/kernel_approximation.py                                          160      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/kernel_ridge.py                                                   41      1    98%
/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/__init__.py                                          17      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/base.py                                             180     17    91%
/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/bayes.py                                            162      7    96%
/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/coordinate_descent.py                               433     21    95%
/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/huber.py                                             89      2    98%
/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/least_angle.py                                      401     15    96%
/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/logistic.py                                         509      9    98%
/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/omp.py                                              269     10    96%
/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/passive_aggressive.py                                31      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/perceptron.py                                         4      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/randomized_l1.py                                    184     11    94%
/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/ransac.py                                           144      2    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/ridge.py                                            421     23    95%
/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/sag.py                                               71      4    94%
/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/setup.py                                             18      2    89%
/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/stochastic_gradient.py                              429      6    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/__init__.py                                     0      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_base.py                                  278     21    92%
/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_bayes.py                                 102      9    91%
/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_coordinate_descent.py                    501     23    95%
/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_huber.py                                 123      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_least_angle.py                           336      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_logistic.py                              803      7    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_omp.py                                   144      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_passive_aggressive.py                    174      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_perceptron.py                             51      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_randomized_l1.py                         112      1    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_ransac.py                                269      9    97%
/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_ridge.py                                 580     14    98%
/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_sag.py                                   502    114    77%
/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_sgd.py                                   822      2    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_sparse_coordinate_descent.py             193     66    66%
/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/tests/test_theil_sen.py                             192      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/theil_sen.py                                        113      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/manifold/__init__.py                                               6      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/manifold/isomap.py                                                48      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/manifold/locally_linear.py                                       219     17    92%
/home/travis/build/scikit-learn/scikit-learn/sklearn/manifold/mds.py                                                  104      6    94%
/home/travis/build/scikit-learn/scikit-learn/sklearn/manifold/setup.py                                                 20      2    90%
/home/travis/build/scikit-learn/scikit-learn/sklearn/manifold/spectral_embedding_.py                                  163     26    84%
/home/travis/build/scikit-learn/scikit-learn/sklearn/manifold/t_sne.py                                                254      2    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/manifold/tests/__init__.py                                         0      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/manifold/tests/test_isomap.py                                     71      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/manifold/tests/test_locally_linear.py                             84      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/manifold/tests/test_mds.py                                        22      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/manifold/tests/test_spectral_embedding.py                        158      6    96%
/home/travis/build/scikit-learn/scikit-learn/sklearn/manifold/tests/test_t_sne.py                                     488      6    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/__init__.py                                               57      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/base.py                                                   47      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/classification.py                                        405      7    98%
/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/cluster/__init__.py                                       18      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/cluster/bicluster.py                                      31      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/cluster/setup.py                                          14      2    86%
/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/cluster/supervised.py                                    154      3    98%
/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/cluster/tests/__init__.py                                  0      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/cluster/tests/test_bicluster.py                           30      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/cluster/tests/test_common.py                              85      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/cluster/tests/test_supervised.py                         189      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/cluster/tests/test_unsupervised.py                       106      2    98%
/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/cluster/unsupervised.py                                   86      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py                                              299     14    95%
/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/ranking.py                                               192      3    98%
/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/regression.py                                            110      4    96%
/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/scorer.py                                                164      2    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/setup.py                                                  17      2    88%
/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/tests/__init__.py                                          0      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/tests/test_classification.py                             815      1    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/tests/test_common.py                                     419      3    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/tests/test_pairwise.py                                   522     68    87%
/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py                                    667      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/tests/test_regression.py                                 116      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/tests/test_score_objects.py                              292      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/mixture/__init__.py                                                3      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/mixture/base.py                                                  172     12    93%
/home/travis/build/scikit-learn/scikit-learn/sklearn/mixture/bayesian_mixture.py                                      160      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/mixture/gaussian_mixture.py                                      187      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/mixture/tests/__init__.py                                          0      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/mixture/tests/test_bayesian_mixture.py                           222      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/mixture/tests/test_gaussian_mixture.py                           571      2    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/mixture/tests/test_mixture.py                                     11      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/model_selection/__init__.py                                       29      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/model_selection/_search.py                                       288      3    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/model_selection/_split.py                                        479      4    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/model_selection/_validation.py                                   303     10    97%
/home/travis/build/scikit-learn/scikit-learn/sklearn/model_selection/tests/__init__.py                                  0      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/model_selection/tests/common.py                                   12      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/model_selection/tests/test_search.py                             899      3    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/model_selection/tests/test_split.py                              850     65    92%
/home/travis/build/scikit-learn/scikit-learn/sklearn/model_selection/tests/test_validation.py                         832     23    97%
/home/travis/build/scikit-learn/scikit-learn/sklearn/multiclass.py                                                    240     12    95%
/home/travis/build/scikit-learn/scikit-learn/sklearn/multioutput.py                                                   188     14    93%
/home/travis/build/scikit-learn/scikit-learn/sklearn/naive_bayes.py                                                   264      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/__init__.py                                             12      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/approximate.py                                         193      2    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/base.py                                                347     13    96%
/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/classification.py                                       93      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/graph.py                                                25      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/kde.py                                                  82      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/lof.py                                                  79      1    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/nearest_centroid.py                                     66      1    98%
/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/regression.py                                           51      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/setup.py                                                15      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/tests/__init__.py                                        0      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/tests/test_approximate.py                              249      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/tests/test_ball_tree.py                                187      1    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/tests/test_dist_metrics.py                             116      2    98%
/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/tests/test_kd_tree.py                                  155      1    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/tests/test_kde.py                                      139      1    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/tests/test_lof.py                                      125      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/tests/test_nearest_centroid.py                          95      9    91%
/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/tests/test_neighbors.py                                754     13    98%
/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/tests/test_quad_tree.py                                 55      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/unsupervised.py                                          7      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/neural_network/__init__.py                                         4      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/neural_network/_base.py                                           39      2    95%
/home/travis/build/scikit-learn/scikit-learn/sklearn/neural_network/_stochastic_optimizers.py                          62      4    94%
/home/travis/build/scikit-learn/scikit-learn/sklearn/neural_network/multilayer_perceptron.py                          369      5    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/neural_network/rbm.py                                            105      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/neural_network/tests/__init__.py                                   0      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/neural_network/tests/test_mlp.py                                 355      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/neural_network/tests/test_rbm.py                                 114      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/neural_network/tests/test_stochastic_optimizers.py                74      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/pipeline.py                                                      237      4    98%
/home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/__init__.py                                         30      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/_discretization.py                                 100      2    98%
/home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/_encoders.py                                       280      4    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/_function_transformer.py                            53      1    98%
/home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/base.py                                             33      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/data.py                                            733     19    97%
/home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/imputation.py                                      153      8    95%
/home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/label.py                                           304      9    97%
/home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/tests/__init__.py                                    0      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/tests/test_base.py                                  50      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/tests/test_common.py                                78      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/tests/test_data.py                                1346     89    93%
/home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/tests/test_discretization.py                       127      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/tests/test_encoders.py                             332     21    94%
/home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/tests/test_function_transformer.py                  78      4    95%
/home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/tests/test_imputation.py                           166      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/tests/test_label.py                                322      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/random_projection.py                                             107      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/semi_supervised/__init__.py                                        2      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/semi_supervised/label_propagation.py                             135      2    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/semi_supervised/tests/__init__.py                                  0      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/semi_supervised/tests/test_label_propagation.py                  107      1    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/setup.py                                                          58     52    10%
/home/travis/build/scikit-learn/scikit-learn/sklearn/svm/__init__.py                                                    4      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/svm/base.py                                                      328      9    97%
/home/travis/build/scikit-learn/scikit-learn/sklearn/svm/bounds.py                                                     19      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/svm/classes.py                                                    99      2    98%
/home/travis/build/scikit-learn/scikit-learn/sklearn/svm/setup.py                                                      24      2    92%
/home/travis/build/scikit-learn/scikit-learn/sklearn/svm/tests/__init__.py                                              0      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/svm/tests/test_bounds.py                                          43      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/svm/tests/test_sparse.py                                         194      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/svm/tests/test_svm.py                                            526      5    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/__init__.py                                                  0      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_base.py                                               245      4    98%
/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_calibration.py                                        163      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_check_build.py                                          4      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_common.py                                             103      3    97%
/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_config.py                                              44      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_discriminant_analysis.py                              193      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_docstring_parameters.py                                80     49    39%
/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_dummy.py                                              393      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_impute.py                                             275     13    95%
/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_init.py                                                25      3    88%
/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_isotonic.py                                           241      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_kernel_approximation.py                               151      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_kernel_ridge.py                                        56      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_metaestimators.py                                      80      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_multiclass.py                                         451      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_multioutput.py                                        312      1    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_naive_bayes.py                                        372      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_pipeline.py                                           588     15    97%
/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_random_projection.py                                  181      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_site_joblib.py                                         24      9    62%
/home/travis/build/scikit-learn/scikit-learn/sklearn/tree/__init__.py                                                   6      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/tree/export.py                                                   193     10    95%
/home/travis/build/scikit-learn/scikit-learn/sklearn/tree/setup.py                                                     17      2    88%
/home/travis/build/scikit-learn/scikit-learn/sklearn/tree/tests/__init__.py                                             0      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/tree/tests/test_export.py                                         92      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/tree/tests/test_tree.py                                          946      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/tree/tree.py                                                     267      3    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/__init__.py                                                142      7    95%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/_joblib.py                                                  14      6    57%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/_scipy_sparse_lsqr_backport.py                             199    191     4%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/_show_versions.py                                           44      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/_unittest_backport.py                                       85     10    88%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/arpack.py                                                    8      2    75%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/bench.py                                                     3      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/class_weight.py                                             59      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/deprecation.py                                              65      7    89%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/estimator_checks.py                                       1325     87    93%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py                                                 211      9    96%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/fixes.py                                                   171     70    59%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/graph.py                                                    26      3    88%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/linear_assignment_.py                                      106      5    95%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/metaestimators.py                                           89      2    98%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/mocking.py                                                  52      1    98%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/multiclass.py                                              145      6    96%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/optimize.py                                                 68      9    87%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/random.py                                                   47      4    91%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/setup.py                                                    30      2    93%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsefuncs.py                                             196     14    93%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsetools/__init__.py                                      4      1    75%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsetools/setup.py                                         8      2    75%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/sparsetools/tests/__init__.py                                0      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/stats.py                                                    12      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/testing.py                                                 396     97    76%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/tests/__init__.py                                            0      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/tests/test_bench.py                                          6      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/tests/test_class_weight.py                                 142      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/tests/test_deprecation.py                                   47      5    89%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/tests/test_estimator_checks.py                             278     23    92%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/tests/test_extmath.py                                      374      2    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/tests/test_fast_dict.py                                     23      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/tests/test_fixes.py                                         28      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/tests/test_graph.py                                         14      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/tests/test_linear_assignment.py                             18      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/tests/test_metaestimators.py                                38      6    84%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/tests/test_multiclass.py                                   152      3    98%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/tests/test_murmurhash.py                                    51      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/tests/test_optimize.py                                      18      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/tests/test_random.py                                        89      1    99%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/tests/test_seq_dataset.py                                   56      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/tests/test_shortest_path.py                                 53      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/tests/test_show_versions.py                                 23      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/tests/test_sparsefuncs.py                                  327     30    91%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/tests/test_stats.py                                          8      0   100%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/tests/test_testing.py                                      257     39    85%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/tests/test_utils.py                                        177     14    92%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/tests/test_validation.py                                   423     23    95%
/home/travis/build/scikit-learn/scikit-learn/sklearn/utils/validation.py                                              262      6    98%
---------------------------------------------------------------------------------------------------------------------------------------
TOTAL                                                                                                               74557   7152    90%

=========================== short test summary info ============================
SKIP [46] /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/_pytest/nose.py:24: pandas is not installed: not testing for input of type pandas.Series to class weight.
SKIP [4] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/naive_bayes.py: doctests are only run for numpy >= 1.14
SKIP [6] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/regression.py: doctests are only run for numpy >= 1.14
SKIP [1] /home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/tests/test_encoders.py:555: could not import 'pandas'
SKIP [1] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/kernel_ridge.py: doctests are only run for numpy >= 1.14
SKIP [6] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/ranking.py: doctests are only run for numpy >= 1.14
SKIP [1] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/feature_selection/variance_threshold.py: doctests are only run for numpy >= 1.14
SKIP [3] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/least_angle.py: doctests are only run for numpy >= 1.14
SKIP [2] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/_encoders.py: doctests are only run for numpy >= 1.14
SKIP [1] /home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/tests/test_encoders.py:452: could not import 'pandas'
SKIP [1] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/ensemble/voting_classifier.py: doctests are only run for numpy >= 1.14
SKIP [7] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/utils/__init__.py: doctests are only run for numpy >= 1.14
SKIP [1] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/factor_analysis.py: doctests are only run for numpy >= 1.14
SKIP [1] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/pca.py: doctests are only run for numpy >= 1.14
SKIP [2] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/discriminant_analysis.py: doctests are only run for numpy >= 1.14
SKIP [1] /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/_pytest/nose.py:24: California housing dataset can not be loaded.
SKIP [3] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/semi_supervised/label_propagation.py: doctests are only run for numpy >= 1.14
SKIP [1] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/spectral.py: doctests are only run for numpy >= 1.14
SKIP [3] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/random_projection.py: doctests are only run for numpy >= 1.14
SKIP [1] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/feature_extraction/hashing.py: doctests are only run for numpy >= 1.14
SKIP [1] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/compose/_target.py: doctests are only run for numpy >= 1.14
SKIP [1] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/_discretization.py: doctests are only run for numpy >= 1.14
SKIP [1] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/mean_shift_.py: doctests are only run for numpy >= 1.14
SKIP [3] /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/_pytest/nose.py:24: Matplotlib not available.
SKIP [1] /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/_pytest/nose.py:24: transform of MiniBatchSparsePCA is not invariant when applied to a subset.
SKIP [2] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/classification.py: doctests are only run for numpy >= 1.14
SKIP [1] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/fastica_.py: doctests are only run for numpy >= 1.14
SKIP [2] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/exceptions.py: doctests are only run for numpy >= 1.14
SKIP [1] /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/_pytest/nose.py:24: Download RCV1 dataset to run this test.
SKIP [2] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/graph.py: doctests are only run for numpy >= 1.14
SKIP [4] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/pipeline.py: doctests are only run for numpy >= 1.14
SKIP [4] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/label.py: doctests are only run for numpy >= 1.14
SKIP [1] /home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_init.py:62: soft-failed test_import_sklearn_no_warnings.
 assert 'Warning' not in '/home/travis/build/sc...ingDeprecationWarning)'
  'Warning' is contained here:
    13: FutureWarning: numpy not_equal will not check object identity in the future. The comparison did not return the same result as suggested by the identity (`is`)) and will change.
  ?           +++++++
      _nan_object_mask = _nan_object_array != _nan_object_array
    /home/travis/miniconda/envs/testenv/lib/python3.4/imp.py:32: PendingDeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
      PendingDeprecationWarning), 
 /home/travis/build/scikit-learn/scikit-learn/sklearn/utils/fixes.py:313: FutureWarning: numpy not_equal will not check object identity in the future. The comparison did not return the same result as suggested by the identity (`is`)) and will change.
  _nan_object_mask = _nan_object_array != _nan_object_array
/home/travis/miniconda/envs/testenv/lib/python3.4/imp.py:32: PendingDeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  PendingDeprecationWarning)
SKIP [1] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/scorer.py: doctests are only run for numpy >= 1.14
SKIP [3] /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/_pytest/nose.py:24: Pandas not found
SKIP [1] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/manifold/mds.py: doctests are only run for numpy >= 1.14
SKIP [1] /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/_pytest/nose.py:24: pyamg not available.
SKIP [1] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/sag.py: doctests are only run for numpy >= 1.14
SKIP [2] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/utils/validation.py: doctests are only run for numpy >= 1.14
SKIP [1] /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/_pytest/nose.py:24: This test is failing on the buildbot, but cannot reproduce. Temporarily disabling it until it can be reproduced and  fixed.
SKIP [2] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/hierarchical.py: doctests are only run for numpy >= 1.14
SKIP [1] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/birch.py: doctests are only run for numpy >= 1.14
SKIP [1] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/neural_network/rbm.py: doctests are only run for numpy >= 1.14
SKIP [4] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/base.py: doctests are only run for numpy >= 1.14
SKIP [1] /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/_pytest/nose.py:24: transform of SparsePCA is not invariant when applied to a subset.
SKIP [2] /home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_impute.py:301: could not import 'pandas'
SKIP [2] /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/_pytest/nose.py:24: skipping mini_batch_fit_transform.
SKIP [1] /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/_pytest/nose.py:24: decision_function of SVC is not invariant when applied to a subset.
SKIP [2] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/sparse_pca.py: doctests are only run for numpy >= 1.14
SKIP [4] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/ridge.py: doctests are only run for numpy >= 1.14
SKIP [2] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/stochastic_gradient.py: doctests are only run for numpy >= 1.14
SKIP [1] /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/_pytest/nose.py:24: numpydoc is required to test the docstrings
SKIP [1] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/_config.py: doctests are only run for numpy >= 1.14
SKIP [13] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/data.py: doctests are only run for numpy >= 1.14
SKIP [4] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/pairwise.py: doctests are only run for numpy >= 1.14
SKIP [1] /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/_pytest/nose.py:24: test_bayesian_on_diabetes is broken
SKIP [1] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/cross_decomposition/cca_.py: doctests are only run for numpy >= 1.14
SKIP [1] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/online_lda.py: doctests are only run for numpy >= 1.14
SKIP [2] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/regression.py: doctests are only run for numpy >= 1.14
SKIP [4] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/model_selection/_validation.py: doctests are only run for numpy >= 1.14
SKIP [1] /home/travis/build/scikit-learn/scikit-learn/sklearn/compose/tests/test_column_transformer.py:878: could not import 'pandas'
SKIP [1] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/feature_extraction/image.py: doctests are only run for numpy >= 1.14
SKIP [1] /home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/tests/test_function_transformer.py:206: could not import 'pandas'
SKIP [1] /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/_pytest/nose.py:24: This test will run only on python3.5 and above
SKIP [15] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/model_selection/_split.py: doctests are only run for numpy >= 1.14
SKIP [3] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/feature_extraction/text.py: doctests are only run for numpy >= 1.14
SKIP [1] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/approximate.py: doctests are only run for numpy >= 1.14
SKIP [16] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/classification.py: doctests are only run for numpy >= 1.14
SKIP [2] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/feature_selection/rfe.py: doctests are only run for numpy >= 1.14
SKIP [2] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/ensemble/partial_dependence.py: doctests are only run for numpy >= 1.14
SKIP [3] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/utils/multiclass.py: doctests are only run for numpy >= 1.14
SKIP [1] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/perceptron.py: doctests are only run for numpy >= 1.14
SKIP [3] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/utils/extmath.py: doctests are only run for numpy >= 1.14
SKIP [1] /home/travis/build/scikit-learn/scikit-learn/sklearn/utils/tests/test_validation.py:699: could not import 'pandas'
SKIP [7] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/metrics/cluster/supervised.py: doctests are only run for numpy >= 1.14
SKIP [1] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/incremental_pca.py: doctests are only run for numpy >= 1.14
SKIP [4] /home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/tests/test_data.py:719: 'with_mean=True' cannot be used with sparse matrix.
SKIP [1] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/tree/export.py: doctests are only run for numpy >= 1.14
SKIP [1] /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/_pytest/nose.py:24: numpydoc is required to test the docstrings, as well as python version >= 3.5
SKIP [1] /home/travis/build/scikit-learn/scikit-learn/sklearn/compose/tests/test_column_transformer.py:134: could not import 'pandas'
SKIP [3] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/model_selection/_search.py: doctests are only run for numpy >= 1.14
SKIP [2] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/feature_extraction/dict_vectorizer.py: doctests are only run for numpy >= 1.14
SKIP [3] /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/_pytest/nose.py:24: Download 20 newsgroups to run this test
SKIP [2] /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/_pytest/nose.py:24: kddcup99 dataset can not be loaded.
SKIP [2] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/randomized_l1.py: doctests are only run for numpy >= 1.14
SKIP [2] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/k_means_.py: doctests are only run for numpy >= 1.14
SKIP [9] /home/travis/build/scikit-learn/scikit-learn/sklearn/compose/tests/test_column_transformer.py:690: could not import 'pandas'
SKIP [3] /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/_pytest/nose.py:24: Skipping check_estimators_data_not_an_array for cross decomposition module as estimators are not deterministic.
SKIP [1] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/utils/deprecation.py: doctests are only run for numpy >= 1.14
SKIP [2] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/tree/tree.py: doctests are only run for numpy >= 1.14
SKIP [1] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/datasets/samples_generator.py: doctests are only run for numpy >= 1.14
SKIP [2] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/logistic.py: doctests are only run for numpy >= 1.14
SKIP [7] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/coordinate_descent.py: doctests are only run for numpy >= 1.14
SKIP [2] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/ensemble/forest.py: doctests are only run for numpy >= 1.14
SKIP [1] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/gaussian_process/gpr.py: doctests are only run for numpy >= 1.14
SKIP [1] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/manifold/isomap.py: doctests are only run for numpy >= 1.14
SKIP [2] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/nmf.py: doctests are only run for numpy >= 1.14
SKIP [2] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/bicluster.py: doctests are only run for numpy >= 1.14
SKIP [1] /home/travis/build/scikit-learn/scikit-learn/sklearn/compose/tests/test_column_transformer.py:375: could not import 'pandas'
SKIP [1] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/affinity_propagation_.py: doctests are only run for numpy >= 1.14
SKIP [2] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/bayes.py: doctests are only run for numpy >= 1.14
SKIP [1] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/utils/testing.py: doctests are only run for numpy >= 1.14
SKIP [1] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/unsupervised.py: doctests are only run for numpy >= 1.14
SKIP [1] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/utils/random.py: doctests are only run for numpy >= 1.14
SKIP [1] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/cluster/dbscan_.py: doctests are only run for numpy >= 1.14
SKIP [2] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/compose/_column_transformer.py: doctests are only run for numpy >= 1.14
SKIP [1] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/manifold/t_sne.py: doctests are only run for numpy >= 1.14
SKIP [1] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/truncated_svd.py: doctests are only run for numpy >= 1.14
SKIP [2] /home/travis/build/scikit-learn/scikit-learn/sklearn/tests/test_impute.py:414: could not import 'pandas'
SKIP [1] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/utils/graph.py: doctests are only run for numpy >= 1.14
SKIP [1] /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/_pytest/nose.py:24: Not testing NuSVC class weight as it is ignored.
SKIP [2] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/impute.py: doctests are only run for numpy >= 1.14
SKIP [1] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/neighbors/nearest_centroid.py: doctests are only run for numpy >= 1.14
SKIP [6] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/feature_selection/univariate_selection.py: doctests are only run for numpy >= 1.14
SKIP [4] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/kernel_approximation.py: doctests are only run for numpy >= 1.14
SKIP [1] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/base.py: doctests are only run for numpy >= 1.14
SKIP [1] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/gaussian_process/gpc.py: doctests are only run for numpy >= 1.14
SKIP [2] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/linear_model/passive_aggressive.py: doctests are only run for numpy >= 1.14
SKIP [7] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/datasets/base.py: doctests are only run for numpy >= 1.14
SKIP [1] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/decomposition/kernel_pca.py: doctests are only run for numpy >= 1.14
SKIP [2] /home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/tests/test_data.py:926: RobustScaler cannot center sparse matrix
SKIP [1] /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/_pytest/nose.py:24: Covertype dataset can not be loaded.
SKIP [3] /home/travis/build/scikit-learn/scikit-learn/sklearn/preprocessing/tests/test_encoders.py:271: could not import 'pandas'
SKIP [1] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/manifold/locally_linear.py: doctests are only run for numpy >= 1.14
SKIP [1] /home/travis/miniconda/envs/testenv/lib/python3.4/site-packages/_pytest/nose.py:24: score_samples of BernoulliRBM is not invariant when applied to a subset.
SKIP [1] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/manifold/spectral_embedding_.py: doctests are only run for numpy >= 1.14
SKIP [6] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/svm/classes.py: doctests are only run for numpy >= 1.14
SKIP [3] ../../home/travis/build/scikit-learn/scikit-learn/sklearn/cross_decomposition/pls_.py: doctests are only run for numpy >= 1.14
========================== slowest 20 test durations ===========================
35.13s call     sklearn/utils/tests/test_extmath.py::test_randomized_svd_power_iteration_normalizer
18.30s call     sklearn/utils/tests/test_estimator_checks.py::test_check_estimator
17.79s call     sklearn/linear_model/tests/test_theil_sen.py::test_theil_sen_parallel
16.48s call     sklearn/tests/test_multioutput.py::test_multi_output_classification_partial_fit_parallelism
16.31s call     sklearn/metrics/tests/test_classification.py::test_matthews_corrcoef_overflow[1000000]
10.79s call     sklearn/cluster/tests/test_mean_shift.py::test_parallel
7.51s call     sklearn/decomposition/tests/test_dict_learning.py::test_sparse_coder_parallel_mmap
7.15s call     sklearn/gaussian_process/tests/test_gpc.py::test_random_starts
6.76s call     sklearn/tree/tests/test_tree.py::test_min_impurity_decrease
6.29s call     sklearn/tests/test_common.py::test_non_meta_estimators[LogisticRegressionCV-LogisticRegressionCV-check_estimator_sparse_data]
6.09s call     sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_online_positivity[True-False-lars]
5.63s call     sklearn/model_selection/tests/test_search.py::test_random_search_cv_results_multimetric
5.41s call     sklearn/manifold/tests/test_spectral_embedding.py::test_spectral_embedding_precomputed_affinity
5.35s call     sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_online_positivity[False-True-threshold]
5.30s call     sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_online_positivity[True-False-lasso_cd]
5.11s call     sklearn/manifold/tests/test_mds.py::test_MDS
4.96s call     sklearn/manifold/tests/test_spectral_embedding.py::test_spectral_embedding_callable_affinity
4.73s call     sklearn/manifold/tests/test_locally_linear.py::test_lle_manifold
4.72s call     sklearn/manifold/tests/test_t_sne.py::test_uniform_grid[exact]
4.49s call     sklearn/tests/test_pipeline.py::test_feature_union_parallel
[31m[1m==== 138 failed, 9784 passed, 348 skipped, 1035 warnings in 938.32 seconds =====[0m
