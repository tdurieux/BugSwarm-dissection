diff --git a/abjad/tools/agenttools/IterationAgent.py b/abjad/tools/agenttools/IterationAgent.py
index 67253ce659..4fab548117 100755
--- a/abjad/tools/agenttools/IterationAgent.py
+++ b/abjad/tools/agenttools/IterationAgent.py
@@ -1307,7 +1307,7 @@ def by_logical_tie(
         pitched=False,
         reverse=False,
         parentage_mask=None,
-        with_grace_notes=False,
+        with_grace_notes=True,
         ):
         r'''Iterates by logical tie.
 
@@ -1395,6 +1395,7 @@ def by_logical_tie(
 
                     >>> for logical_tie in abjad.iterate(staff).by_logical_tie(
                     ...     reverse=True,
+                    ...     with_grace_notes=False,
                     ...     ):
                     ...     logical_tie
                     ...
@@ -1408,7 +1409,10 @@ def by_logical_tie(
                 ::
 
                     >>> expression = abjad.iterate()
-                    >>> expression = expression.by_logical_tie(reverse=True)
+                    >>> expression = expression.by_logical_tie(
+                    ...     reverse=True,
+                    ...     with_grace_notes=False,
+                    ...     )
                     >>> for logical_tie in expression(staff):
                     ...     logical_tie
                     ...
diff --git a/abjad/tools/quantizationtools/NaiveAttackPointOptimizer.py b/abjad/tools/quantizationtools/NaiveAttackPointOptimizer.py
index cb59b14470..fa970f59db 100755
--- a/abjad/tools/quantizationtools/NaiveAttackPointOptimizer.py
+++ b/abjad/tools/quantizationtools/NaiveAttackPointOptimizer.py
@@ -26,7 +26,10 @@ def __call__(self, argument):
 
         Returns none.
         '''
-        for logical_tie in iterate(argument).by_logical_tie(reverse=True):
+        for logical_tie in iterate(argument).by_logical_tie(
+            reverse=True,
+            with_grace_notes=False,
+            ):
             sub_logical_ties = []
             current_sub_logical_tie = []
             for leaf in logical_tie:
diff --git a/abjad/tools/selectiontools/Selection.py b/abjad/tools/selectiontools/Selection.py
index abb452b2c4..14a381e798 100755
--- a/abjad/tools/selectiontools/Selection.py
+++ b/abjad/tools/selectiontools/Selection.py
@@ -952,7 +952,7 @@ def by_logical_tie(
         nontrivial=False,
         pitched=False,
         reverse=False,
-        with_grace_notes=False,
+        with_grace_notes=True,
         ):
         r'''Select components by logical tie.
 
diff --git a/abjad/tools/selectortools/Selector.py b/abjad/tools/selectortools/Selector.py
index bbfd20ad88..8bc0cda2f8 100755
--- a/abjad/tools/selectortools/Selector.py
+++ b/abjad/tools/selectortools/Selector.py
@@ -205,7 +205,9 @@ def __getitem__(self, argument):
                 )
         else:
             raise ValueError(argument)
-        return self._append_callback(callback)
+        selector = self._append_callback(callback)
+        template = self._get_template(inspect.currentframe())
+        return abjad.new(selector, template=template)
 
     ### PRIVATE METHODS ###
 
@@ -234,7 +236,8 @@ def _get_template(self, frame):
             function_name = frame_info.function
             arguments = abjad.Expression._wrap_arguments(frame)
             stem = self.template or 'abjad.select()'
-            template = f'{stem}.{function_name}({arguments})'
+            template = '{}.{}({})'
+            template = template.format(stem, function_name, arguments)
         finally:
             del frame
         return template
@@ -1765,7 +1768,7 @@ def by_length(self, inequality=None, length=None):
         '''
         import abjad
         length_expr = None
-        if isinstance(inequality, ( int, float, abjad.LengthInequality)):
+        if isinstance(inequality, (int, float, abjad.LengthInequality)):
             length_expr = inequality
         elif isinstance(inequality, str) and length is not None:
             length_expr = abjad.LengthInequality(
@@ -1799,7 +1802,7 @@ def by_logical_tie(
         self,
         pitched=False,
         trivial=True,
-        with_grace_notes=False,
+        with_grace_notes=True,
         ):
         r'''Selects by logical tie.
 
