diff --git a/examples/src/main/java/com/Mux.java b/examples/src/main/java/com/Mux.java
index e2ae297496..e22ecaadc8 100755
--- a/examples/src/main/java/com/Mux.java
+++ b/examples/src/main/java/com/Mux.java
@@ -1,23 +1,19 @@
 package com;
 
 import com.coremedia.iso.boxes.Container;
+import com.googlecode.mp4parser.FileDataSourceImpl;
 import com.googlecode.mp4parser.authoring.Movie;
-import com.googlecode.mp4parser.authoring.builder.FragmentedMp4Builder;
+import com.googlecode.mp4parser.authoring.Track;
+import com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder;
 import com.googlecode.mp4parser.authoring.builder.Mp4Builder;
-import com.googlecode.mp4parser.authoring.container.mp4.MovieCreator;
-import com.googlecode.mp4parser.authoring.tracks.ttml.TtmlTrackImpl;
-import org.w3c.dom.Document;
+import com.googlecode.mp4parser.authoring.tracks.MP3TrackImpl;
 import org.xml.sax.SAXException;
 
-import javax.xml.parsers.DocumentBuilder;
-import javax.xml.parsers.DocumentBuilderFactory;
 import javax.xml.parsers.ParserConfigurationException;
 import javax.xml.xpath.XPathExpressionException;
-import java.io.File;
 import java.io.FileOutputStream;
 import java.io.IOException;
 import java.net.URISyntaxException;
-import java.util.Collections;
 
 /**
  * Created by sannies on 06.08.2015.
@@ -25,23 +21,11 @@
 public class Mux {
     public static void main(String[] args) throws IOException, XPathExpressionException, SAXException, ParserConfigurationException, URISyntaxException {
         Movie v = new Movie(); // = MovieCreator.build("C:\\dev\\DRMTODAY-872\\31245689abb7c52a3d0721447bddd6cd_Tears_Of_Steel_600000.mp4");
-        Movie a1 = MovieCreator.build("C:\\dev\\DRMTODAY-872\\31245689abb7c52a3d0721447bddd6cd_Tears_Of_Steel_128000_eng.mp4");
-        Movie a2 = MovieCreator.build("C:\\dev\\DRMTODAY-872\\31245689abb7c52a3d0721447bddd6cd_Tears_Of_Steel_128000_ita.mp4");
+        Track t = new MP3TrackImpl(new FileDataSourceImpl("C:\\Users\\sannies\\Downloads\\Allegro from Duet in C Major.mp3"));
+        // Movie a2 = MovieCreator.build("C:\\dev\\DRMTODAY-872\\31245689abb7c52a3d0721447bddd6cd_Tears_Of_Steel_128000_ita.mp4");
 
-        /*for (Track track : a1.getTracks()) {
-            v.addTrack(track);
-        }
-
-        for (Track track : a2.getTracks()) {
-            v.addTrack(track);
-        }*/
-        DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
-        dbf.setNamespaceAware(true);
-        DocumentBuilder db = dbf.newDocumentBuilder();
-        Document d =  db.parse("C:\\dev\\dashencrypt\\a.xml");
-        v.addTrack(new TtmlTrackImpl("a.xml", Collections.singletonList(d)));
-
-        Mp4Builder defaultMp4Builder = new FragmentedMp4Builder();
+        v.addTrack(t);
+        Mp4Builder defaultMp4Builder = new DefaultMp4Builder();
         Container c=  defaultMp4Builder.build(v);
         c.writeContainer(new FileOutputStream("output.mp4").getChannel());
 
diff --git a/isoparser/src/main/java/com/googlecode/mp4parser/authoring/tracks/MP3TrackImpl.java b/isoparser/src/main/java/com/googlecode/mp4parser/authoring/tracks/MP3TrackImpl.java
index 101e210704..aa66070a84 100755
--- a/isoparser/src/main/java/com/googlecode/mp4parser/authoring/tracks/MP3TrackImpl.java
+++ b/isoparser/src/main/java/com/googlecode/mp4parser/authoring/tracks/MP3TrackImpl.java
@@ -1,6 +1,6 @@
 package com.googlecode.mp4parser.authoring.tracks;
 
-import com.coremedia.iso.boxes.*;
+import com.coremedia.iso.boxes.SampleDescriptionBox;
 import com.coremedia.iso.boxes.sampleentry.AudioSampleEntry;
 import com.googlecode.mp4parser.DataSource;
 import com.googlecode.mp4parser.authoring.AbstractTrack;
@@ -53,10 +53,6 @@ public MP3TrackImpl(DataSource channel) throws IOException {
         this(channel, "eng");
     }
 
-    public void close() throws IOException {
-        dataSource.close();
-    }
-
     public MP3TrackImpl(DataSource dataSource, String lang) throws IOException {
         super(dataSource.toString());
         this.dataSource = dataSource;
@@ -126,6 +122,10 @@ public MP3TrackImpl(DataSource dataSource, String lang) throws IOException {
         Arrays.fill(durations, SAMPLES_PER_FRAME);
     }
 
+    public void close() throws IOException {
+        dataSource.close();
+    }
+
     public SampleDescriptionBox getSampleDescriptionBox() {
         return sampleDescriptionBox;
     }
@@ -146,27 +146,6 @@ public String getHandler() {
         return samples;
     }
 
-    class MP3Header {
-        int mpegVersion;
-        int layer;
-        int protectionAbsent;
-
-        int bitRateIndex;
-        int bitRate;
-
-        int sampleFrequencyIndex;
-        int sampleRate;
-
-        int padding;
-
-        int channelMode;
-        int channelCount;
-
-        int getFrameLength() {
-            return 144 * bitRate / sampleRate + padding;
-        }
-    }
-
     private MP3Header readSamples(DataSource channel) throws IOException {
         MP3Header first = null;
         while (true) {
@@ -193,6 +172,10 @@ private MP3Header readMP3Header(DataSource channel) throws IOException {
                 return null;
             }
         }
+        if (bb.get(0) == 0x54 && bb.get(1) == 0x41 && bb.get(2) == 0x47) {
+            // encounter id3 tag. That's the end of the file.
+            return null;
+        }
 
         BitReaderBuffer brb = new BitReaderBuffer((ByteBuffer) bb.rewind());
         int sync = brb.readBits(11); // A
@@ -232,4 +215,25 @@ private MP3Header readMP3Header(DataSource channel) throws IOException {
     public String toString() {
         return "MP3TrackImpl";
     }
+
+    class MP3Header {
+        int mpegVersion;
+        int layer;
+        int protectionAbsent;
+
+        int bitRateIndex;
+        int bitRate;
+
+        int sampleFrequencyIndex;
+        int sampleRate;
+
+        int padding;
+
+        int channelMode;
+        int channelCount;
+
+        int getFrameLength() {
+            return 144 * bitRate / sampleRate + padding;
+        }
+    }
 }
diff --git a/isoparser/src/test/java/com/googlecode/mp4parser/authoring/builder/TimeBasedFragmenterTest.java b/isoparser/src/test/java/com/googlecode/mp4parser/authoring/builder/TimeBasedFragmenterTest.java
index 286d608625..b0478356d6 100755
--- a/isoparser/src/test/java/com/googlecode/mp4parser/authoring/builder/TimeBasedFragmenterTest.java
+++ b/isoparser/src/test/java/com/googlecode/mp4parser/authoring/builder/TimeBasedFragmenterTest.java
@@ -36,7 +36,7 @@ public Date getDate() {
         MessageDigest md = MessageDigest.getInstance("MD5");
         String digest = Hex.encodeHex(md.digest(baos.toByteArray()));
         System.err.println(digest);
-        String oldDigest = "A6E5D718B6123A2768F56E3E44E33BE4";
+        String oldDigest = "EE0F70C1D835ECCC4A86040FB5910B92";
         //new FileOutputStream("c:\\dev\\check.mp4").write(baos.toByteArray());
         Assert.assertEquals(oldDigest, digest);
 
diff --git a/isoparser/src/test/java/com/googlecode/mp4parser/authoring/tracks/AACTrackImplTest.java b/isoparser/src/test/java/com/googlecode/mp4parser/authoring/tracks/AACTrackImplTest.java
index fe53424411..49e60db23a 100755
--- a/isoparser/src/test/java/com/googlecode/mp4parser/authoring/tracks/AACTrackImplTest.java
+++ b/isoparser/src/test/java/com/googlecode/mp4parser/authoring/tracks/AACTrackImplTest.java
@@ -27,18 +27,26 @@
 import org.junit.Test;
 
 import java.io.ByteArrayOutputStream;
-import java.io.FileInputStream;
 import java.io.FileOutputStream;
 import java.io.IOException;
-import java.nio.channels.Channel;
 import java.nio.channels.Channels;
-import java.nio.channels.WritableByteChannel;
 
 /**
  * Simple test to make sure nothing breaks.
  */
 public class AACTrackImplTest {
 
+    public static void main(String[] args) throws IOException {
+        ESDescriptorBox esds = Path.getPath(new IsoFile("C:\\dev\\mp4parer\\aac-sample.mp4"), "/moov[0]/trak[0]/mdia[0]/minf[0]/stbl[0]/stsd[0]/mp4v[0]/esds[0]");
+        ByteArrayOutputStream baos = new ByteArrayOutputStream();
+        esds.getBox(Channels.newChannel(baos));
+        System.err.println(Hex.encodeHex(baos.toByteArray()));
+        System.err.println(esds.getEsDescriptor());
+        baos = new ByteArrayOutputStream();
+        esds.getBox(Channels.newChannel(baos));
+        System.err.println(Hex.encodeHex(baos.toByteArray()));
+    }
+
     @Test
     public void freeze() throws IOException {
         Track t = new AACTrackImpl(new FileDataSourceImpl(this.getClass().getProtectionDomain().getCodeSource().getLocation().getFile() + "/com/googlecode/mp4parser/authoring/tracks/aac-sample.aac"));
@@ -48,20 +56,9 @@ public void freeze() throws IOException {
 
         DefaultMp4Builder mp4Builder = new DefaultMp4Builder();
         Container c = mp4Builder.build(m);
-        //c.writeContainer(new FileOutputStream("C:\\dev\\mp4parser\\isoparser\\src\\test\\resources\\com\\googlecode\\mp4parser\\authoring\\tracks\\aac-sample.mp4").getChannel());
+        c.writeContainer(new FileOutputStream("C:\\dev\\mp4parser\\isoparser\\src\\test\\resources\\com\\googlecode\\mp4parser\\authoring\\tracks\\aac-sample.mp4").getChannel());
 
         IsoFile isoFileReference = new IsoFile(this.getClass().getProtectionDomain().getCodeSource().getLocation().getFile() + "/com/googlecode/mp4parser/authoring/tracks/aac-sample.mp4");
-        BoxComparator.check(c, isoFileReference, "/moov[0]/mvhd[0]", "/moov[0]/trak[0]/tkhd[0]", "/moov[0]/trak[0]/mdia[0]/mdhd[0]", "/moov[0]/trak[0]/mdia[0]/minf[0]/stbl[0]/stco[0]");
-    }
-
-    public static void main(String[] args) throws IOException {
-        ESDescriptorBox esds = Path.getPath(new IsoFile("C:\\dev\\mp4parer\\aac-sample.mp4"), "/moov[0]/trak[0]/mdia[0]/minf[0]/stbl[0]/stsd[0]/mp4v[0]/esds[0]");
-        ByteArrayOutputStream baos = new ByteArrayOutputStream();
-        esds.getBox(Channels.newChannel(baos));
-        System.err.println(Hex.encodeHex(baos.toByteArray()));
-        System.err.println(esds.getEsDescriptor());
-        baos = new ByteArrayOutputStream();
-        esds.getBox(Channels.newChannel(baos));
-        System.err.println(Hex.encodeHex(baos.toByteArray()));
+        BoxComparator.check(c, isoFileReference, "/ftyp", "/moov[0]/mvhd[0]", "/moov[0]/trak[0]/tkhd[0]", "/moov[0]/trak[0]/mdia[0]/mdhd[0]", "/moov[0]/trak[0]/mdia[0]/minf[0]/stbl[0]/stco[0]");
     }
 }
diff --git a/isoparser/src/test/java/com/googlecode/mp4parser/authoring/tracks/DTSTrackImplTest.java b/isoparser/src/test/java/com/googlecode/mp4parser/authoring/tracks/DTSTrackImplTest.java
index 9d11ae5e0b..6ac577b0b5 100755
--- a/isoparser/src/test/java/com/googlecode/mp4parser/authoring/tracks/DTSTrackImplTest.java
+++ b/isoparser/src/test/java/com/googlecode/mp4parser/authoring/tracks/DTSTrackImplTest.java
@@ -11,7 +11,6 @@
 import org.junit.Test;
 
 import java.io.ByteArrayOutputStream;
-import java.io.FileOutputStream;
 import java.nio.channels.Channels;
 import java.util.Collections;
 
@@ -27,7 +26,7 @@ public void checkOutputIsStable() throws Exception {
         Container c = mp4Builder.build(m);
 
 
-        //c.writeContainer(new FileOutputStream("C:\\dev\\mp4parser\\isoparser\\src\\test\\resources\\com\\googlecode\\mp4parser\\authoring\\tracks\\dts-sample.mp4").getChannel());
+        //  c.writeContainer(new FileOutputStream("C:\\dev\\mp4parser\\isoparser\\src\\test\\resources\\com\\googlecode\\mp4parser\\authoring\\tracks\\dts-sample.mp4").getChannel());
         ByteArrayOutputStream baos = new ByteArrayOutputStream();
         c.writeContainer(Channels.newChannel(baos));
         IsoFile ref = new IsoFile(DTSTrackImplTest.class.getProtectionDomain().getCodeSource().getLocation().getFile() + "/com/googlecode/mp4parser/authoring/tracks/dts-sample.mp4");
diff --git a/isoparser/src/test/java/com/googlecode/mp4parser/authoring/tracks/H264TrackImplTest.java b/isoparser/src/test/java/com/googlecode/mp4parser/authoring/tracks/H264TrackImplTest.java
index dc396147c3..deb0c78699 100755
--- a/isoparser/src/test/java/com/googlecode/mp4parser/authoring/tracks/H264TrackImplTest.java
+++ b/isoparser/src/test/java/com/googlecode/mp4parser/authoring/tracks/H264TrackImplTest.java
@@ -17,6 +17,7 @@
 
 import com.coremedia.iso.IsoFile;
 import com.coremedia.iso.boxes.Container;
+import com.googlecode.mp4parser.DataSource;
 import com.googlecode.mp4parser.FileDataSourceImpl;
 import com.googlecode.mp4parser.authoring.Movie;
 import com.googlecode.mp4parser.authoring.Track;
@@ -24,11 +25,8 @@
 import com.googlecode.mp4parser.authoring.tracks.h264.H264TrackImpl;
 import org.junit.Test;
 
-import java.io.FileOutputStream;
 import java.io.IOException;
 
-import com.googlecode.mp4parser.DataSource;
-
 /**
  * Simple test to make sure nothing breaks.
  */
@@ -49,6 +47,6 @@ public void freeze() throws IOException {
 
 
         IsoFile isoFileReference = new IsoFile(getClass().getProtectionDomain().getCodeSource().getLocation().getFile() + "com/googlecode/mp4parser/authoring/tracks/h264-sample.mp4");
-        BoxComparator.check(c, isoFileReference, "/moov[0]/mvhd[0]", "/moov[0]/trak[0]/tkhd[0]", "/moov[0]/trak[0]/mdia[0]/mdhd[0]", "/moov[0]/trak[0]/mdia[0]/minf[0]/stbl[0]/stco[0]");
+        BoxComparator.check(c, isoFileReference, "/ftyp", "/moov[0]/mvhd[0]", "/moov[0]/trak[0]/tkhd[0]", "/moov[0]/trak[0]/mdia[0]/mdhd[0]", "/moov[0]/trak[0]/mdia[0]/minf[0]/stbl[0]/stco[0]");
     }
 }
diff --git a/isoparser/src/test/resources/com/googlecode/mp4parser/authoring/tracks/aac-sample.mp4 b/isoparser/src/test/resources/com/googlecode/mp4parser/authoring/tracks/aac-sample.mp4
index fe7b93aefa..7cb6372d7c 100755
Binary files a/isoparser/src/test/resources/com/googlecode/mp4parser/authoring/tracks/aac-sample.mp4 and b/isoparser/src/test/resources/com/googlecode/mp4parser/authoring/tracks/aac-sample.mp4 differ
diff --git a/isoparser/src/test/resources/com/googlecode/mp4parser/authoring/tracks/ac3-sample.mp4 b/isoparser/src/test/resources/com/googlecode/mp4parser/authoring/tracks/ac3-sample.mp4
index 7f06480d08..1ad22f50cc 100755
Binary files a/isoparser/src/test/resources/com/googlecode/mp4parser/authoring/tracks/ac3-sample.mp4 and b/isoparser/src/test/resources/com/googlecode/mp4parser/authoring/tracks/ac3-sample.mp4 differ
diff --git a/isoparser/src/test/resources/com/googlecode/mp4parser/authoring/tracks/dts-sample.mp4 b/isoparser/src/test/resources/com/googlecode/mp4parser/authoring/tracks/dts-sample.mp4
index 267fc15784..1e3efc15a3 100755
Binary files a/isoparser/src/test/resources/com/googlecode/mp4parser/authoring/tracks/dts-sample.mp4 and b/isoparser/src/test/resources/com/googlecode/mp4parser/authoring/tracks/dts-sample.mp4 differ
