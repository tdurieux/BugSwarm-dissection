diff --git a/source_en/ArchitectureInDetail/DataAccessDetail/DataAccessJpa.rst b/source_en/ArchitectureInDetail/DataAccessDetail/DataAccessJpa.rst
index ffd5588b0d..32f73dba9f 100755
--- a/source_en/ArchitectureInDetail/DataAccessDetail/DataAccessJpa.rst
+++ b/source_en/ArchitectureInDetail/DataAccessDetail/DataAccessJpa.rst
@@ -1264,7 +1264,7 @@ specify QueryHint ( ``@javax.persistence.QueryHint`` ) in value attribute.
     * - | (1)
       - | Specify hint name in name attribute of ``@QueryHint`` annotation and hint value in value attribute.
         | In addition to the hint stipulated in JPA specifications, provider specific hint can be specified.
-        | In the above example, lock timeout is set to ``0`` (DB used is PostgreSQL). "FOR UPDATE NOWAIT" clause is added to SQL.
+        | In the above example, lock timeout is set to ``0`` (DB used is Oracle). "FOR UPDATE NOWAIT" clause is added to SQL.
 
  .. note:: **QueryHints that can be specified in Hibernate**
 
diff --git a/source_en/ArchitectureInDetail/DataAccessDetail/ExclusionControl.rst b/source_en/ArchitectureInDetail/DataAccessDetail/ExclusionControl.rst
index 698ce0d8c2..e45d7d6558 100755
--- a/source_en/ArchitectureInDetail/DataAccessDetail/ExclusionControl.rst
+++ b/source_en/ArchitectureInDetail/DataAccessDetail/ExclusionControl.rst
@@ -1604,6 +1604,15 @@ Method wherein it is specified for the entire process is as follows:
 
     When \ ``0``\  is specified for Oracle and PostgreSQL, \ ``nowait``\ is added, and when locked by another transaction, an exclusive error occurs without waiting for release of lock.
 
+     .. warning:: **Regarding the issue that "nowait" clause is not added while using PostgreSQL**
+
+        Due to an issue in Hibernate 5.0.X which is a dependent library of TERASOLUNA Server Framework for Java 5.3.0 RELEASE version (`HHH-10797 <https://hibernate.atlassian.net/browse/HHH-10797>`_\), "nowait" clause is not added to SQL when PostgreSQL is used even when timeout period is set to "0".
+
+        Hence, it is necessary to review following countermeasures.
+        
+        * Apply a patch to \ ``Dialect``\  class offered by Hibernate.
+        * Upgrade to higher version of Hibernate 5.2.1.
+
  .. warning:: **Restrictions of PostgreSQL**
 
     Although nowait can be specified in PostgreSQL, it is not possible to specify waiting time.
diff --git a/source_en/ArchitectureInDetail/WebApplicationDetail/ExceptionHandling.rst b/source_en/ArchitectureInDetail/WebApplicationDetail/ExceptionHandling.rst
index a4f2353033..fb998b6e6e 100755
--- a/source_en/ArchitectureInDetail/WebApplicationDetail/ExceptionHandling.rst
+++ b/source_en/ArchitectureInDetail/WebApplicationDetail/ExceptionHandling.rst
@@ -514,6 +514,21 @@ When a fatal error has been detected, catch the exception using servlet containe
   **Figure - Handling method when a fatal error has been detected**
 
 
+.. _exception-handling-class-fatalerror-warning:
+
+.. warning:: **Regarding handling fatal errors using @ExceptionHandler and SystemExceptionResolver**
+
+    Fatal error (\ ``java.lang.Error``\  and its subclass) and the \ ``org.springframework.web.util.NestedServletException``\  wrapped by \ ``java.lang.Throwable``\  can be captured from Spring Framework 4.3
+    by using exception handler (\ ``HandlerExceptionResolver``\) of Spring MVC.
+    As a result of this change, the fatal error and \ ``Throwable``\  are likely to get accidentally captured by \ ``SystemExceptionResolver``\  offered by common library (inherit \ ``HandlerExceptionResolver``\) and the method which assigns \ ``@ExceptionHandler``\ (run on \ ``HandlerExceptionResolver``\ system).
+
+    In order to capture the fatal errors by servlet containers, it is necessary to notify servlet container without using the methods which assign \ ``SystemExceptionResolver``\  and \ ``@ExceptionHandler``\  for handling \ ``NestedServletException``\.
+    "How to use" explains the method for not handling \ ``NestedServletException``\.
+
+    - For \ ``SystemExceptionResolver``\ , refer to \ :ref:`exception-handling-how-to-use-application-configuration-app-label`\.
+    - For \ ``@ExceptionHandler``\ , refer to \ :ref:`exception-handling-how-to-use-codingpoint-controller-usecase-label`\.
+
+
 .. _exception-handling-class-viewerror-label:
 
 When notifying that an exception has occurred in the presentation layer (JSP etc.)
@@ -904,7 +919,7 @@ Add to bean definition, the class (\ ``SystemExceptionResolver``\ )  used for ha
 - **spring-mvc.xml**
 
  .. code-block:: xml
-    :emphasize-lines: 3-4,6-7,15,23-24,29
+    :emphasize-lines: 3-4,6-7,15,23,28-29,34
 
     <!-- Setting Exception Handling. -->
     <!-- Exception Resolver. -->
@@ -928,13 +943,18 @@ Add to bean definition, the class (\ ``SystemExceptionResolver``\ )  used for ha
                 <entry key="common/error/dataAccessError" value="500" />
             </map>
         </property>
-        <property name="defaultErrorView" value="common/error/systemError" /> <!-- (6) -->
-        <property name="defaultStatusCode" value="500" /> <!-- (7) -->
+        <property name="excludedExceptions"> <!-- (6) -->
+            <array>
+                <value>org.springframework.web.util.NestedServletException</value>
+            </array>
+        </property>
+        <property name="defaultErrorView" value="common/error/systemError" /> <!-- (7) -->
+        <property name="defaultStatusCode" value="500" /> <!-- (8) -->
     </bean>
 
     <!-- Settings View Resolver. -->
     <mvc:view-resolvers>
-        <mvc:jsp prefix="/WEB-INF/views/" /> <!-- (8) -->
+        <mvc:jsp prefix="/WEB-INF/views/" /> <!-- (9) -->
     </mvc:view-resolvers>
 
 
@@ -969,17 +989,21 @@ Add to bean definition, the class (\ ``SystemExceptionResolver``\ )  used for ha
         | In the above settings, when View name is "common/error/resourceNotFoundError", "404(Not Found)" becomes HTTP status code.
         | **[Location to be customized for each project]**
     * - | (6)
+      - | Specify exception class to be excluded from handling.
+        | \ ``org.springframework.web.util.NestedServletException``\  is excluded from the handling in order to notify to servlet container without handling the fatal error by \ ``SystemExceptionResolver``\.
+        | For reasons of exclusion from handling, refer to \ :ref:`"Regarding handling of fatal errors using @ExceptionHandler and SystemExceptionResolver"<exception-handling-class-fatalerror-warning>`\.
+    * - | (7)
       - | Specify the default View name.
         | In the above settings, if exception class does not include "ResourceNotFoundException", "BusinessException" and "InvalidTransactionTokenException", and if exception class (or parent class) name does not include ".DataAccessException", "common/error/systemError" becomes the destination View name.
         | **[Location to be customized for each project]**
-    * - | (7)
+    * - | (8)
       - | Specify default value of HTTP status code to be set in response header. It is recommended that you set **"500"(Internal Server Error)**.
 
         .. warning:: **Behavior when nothing is specified**
 
             Please note that it will be handled as \ **"200"(OK)**\ .
 
-    * - | (8)
+    * - | (9)
       - Actual \ ``View``\  depends on \ ``ViewResolver``\  settings.
 
         In above settings, destination pages will be as given below.
@@ -1602,6 +1626,41 @@ Method to handle exception at use case level
     * - | (6)
       - | Generate ModelAndView wherein View name and Model acquired in steps (3)-(5) are stored and then return the same.
 
+ .. warning::
+
+    When \ ``java.lang.Exception``\  and \ ``javax.servlet.ServletException``\  are to be handled by a method which assigns \ ``@ExceptionHandler``\, the fatal errors cannot be notified to
+    servlet container since \ ``NestedServletException``\ which wraps the fatal error get handled unintentionally.
+    For details, refer to \ :ref:`"Regarding handling of fatal errors using @ExceptionHandler and SystemExceptionResolver"<exception-handling-class-fatalerror-warning>`\.
+
+    In such a case, in order to notify fatal error to the servlet container, \ :ref: NestedServletException is excluded from handling by SystemExceptionResolver<exception-handling-how-to-use-application-configuration-app-label>
+    and \  NestedServletException \  is handled by the method which assigns \ @ExceptionHandler \  and then is thrown again.
+    Implementation example is as below.
+
+     .. code-block:: java
+
+        @ExceptionHandler(NestedServletException.class) // (1)
+        public void handleNestedServletException(NestedServletException e) throws NestedServletException {
+            throw e; // (2)
+        }
+
+     .. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+     .. list-table::
+        :header-rows: 1
+        :widths: 10 90
+        :class: longtable
+
+        * - Sr. No.
+          - Description
+        * - | (1)
+          - | Assign \ ``@ExceptionHandler``\  annotation and specify \ ``NestedServletException.class``\.
+        * - | (2)
+          - | Throw \ ``NestedServletException``\  thus handled again.
+
+    **Regarding capturing Exception and ServletException by multiple controllers**
+
+    When it is necessary to describe \ ``@ExceptionHandler``\  which throws \ ``NestedServletException``\  again by multiple controllers, use of \ ``@ControllerAdvice``\  should be considered.
+    For details of \ ``@ControllerAdvice``\ , refer to \ :ref:`application_layer_controller_advice`\.
+
 
 .. _exception-handling-how-to-use-codingpoint-jsp-label:
 
diff --git a/source_en/Introduction/ChangeLog.rst b/source_en/Introduction/ChangeLog.rst
index 3206fe45d5..7d1d2d287f 100755
--- a/source_en/Introduction/ChangeLog.rst
+++ b/source_en/Introduction/ChangeLog.rst
@@ -25,7 +25,15 @@ Change Log
         * :doc:`../Tutorial/TutorialSecurity`  
         * :doc:`../Tutorial/TutorialTodo`  
 
-    * - 
+        * Description for how to use path variable and precautions for use added (\ `guideline#2406 <https://github.com/terasolunaorg/guideline/issues/2406>`_\ )
+
+    * -
+      - :doc:`../ArchitectureInDetail/WebApplicationDetail/ExceptionHandling`
+      - Modifications associated with Spring Framework 4.3 support
+
+        * Added description of how to handle a fatal error (\ `guideline#2368 <https://github.com/terasolunaorg/guideline/issues/2368>`_\ )
+        
+    * -
       - :doc:`../ImplementationAtEachLayer/ApplicationLayer`
       - Description details added
 
@@ -33,6 +41,17 @@ Change Log
 
         * Precautions while using \ ``<mvc:view-controller>`` \  added (\ `guideline#2371 <https://github.com/terasolunaorg/guideline/issues/2371>`_\ )
 
+    * -
+      - | :doc:`../ArchitectureInDetail/DataAccessDetail/DataAccessJpa`
+        | :doc:`../ArchitectureInDetail/DataAccessDetail/ExclusionControl`
+      - Description details added
+      
+    * -
+      - :doc:`../Security/LinkageWithBrowser`
+      - Modifications associated with Spring Security 4.1.4 support
+      
+        * Description added for HTTP Public Key Pinning (HPKP) (\ `guideline#2401 <https://github.com/terasolunaorg/guideline/issues/2401>`_\ )
+
     * -
       - :doc:`../Tutorial/TutorialTodo`
       - Correction of description
@@ -46,11 +65,11 @@ Change Log
         * Description related to configuration method while using JSR-310 Date and Time API changed (\ `guideline#2365 <https://github.com/terasolunaorg/guideline/issues/2365>`_\ )
 
         * Added "TypeHandler of JSR310 can be used by default in `blank project for MyBatis3 <https://github.com/terasolunaorg/terasoluna-gfw-web-multi-blank#multi-blank-project-with-mybatis3>`_ \ (\ `guideline#2365 <https://github.com/terasolunaorg/guideline/issues/2365>`_\ )
-        
+
         Description details added
-         
+
         * Description added for settings for calling a rollback process when an error occurs at the time of commit (\ `guideline#2375 <https://github.com/terasolunaorg/guideline/issues/2375>`_\ )
-        
+  
     * - 2016-08-31
       - \-
       - 5.2.0 RELEASE version published
diff --git a/source_en/Security/Authorization.rst b/source_en/Security/Authorization.rst
index 43b146c4b1..58bb0deb2b 100755
--- a/source_en/Security/Authorization.rst
+++ b/source_en/Security/Authorization.rst
@@ -446,6 +446,60 @@ For main Expression that can be used, refer :ref:`SpringSecurityAuthorizationPol
 
 |
 
+Reference of path variables
+''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
+
+In Spring Security 4.1 and subsequent versions, a path variable \[#fPathVariableDescription]_\  can be used while specifying a resource which applies the access policy
+and can be referred by specifying \ ``#path variable name``\  in the definition of access policy.
+
+In the example below, the access policy is defined so that the login users can access only their own user information.
+
+* Definition example of spring-security.xml
+
+  .. code-block:: xml
+
+    <sec:http>
+        <sec:intercept-url pattern="/users/{userName}" access="isAuthenticated() and #userName == principal.username"/>
+        <!-- omitted -->
+    </sec:http>
+
+.. warning:: **Precautions while defining an access policy which uses the path variable**
+
+   When an access policy which uses a path variable for the path that can be accessed with an extension, is defined, it is necessary to define it in such a way that the extension part is not stored in the path variable value.
+
+   For example, when \ ``/users/{userName}``\  is defined in the patten and a request path \ ``/users/personName.json``\  is sent,
+   \ ``personName.json``\  gets stored in the path variable \ ``#userName``\  referred in the definition of access policy, instead of \ ``personName``\
+   and unintended authorization control is performed.
+
+   In order to prevent this event, "Access policy for the path without extension" must be defined after defining "Access policy for the path with extension" as shown in the example below.
+
+   * Definition example of spring-security.xml
+
+    .. code-block:: xml
+
+      <sec:http>
+       <sec:intercept-url pattern="/users/{userName}.*" access="isAuthenticated() and #userName == principal.username"/> <!-- (1) -->
+       <sec:intercept-url pattern="/users/{userName}" access="isAuthenticated() and #userName == principal.username"/> <!-- (2) -->
+       <!-- omitted -->
+      </sec:http>
+
+    .. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
+    .. list-table::
+        :header-rows: 1
+        :widths: 10 90
+        :class: longtable
+    
+        * - Sr. No.
+          - Description
+        * - | (1)
+          - | Define "Access policy for the path with extension".
+        * - | (2)
+          - | Define "Access policy for the path without extension".
+
+.. For description of path variable [#fPathVariableDescription], refer \ :ref:`controller_method_argument-pathvariable-label`\  of :doc:`../ImplementationAtEachLayer/ApplicationLayer`.
+
+|
+
 Authorization for the method
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 Spring Security performs authorization process for calling a method of Bean which is managed in DI container by using Spring AOP system.
diff --git a/source_en/Security/LinkageWithBrowser.rst b/source_en/Security/LinkageWithBrowser.rst
index 89bd22e079..cfe08a1aea 100755
--- a/source_en/Security/LinkageWithBrowser.rst
+++ b/source_en/Security/LinkageWithBrowser.rst
@@ -32,13 +32,15 @@ Spring Security provides a system to enhance security of Web application by offe
 Security headers supported by default
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 
-The following 5 response headers are supported by Spring Security by default.
+The following 7 response headers are supported by Spring Security by default.
 
 * Cache-Control (Pragma, Expires)
 * X-Frame-Options
 * X-Content-Type-Options
 * X-XSS-Protection
 * Strict-Transport-Security
+* Content-Security-Policy(Content-Security-Policy-Report-Only)
+* Public-Key-Pins(Public-Key-Pins-Report-Only)
 
 .. tip:: **Support status of browser**
 
@@ -46,7 +48,7 @@ The following 5 response headers are supported by Spring Security by default.
 
     * https://www.owasp.org/index.php/HTTP_Strict_Transport_Security (Strict-Transport-Security)
     * https://www.owasp.org/index.php/Clickjacking_Defense_Cheat_Sheet (X-Frame-Options)
-    * https://www.owasp.org/index.php/List_of_useful_HTTP_headers (X-Content-Type-Options, X-XSS-Protection)
+    * https://www.owasp.org/index.php/List_of_useful_HTTP_headers (X-Content-Type-Options, X-XSS-Protection, Content-Security-Policy, Public-Key-Pins)
 
 
 Cache-Control
@@ -142,6 +144,32 @@ Following header is output to disable the use of HTTP after accessing browser us
     Strict-Transport-Security header is output only when the application server is accessed using HTTPS in the default implementation of Spring Security.
     Note that, Strict-Transport-Security header value can be changed by specifying the option.
 
+Public-Key-Pins
+""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+
+Public-Key-Pins header presents the public key of the certificate associated with the site, to the browser in order to ensure authenticity of the certificate of the site.
+Even when the user visits the site again and is directed to a malicious site by using an attack technique called "man-in-the-middle" attack,
+a mismatch between public key of authentic site certificate retained by browser and public key of certificate presented by malicious site is detected
+and the access to the site can be blocked.
+
+Following header is output in order to block access to a site when a certificate which does not match the information retained by browser, is detected.
+
+* Output example of response header
+
+.. code-block:: text
+
+    Public-Key-Pins: max-age=5184000 ; pin-sha256="d6qzRu9zOECb90Uez27xWltNsj0e1Md7GkYYkVoZWmM=" ; pin-sha256="E9CZ9INDbd+2eRQozYqqbQ2yXLVKB9+xcprMF+44U1g="
+
+.. note:: **Regarding sending a violation report**
+
+    A report-uri directive is specified similar to Content-Security-Policy in order to send a violation report to browser when the access is blocked.
+
+    Further, a Public-Key-Pins-Report-Only header is used instead of Public-Key-Pins header to send a violation report to the browser without blocking the access.
+
+.. note:: **Regarding settings of Public-Key-Pins header**
+
+    If an error occurs in settings of Public-Key-Pins header, it is likely that user will not be able to access the site for a long period of time.
+    Hence, it is recommended to switch to Public-Key-Pins header after conducting a thorough testing by using Public-Key-Pins-Report-Only header.
 
 How to use
 --------------------------------------------------------------------------------
@@ -152,6 +180,10 @@ Applying security header output function
 A method is executed to apply the security header output function described earlier.
 
 Security header output function is added by Spring 3.2 and applied by default from Spring Security 4.0.
+
+* Content-Security-Policy
+* Public-Key-Pins
+
 Therefore, a specific definition is not required to enable the security header output function.
 Further, when the security header output function is not to be applied, it must be disabled explicitly.
 
@@ -184,6 +216,13 @@ Here, the example denotes output of all security headers provided by Spring Secu
         <sec:content-type-options/> <!-- (4) -->
         <sec:xss-protection/> <!-- (5) -->
         <sec:hsts/> <!-- (6) -->
+        <sec:content-security-policy policy-directives="default-src 'self'" /> <!-- (7) -->
+        <sec:hpkp report-uri="https://www.example.net/hpkp-report"> <!-- (8) -->
+            <sec:pins>
+                <sec:pin algorithm="sha256">d6qzRu9zOECb90Uez27xWltNsj0e1Md7GkYYkVoZWmM=</sec:pin>
+                <sec:pin algorithm="sha256">E9CZ9INDbd+2eRQozYqqbQ2yXLVKB9+xcprMF+44U1g=</sec:pin>
+            </sec:pins>
+        </sec:hpkp>
     </sec:headers>
 
 .. tabularcolumns:: |p{0.10\linewidth}|p{0.90\linewidth}|
@@ -205,6 +244,20 @@ Here, the example denotes output of all security headers provided by Spring Secu
       - | Register the component which outputs X-XSS-Protection header.
     * - | (6)
       - | Register the component which outputs Strict-Transport-Security header.
+    * - | (7)
+      - | Register the component which outputs Content-Security-Policy header and Content-Security-Policy-Report-Only header.
+    * - | (8)
+      - | Register the component which outputs Public-Key-Pins header and Public-Key-Pins-Report-Only header.
+
+        * When the public key of the certificate presented by the site does not match, a violation report is sent to \ ``https://www.example.net/hpkp-report``\  without blocking the access.
+        * Public key information for the backup is set to prevent inconsistencies of public key when the certificate is updated for the reasons such as compromise in the certificate and expiry of the certificate etc
+
+
+.. note:: **Regarding output of Public-Key-Pins header**
+
+    Default setting of Spring Security outputs Public-Key-Pins-Report-Only header rather than Public-Key-Pins header.
+
+    Further, in the default setting of Spring Security, Public-Key-Pins header is output only when the application server is accessed using HTTPS.
 
 
 Further, a method is also provided which disables security headers which are not required.
@@ -230,6 +283,8 @@ Contents which are output by Spring Security by default, can be changed in the f
 * X-Frame-Options
 * X-XSS-Protection
 * Strict-Transport-Security
+* Content-Security-Policy(Content-Security-Policy-Report-Only)
+* Public-Key-Pins(Public-Key-Pins-Report-Only)
 
 An option \ [#fSpringSecurityLinkageWithBrowser2]_\  can be specified in the attribute of each element by changing the bean definition of Spring Security.
 
