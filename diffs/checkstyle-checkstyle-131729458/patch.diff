diff --git a/.travis.yml b/.travis.yml
index 52af448edd..d17e6dcfc2 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -343,7 +343,8 @@ matrix:
     # testing of PR format
     - env:
         - DESC="test Issue ref in PR description"
-        - CMD0="if [[ ! $TRAVIS_PULL_REQUEST =~ ^([0-9]*)$ ]]; then exit 0; fi "
+        - CMD_="set -e"
+        - CMD0=" && if [[ ! $TRAVIS_PULL_REQUEST =~ ^([0-9]*)$ ]]; then exit 0; fi "
         - CMD1=" && LINK_COMMITS=https://api.github.com/repos/checkstyle/checkstyle/pulls/$TRAVIS_PULL_REQUEST/commits "
         - CMD2=" && COMMITS=\$(curl -s -H 'Authorization: token $GITHUB_AUTH_TOKEN' \$LINK_COMMITS | jq '.[0] | .commit.message') "
         - CMD3=" && echo 'Messages from github:'\${COMMITS:0:60}... "
@@ -368,7 +369,7 @@ matrix:
         - CMD22="   else "
         - CMD23="       echo 'PR validation failed.' && false; "
         - CMD24="   fi "
-        - CMD=$CMD0$CMD1$CMD2$CMD3$CMD4$CMD5$CMD6$CMD7$CMD8$CMD9$CMD10$CMD11$CMD12$CMD13$CMD14$CMD15
+        - CMD=$CMD_$CMD0$CMD1$CMD2$CMD3$CMD4$CMD5$CMD6$CMD7$CMD8$CMD9$CMD10$CMD11$CMD12$CMD13$CMD14$CMD15
         - CMD=$CMD$CMD16$CMD17$CMD18$CMD19$CMD20$CMD21$CMD22$CMD23$CMD24
         - COVERAGE_CMD=""
 
diff --git a/config/suppressions.xml b/config/suppressions.xml
index b8204d3a65..7b2c2176c0 100644
--- a/config/suppressions.xml
+++ b/config/suppressions.xml
@@ -145,7 +145,7 @@
 
     <!-- Suppressions from PMD configuration-->
     <!-- validateCli is not reasonable to split as encapsulation of logic will be damaged -->
-    <suppress checks="CyclomaticComplexity" files="Main\.java"  lines="222"/>
+    <suppress checks="CyclomaticComplexity" files="Main\.java"  lines="210"/>
     <!-- JavadocMethodCheck, JavadocStyleCheck, JavadocUtils.getJavadocTags() - deprecated -->
     <suppress checks="CyclomaticComplexity" files="JavadocMethodCheck\.java"/>
     <suppress checks="CyclomaticComplexity" files="JavadocStyleCheck\.java"/>
@@ -166,7 +166,6 @@
               lines="105, 143, 174"/>
 
     <!-- Not reasonable to split as encapsulation of logic will be damaged. -->
-    <suppress checks="ExecutableStatementCount" files="Main\.java" lines="114"/>
-    <suppress checks="CyclomaticComplexity" files="Main\.java"  lines="114"/>
-    <suppress checks="JavaNCSS" files="Main\.java"  lines="114"/>
+    <suppress checks="ExecutableStatementCount" files="Main\.java" lines="128"/>
+    <suppress checks="JavaNCSS" files="Main\.java"  lines="128"/>
 </suppressions>
diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/Main.java b/src/main/java/com/puppycrawl/tools/checkstyle/Main.java
index e54750c02f..9e20cdaed2 100644
--- a/src/main/java/com/puppycrawl/tools/checkstyle/Main.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/Main.java
@@ -28,6 +28,9 @@
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Properties;
+import java.util.logging.ConsoleHandler;
+import java.util.logging.Level;
+import java.util.logging.Logger;
 
 import org.apache.commons.cli.CommandLine;
 import org.apache.commons.cli.CommandLineParser;
@@ -35,6 +38,8 @@
 import org.apache.commons.cli.HelpFormatter;
 import org.apache.commons.cli.Options;
 import org.apache.commons.cli.ParseException;
+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
 
 import com.google.common.collect.Lists;
 import com.google.common.io.Closeables;
@@ -49,6 +54,9 @@
  *
  **/
 public final class Main {
+    /** Logger for Main. */
+    private static final Log LOG = LogFactory.getLog(Main.class);
+
     /** Width of CLI help option. */
     private static final int HELP_WIDTH = 100;
 
@@ -94,6 +102,12 @@
     /** Name for the option '--treeWithJavadoc'. */
     private static final String OPTION_TREE_JAVADOC_NAME = "treeWithJavadoc";
 
+    /** Name for the option '-d'. */
+    private static final String OPTION_D_NAME = "d";
+
+    /** Name for the option '--debug'. */
+    private static final String OPTION_DEBUG_NAME = "debug";
+
     /** Name for 'xml' format. */
     private static final String XML_FORMAT_NAME = "xml";
 
@@ -142,34 +156,8 @@ public static void main(String... args) throws IOException {
                     }
                 }
                 else {
-                    // create config helper object
-                    final CliOptions config = convertCliToPojo(commandLine, filesToProcess);
-                    if (commandLine.hasOption(OPTION_T_NAME)) {
-                        // print AST
-                        final File file = config.files.get(0);
-                        final String stringAst = AstTreeStringPrinter.printFileAst(file, false);
-                        System.out.print(stringAst);
-                    }
-                    else if (commandLine.hasOption(OPTION_CAPITAL_T_NAME)) {
-                        final File file = config.files.get(0);
-                        final String stringAst = AstTreeStringPrinter.printFileAst(file, true);
-                        System.out.print(stringAst);
-                    }
-                    else if (commandLine.hasOption(OPTION_J_NAME)) {
-                        final File file = config.files.get(0);
-                        final String stringAst = DetailNodeTreeStringPrinter.printFileAst(file);
-                        System.out.print(stringAst);
-                    }
-                    else if (commandLine.hasOption(OPTION_CAPITAL_J_NAME)) {
-                        final File file = config.files.get(0);
-                        final String stringAst = AstTreeStringPrinter.printJavaAndJavadocTree(file);
-                        System.out.print(stringAst);
-                    }
-                    else {
-                        // run Checker
-                        errorCounter = runCheckstyle(config);
-                        exitStatus = errorCounter;
-                    }
+                    errorCounter = runCli(commandLine, filesToProcess);
+                    exitStatus = errorCounter;
                 }
             }
         }
@@ -278,6 +266,63 @@ else if (cmdLine.hasOption(OPTION_C_NAME)) {
         return result;
     }
 
+    /**
+     * Do execution of CheckStyle based on Command line options.
+     * @param commandLine command line object
+     * @param filesToProcess List of files to process found from the command line.
+     * @return number of violations
+     * @throws IOException if a file could not be read.
+     * @throws CheckstyleException if something happens processing the files.
+     */
+    private static int runCli(CommandLine commandLine, List<File> filesToProcess)
+            throws IOException, CheckstyleException {
+        int result = 0;
+
+        // create config helper object
+        final CliOptions config = convertCliToPojo(commandLine, filesToProcess);
+        if (commandLine.hasOption(OPTION_T_NAME)) {
+            // print AST
+            final File file = config.files.get(0);
+            final String stringAst = AstTreeStringPrinter.printFileAst(file, false);
+            System.out.print(stringAst);
+        }
+        else if (commandLine.hasOption(OPTION_CAPITAL_T_NAME)) {
+            final File file = config.files.get(0);
+            final String stringAst = AstTreeStringPrinter.printFileAst(file, true);
+            System.out.print(stringAst);
+        }
+        else if (commandLine.hasOption(OPTION_J_NAME)) {
+            final File file = config.files.get(0);
+            final String stringAst = DetailNodeTreeStringPrinter.printFileAst(file);
+            System.out.print(stringAst);
+        }
+        else if (commandLine.hasOption(OPTION_CAPITAL_J_NAME)) {
+            final File file = config.files.get(0);
+            final String stringAst = AstTreeStringPrinter.printJavaAndJavadocTree(file);
+            System.out.print(stringAst);
+        }
+        else {
+            if (commandLine.hasOption(OPTION_D_NAME)) {
+                final Logger parentLogger = Logger.getLogger(Main.class.getName()).getParent();
+                final ConsoleHandler handler = new ConsoleHandler();
+
+                parentLogger.setLevel(Level.FINEST);
+                handler.setLevel(Level.FINEST);
+                parentLogger.addHandler(handler);
+            }
+            if (LOG.isDebugEnabled()) {
+                LOG.debug("Checkstyle debug logging enabled");
+                LOG.debug("Running Checkstyle with version: "
+                        + Main.class.getPackage().getImplementationVersion());
+            }
+
+            // run Checker
+            result = runCheckstyle(config);
+        }
+
+        return result;
+    }
+
     /**
      * Util method to convert CommandLine type to POJO object.
      * @param cmdLine command line object
@@ -495,6 +540,8 @@ private static Options buildOptions() {
                 "Print Parse tree of the Javadoc comment");
         options.addOption(OPTION_CAPITAL_J_NAME, OPTION_TREE_JAVADOC_NAME, false,
                 "Print full Abstract Syntax Tree of the file");
+        options.addOption(OPTION_D_NAME, OPTION_DEBUG_NAME, false,
+                "Print all debug logging of CheckStyle utility");
         return options;
     }
 
diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/MainTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/MainTest.java
index c6f349e238..7ca366a94d 100644
--- a/src/test/java/com/puppycrawl/tools/checkstyle/MainTest.java
+++ b/src/test/java/com/puppycrawl/tools/checkstyle/MainTest.java
@@ -21,6 +21,7 @@
 
 import static com.puppycrawl.tools.checkstyle.internal.TestUtils.assertUtilsClassHasPrivateConstructor;
 import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertNotEquals;
 import static org.junit.Assert.assertTrue;
 import static org.junit.Assert.fail;
 import static org.powermock.api.mockito.PowerMockito.mock;
@@ -54,6 +55,7 @@
           "usage: java com.puppycrawl.tools.checkstyle.Main [options] -c <config.xml>"
         + " file...%n"
         + " -c <arg>                Sets the check configuration file to use.%n"
+        + " -d,--debug              Print all debug logging of CheckStyle utility%n"
         + " -f <arg>                Sets the output format. (plain|xml). Defaults to"
         + " plain%n"
         + " -j,--javadocTree        Print Parse tree of the Javadoc comment%n"
@@ -836,4 +838,15 @@ public void checkAssertion() {
 
         Main.main("-o", file.getCanonicalPath(), "-t", getPath("checks/metrics"));
     }
+
+    @Test
+    public void testDebugOption() throws Exception {
+        exit.checkAssertionAfterwards(new Assertion() {
+            @Override
+            public void checkAssertion() {
+                assertNotEquals("", systemErr.getLog());
+            }
+        });
+        Main.main("-c", "/google_checks.xml", getPath("InputMain.java"), "-d");
+    }
 }
diff --git a/src/xdocs/cmdline.xml.vm b/src/xdocs/cmdline.xml.vm
index 1c5dd8d8aa..0f15269d56 100644
--- a/src/xdocs/cmdline.xml.vm
+++ b/src/xdocs/cmdline.xml.vm
@@ -99,6 +99,9 @@ java -D&lt;property&gt;=&lt;value&gt;  \
           The option
           cannot be used other options and requires exactly one file to run on to be specified.
         </li>
+        <li>
+          <code>-d, --debug</code> - Print all debug logging of CheckStyle utility.
+        </li>
         <li>
           <code>-v</code> - print product version and exit. Any other option is ignored.
         </li>
