diff --git a/paramiko/transport.py b/paramiko/transport.py
index 64b96d4fa..ce13dab68 100644
--- a/paramiko/transport.py
+++ b/paramiko/transport.py
@@ -55,7 +55,7 @@
 from paramiko.message import Message
 from paramiko.packet import Packetizer, NeedRekeyException
 from paramiko.primes import ModulusPack
-from paramiko.py3compat import string_types, long, byte_ord, b, input
+from paramiko.py3compat import string_types, long, byte_ord, b, input, PY2
 from paramiko.rsakey import RSAKey
 from paramiko.ecdsakey import ECDSAKey
 from paramiko.server import ServerInterface
@@ -1532,17 +1532,23 @@ def getpeername(self):
     def stop_thread(self):
         self.active = False
         self.packetizer.close()
-        # Keep trying to join() our main thread, quickly, until:
-        # * We join()ed successfully (self.is_alive() == False)
-        # * Or it looks like we've hit issue #520 (socket.recv hitting some
-        # race condition preventing it from timing out correctly), wherein our
-        # socket and packetizer are both closed (but where we'd otherwise be
-        # sitting forever on that recv()).
-        while (
-            self.is_alive() and self is not threading.current_thread()
-            and not self.sock._closed and not self.packetizer.closed
-        ):
-            self.join(0.1)
+        if PY2:
+            # Original join logic; #520 doesn't appear commonly present under
+            # Python 2.
+            while self.is_alive() and self is not threading.current_thread():
+                self.join(10)
+        else:
+            # Keep trying to join() our main thread, quickly, until:
+            # * We join()ed successfully (self.is_alive() == False)
+            # * Or it looks like we've hit issue #520 (socket.recv hitting some
+            # race condition preventing it from timing out correctly), wherein
+            # our socket and packetizer are both closed (but where we'd
+            # otherwise be sitting forever on that recv()).
+            while (
+                self.is_alive() and self is not threading.current_thread()
+                and not self.sock._closed and not self.packetizer.closed
+            ):
+                self.join(0.1)
 
     ###  internals...
 
diff --git a/tests/loop.py b/tests/loop.py
index 4f5dc1632..e805ad965 100644
--- a/tests/loop.py
+++ b/tests/loop.py
@@ -37,9 +37,11 @@ def __init__(self):
         self.__cv = threading.Condition(self.__lock)
         self.__timeout = None
         self.__mate = None
+        self._closed = False
 
     def close(self):
         self.__unlink()
+        self._closed = True
         try:
             self.__lock.acquire()
             self.__in_buffer = bytes()
