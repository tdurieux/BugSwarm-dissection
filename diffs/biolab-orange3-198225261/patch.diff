diff --git a/Orange/data/io.py b/Orange/data/io.py
index cbb6c1a272..31044479e6 100644
--- a/Orange/data/io.py
+++ b/Orange/data/io.py
@@ -376,7 +376,7 @@ def write_table_metadata(cls, filename, data):
         if isinstance(filename, str) and hasattr(data, 'attributes'):
             if all(isinstance(key, str) and isinstance(value, str)
                    for key, value in data.attributes.items()):
-                with open(filename + '.metadata', 'w') as f:
+                with open(filename + '.metadata', 'w', encoding='utf-8') as f:
                     f.write("\n".join("{}: {}".format(*kv)
                                       for kv in data.attributes.items()))
             else:
@@ -392,7 +392,7 @@ def set_table_metadata(cls, filename, table):
                     table.attributes = pickle.load(f)
             # Unpickling throws different exceptions, not just UnpickleError
             except:
-                with open(filename + '.metadata') as f:
+                with open(filename + '.metadata', encoding='utf-8') as f:
                     table.attributes = OrderedDict(
                         (k.strip(), v.strip())
                         for k, v in (line.split(":", 1)
diff --git a/doc/development/source/tutorial.rst b/doc/development/source/tutorial.rst
index 85054f3ece..490b6ff739 100644
--- a/doc/development/source/tutorial.rst
+++ b/doc/development/source/tutorial.rst
@@ -52,13 +52,14 @@ We will start with a very simple example. A widget that will output
 a single integer specified by the user.
 
 .. code-block:: python
+
     from Orange.widgets import widget, gui
 
     class IntNumber(widget.OWWidget):
         # Widget's name as displayed in the canvas
         name = "Integer Number"
         # Short widget description
-        description "Lets the user input a number"
+        description = "Lets the user input a number"
 
         # An icon resource file path for this widget
         # (a path relative to the module where this widget is defined)
@@ -136,7 +137,7 @@ How about displaying a number?
        description = "Print out a number"
        icon = "icons/print.svg"
 
-       inputs = [("Number", int, "set_number")
+       inputs = [("Number", int, "set_number")]
        outputs = []
 
        want_main_area = False
