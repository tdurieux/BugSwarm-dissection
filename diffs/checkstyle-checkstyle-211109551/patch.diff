diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/ExecutableStatementCountCheckTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/ExecutableStatementCountCheckTest.java
index e782fa817c..490e9f94e4 100644
--- a/src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/ExecutableStatementCountCheckTest.java
+++ b/src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/ExecutableStatementCountCheckTest.java
@@ -40,7 +40,8 @@
     @Override
     protected String getPath(String filename) throws IOException {
         return super.getPath("checks" + File.separator
-                + "sizes" + File.separator + filename);
+                + "sizes" + File.separator + "executablestatementcount"
+                + File.separator + filename);
     }
 
     @Test
diff --git a/src/test/resources/com/puppycrawl/tools/checkstyle/checks/sizes/executablestatementcount/InputExecutableStatementCount.java b/src/test/resources/com/puppycrawl/tools/checkstyle/checks/sizes/executablestatementcount/InputExecutableStatementCount.java
new file mode 100644
index 0000000000..d637940ba4
--- /dev/null
+++ b/src/test/resources/com/puppycrawl/tools/checkstyle/checks/sizes/executablestatementcount/InputExecutableStatementCount.java
@@ -0,0 +1,89 @@
+package com.puppycrawl.tools.checkstyle.checks.sizes.executablestatementcount;
+
+public class InputExecutableStatementCount {
+    public void foo() {
+        while (true) {
+            Runnable runnable = new Runnable() {
+                public void run() {
+                    while (true) {
+                    }
+                }
+            };
+
+            new Thread(runnable).start();
+        }
+    }
+
+    public void bar() {
+        if (System.currentTimeMillis() == 0) {
+            if (System.currentTimeMillis() == 0 && System.currentTimeMillis() == 0) {
+            }
+
+            if (System.currentTimeMillis() == 0 || System.currentTimeMillis() == 0) {
+            }
+        }
+    }
+
+    public void simpleElseIf() {
+        if (System.currentTimeMillis() == 0) {
+        } else if (System.currentTimeMillis() == 0) {
+        } else {
+        }
+    }
+
+    public void stupidElseIf() {
+        if (System.currentTimeMillis() == 0) {
+        } else {
+            if (System.currentTimeMillis() == 0) {
+            } else {
+                if (System.currentTimeMillis() == 0) {
+                }
+            }
+
+            if (System.currentTimeMillis() == 0) {
+            }
+        }
+    }
+
+    public InputExecutableStatementCount()
+    {
+        int i = 1;
+        if (System.currentTimeMillis() == 0) {
+        } else if (System.currentTimeMillis() == 0) {
+        } else {
+        }
+    }
+
+    // STATIC_INIT
+    static {
+        int i = 1;
+        if (System.currentTimeMillis() == 0) {
+        } else if (System.currentTimeMillis() == 0) {
+        } else {
+        }
+    }
+
+    // INSTANCE_INIT
+    {
+        int i = 1;
+        if (System.currentTimeMillis() == 0) {
+        } else if (System.currentTimeMillis() == 0) {
+        } else {
+        }
+    }
+
+    /** Inner */
+    public InputExecutableStatementCount(int aParam)
+    {
+        Runnable runnable = new Runnable() {
+            public void run() {
+                while (true) {
+                }
+            }
+        };
+        new Thread(runnable).start();
+    }
+
+    /** Empty constructor */
+    public InputExecutableStatementCount(String someString) {}
+}
